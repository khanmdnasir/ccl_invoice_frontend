{"version":3,"sources":["components/CustomPagination.jsx","redux/user/types.ts","redux/roles/types.ts","redux/location/types.ts","redux/invoice/types.ts","redux/repeating-invoice/types.ts","redux/location/actions.ts","components/VerticalForm.tsx","components/FormInput.tsx","redux/currency/types.ts","redux/chart-account/types.ts","pages/auth/AuthLayout.tsx","redux/layout/actions.ts","redux/user/actions.ts","redux/roles/actions.ts","redux/contact/actions.ts","redux/service/actions.ts","redux/invoice/actions.ts","redux/repeating-invoice/actions.ts","redux/chart-account/actions.ts","config.ts","helpers/api/apiCore.ts","assets/images/ccl.jpg","redux/auth/constants.ts","utils/array.ts","utils/layout.ts","redux/contact/types.ts","components/PageTitle.tsx","redux/layout/constants.ts","constants/layout.ts","i18n.ts","layouts/Default.tsx","layouts/Vertical.tsx","layouts/Detached.tsx","layouts/Horizontal/index.tsx","layouts/TwoColumn/index.tsx","pages/Form/ContactForm.tsx","pages/app/Contact.jsx","pages/app/invoice.jsx","pages/app/ContactDetails.jsx","pages/app/user-management/ChangePassword.tsx","pages/Form/RoleForm.jsx","pages/auth/PasswordReset.tsx","pages/auth/PasswordResetSuccess.tsx","routes/PrivateRoute.tsx","routes/Root.tsx","pages/app/service.jsx","pages/Form/ServiceForm.jsx","pages/Form/InvoiceForm.jsx","pages/app/InvoiceDetails.jsx","pages/app/RepeatingInvoiceDetails.jsx","pages/Form/RepeatingInvoiceForm.jsx","pages/app/RepeatingInvoice.jsx","pages/app/PublicInvoice.jsx","pages/app/CompanySettings.jsx","routes/index.tsx","routes/Routes.tsx","App.tsx","reportWebVitals.ts","redux/auth/reducers.ts","redux/layout/reducers.ts","redux/user/reducers.ts","redux/roles/reducers.ts","redux/contact/reducers.ts","redux/location/reducers.ts","redux/service/reducers.ts","redux/invoice/reducers.ts","redux/repeating-invoice/reducers.ts","redux/currency/reducers.ts","redux/chart-account/reducers.ts","redux/reducers.ts","helpers/api/auth.ts","helpers/api/user.ts","helpers/api/role.ts","helpers/api/contact.ts","helpers/api/location.ts","helpers/api/service.ts","helpers/api/invoice.ts","helpers/api/repeating_invoice.ts","helpers/api/currency.ts","helpers/api/chart_account.ts","redux/auth/saga.ts","redux/layout/saga.ts","redux/user/saga.ts","redux/roles/saga.ts","redux/contact/saga.ts","redux/location/saga.ts","redux/service/saga.ts","redux/invoice/saga.ts","redux/repeating-invoice/saga.ts","redux/currency/saga.ts","redux/chart-account/saga.ts","redux/sagas.ts","redux/store.ts","index.tsx","redux/auth/actions.ts","constants/index.ts","redux/service/types.ts","components/Pagination.tsx","components/Table.tsx"],"names":["Pagination","visitPage","previous_number","next_number","total_page","current_page","active","filterPages","useCallback","visiblePages","totalPages","filter","page","getVisiblePages","total","changePage","setVisiblePages","useState","useEffect","className","classNames","disabled","onClick","to","map","index","array","Fragment","e","GET_USER_REQUESTED","GET_USER_SUCCESS","GET_USER_FAILED","ADD_USER_REQUESTED","ADD_USER_SUCCESS","ADD_USER_FAILED","GET_ROLE_REQUESTED","GET_ROLE_SUCCESS","GET_ROLE_FAILED","GET_USERROLE_REQUESTED","GET_USERROLE_SUCCESS","GET_USERROLE_FAILED","GET_COUNTRY_REQUESTED","GET_COUNTRY_SUCCESS","GET_COUNTRY_FAILED","GET_CITY_REQUESTED","GET_CITY_SUCCESS","GET_CITY_FAILED","GET_INVOICE_REQUESTED","GET_INVOICE_SUCCESS","GET_INVOICE_FAILED","GET_INVOICEDETAILS_REQUESTED","GET_INVOICEDETAILS_SUCCESS","GET_INVOICEDETAILS_FAILED","GET_REPEATINGINVOICE_REQUESTED","GET_REPEATINGINVOICE_SUCCESS","GET_REPEATINGINVOICE_FAILED","GET_REPEATINGINVOICEDETAILS_REQUESTED","GET_REPEATINGINVOICEDETAILS_SUCCESS","GET_REPEATINGINVOICEDETAILS_FAILED","getCountry","type","payload","getCity","country","VerticalForm","defaultValues","resolver","children","onSubmit","formClass","methods","useForm","handleSubmit","register","control","errors","formState","noValidate","Array","isArray","child","props","name","React","createElement","key","PasswordInput","placeholder","refCallback","showPassword","setShowPassword","InputGroup","Form","Control","id","as","ref","r","isInvalid","autoComplete","FormInput","label","labelClassName","containerClass","rows","otherProps","comp","Group","Label","Feedback","Check","GET_CURRENCY_REQUESTED","GET_CURRENCY_SUCCESS","GET_CURRENCY_FAILED","GET_CHARTACCOUNT_REQUESTED","GET_CHARTACCOUNT_SUCCESS","GET_CHARTACCOUNT_FAILED","AuthLayout","helpText","bottomLinks","t","isCombineForm","useTranslation","document","body","classList","remove","add","Body","src","CCL_Logo","alt","height","changeLayout","layout","LayoutActionTypes","CHANGE_LAYOUT","changeLayoutColor","color","CHANGE_LAYOUT_COLOR","changeSidebarType","sidebarType","CHANGE_SIDEBAR_TYPE","toggleSidebarUserInfo","showSidebarUserInfo","TOGGLE_SIDEBAR_USER_INFO","changeTopbarTheme","topbarTheme","CHANGE_TOPBAR_THEME","showRightSidebar","SHOW_RIGHT_SIDEBAR","hideRightSidebar","HIDE_RIGHT_SIDEBAR","getUser","limit","addUser","formData","getRoles","getUserRole","getContact","getContactInvoice","getContactInvoiceSetting","getContactDetails","updateContactInvoiceSetting","data","getAllContact","addContact","getContactService","contact_id","getInvoice","getInvoiceDetails","getRepeatingInvoice","getRepeatingInvoiceDetails","getChartAccount","config","API_URL","process","axios","defaults","headers","post","baseURL","interceptors","response","use","error","message","code","status","statusText","userInfo","JSON","parse","localStorage","getItem","AUTH_TOKEN_KEY","refreshToken","refresh","tokenParts","atob","split","now","Math","ceil","Date","console","log","exp","then","newUpdateUserInfo","access","setItem","stringify","common","window","location","href","catch","err","removeItem","Promise","reject","setAuthorization","token","getUserFromCookie","APICore","get","url","params","queryString","Object","keys","join","getFile","responseType","getMultiple","urls","reqs","push","all","create","updatePatch","patch","update","put","delete","createWithFile","FormData","k","append","updateWithFile","isUserAuthenticated","getLoggedInUser","setLoggedInUser","user","AuthActionTypes","splitArray","chunkSize","length","fill","_","begin","slice","getLayoutConfigs","layoutWidth","leftSideBarType","SideBarTypes","LEFT_SIDEBAR_TYPE_DEFAULT","LayoutWidth","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_TYPE_CONDENSED","changeBodyAttribute","attribute","value","setAttribute","GET_CONTACT_REQUESTED","GET_CONTACT_SUCCESS","GET_CONTACT_FAILED","GET_CONTACT_DETAILS_REQUESTED","GET_CONTACT_DETAILS_SUCCESS","GET_CONTACT_DETAILS_FAILED","GET_CONTACT_INVOICE_REQUESTED","GET_CONTACT_INVOICE_SUCCESS","GET_CONTACT_INVOICE_FAILED","GET_CONTACT_INVOICE_SETTING_REQUESTED","GET_CONTACT_INVOICE_SETTING_SUCCESS","GET_CONTACT_INVOICE_SETTING_FAILED","UPDATE_CONTACT_INVOICE_SETTING_REQUESTED","UPDATE_CONTACT_INVOICE_SETTING_SUCCESS","UPDATE_CONTACT_INVOICE_SETTING_FAILED","GET_ALLCONTACT_REQUESTED","GET_ALLCONTACT_SUCCESS","GET_ALLCONTACT_FAILED","ADD_CONTACT_REQUESTED","ADD_CONTACT_SUCCESS","ADD_CONTACT_FAILED","DELETE_CONTACT_REQUESTED","DELETE_CONTACT_SUCCESS","DELETE_CONTACT_FAILED","PageTitle","Item","item","path","LayoutTypes","LayoutColor","MenuPositions","SideBarTheme","TopbarTheme","resources","es","translation","i18n","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","DefaultLayout","layoutColor","useSelector","state","Layout","fallback","Topbar","lazy","LeftSidebar","Footer","RightSidebar","loading","VerticalLayout","dispatch","useDispatch","menuPosition","leftSideBarTheme","showTwoToneIcons","isOpenRightSideBar","isMenuOpened","setIsMenuOpened","LAYOUT_VERTICAL","updateDimensions","innerWidth","addEventListener","removeEventListener","isCondensed","openLeftMenuCallBack","prevState","hideLogo","Container","fluid","DetachedLayout","LAYOUT_DETACHED","navCssClasses","topbarDark","Navbar","HorizontalLayout","LAYOUT_HORIZONTAL","TwoColumnLayout","LAYOUT_TWO_COLUMN","TOPBAR_THEME_LIGHT","ContactForm","show","onHide","contact","countries","cities","Location","city","schemaResolver","yupResolver","yup","shape","required","client_id","contact_type","typeError","contact_person","phone","email","billing_address","setValue","reset","Modal","centered","Header","closeButton","Title","Row","Col","defaultValue","onChange","target","Select","selected","Button","variant","api","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","columns","accessor","sort","Cell","withSwal","row","swal","user_role","Role","setShow","onCloseModal","pathname","original","includes","style","pointerEvents","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","res","success","dismiss","Contact","previous","next","pageSize","setPageSize","alertShow","setAlertShow","breadCrumbItems","Card","Alert","onClose","dismissible","sm","display","flexDirection","alignItems","width","Table","isSortable","pagination","isSearchable","tableClass","searchBoxClass","setInterval","ActionColumn","sendEmail","discount","toFixed","draftsOptions","waitingsOptions","approvesOptions","paidsOptions","dropDown","handleShow","Invoice","filteredIncoices","setFilteredInvoices","invoices","activePage","setActivePage","onClickEvent","Tab","Nav","Link","eventKey","invoicesColumns","servicesColumns","ContactDetails","useLocation","contactId","setContactId","invoiceSetting","setInvoiceSetting","invoice_list","invoice_list_pagination_data","contact_details","invoice_setting","invoice_setting_error","invoice_setting_success","services","Service","contact_services","parseInt","undefined","mystyle","invoiceSettingChange","checked","invoiceReminderSettingChange","reminder_settings","inputDate","setInputDate","md","xl","marginBottom","Text","Checkbox","auto_approve","auto_invoice_send","reminder_service","marginLeft","is_include_public_link","is_include_pdf_link","reminder_type","marginTop","minimum_invoice_amount","days","day","newDays","indexOf","splice","deleteDay","cursor","size","controlId","daySubmit","newData","finalSubmit","ChangePassword","history","useHistory","old_password","setOldPassword","new_password","setNewPassword","confirm_password","setConfirmPassword","setError","fontWeight","textAlign","border","justifyContent","preventDefault","RoleForm","role","permission","setPermission","role_name","setRoleName","role_permission","setRolePermission","permissionsId","permissions","findIndex","x","handleChange","marginRight","BottomLink","PasswordReset","qString","search","getFullYear","PasswordResetSuccess","PrivateRoute","Component","component","roles","rest","render","from","loggedInUser","Root","setContact","ServiceForm","oldItems","setOldItems","deletedItems","service_type","contact_mode","payment_terms","tax_rate","unit_price","items","setItems","newItems","setNewItems","contacts","all_contact","cloading","rloading","setRloading","setSuccess","ContactChange","forEach","onNewItemsChange","onOldItemsChange","allItems","onUpdate","striped","bordered","hover","backgroundColor","goBack","InvoiceForm","accounts","ChartAccount","chloading","invoice_details","invoiceNo","setInvoiceNo","invoiceId","setInvoiceId","date","setDate","due_date","setDueDate","reference","setReference","currency","tax_type","setTaxType","sub_total","setSubTotal","setDiscount","total_tax","setTotalTax","setStatus","total_amount","setTotalAmount","taxGroup","setTaxGroup","description","qty","account_id","tax_amount","parseFloat","groupOfTax","total_discount","total_subTotal","total_taxAmount","item_tax_amount","toString","totalAmount","invoice_no","formatDate","format","formatDueDate","setTimeout","onContactChange","account_name","readOnly","maxHeight","padding","fontSize","paddingLeft","entries","InvoiceDetails","invoiceDetails","isNumber","RepeatingInvoiceDetails","repeating_invoice_details","RepeatingInvoice","repeat_date","RepeatingInvoiceForm","setRepeatDate","tempData","max","min","repeating_invoices","defaultActiveKey","PublicInvoice","setInvoiceDetails","unique_id","URLSearchParams","xs","idx","CompanySettings","Login","Logout","Confirm","ForgetPassword","Register","Dashboard","MyProfile","Users","SearchResults","Error404Alt","Error500Two","rootRoute","exact","route","Route","dashboardRoutes","AppRoutes","extrapagesRoutes","authRoutes","flattenRoutes","routes","flatRoutes","authProtectedRoutes","publicRoutes","authProtectedFlattenRoutes","publicProtectedFlattenRoutes","Routes","layoutCls","layoutType","getLayout","Default","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INIT_STATE","Auth","action","API_RESPONSE_SUCCESS","actionType","LOGIN_USER","userLoggedIn","SIGNUP_USER","userSignUp","LOGOUT_USER","userLogout","UPDATE_PROFILE","UPDATE_PROFILE_IMAGE","API_RESPONSE_ERROR","registerError","RESET","passwordReset","passwordChange","resetPasswordSuccess","LAYOUT_COLOR_LIGHT","MENU_POSITION_FIXED","LEFT_SIDEBAR_THEME_LIGHT","TOPBAR_THEME_DARK","CHANGE_LAYOUT_WIDTH","layoutConfig","CHANGE_MENU_POSITIONS","CHANGE_SIDEBAR_THEME","TOGGLE_TWO_TONE_ICONS","users","User","results","total_object","newContact","i","currencies","Currency","combineReducers","login","signup","updateProfile","updateProfileImage","getRole","baseUrl","deleteContact","getService","addService","getCurrency","logout","watchLoginUser","watchLogout","watchSignup","watchUpdateProfile","watchUpdateProfileImage","authSaga","password","call","loginApi","authApiResponseSuccess","authApiResponseError","first_name","last_name","signupApi","updateProfileApi","profile","profile_image","updateProfileImageApi","takeEvery","fork","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","manageBodyClass","cssClass","toggle","watchGetUser","watchAddUser","userSaga","getUserApi","groups","is_active","addUserApi","watchGetRole","watchGetUserRole","roleSaga","getRoleApi","getUserRoleApi","watchGetContact","watchGetContactInvoice","watchGetContactInvoiceSetting","watchUpdateContactInvoiceSetting","watchGetContactDetails","watchGetAllContact","watchAddContact","watchDeleteContact","contactSaga","getContactApi","getContactInvoiceApi","getContactInvoiceSettingApi","updateContactInvoiceSettingApi","getContactDetailsApi","getAllContactApi","addContactApi","deleteContactApi","watchGetCountry","watchGetCity","locationSaga","getCountryApi","getCityApi","watchGetService","watchGetContactService","watchAddService","serviceSaga","getServiceApi","getContactServiceApi","service","addServiceApi","watchGetInvoice","watchGetInvoiceDetails","invoiceSaga","getInvoiceApi","getInvoiceDetailsApi","watchGetRepeatingInvoice","watchGetRepeatingInvoiceDetails","repeatingInvoiceSaga","getRepeatingInvoiceApi","getRepeatingInvoiceDetailsApi","watchGetCurrency","currencySaga","getCurrencyApi","watchGetChartAccount","charAccountSaga","getChartAccountApi","rootSaga","layoutSaga","chartAccountSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","localstore","createStore","reducers","applyMiddleware","run","configureStore","getElementById","loginUser","logoutUser","signupUser","resetAuth","UpdateProfile","UpdateProfileImage","GET_SERVICE_REQUESTED","GET_SERVICE_SUCCESS","GET_SERVICE_FAILED","GET_CONTACTSERVICE_REQUESTED","GET_CONTACTSERVICE_SUCCESS","GET_CONTACTSERVICE_FAILED","ADD_SERVICE_REQUESTED","ADD_SERVICE_SUCCESS","ADD_SERVICE_FAILED","tableProps","sizePerPageList","pageCount","setPageCount","pageIndex","setPageIndex","gotoPage","Number","pageOptions","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","useAsyncDebounce","IndeterminateCheckbox","forwardRef","indeterminate","defaultRef","useRef","resolvedRef","current","htmlFor","isSelectable","isExpandable","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","dataTable","useTable","hasOwnProperty","hooks","visibleColumns","getToggleAllPageRowsSelectedProps","getToggleRowSelectedProps","getToggleAllRowsExpandedProps","isAllRowsExpanded","canExpand","getToggleRowExpandedProps","depth","isExpanded","getTableProps","headerGroups","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","getTableBodyProps","prepareRow","getRowProps","cells","cell","getCellProps"],"mappings":"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","file":"static/js/main.864a495d.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n\nconst Pagination = ({visitPage, previous_number ,next_number ,total_page ,current_page ,active}) => {\n    \n    const filterPages = useCallback(\n        (visiblePages, totalPages) => {\n            return visiblePages.filter((page) => page <= totalPages);\n        },\n        [total_page]\n    );\n\n    const getVisiblePages = useCallback(\n        (page, total) => {\n            if (total < 7) {\n                return filterPages([1, 2, 3, 4, 5, 6], total);\n            } else {\n                if (page % 5 >= 0 && page > 4 && page + 2 < total) {\n                    return [1, page - 1, page, page + 1, total];\n                } else if (page % 5 >= 0 && page > 4 && page + 2 >= total) {\n                    return [1, total - 3, total - 2, total - 1, total];\n                } else {\n                    return [1, 2, 3, 4, 5, total];\n                }\n            }\n        },\n        [filterPages]\n    );\n\n    const changePage = (page) => {\n        const active = page + 1;\n\n        if (page === active) {\n            return;\n        }\n\n        const visiblePages = getVisiblePages(page, total_page);\n        setVisiblePages(filterPages(visiblePages, total_page));\n        visitPage(page);\n    };\n    \n    const [visiblePages, setVisiblePages] = useState(getVisiblePages(null, total_page));\n\n    \n    \n    useEffect(()=>{ \n        const visiblePages = getVisiblePages(null, total_page);\n        setVisiblePages(visiblePages);\n    },[getVisiblePages])\n\n    return (\n        <>\n            <div className=\"d-lg-flex align-items-center text-center pb-1\">\n                \n\n                <span className=\"me-3\">\n                    Page{' '}\n                    <strong>\n                        {current_page} of {total_page}\n                    </strong>{' '}\n                </span>\n\n                <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0\">\n                    <li\n                        key=\"prevpage\"\n                        className={classNames('page-item', 'paginate_button', 'previous', {\n                            disabled: active === 1,\n                        })}\n                        onClick={() => {\n                            previous_number();\n                        }}\n                    >\n                        <Link to=\"#\" className=\"page-link\">\n                            <i className=\"mdi mdi-chevron-left\"></i>\n                        </Link>\n                    </li>\n                    \n                    {(visiblePages || []).map((page, index, array) => {\n                        return array[index - 1] + 1 < page ? (\n                            <React.Fragment key={page}>\n                                <li className=\"page-item disabled d-none d-xl-inline-block\">\n                                    <Link to=\"#\" className=\"page-link\">\n                                        ...\n                                    </Link>\n                                </li>\n                                <li\n                                    className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\n                                        active: active === page,\n                                    })}\n                                    onClick={(e) => changePage(page)}\n                                >\n                                    <Link to=\"#\" className=\"page-link\">\n                                        {page}\n                                    </Link>\n                                </li>\n                            </React.Fragment>\n                        ) : (\n                            <li\n                                key={page}\n                                className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\n                                    active: active === page,\n                                })}\n                                onClick={(e) => changePage(page)}\n                            >\n                                <Link to=\"#\" className=\"page-link\">\n                                    {page}\n                                </Link>\n                            </li>\n                        );\n                    })}\n                    <li\n                        key=\"nextpage\"\n                        className={classNames('page-item', 'paginate_button', 'next', {\n                            disabled: active === total_page,\n                        })}\n                        onClick={() => {\n                            next_number();\n                        }}\n                    >\n                        <Link to=\"#\" className=\"page-link\">\n                            <i className=\"mdi mdi-chevron-right\"></i>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </>\n    );\n};\n\nexport default Pagination;\n","export const GET_USER_REQUESTED ='GET_USER_REQUESTED'\nexport const GET_USER_SUCCESS ='GET_USER_SUCCESS'\nexport const GET_USER_FAILED ='GET_USER_FAILED'\n\nexport const ADD_USER_REQUESTED ='ADD_USER_REQUESTED'\nexport const ADD_USER_SUCCESS ='ADD_USER_SUCCESS'\nexport const ADD_USER_FAILED ='ADD_USER_FAILED'\n\nexport const UPDATE_USER_REQUESTED ='UPDATE_USER_REQUESTED'\nexport const UPDATE_USER_SUCCESS ='UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_FAILED ='UPDATE_USER_FAILED'\n\nexport const DELETE_USER_REQUESTED ='DELETE_USER_REQUESTED'\nexport const DELETE_USER_SUCCESS ='DELETE_USER_SUCCESS'\nexport const DELETE_USER_FAILED ='DELETE_USER_FAILED'","export const GET_ROLE_REQUESTED ='GET_ROLE_REQUESTED'\nexport const GET_ROLE_SUCCESS ='GET_ROLE_SUCCESS'\nexport const GET_ROLE_FAILED ='GET_ROLE_FAILED'\n\nexport const GET_USERROLE_REQUESTED ='GET_USERROLE_REQUESTED'\nexport const GET_USERROLE_SUCCESS ='GET_USERROLE_SUCCESS'\nexport const GET_USERROLE_FAILED ='GET_USERROLE_FAILED'\n\n\n\n","export const GET_COUNTRY_REQUESTED ='GET_COUNTRY_REQUESTED'\nexport const GET_COUNTRY_SUCCESS ='GET_COUNTRY_SUCCESS'\nexport const GET_COUNTRY_FAILED ='GET_COUNTRY_FAILED'\n\nexport const GET_CITY_REQUESTED ='GET_CITY_REQUESTED'\nexport const GET_CITY_SUCCESS ='GET_CITY_SUCCESS'\nexport const GET_CITY_FAILED ='GET_CITY_FAILED'\n\n\n\n\n\n","export const GET_INVOICE_REQUESTED ='GET_INVOICE_REQUESTED'\nexport const GET_INVOICE_SUCCESS ='GET_INVOICE_SUCCESS'\nexport const GET_INVOICE_FAILED ='GET_INVOICE_FAILED'\n\nexport const GET_INVOICEDETAILS_REQUESTED ='GET_INVOICEDETAILS_REQUESTED'\nexport const GET_INVOICEDETAILS_SUCCESS ='GET_INVOICEDETAILS_SUCCESS'\nexport const GET_INVOICEDETAILS_FAILED ='GET_INVOICEDETAILS_FAILED'\n\n\n\n\n\n\n","export const GET_REPEATINGINVOICE_REQUESTED ='GET_REPEATINGINVOICE_REQUESTED'\nexport const GET_REPEATINGINVOICE_SUCCESS ='GET_REPEATINGINVOICE_SUCCESS'\nexport const GET_REPEATINGINVOICE_FAILED ='GET_REPEATINGINVOICE_FAILED'\n\nexport const GET_REPEATINGINVOICEDETAILS_REQUESTED ='GET_REPEATINGINVOICEDETAILS_REQUESTED'\nexport const GET_REPEATINGINVOICEDETAILS_SUCCESS ='GET_REPEATINGINVOICEDETAILS_SUCCESS'\nexport const GET_REPEATINGINVOICEDETAILS_FAILED ='GET_REPEATINGINVOICEDETAILS_FAILED'\n\n\n\n\n\n\n","import * as type from './types';\n\n\n\nexport const getCountry = () => ({\n    type: type.GET_COUNTRY_REQUESTED,\n    payload: {},\n});\n\nexport const getCity = (country:number) => ({\n    type: type.GET_CITY_REQUESTED,\n    payload: {country},\n});\n\n","import React from 'react';\nimport { useForm, Resolver, SubmitHandler } from 'react-hook-form';\n\ninterface VerticalFromProps<TFormValues> {\n    defaultValues?: any;\n    resolver?: Resolver<TFormValues>;\n    children?: any;\n    onSubmit: SubmitHandler<TFormValues>;\n    formClass?: string;\n}\n\nconst VerticalForm = <TFormValues extends Record<string, any> = Record<string, any>>({\n    defaultValues,\n    resolver,\n    children,\n    onSubmit,\n    formClass,\n}: VerticalFromProps<TFormValues>) => {\n    /*\n     * form methods\n     */\n    const methods = useForm<TFormValues>({ defaultValues, resolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n    // if(errors){\n    //     console.log(errors)\n    // }\n    \n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate >\n            {Array.isArray(children)\n                ? children.map((child) => {\n                      return child.props && child.props.name\n                          ? React.createElement(child.type, {\n                                ...{\n                                    ...child.props,\n                                    register,\n                                    key: child.props.name,\n                                    errors,\n                                    control,\n                                },\n                            })\n                          : child;\n                  })\n                : children}\n\n                \n        </form>\n    );\n};\n\nexport default VerticalForm;\n","import React, { useState, InputHTMLAttributes } from 'react';\nimport { Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { FieldErrors, Control } from 'react-hook-form';\n\ninterface PasswordInputProps {\n    name: string;\n    placeholder?: string;\n    refCallback?: any;\n    errors: FieldErrors;\n    control?: Control<any>;\n    register?: any;\n    className?: string;\n}\n\n/* Password Input */\nconst PasswordInput = ({\n    name,\n    placeholder,\n    refCallback,\n    errors,\n    control,\n    register,\n    className,\n}: PasswordInputProps) => {\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    return (\n        <>\n            <InputGroup className=\"mb-0\">\n                <Form.Control\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    as=\"input\"\n                    ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                    }}\n                    className={className}\n                    isInvalid={errors && errors[name] ? true : false}\n                    {...(register ? register(name) : {})}\n                    autoComplete={name}\n                />\n                <div\n                    className={classNames('input-group-text', 'input-group-password', {\n                        'show-password': showPassword,\n                    })}\n                    data-password={showPassword ? 'true' : 'false'}\n                >\n                    <span\n                        className=\"password-eye\"\n                        onClick={() => {\n                            setShowPassword(!showPassword);\n                        }}\n                    ></span>\n                </div>\n            </InputGroup>\n        </>\n    );\n};\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n    label?: string;\n    type?: string;\n    name: string;\n    placeholder?: string;\n    register?: any;\n    errors?: FieldErrors;\n    control?: Control<any>;\n    className?: string;\n    labelClassName?: string;\n    containerClass?: string;\n    refCallback?: any;\n    children?: any;\n    rows?: string;\n}\n\nconst FormInput = ({\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    control,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    rows,\n    ...otherProps\n}: FormInputProps) => {\n    // handle input type\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\n\n    return (\n        <>\n            \n            {type === 'hidden' ? (\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\n            ) : (\n                <>\n                    {type === 'password' ? (\n                        <>\n                            <Form.Group className={containerClass}>\n                                {label ? (\n                                    <>\n                                        {' '}\n                                        <Form.Label className={labelClassName} >{label}</Form.Label> {children}{' '}\n                                    </>\n                                ) : null}\n                                <PasswordInput\n                                    name={name}\n                                    placeholder={placeholder}\n                                    refCallback={refCallback}\n                                    errors={errors!}\n                                    register={register}\n                                    className={className}\n                                />\n\n                                {errors && errors[name] ? (\n                                    <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\n                                        {errors[name]['message']}\n                                    </Form.Control.Feedback>\n                                ) : null}\n                            </Form.Group>\n                        </>\n                    ) : (\n                        <>\n                            {type === 'checkbox' || type === 'radio' ? (\n                                <>\n                                    <Form.Group className={containerClass}>\n                                        <Form.Check\n                                            type={type}\n                                            label={label}\n                                            name={name}\n                                            id={name}\n                                            ref={(r: HTMLInputElement) => {\n                                                if (refCallback) refCallback(r);\n                                            }}\n                                            className={className}\n                                            isInvalid={errors && errors[name] ? true : false}\n                                            {...(register ? register(name) : {})}\n                                            {...otherProps}\n                                        />\n\n                                        {errors && errors[name] ? (\n                                            <Form.Control.Feedback type=\"invalid\">\n                                                {errors[name]['message']}\n                                            </Form.Control.Feedback>\n                                        ) : null}\n                                    </Form.Group>\n                                </>\n                            ) : (\n                                <Form.Group className={containerClass}>\n                                    {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\n\n                                    <Form.Control\n                                        type={type}\n                                        placeholder={placeholder}\n                                        name={name}\n                                        id={name}\n                                        as={comp}\n                                        ref={(r: HTMLInputElement) => {\n                                            if (refCallback) refCallback(r);\n                                        }}\n                                        className={className}\n                                        isInvalid={errors && errors[name] ? true : false}\n                                        {...(register ? register(name) : {})}\n                                        rows={rows}\n                                        {...otherProps}\n                                        autoComplete={name}\n                                        \n                                    >\n                                        {children ? children : null}\n                                    </Form.Control>\n\n                                    {errors && errors[name] ? (\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors[name]['message']}\n                                        </Form.Control.Feedback>\n                                    ) : null}\n                                </Form.Group>\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default FormInput;\n","export const GET_CURRENCY_REQUESTED ='GET_CURRENCY_REQUESTED'\nexport const GET_CURRENCY_SUCCESS ='GET_CURRENCY_SUCCESS'\nexport const GET_CURRENCY_FAILED ='GET_CURRENCY_FAILED'\n\n\n\n\n\n\n\n","export const GET_CHARTACCOUNT_REQUESTED ='GET_CHARTACCOUNT_REQUESTED'\nexport const GET_CHARTACCOUNT_SUCCESS ='GET_CHARTACCOUNT_SUCCESS'\nexport const GET_CHARTACCOUNT_FAILED ='GET_CHARTACCOUNT_FAILED'\n\n\n\n\n\n\n\n","import React, { useEffect } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\n\nimport CCL_Logo from '../../assets/images/ccl.jpg';\n\n\n\ninterface AccountLayoutProps {\n    helpText?: string;\n    bottomLinks?: any;\n    isCombineForm?: boolean;\n    children?: any;\n}\n\nconst AuthLayout = ({ helpText, bottomLinks, children, isCombineForm }: AccountLayoutProps) => {\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (document.body) document.body.classList.remove('authentication-bg', 'authentication-bg-pattern');\n        if (document.body) document.body.classList.add('auth-fluid-pages', 'pb-0');\n\n        return () => {\n            if (document.body) document.body.classList.remove('auth-fluid-pages', 'pb-0');\n        };\n    }, []);\n\n    return (\n        <>\n            <div className=\"auth-fluid\">\n                {/* Auth fluid left content */}\n                <div className=\"auth-fluid-form-box\">\n                    <div className=\"align-items-center d-flex h-100\">\n                        <Card.Body>\n                            {/* logo */}\n                            <div className=\"auth-brand text-center text-lg-start\">\n                                <div className=\"auth-logo\">\n                                    <Link to=\"/\" className=\"logo logo-dark text-center outline-none\">\n                                        <span className=\"logo-lg\">\n                                            <img src={CCL_Logo} alt=\"\" height=\"90\" />\n                                        </span>\n                                    </Link>\n\n                                    <Link to=\"/\" className=\"logo logo-light text-center\">\n                                        <span className=\"logo-lg\">\n                                            <img src={CCL_Logo} alt=\"\" height=\"90\" />\n                                        </span>\n                                    </Link>\n                                </div>\n                            </div>\n\n                            {children}\n\n                            {/* footer links */}\n                            {bottomLinks}\n                        </Card.Body>\n                    </div>\n                </div>\n\n                {/* Auth fluid right content */}\n                <div className=\"auth-fluid-right text-center\">\n                    <div className=\"auth-user-testimonial\">\n                        <h2 className=\"mb-3 text-white\">{t('I love the color!')}</h2>\n                        <p className=\"lead\">\n                            <i className=\"mdi mdi-format-quote-open\"></i>{' '}\n                            {t(\n                                \"I've been using your theme from the previous developer for our web app, once I knew new version is out, I immediately bought with no hesitation. Great themes, good documentation with lots of customization available and sample app that really fit our need.\"\n                            )}{' '}\n                            <i className=\"mdi mdi-format-quote-close\"></i>\n                        </p>\n                        <h5 className=\"text-white\">{t('- Fadlisaad (Ubold Admin User)')}</h5>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AuthLayout;\n","// constants\nimport { LayoutActionTypes } from './constants';\n\nexport interface LayoutActionType<TPayload> {\n    type:\n        | LayoutActionTypes.CHANGE_LAYOUT\n        | LayoutActionTypes.CHANGE_LAYOUT_COLOR\n        | LayoutActionTypes.CHANGE_LAYOUT_WIDTH\n        | LayoutActionTypes.CHANGE_MENU_POSITIONS\n        | LayoutActionTypes.CHANGE_SIDEBAR_THEME\n        | LayoutActionTypes.CHANGE_SIDEBAR_TYPE\n        | LayoutActionTypes.TOGGLE_SIDEBAR_USER_INFO\n        | LayoutActionTypes.CHANGE_TOPBAR_THEME\n        | LayoutActionTypes.TOGGLE_TWO_TONE_ICONS\n        | LayoutActionTypes.SHOW_RIGHT_SIDEBAR\n        | LayoutActionTypes.HIDE_RIGHT_SIDEBAR;\n    payload?: TPayload;\n}\n\nexport const changeLayout = (layout: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutColor = (color: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_COLOR,\n    payload: color,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeMenuPositions = (position: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_MENU_POSITIONS,\n    payload: position,\n});\n\nexport const changeSidebarTheme = (sidebarTheme: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_THEME,\n    payload: sidebarTheme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleSidebarUserInfo = (showSidebarUserInfo: boolean): LayoutActionType<boolean> => ({\n    type: LayoutActionTypes.TOGGLE_SIDEBAR_USER_INFO,\n    payload: showSidebarUserInfo,\n});\n\nexport const changeTopbarTheme = (topbarTheme: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_TOPBAR_THEME,\n    payload: topbarTheme,\n});\n\nexport const toggleTwoToneIcons = (showTwoToneIcons: boolean): LayoutActionType<boolean> => ({\n    type: LayoutActionTypes.TOGGLE_TWO_TONE_ICONS,\n    payload: showTwoToneIcons,\n});\n\nexport const showRightSidebar = (): LayoutActionType<null> => ({\n    type: LayoutActionTypes.SHOW_RIGHT_SIDEBAR,\n});\n\nexport const hideRightSidebar = (): LayoutActionType<null> => ({\n    type: LayoutActionTypes.HIDE_RIGHT_SIDEBAR,\n});\n","import * as type from './types';\n\n\ninterface UserData {\n    id: number;\n    first_name: string;\n    last_name: string;\n    email: string;\n    password: string;\n    phone: string;\n    role: number;\n    is_active: boolean;\n}\n\nexport const getUser = (limit:number,page:number) => ({\n    type: type.GET_USER_REQUESTED,\n    payload: {limit,page},\n});\n\nexport const addUser = (formData: UserData) => ({\n    type: type.ADD_USER_REQUESTED,\n    payload: formData,\n});\n\n\n","import * as type from './types';\n\nexport const getRoles = (limit:number,page:number) => ({\n    type: type.GET_ROLE_REQUESTED,\n    payload: {limit,page},\n}); \n\nexport const getUserRole = () => ({\n    type: type.GET_USERROLE_REQUESTED,\n    payload: {},\n}); \n\n","import * as type from './types';\n\n\ninterface ContactForm {\n    name: string;\n    client_id: string;\n    contact_type: string;\n    contact_person: string;\n    phone: string;\n    email: string;\n    city: string;\n    country: string;\n    billing_address: string;\n}\n\nexport const getContact = (limit:number,page:number) => ({\n    type: type.GET_CONTACT_REQUESTED,\n    payload: {limit,page},\n});\n\nexport const getContactInvoice = (id:any, limit:any, page:any) => ({\n    type: type.GET_CONTACT_INVOICE_REQUESTED,\n    payload: {id, limit, page},\n});\n\nexport const getContactInvoiceSetting = (id:number) => ({\n    type: type.GET_CONTACT_INVOICE_SETTING_REQUESTED,\n    payload: id,\n});\n\nexport const getContactDetails = (id:number) =>{ \n    return ({\n    type: type.GET_CONTACT_DETAILS_REQUESTED,\n    payload: id,\n});}\n\n\nexport const updateContactInvoiceSetting = (data: any) => ({\n    type: type.UPDATE_CONTACT_INVOICE_SETTING_REQUESTED,\n    payload: data,\n});\n\n\nexport const getAllContact = () => ({\n    type: type.GET_ALLCONTACT_REQUESTED,\n    payload: {},\n});\n\nexport const addContact = (formData: ContactForm) => ({\n    type: type.ADD_CONTACT_REQUESTED,\n    payload: formData,\n});\n\nexport const deleteContact = (id: number) => ({\n    type: type.DELETE_CONTACT_REQUESTED,\n    payload: id,\n});","import * as type from './types';\n\n\ninterface ServiceForm {\n    service: any[];\n}\n\nexport const getService = (limit:number,page:number) => ({\n    type: type.GET_SERVICE_REQUESTED,\n    payload: {limit,page},\n});\n\nexport const getContactService = (contact_id:number) => ({\n    type: type.GET_CONTACTSERVICE_REQUESTED,\n    payload: {contact_id},\n});\n\nexport const addService = (service: ServiceForm) => ({\n    type: type.ADD_SERVICE_REQUESTED,\n    payload: service,\n});\n\n","import * as type from './types';\n\n\nexport const getInvoice = (limit:number,page:number) => ({\n    type: type.GET_INVOICE_REQUESTED,\n    payload: {limit,page},\n});\n\nexport const getInvoiceDetails = (id:number) => ({\n    type: type.GET_INVOICEDETAILS_REQUESTED,\n    payload: id,\n});\n\n\n\n\n","import * as type from './types';\n\n\nexport const getRepeatingInvoice = (limit:number,page:number) => ({\n    type: type.GET_REPEATINGINVOICE_REQUESTED,\n    payload: {limit,page},\n});\n\nexport const getRepeatingInvoiceDetails = (id:number) => ({\n    type: type.GET_REPEATINGINVOICEDETAILS_REQUESTED,\n    payload: id,\n});\n\n\n\n\n","import * as type from './types';\n\n\nexport const getChartAccount = () => ({\n    type: type.GET_CHARTACCOUNT_REQUESTED,\n    payload: {},\n});\n\n\n\n\n\n\n","const config = {\n    API_URL: process.env.REACT_APP_API_URL,\n};\n\nexport default config;\n","import axios from 'axios';\n\nimport config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\n\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401 &&\n\t\t\terror.response.statusText === 'Unauthorized'\n\t\t) {\n\t\t\tconst userInfo = JSON.parse(localStorage.getItem(AUTH_TOKEN_KEY) || '');\n                        \n            const refreshToken = userInfo.refresh\n\t\t\tif (refreshToken) {\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\tconsole.log(tokenParts.exp);\n\n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\treturn axios\n\t\t\t\t\t\t.post('/api/token/refresh/', { refresh: refreshToken })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tconst newUpdateUserInfo = {\n                                ...userInfo,\n                                \"access\": response.data.access\n                            }\n                            localStorage.setItem(AUTH_TOKEN_KEY, JSON.stringify(newUpdateUserInfo));\n                            \n\t\t\t\t\t\t\taxios.defaults.headers.common['Authorization'] = 'Bearer ' + response.data.access;\n                            window.location.href = '/';\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Refresh token is expired', tokenParts.exp, now);\n                    localStorage.removeItem(AUTH_TOKEN_KEY)\n\t\t\t\t\twindow.location.href = '/auth/login/';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/auth/login/';\n\t\t\t}\n\t\t}\n        else if (error && error.response && error.response.status === 404) {\n            // window.location.href = '/not-found';\n        } else if (error && error.response && error.response.status === 403) {\n            window.location.href = '/access-denied';\n        } else {\n            switch (error.response.status) {\n                case 401:\n                    message = 'Invalid credentials';\n                    break;\n                case 403:\n                    message = 'Access Forbidden';\n                    break;\n                case 404:\n                    message = 'Sorry! the data you are looking for could not be found';\n                    break;\n                default: {\n                    message =\n                        error.response && error.response.data ? error.response.data['message'] : error.message || error;\n                }\n            }\n            return Promise.reject(message);\n        }\n    }\n);\n\nconst AUTH_TOKEN_KEY = 'ccl_user';\n\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token: string | null) => {\n    if (token) axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n    else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromCookie = () => {\n    const token = localStorage.getItem(AUTH_TOKEN_KEY);\n    return token ? (typeof token == 'object' ? token : JSON.parse(token)) : null;\n};\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url: string, params: any) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`);\n        }\n        return response;\n    };\n\n    getFile = (url: string, params: any) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, { responseType: 'blob' });\n        } else {\n            response = axios.get(`${url}`, { responseType: 'blob' });\n        }\n        return response;\n    };\n\n    getMultiple = (urls: string, params: any) => {\n        const reqs = [];\n        let queryString = '';\n        if (params) {\n            queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n        }\n\n        for (const url of urls) {\n            reqs.push(axios.get(`${url}?${queryString}`));\n        }\n        return axios.all(reqs);\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url: string, data: any) => {\n        return axios.post(url, data);\n    };\n\n    /**\n     * Updates patch data\n     */\n    updatePatch = (url: string, data: any) => {\n        return axios.patch(url, data);\n    };\n\n    /**\n     * Updates data\n     */\n    update = (url: string, data: any) => {\n        return axios.put(url, data);\n    };\n\n    /**\n     * Deletes data\n     */\n    delete = (url: string) => {\n        return axios.delete(url);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    createWithFile = (url: string, data: any) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.post(url, formData, config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    updateWithFile = (url: string, data: any) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.patch(url, formData, config);\n    };\n\n    isUserAuthenticated = () => {\n        const token = this.getLoggedInUser();\n\n        if (token) {\n            return true;\n        }else{\n            return false\n        }\n       \n    };\n\n    setLoggedInUser = (user: any) => {\n        if (user){\n            localStorage.setItem(AUTH_TOKEN_KEY, JSON.stringify(user));\n        } \n        else {\n            localStorage.removeItem(AUTH_TOKEN_KEY);\n        }\n    };\n    /**\n     * Returns the logged in user\n     */\n    getLoggedInUser = () => {\n        return getUserFromCookie();\n    };\n\n    // setUserInSession = (modifiedUser: any) => {\n    //     let userInfo = localStorage.getItem(AUTH_TOKEN_KEY);\n    //     if (userInfo) {\n    //         const { access, user } = JSON.parse(userInfo);\n    //         this.setLoggedInUser({ access, ...user, ...modifiedUser });\n    //     }\n    // };\n}\n\n/*\nCheck if token available in session\n*/\nlet user = getUserFromCookie();\nif (user) {\n    const { access } = user;\n    if (access) {\n        setAuthorization(access);\n    }\n}\n\nexport { APICore, setAuthorization };\n","export default __webpack_public_path__ + \"static/media/ccl.e18742bc.jpg\";","export enum AuthActionTypes {\n    API_RESPONSE_SUCCESS = '@@auth/API_RESPONSE_SUCCESS',\n    API_RESPONSE_ERROR = '@@auth/API_RESPONSE_ERROR',\n\n    LOGIN_USER = '@@auth/LOGIN_USER',\n    LOGOUT_USER = '@@auth/LOGOUT_USER',\n    SIGNUP_USER = '@@auth/SIGNUP_USER',\n\n\n    RESET = '@@auth/RESET',\n    UPDATE_PROFILE = '@@auth/UPDATE_PROFILE',\n    UPDATE_PROFILE_IMAGE = '@@auth/UPDATE_PROFILE_IMAGE',\n}\n","const groupByFields = (array: Array<any>, f: any): Array<any> => {\n    /*\n    params description :\n        f : function which returnf the array of fields \n        e.g. :  (item) => {\n            return [itemField1, itemField2];\n        }\n        array : array of data to group e.g. : [{...}, {...}]       \n    */\n    var groups: { [key: string]: any[] } = {};\n    array.forEach((o) => {\n        var group = JSON.stringify(f(o));\n        groups[group] = groups[group] || [];\n        groups[group].push(o);\n    });\n\n    return Object.keys(groups).map((group) => {\n        return groups[group];\n    });\n};\n\n/**\n * split array into chunks\n * @param array - array to split\n * @param chunkSize - chunk size\n * @returns\n */\nconst splitArray = (array: Array<any>, chunkSize: number) => {\n    const chunks = Array(Math.ceil(array.length / chunkSize))\n        .fill(1)\n        .map((_, index) => index * chunkSize)\n        .map((begin) => array.slice(begin, begin + chunkSize));\n    return chunks;\n};\n\nexport { groupByFields, splitArray };\n","// app constants\nimport { SideBarTypes, LayoutWidth } from '../constants';\n\ninterface ConfigTypes {\n    leftSideBarType:\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT;\n}\n\nconst getLayoutConfigs = (layoutWidth: string | boolean | null) => {\n    // add property to change in particular layoutWidth\n    let config: ConfigTypes = {\n        leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n    };\n\n    switch (layoutWidth) {\n        case LayoutWidth.LAYOUT_WIDTH_FLUID:\n            config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;\n            break;\n        case LayoutWidth.LAYOUT_WIDTH_BOXED:\n            config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n            break;\n        default:\n            return config;\n    }\n    return config;\n};\n\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute: string, value: string): void => {\n    if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { getLayoutConfigs, changeBodyAttribute };\n","export const GET_CONTACT_REQUESTED ='GET_CONTACT_REQUESTED'\nexport const GET_CONTACT_SUCCESS ='GET_CONTACT_SUCCESS'\nexport const GET_CONTACT_FAILED ='GET_CONTACT_FAILED'\n\nexport const GET_CONTACT_DETAILS_REQUESTED ='GET_CONTACT_DETAILS_REQUESTED'\nexport const GET_CONTACT_DETAILS_SUCCESS ='GET_CONTACT_DETAILS_SUCCESS'\nexport const GET_CONTACT_DETAILS_FAILED ='GET_CONTACT_DETAILS_FAILED'\n\nexport const GET_CONTACT_INVOICE_REQUESTED ='GET_CONTACT_INVOICE_REQUESTED'\nexport const GET_CONTACT_INVOICE_SUCCESS ='GET_CONTACT_INVOICE_SUCCESS'\nexport const GET_CONTACT_INVOICE_FAILED ='GET_CONTACT_INVOICE_FAILED'\n\nexport const GET_CONTACT_INVOICE_SETTING_REQUESTED ='GET_CONTACT_INVOICE_SETTING_REQUESTED'\nexport const GET_CONTACT_INVOICE_SETTING_SUCCESS ='GET_CONTACT_INVOICE_SETTING_SUCCESS'\nexport const GET_CONTACT_INVOICE_SETTING_FAILED ='GET_CONTACT_INVOICE_SETTING_FAILED'\n\nexport const UPDATE_CONTACT_INVOICE_SETTING_REQUESTED ='UPDATE_CONTACT_INVOICE_SETTING_REQUESTED'\nexport const UPDATE_CONTACT_INVOICE_SETTING_SUCCESS ='UPDATE_CONTACT_INVOICE_SETTING_SUCCESS'\nexport const UPDATE_CONTACT_INVOICE_SETTING_FAILED ='UPDATE_CONTACT_INVOICE_SETTING_FAILED'\n\nexport const GET_ALLCONTACT_REQUESTED ='GET_ALLCONTACT_REQUESTED'\nexport const GET_ALLCONTACT_SUCCESS ='GET_ALLCONTACT_SUCCESS'\nexport const GET_ALLCONTACT_FAILED ='GET_ALLCONTACT_FAILED'\n\nexport const ADD_CONTACT_REQUESTED ='ADD_CONTACT_REQUESTED'\nexport const ADD_CONTACT_SUCCESS ='ADD_CONTACT_SUCCESS'\nexport const ADD_CONTACT_FAILED ='ADD_CONTACT_FAILED'\n\nexport const DELETE_CONTACT_REQUESTED ='DELETE_CONTACT_REQUESTED'\nexport const DELETE_CONTACT_SUCCESS ='DELETE_CONTACT_SUCCESS'\nexport const DELETE_CONTACT_FAILED ='DELETE_CONTACT_FAILED'\n\n\n\n","import React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\ninterface BreadcrumbItems {\n    label: string;\n    path: string;\n    active?: boolean;\n}\n\ninterface PageTitleProps {\n    breadCrumbItems: Array<BreadcrumbItems>;\n    title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">CCL</Breadcrumb.Item>\n\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index}>\n                                        <Link to={item.path}>\n                                            {item.label}\n                                        </Link>\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props['title']}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// constants\nimport {\n    LayoutTypes,\n    LayoutColor,\n    LayoutWidth,\n    MenuPositions,\n    SideBarTheme,\n    SideBarTypes,\n    TopbarTheme,\n} from '../../constants/layout';\n\nenum LayoutActionTypes {\n    CHANGE_LAYOUT = '@@layout/CHANGE_LAYOUT',\n    CHANGE_LAYOUT_COLOR = '@@layout/CHANGE_LAYOUT_COLOR',\n    CHANGE_LAYOUT_WIDTH = '@@layout/CHANGE_LAYOUT_WIDTH',\n    CHANGE_MENU_POSITIONS = '@@layout/CHANGE_MENU_POSITIONS',\n    CHANGE_SIDEBAR_THEME = '@@layout/CHANGE_SIDEBAR_THEME',\n    CHANGE_SIDEBAR_TYPE = '@@layout/CHANGE_SIDEBAR_TYPE',\n    TOGGLE_SIDEBAR_USER_INFO = '@@layout/TOGGLE_SIDEBAR_USER_INFO',\n    CHANGE_TOPBAR_THEME = '@@layout/CHANGE_TOPBAR_THEME',\n\n    TOGGLE_TWO_TONE_ICONS = '@@layout/TOGGLE_TWO_TONE_ICONS',\n    SHOW_RIGHT_SIDEBAR = '@@layout/SHOW_RIGHT_SIDEBAR',\n    HIDE_RIGHT_SIDEBAR = '@@layout/HIDE_RIGHT_SIDEBAR',\n}\n\nexport interface LayoutStateTypes {\n    layoutType:\n        | LayoutTypes.LAYOUT_VERTICAL\n        | LayoutTypes.LAYOUT_TWO_COLUMN\n        | LayoutTypes.LAYOUT_DETACHED\n        | LayoutTypes.LAYOUT_HORIZONTAL;\n    layoutColor: LayoutColor.LAYOUT_COLOR_LIGHT | LayoutColor.LAYOUT_COLOR_DARK;\n    layoutWidth: LayoutWidth.LAYOUT_WIDTH_FLUID | LayoutWidth.LAYOUT_WIDTH_BOXED;\n    menuPosition: MenuPositions.MENU_POSITION_FIXED | MenuPositions.MENU_POSITION_SCROLLABLE;\n    leftSideBarTheme:\n        | SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT\n        | SideBarTheme.LEFT_SIDEBAR_THEME_DARK\n        | SideBarTheme.LEFT_SIDEBAR_THEME_BRAND\n        | SideBarTheme.LEFT_SIDEBAR_THEME_GRADIENT;\n    leftSideBarType:\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT;\n    showTwoToneIcons: boolean;\n    showSidebarUserInfo: boolean;\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT | TopbarTheme.TOPBAR_THEME_DARK;\n    isOpenRightSideBar: boolean;\n}\n\nexport { LayoutActionTypes };\n","/* Layout types and other constants */\n\nexport enum LayoutTypes {\n    LAYOUT_VERTICAL = 'vertical',\n    LAYOUT_HORIZONTAL = 'horizontal',\n    LAYOUT_DETACHED = 'detached',\n    LAYOUT_TWO_COLUMN = 'two-column',\n}\n\nexport enum LayoutColor {\n    LAYOUT_COLOR_LIGHT = 'light',\n    LAYOUT_COLOR_DARK = 'dark',\n}\n\nexport enum LayoutWidth {\n    LAYOUT_WIDTH_FLUID = 'fluid',\n    LAYOUT_WIDTH_BOXED = 'boxed',\n}\n\nexport enum MenuPositions {\n    MENU_POSITION_FIXED = 'fixed',\n    MENU_POSITION_SCROLLABLE = 'scrollable',\n}\n\nexport enum SideBarTheme {\n    LEFT_SIDEBAR_THEME_LIGHT = 'light',\n    LEFT_SIDEBAR_THEME_DARK = 'dark',\n    LEFT_SIDEBAR_THEME_BRAND = 'brand',\n    LEFT_SIDEBAR_THEME_GRADIENT = 'gradient',\n}\n\nexport enum SideBarTypes {\n    LEFT_SIDEBAR_TYPE_DEFAULT = 'default',\n    LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed',\n    LEFT_SIDEBAR_TYPE_COMPACT = 'compact',\n}\n\nexport enum TopbarTheme {\n    TOPBAR_THEME_LIGHT = 'light',\n    TOPBAR_THEME_DARK = 'dark',\n}\n","import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEs from './locales/es/translation.json';\n\n//translations\nconst resources = {\n    es: {\n        translation: translationEs,\n    },\n};\n\ni18n.use(detector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        fallbackLng: 'en', // use en if detected lng is not available\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n    });\n\nexport default i18n;\n","import React, { useEffect, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\n\n// store\nimport { RootState } from '../redux/store';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\nconst loading = () => <div className=\"\"></div>;\n\ninterface DefaultLayoutProps {\n    layout: {\n        layoutType: string;\n        layoutWidth: string;\n        leftSideBarTheme: string;\n        leftSideBarType: string;\n        showRightSidebar: boolean;\n    };\n    children?: any;\n}\n\nconst DefaultLayout = (props: DefaultLayoutProps) => {\n    const { layoutColor } = useSelector((state: RootState) => ({\n        layoutColor: state.Layout.layoutColor,\n    }));\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        if (document.body) document.body.classList.add('authentication-bg', 'authentication-bg-pattern');\n\n        return () => {\n            if (document.body) document.body.classList.remove('authentication-bg', 'authentication-bg-pattern');\n        };\n    }, []);\n\n    // get the child view which we would like to render\n    const children = props['children'] || null;\n\n    return (\n        <>\n            <Suspense fallback={loading()}>{children}</Suspense>\n        </>\n    );\n};\nexport default DefaultLayout;\n","import React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '../redux/store';\n\n// constants\nimport { LayoutTypes, SideBarTypes } from '../constants';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar/'));\n\nconst loading = () => <div className=\"\"></div>;\n\ninterface VerticalLayoutProps {\n    children?: any;\n}\n\nconst VerticalLayout = ({ children }: VerticalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const {\n        layoutColor,\n        layoutWidth,\n        menuPosition,\n        leftSideBarTheme,\n        leftSideBarType,\n        showSidebarUserInfo,\n        showTwoToneIcons,\n        topbarTheme,\n        isOpenRightSideBar,\n    } = useSelector((state: RootState) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n        showTwoToneIcons: state.Layout.showTwoToneIcons,\n        topbarTheme: state.Layout.topbarTheme,\n        isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    /*\n    layout defaults\n    */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_VERTICAL);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [dispatch, layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-menu-position', menuPosition);\n    }, [menuPosition]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-color', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-size', leftSideBarType);\n    }, [leftSideBarType]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-icon', showTwoToneIcons ? 'twotones' : '');\n    }, [showTwoToneIcons]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-user', showSidebarUserInfo);\n    }, [showSidebarUserInfo]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => !prevState);\n\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth > 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed: boolean = leftSideBarType === SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar openLeftMenuCallBack={openMenu} hideLogo={false} />\n                </Suspense>\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} />\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n            {isOpenRightSideBar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar />\n                </Suspense>\n            )}\n        </>\n    );\n};\nexport default VerticalLayout;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { toggleSidebarUserInfo } from '../redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '../redux/store';\n\n// constants\nimport { LayoutTypes, SideBarTypes } from '../constants';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ninterface VerticalLayoutProps {\n    children?: any;\n}\n\nconst DetachedLayout = ({ children }: VerticalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    const {\n        layoutColor,\n        layoutWidth,\n        menuPosition,\n        leftSideBarTheme,\n        leftSideBarType,\n        topbarTheme,\n        showSidebarUserInfo,\n        isOpenRightSideBar,\n    } = useSelector((state: RootState) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        topbarTheme: state.Layout.topbarTheme,\n        showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n        isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n    }));\n\n    /*\n    layout defaults\n    */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_DETACHED);\n        dispatch(toggleSidebarUserInfo(true));\n    }, [dispatch]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [dispatch, layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-menu-position', menuPosition);\n    }, [menuPosition]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-color', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-size', leftSideBarType);\n    }, [leftSideBarType]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-user', showSidebarUserInfo);\n    }, [showSidebarUserInfo]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => !prevState);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.add('sidebar-enable');\n            } else {\n                document.body.classList.remove('sidebar-enable');\n            }\n        }\n    };\n\n    const isCondensed = leftSideBarType === SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar\n                        openLeftMenuCallBack={openMenu}\n                        navCssClasses=\"topnav-navbar topnav-navbar-dark\"\n                        topbarDark={true}\n                    />\n                </Suspense>\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} />\n                </Suspense>\n\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n            {isOpenRightSideBar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar />\n                </Suspense>\n            )}\n        </>\n    );\n};\n\nexport default DetachedLayout;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// store\nimport { RootState, AppDispatch } from '../../redux/store';\n\n// constants\nimport { LayoutTypes } from '../../constants/layout';\n\n// utils\nimport { changeBodyAttribute } from '../../utils';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('../Topbar'));\nconst Navbar = React.lazy(() => import('./Navbar'));\nconst Footer = React.lazy(() => import('../Footer'));\nconst RightSidebar = React.lazy(() => import('../RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ninterface HorizontalLayoutProps {\n    children?: any;\n}\n\nconst HorizontalLayout = ({ children }: HorizontalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    const { layoutColor, layoutWidth, menuPosition, topbarTheme, isOpenRightSideBar } = useSelector(\n        (state: RootState) => ({\n            layoutColor: state.Layout.layoutColor,\n            layoutWidth: state.Layout.layoutWidth,\n            menuPosition: state.Layout.menuPosition,\n            topbarTheme: state.Layout.topbarTheme,\n            isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n        })\n    );\n\n    /*\n    layout defaults\n    */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_HORIZONTAL);\n    }, [dispatch]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-menu-position', menuPosition);\n    }, [menuPosition]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened(!isMenuOpened);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar openLeftMenuCallBack={openMenu} topbarDark={false} />\n                </Suspense>\n\n                <Suspense fallback={loading()}>\n                    <Navbar isMenuOpened={isMenuOpened} />\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n\n                    {isOpenRightSideBar && (\n                        <Suspense fallback={loading()}>\n                            <RightSidebar />\n                        </Suspense>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HorizontalLayout;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { changeTopbarTheme } from '../../redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '../../redux/store';\n\n// utils\nimport { changeBodyAttribute } from '../../utils';\n\n// constants\nimport { LayoutTypes, TopbarTheme } from '../../constants/layout';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('../Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('../Footer'));\nconst RightSidebar = React.lazy(() => import('../RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ninterface VerticalLayoutProps {\n    children?: any;\n}\n\nconst TwoColumnLayout = ({ children }: VerticalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const { layoutColor, layoutWidth, leftSideBarTheme, isOpenRightSideBar, topbarTheme, leftSideBarType } =\n        useSelector((state: RootState) => ({\n            layoutColor: state.Layout.layoutColor,\n            layoutWidth: state.Layout.layoutWidth,\n            menuPosition: state.Layout.menuPosition,\n            leftSideBarTheme: state.Layout.leftSideBarTheme,\n            leftSideBarType: state.Layout.leftSideBarType,\n            topbarTheme: state.Layout.topbarTheme,\n            isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n        }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_TWO_COLUMN);\n        dispatch(changeTopbarTheme(TopbarTheme.TOPBAR_THEME_LIGHT));\n    }, [dispatch]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [dispatch, layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-color', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-size', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => !prevState);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.add('sidebar-enable');\n            } else {\n                document.body.classList.remove('sidebar-enable');\n            }\n        }\n    };\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar openLeftMenuCallBack={openMenu} topbarDark={true} />\n                </Suspense>\n                <Suspense fallback={loading()}>\n                    <LeftSidebar />\n                </Suspense>\n\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n            {isOpenRightSideBar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar />\n                </Suspense>\n            )}\n        </>\n    );\n};\n\nexport default TwoColumnLayout;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Button,Form,Row,Col } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { RootState, AppDispatch } from '../../redux/store';\n// components\nimport { FormInput } from '../../components';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { getCity } from '../../redux/location/actions';\n\nconst api = new APICore();\n\ninterface FormData {\n    name: string;\n    client_id: string;\n    contact_type: string;\n    contact_person: string;\n    phone: string;\n    email: string;\n    city: any;\n    country: any;\n    billing_address: string;\n}\n\ninterface AddContactProps {\n    show: boolean;\n    onHide: () => void;\n    contact: FormData;\n    countries: any;\n    onSubmit: (value: any) => void;\n}\n\nconst ContactForm = ({ show, onHide, onSubmit,contact,countries }: AddContactProps) => {\n    /*\n    form validation schema\n    */\n   \n    const dispatch = useDispatch<AppDispatch>();\n    const cities = useSelector((state:RootState) => state.Location.city);\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            name: yup.string().required('Please enter name'),\n            client_id: yup.string().required('Please enter client id'),\n            contact_type: yup.string().required('Please select contact type').typeError('Please select contact type'),\n            contact_person: yup.string().required('Please enter contact person'),\n            phone: yup.string().required('Please enter phone number').typeError('Please enter number'),\n                              \n        })\n    );\n\n    const methods = useForm<Partial<FormData>>({\n        defaultValues: {name:contact?.name,client_id:contact?.client_id,contact_person:contact?.contact_person,phone:contact?.phone,email:contact?.email,city:contact?.city?.id,country:contact?.country?.id,billing_address:contact?.billing_address},\n        resolver: schemaResolver,\n    });\n    const {\n        handleSubmit,\n        register,\n        reset,\n        setValue,\n        control,\n        formState: { errors },\n    } = methods;\n\n\n    useEffect(()=>{\n        if(contact?.country){\n            dispatch(getCity(contact?.country?.id))\n        }\n    },[contact])\n   \n    return (\n        <>\n            <Modal show={show} onHide={onHide} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                <Modal.Header className=\"bg-light\" onHide={onHide} closeButton>\n                    <Modal.Title className=\"m-0\">Add Contact</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"p-4\">\n                    <Form onSubmit={handleSubmit(onSubmit)}>\n                        <Row>\n                            <Col>\n                                \n                                <FormInput\n                                    label=\"Name\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    labelClassName='required'\n                                    placeholder=\"Enter Name\"\n                                    containerClass={'mb-3'}\n                                    register={register}\n                                    errors={errors}\n                                    control={control}\n                                />\n                                <FormInput\n                                    label=\"Client Id\"\n                                    type=\"text\"\n                                    name=\"client_id\"\n                                    labelClassName='required'\n                                    placeholder=\"Enter Client Id\"\n                                    containerClass={'mb-3'}\n                                    register={register}\n                                    errors={errors}\n                                    control={control}\n                                />\n                            \n                                <FormInput\n                                label=\"Contact Type\"\n                                type=\"select\"\n                                name=\"contact_type\"\n                                labelClassName='required'\n                                containerClass={'mb-3'} \n                                register={register}\n                                errors={errors}\n                                control={control}\n                                defaultValue={contact ? contact.contact_type : ''}\n                                >    \n                                    <option value=\"\" disabled>Select Contact Type ...</option>                         \n                                    <option value=\"individual\" >Individual</option>                         \n                                    <option value=\"corporate\" >Corporate</option>                                                 \n                                \n                                </FormInput>\n\n                                <FormInput\n                                    label=\"Contact Person\"\n                                    type=\"text\"\n                                    name=\"contact_person\"\n                                    labelClassName='required'\n                                    placeholder=\"Enter Contact Person\"\n                                    containerClass={'mb-3'}\n                                    register={register}\n                                    errors={errors}\n                                    control={control}\n                                />\n\n                                <FormInput\n                                    label=\"Phone\"\n                                    type=\"text\"\n                                    name=\"phone\"\n                                    labelClassName='required'\n                                    placeholder=\"Enter Phone\"\n                                    containerClass={'mb-3'}\n                                    register={register}\n                                    errors={errors}\n                                    control={control}\n                                />\n                                \n                                \n                            </Col>\n                            <Col>\n                           \n                                <FormInput\n                                    label=\"Email\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    containerClass={'mb-3'}\n                                    register={register}\n                                    errors={errors}\n                                    control={control}\n                                />\n                                <FormInput\n                                label=\"Country\"\n                                type=\"select\"\n                                name=\"country\"\n                                containerClass={'mb-3'} \n                                register={register}\n                                errors={errors}\n                                control={control} \n                                defaultValue={contact ? contact?.country?.id : ''}\n                                onChange={(e:any) => {dispatch(getCity(e.target.value));if(!e.target.value){setValue('city','')}}}\n                                >    \n                                    <option value=\"\">Select Country ...</option> \n                                    {countries?.map((item:any)=>{\n                                        return(\n                                            <option key={'co'+item.id} value={item.id} >{item.name}</option>\n                                        )\n                                    })}                                                 \n                                \n                                </FormInput>\n                                <Form.Group className='mb-3'>\n                                    <Form.Label >City</Form.Label>\n\n                                    <Form.Select\n                                        aria-label=\"Default select example\"\n                                        isInvalid={errors && errors['city'] ? true : false}\n                                        {...register('city')}\n                                        defaultValue={contact ? contact?.city?.id : ''}\n                                        \n                                    >\n                                        <option value=\"\">Select City ...</option>                         \n                                            {cities?.map((item:any)=>{\n                                                return(\n                                                    <option selected={contact?.city?.id===item.id} key={'ci'+item.id} value={item.id} >{item.name}</option>\n                                                )\n                                            })} \n                                    </Form.Select>\n\n                                    {errors && errors['city'] ? (\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors['city']['message']}\n                                        </Form.Control.Feedback>\n                                    ) : null}\n                                </Form.Group>\n                                {/* <FormInput\n                                label=\"City\"\n                                type=\"select\"\n                                name=\"city\"\n                                containerClass={'mb-3'} \n                                register={register}\n                                errors={errors}\n                                control={control} \n                                defaultValue={contact ? contact?.city?.id : ''}\n                                >    \n                                    <option value=\"\" disabled>Select City ...</option>                         \n                                    {cities?.map((item:any)=>{\n                                        return(\n                                            <option key={'ci'+item.id} value={item.id} >{item.name}</option>\n                                        )\n                                    })}                                                 \n                                \n                                </FormInput> */}\n                                \n                                <FormInput\n                                    label=\"Billing Address\"\n                                    type=\"textarea\"\n                                    name=\"billing_address\"\n                                    placeholder=\"Enter Billing Adress\"\n                                    containerClass={'mb-3'}\n                                    register={register}\n                                    errors={errors}\n                                    control={control}\n                                />\n                            </Col>\n                            \n                        </Row>\n                        \n                         \n                        <div className=\"text-end\">\n                            <Button variant=\"success\" type=\"submit\" className=\"waves-effect waves-light me-1\">\n                                Save\n                            </Button>\n                            <Button\n                                variant=\"danger\"\n                                type=\"button\"\n                                className=\"waves-effect waves-light\"\n                                onClick={onHide}\n                            >\n                                Cancel\n                            </Button>\n                        </div>\n                        \n                    </Form>\n                   \n                    \n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default ContactForm;\n","import React, { useEffect, useState } from 'react';\nimport { APICore } from '../../helpers/api/apiCore';\nimport ContactForm from '../Form/ContactForm';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { withSwal } from 'react-sweetalert2';\n\n// components\nimport Table from '../../components/Table';\nimport PageTitle from '../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact,deleteContact,getContact } from '../../redux/actions';\nimport ReactExport from \"react-export-excel\";\nimport Pagination from '../../components/CustomPagination';\nimport { getCountry } from '../../redux/location/actions';\n\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst api = new APICore();\n\n\n// action column render\nconst ActionColumn = withSwal(({ row, swal }) => {\n    /*\n     *   modal handeling\n     */\n    const dispatch = useDispatch();\n    const country = useSelector(state => state.Location.country);\n    const user_role = useSelector((state)=> state.Role.user_role);\n    const [show, setShow] = useState(false);\n    const onCloseModal = () => setShow(false);\n    const onOpenModal = () => setShow(true);\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData) => {\n        \n        api.updatePatch(`/api/contact/${row.original.id}/`,formData)\n        .then(res=>{\n            \n            if(res.data.success){\n                dispatch(getContact(10,1));\n            }else{\n                swal.fire({\n                    title: res.data.error,\n                }) \n                \n            }\n            \n        })\n        .catch(err => {\n            swal.fire({\n                title: err,\n            })\n        })\n        onCloseModal()\n    };\n\n    const onDelete = () => {\n        swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#28bb4b',\n                cancelButtonColor: '#f34e4e',\n                confirmButtonText: 'Yes, delete it!',\n            })\n            .then(function(result){\n                if(result.value){\n                    // dispatch(deleteContact(row.original.id))\n                    api.delete(`/api/contact/${row.original.id}/`)\n                .then(res=>{\n                    dispatch(getContact(10,1))\n                    if(res.data.success){\n                        swal.fire(\n                            'Deleted!',\n                            'Account has been deleted.',\n                            'success'\n                        ); \n                    }else{\n                        swal.fire(\n                            'Error',\n                            res.data.error,\n                            'warning'\n                        \n                        );\n                    }\n                               \n                })\n                .catch(err => {\n                    swal.fire({\n                        title: err,\n                    }\n                    );\n                })\n                }else if(result.dismiss === 'cancel'){\n                    console.log('cancel')\n                }\n            })        \n    }\n\n    return (\n        <>\n            <Link to={{ pathname: '/app/contact_details', state: row.original.id }} className=\"action-icon\" >\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n\n            { user_role.includes('change_contact') ?\n                <Link to=\"#\" className=\"action-icon\" onClick={()=>onOpenModal()}>\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\"  style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>\n            }\n            \n            { user_role.includes('delete_contact') ?\n                <Link to=\"#\" className=\"action-icon\" onClick={()=>onDelete()}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\" style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>\n            }\n            {\n                show?\n                <ContactForm show={show} onHide={onCloseModal} onSubmit={onSubmit} contact={row.original} countries={country}/>\n                :null\n            }\n        </>\n    );\n});\n\nconst columns = [\n    \n    {\n        Header: 'Name',\n        accessor: 'name',\n        sort: true,\n    },\n    {\n        Header: 'Client Id',\n        accessor: 'client_id',\n        sort: true,\n    },\n    {\n        Header: 'Contact Type',\n        accessor: 'contact_type',\n        sort: true,\n    },\n    {\n        Header: 'Contact Person',\n        accessor: 'contact_person',\n        sort: true,\n    },\n    {\n        Header: 'Phone',\n        accessor: 'phone',\n        sort: true,\n    },\n    {\n        Header: 'Email',\n        accessor: 'email',\n        sort: true,\n    },\n    {\n        Header: 'City',\n        accessor: 'city.name',\n        sort: true,\n    },\n    {\n        Header: 'country',\n        accessor: 'country.name',\n        sort: true,\n\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        Cell: ActionColumn,\n    },\n];\n\nconst Contact = () => {\n    const dispatch = useDispatch();\n    const contact = useSelector(state => state.Contact.contact);\n    const country = useSelector(state => state.Location.country);\n    const previous = useSelector(state => state.Contact.previous);\n    const next = useSelector(state => state.Contact.next);\n    const current_page = useSelector(state => state.Contact.current_page);\n    const total_page = useSelector(state => state.Contact.total_page);\n    const active = useSelector(state => state.Contact.active);\n    const user_role = useSelector((state)=> state.Role.user_role);\n    const loading = useSelector(state => state.Contact.loading);\n    const error = useSelector(state => state.Contact.error);\n    const success = useSelector(state => state.Contact.success);\n    const [pageSize,setPageSize] = useState(10);\n    const [alertShow, setAlertShow] = useState(false);\n    /*\n     *   modal handeling\n     */\n    const [show, setShow] = useState(false);\n    const onCloseModal = () => setShow(false);\n    const onOpenModal = () => setShow(true);\n\n    const visitPage = (page) => {\n        dispatch(getContact(pageSize,page));\n    };\n\n    const previous_number = () => {\n        dispatch(getContact(pageSize,previous));\n    };\n\n    const next_number = () => {\n        dispatch(getContact(pageSize,next));\n    };\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData) => {\n        dispatch(addContact(formData));\n        setAlertShow(true);\n        setInterval(()=>{\n            setAlertShow(false);\n        },5000)\n        \n        onCloseModal();\n        \n    };\n\n\n    useEffect(()=>{ \n        dispatch(getContact(pageSize,1));\n        dispatch(getCountry());   \n    },[pageSize])\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Contact', path: '/app/contact', active: true },\n                ]}\n                title={'Contact'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            {!loading && alertShow && error && (\n                            <Alert variant=\"danger\" className=\"my-2\" onClose={()=>setAlertShow(false)} dismissible>\n                                {error}\n                            </Alert>\n                        )}\n                            {!loading && alertShow && success !== null && (\n                                <Alert variant=\"success\" className=\"my-2\" onClose={() => setAlertShow(false)} dismissible>\n                                {success}\n                            </Alert>\n                        )}\n                            <Row className=\"mb-2\">\n                                <Col sm={4}>\n                                    <div style={{display: 'flex',flexDirection: 'row',alignItems: 'center'}}>\n                                        <span className='me-2'>Show:</span>\n                                        <Form.Select style={{width: '40%'}} onChange={(e)=>{setPageSize(e.target.value);dispatch(getContact(e.target.value,current_page))}}>\n                                            <option value='10'>10</option>\n                                            <option value='15'>20</option>\n                                            <option value='20'>30</option>\n                                        </Form.Select>\n                                    </div>\n                                </Col>\n\n                                <Col sm={8}>\n                                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                                        { user_role.includes('add_contact') ?\n                                            <Button className=\"btn btn-success mb-2 me-1\" onClick={onOpenModal}>\n                                            <i className=\"mdi mdi-plus-circle me-1\"></i> Add New\n                                            </Button>:\n                                            <>\n                                            </>\n                                        }\n                                        \n                                        {/* <ExcelFile element={<Button className=\"btn btn-light mb-2\">Export</Button>}>\n                                            <ExcelSheet data={users} name=\"Users\">\n                                                <ExcelColumn label=\"Name\" value=\"name\"/>\n                                                <ExcelColumn label=\"Phone\" value=\"phone\"/>\n                                                <ExcelColumn label=\"Email\" value=\"email\"/>\n                                                <ExcelColumn label=\"Role\" value={(col)=> col.groups[0].name}/>                                            \n                                            </ExcelSheet>\n                                        </ExcelFile> */}\n  \n                                    </div>\n                                </Col>\n                            </Row>\n                            \n                            {loading ? <p>Loading...</p>:\n                            <>\n                            {contact.length > 0 ?\n                            <>\n                            <Table\n                                columns={columns}\n                                data={contact}\n                                pageSize={pageSize}\n                                isSortable={true}\n                                pagination={false}\n                                isSearchable={true}\n                                tableClass=\"table-nowrap table-hover\"\n                                searchBoxClass=\"\"\n                            />\n                            <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={total_page} current_page={current_page} active={active}/>\n                            </>\n                            :\n                            'No user available!'}</>}\n                            \n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* add contact modal */}\n            \n            <ContactForm show={show} onHide={onCloseModal} onSubmit={onSubmit} countries={country}/>\n            \n            \n            \n        </>\n    );\n};\n\nexport default Contact;\n","import React, { useEffect, useState } from 'react';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { Row, Col, Card, Form, Alert, Tab, Nav } from 'react-bootstrap';\nimport { withSwal } from 'react-sweetalert2';\n\n// components\nimport Table from '../../components/Table';\nimport PageTitle from '../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getInvoice } from '../../redux/actions';\nimport Pagination from '../../components/CustomPagination';\n\n\n\n// const ExcelFile = ReactExport.ExcelFile;\n// const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst api = new APICore();\n\nconst refreshPage = () => {\n    window.location.reload();\n}\n\n// // action column render\nexport const ActionColumn = withSwal(({ row, swal }) => {\n    /*\n     *   modal handeling\n     */\n    const dispatch = useDispatch();\n    const user_role = useSelector((state) => state.Role.user_role);\n\n\n    /*\n    handle form submission\n    */\n\n    const onDelete = () => {\n        swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#28bb4b',\n            cancelButtonColor: '#f34e4e',\n            confirmButtonText: 'Yes, delete it!',\n        })\n            .then(function (result) {\n                if (result.value) {\n                    // dispatch(deleteContact(row.original.id))\n                    api.delete(`/api/invoice/${row.original.id}/`)\n                        .then(res => {\n                            dispatch(getInvoice(10, 1));\n                            swal.fire(\n                                'Deleted!',\n                                'Invoice has been deleted.',\n                                'success'\n                            );\n                        })\n                        .catch(err => {\n                            swal.fire({\n                                title: err,\n                            }\n                            );\n                        })\n                } else if (result.dismiss === 'cancel') {\n\n                }\n            })\n    }\n\n    const sendEmail = () => {\n        const data = {\n            \"contact_id\":row.original?.contact_id?.id,\n            \"invoice_id\":row.original.id,\n        }\n        swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#28bb4b',\n            cancelButtonColor: '#f34e4e',\n            confirmButtonText: 'Yes, Send email!',\n        })\n            .then(function (result) {\n                if (result.value) {\n                    // dispatch(deleteContact(row.original.id))\n                    api.create(`/api/send-email/`, data)\n                        .then(res => {\n                            // dispatch(getInvoice(10, 1));\n                            swal.fire(\n                                'Sent!',\n                                'Email has been Sent.',\n                                'success'\n                            );\n                        })\n                        .catch(err => {\n                            swal.fire({\n                                title: err,\n                            }\n                            );\n                        })\n                } else if (result.dismiss === 'cancel') {\n\n                }\n            })\n    }\n\n    // console.log('row', row.original)\n\n    return (\n        <>\n            <Link to={{ pathname: '/app/invoice_details', state: row.original.id }} className=\"action-icon\" >\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n\n            {user_role.includes('change_invoice') ?\n                <Link to={{ pathname: '/app/invoice_form', state: row.original.id }} className=\"action-icon\" >\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link> :\n                <Link to=\"#\" className=\"action-icon\" style={{ pointerEvents: 'none' }}>\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>\n            }\n\n            {user_role.includes('delete_invoice') ?\n                <Link to=\"#\" className=\"action-icon\" onClick={() => onDelete()}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link> :\n                <Link to=\"#\" className=\"action-icon\" style={{ pointerEvents: 'none' }}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>\n            }\n\n            {row.original.status === \"approve\" ?\n                <Link to=\"#\" className=\"action-icon\" onClick={() => sendEmail()}>\n                    <i className=\"mdi mdi-email\"></i>\n                </Link> :\n                null\n            }\n\n\n\n        </>\n    );\n});\n\nexport const StatusColumn = withSwal(({ row, swal }) => {\n    /*\n     *   modal handeling\n     */\n    const dispatch = useDispatch();\n    const user_role = useSelector((state) => state.Role.user_role);\n\n    /*\n    handle form submission\n    */\n    const draftsOptions =\n        <>\n            <option selected={row.original.status === 'draft'} value='draft'>Draft</option>\n            <option selected={row.original.status === 'waiting'} value='waiting'>Waiting</option>\n            <option selected={row.original.status === 'approve'} value='approve'>Approved</option>\n        </>\n\n    const waitingsOptions =\n        <>\n            <option selected={row.original.status === 'waiting'} value='waiting'>Waiting</option>\n            <option selected={row.original.status === 'approve'} value='approve'>Approved</option>\n        </>\n\n    const approvesOptions =\n        <>\n            <option selected={row.original.status === 'approve'} value='approve'>Approved</option>\n            <option selected={row.original.status === 'paid'} value='paid'>Paid</option>\n        </>\n\n    const paidsOptions =\n        <>\n            <option disabled selected={row.original.status === 'paid'} value='paid'>Paid</option>\n        </>\n\n    var dropDown = (<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n        <Form.Select style={{ width: '70%' }} onChange={(e) => handleShow(row, e)}>\n            {row.original.status === \"draft\" ? (draftsOptions) : null}\n            {row.original.status === \"waiting\" ? (waitingsOptions) : null}\n            {row.original.status === \"approve\" ? (approvesOptions) : null}\n            {row.original.status === \"paid\" ? (paidsOptions) : null}\n        </Form.Select>\n    </div>)\n\n    const handleShow = (row, e) => {\n        const value = e.target.value;\n        const data = {\n            \"status\": value\n        }\n        swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#28bb4b',\n            cancelButtonColor: '#f34e4e',\n            confirmButtonText: 'Yes, change it!',\n        })\n            .then(function (result) {\n\n                if (result.value) {\n                    api.update(`/api/change-invoice-status/?id=${row.original.id}`, data)\n                        .then(res => {\n                            if (res) {\n                                swal.fire(\n                                    'Updated!',\n                                    'Invoice Status has been Updated.',\n                                    'success'\n                                );\n                            }\n                            else {\n                                swal.fire(\n                                    'Updated!',\n                                    'Invoice Status has not Updated.',\n                                    'warning'\n                                );\n                            }\n                            // setTimeout(() => {\n                            //     refreshPage();\n                            // }, 600);\n                            dispatch(getInvoice(10, 1));\n                        })\n                        .catch(err => {\n                            console.log('err', err)\n                            dispatch(getInvoice(10, 1));\n                            swal.fire({\n                                title: err,\n                            }\n                            );\n                        })\n                } else if (result.dismiss === 'cancel') {\n                    dispatch(getInvoice(10, 1));\n                }\n            })\n            .catch(err => {\n                console.log('swal fire err', err)\n            })\n    };\n\n    return (\n        <>\n            {dropDown}\n\n        </>\n    );\n});\n\n\nconst columns = [\n    {\n        Header: 'Invoice No',\n        accessor: 'invoice_no',\n        sort: true,\n    },\n    {\n        Header: 'Contact',\n        accessor: 'contact_id.name',\n        sort: true,\n    },\n    {\n        Header: 'Date',\n        accessor: 'date',\n        sort: true,\n    },\n    {\n        Header: 'Due Date',\n        accessor: 'due_date',\n        sort: true,\n    },\n    {\n        Header: 'Tax Type',\n        accessor: 'tax_type',\n        sort: true,\n    },\n    {\n        Header: 'Sub Total',\n        accessor: 'sub_total',\n        sort: true,\n    },\n    {\n        Header: 'Discount',\n        accessor: 'discount',\n        sort: true,\n        Cell: (row) => {\n            return <div>{(row.row.original.discount).toFixed(2)}</div>;\n        }\n    },\n    {\n        Header: 'Total Tax',\n        accessor: 'total_tax',\n        sort: true,\n    },\n    {\n        Header: 'Total Amount',\n        accessor: 'total_amount',\n        sort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        sort: true,\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        Cell: ActionColumn,\n    }\n\n];\n\n\nconst Invoice = () => {\n    const dispatch = useDispatch();\n    const [filteredIncoices, setFilteredInvoices] = useState([]);\n    const invoices = useSelector(state => state.Invoice.invoices);\n    const previous = useSelector(state => state.Invoice.previous);\n    const next = useSelector(state => state.Invoice.next);\n    const current_page = useSelector(state => state.Invoice.current_page);\n    const total_page = useSelector(state => state.Invoice.total_page);\n    const active = useSelector(state => state.Invoice.active);\n    const user_role = useSelector((state) => state.Role.user_role);\n    const loading = useSelector(state => state.Invoice.loading);\n    const error = useSelector(state => state.Invoice.error);\n    const [pageSize, setPageSize] = useState(10);\n    const [activePage, setActivePage] = useState('all');\n    /*\n     *   modal handeling\n     */\n\n    const visitPage = (page) => {\n        dispatch(getInvoice(pageSize, page));\n    };\n\n    const previous_number = () => {\n        dispatch(getInvoice(pageSize, previous));\n    };\n\n    const next_number = () => {\n        dispatch(getInvoice(pageSize, next));\n    };\n\n    /*\n    handle form submission\n    */\n\n    const onClickEvent = (value) => {\n        if (value === 'all') {\n            setActivePage('all');\n            setFilteredInvoices(invoices)\n        } else if (value === 'draft') {\n            setActivePage('draft');\n            setFilteredInvoices(invoices.filter((item) => item.status === 'draft'))\n\n        } else if (value === 'approval') {\n            setActivePage('approval');\n            setFilteredInvoices(invoices.filter((item) => item.status === 'waiting'))\n\n        } else if (value === 'approve') {\n            setActivePage('approve');\n            setFilteredInvoices(invoices.filter((item) => item.status === 'approve'))\n\n        } else if (value === 'paid') {\n            setActivePage('paid');\n            setFilteredInvoices(invoices.filter((item) => item.status === 'paid'))\n\n        }\n        // else if(value === 'repeating'){\n        //     setFilteredInvoices(invoices)\n        // }\n        else {\n            setFilteredInvoices(invoices)\n        }\n    }\n\n\n    useEffect(() => {\n        dispatch(getInvoice(pageSize, 1));\n    }, [pageSize])\n\n    useEffect(() => {\n        setFilteredInvoices(invoices);\n        setActivePage('all');\n    }, [invoices])\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Invoice', path: '/app/invoice', active: false },\n                ]}\n                title={`Invoice`}\n            />\n            <Tab.Container>\n                <Nav as=\"ul\" variant=\"tabs\">\n                    <Nav.Item as=\"li\" key='all'>\n                        <Nav.Link active={activePage === \"all\"} className=\"cursor-pointer\" href=\"#\" eventKey='all' onClick={() => onClickEvent('all')}>\n                            All\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key='draft'>\n                        <Nav.Link active={activePage === \"draft\"} className=\"cursor-pointer\" href=\"#\" eventKey='draft' onClick={() => onClickEvent('draft')}>\n                            Draft\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key='approval'>\n                        <Nav.Link active={activePage === \"approval\"} className=\"cursor-pointer\" href=\"#\" eventKey='approval' onClick={() => onClickEvent('approval')}>\n                            Awaiting Approval\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key='approve'>\n                        <Nav.Link active={activePage === \"approve\"} className=\"cursor-pointer\" href=\"#\" eventKey='approve' onClick={() => onClickEvent('approve')}>\n                            Awaiting Payment\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key='paid'>\n                        <Nav.Link active={activePage === \"paid\"} className=\"cursor-pointer\" href=\"#\" eventKey='paid' onClick={() => onClickEvent('paid')}>\n                            Paid\n                        </Nav.Link>\n                    </Nav.Item>\n                    {/* <Nav.Item as=\"li\" key='repeating'>\n                        <Nav.Link className=\"cursor-pointer\" href=\"#\" eventKey='repeating' onClick={()=>onClickEvent('repeating')}>\n                           Repeating\n                        </Nav.Link>\n                    </Nav.Item>                         */}\n                </Nav>\n\n                {/* <Tab.Content>\n                    <Tab.Pane eventKey='trading'  key='trading'>\n                        <Trading />\n                    </Tab.Pane>                        \n                    <Tab.Pane eventKey='transaction'  key='transaction'>\n                        <Transaction />\n                    </Tab.Pane>                        \n                    <Tab.Pane eventKey='dividend'  key='dividend'>\n                        <Dividend />\n                    </Tab.Pane>                        \n                    <Tab.Pane eventKey='dump_box'  key='dump_box'>\n                        <DumpBox />\n                    </Tab.Pane>                        \n                </Tab.Content> */}\n            </Tab.Container>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            {!loading && error && (\n                                <Alert variant=\"danger\" className=\"my-2\">\n                                    {error}\n                                </Alert>\n                            )}\n                            <Row className=\"mb-2\">\n                                <Col sm={4}>\n                                    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                                        <span className='me-2'>Show:</span>\n                                        <Form.Select style={{ width: '40%' }} onChange={(e) => { setPageSize(e.target.value); getInvoice(pageSize, 1) }}>\n                                            <option value='10'>10</option>\n                                            <option value='15'>20</option>\n                                            <option value='20'>30</option>\n                                        </Form.Select>\n                                    </div>\n                                </Col>\n\n                                <Col sm={8}>\n                                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                                        {user_role.includes('add_invoice') ?\n                                            <Link className=\"btn btn-success mb-2 me-1\" to='/app/invoice_form'>\n                                                <i className=\"mdi mdi-plus-circle me-1\"></i> Add\n                                            </Link> :\n                                            <>\n                                            </>\n                                        }\n\n                                        {/* <ExcelFile element={<Button className=\"btn btn-light mb-2\">Export</Button>}>\n                                            <ExcelSheet data={users} name=\"Users\">\n                                                <ExcelColumn label=\"Name\" value=\"name\"/>\n                                                <ExcelColumn label=\"Phone\" value=\"phone\"/>\n                                                <ExcelColumn label=\"Email\" value=\"email\"/>\n                                                <ExcelColumn label=\"Role\" value={(col)=> col.groups[0].name}/>                                            \n                                            </ExcelSheet>\n                                        </ExcelFile> */}\n\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            {loading ? <p>Loading...</p> :\n                                <>\n                                    {filteredIncoices.length > 0 ?\n                                        <>\n                                            <Table\n                                                columns={columns}\n                                                data={filteredIncoices}\n                                                pageSize={pageSize}\n                                                isSortable={true}\n                                                pagination={false}\n                                                isSearchable={true}\n                                                tableClass=\"table-nowrap table-hover\"\n                                                searchBoxClass=\"\"\n                                            />\n                                            <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={total_page} current_page={current_page} active={active} />\n                                        </>\n                                        :\n                                        'No data available!'}</>}\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* add contact modal */}\n\n\n\n\n\n        </>\n    );\n};\n\nexport default Invoice;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert, InputGroup, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Table from '../../components/Table';\nimport { useLocation } from 'react-router-dom';\nimport { ActionColumn } from './invoice'\nimport Pagination from '../../components/CustomPagination';\nimport classNames from 'classnames';\nimport FeatherIcon from 'feather-icons-react';\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { getContactInvoice, getContactDetails, getContactInvoiceSetting, updateContactInvoiceSetting, getContactService } from '../../redux/actions';\n\n\nconst api = new APICore()\n\n\nconst invoicesColumns = [\n    {\n        Header: 'Invoice No',\n        accessor: 'invoice_no',\n        sort: true,\n    },\n    {\n        Header: 'Contact',\n        accessor: 'contact_id.name',\n        sort: true,\n    },\n    {\n        Header: 'Date',\n        accessor: 'date',\n        sort: true,\n    },\n    {\n        Header: 'Due Date',\n        accessor: 'due_date',\n        sort: true,\n    },\n    {\n        Header: 'Tax Type',\n        accessor: 'tax_type',\n        sort: true,\n    },\n    {\n        Header: 'Sub Total',\n        accessor: 'sub_total',\n        sort: true,\n    },\n    {\n        Header: 'Discount',\n        accessor: 'discount',\n        sort: true,\n        Cell: (row) => {\n            return <div>{(row.row.original.discount).toFixed(2)}</div>;\n        }\n    },\n    {\n        Header: 'Total Tax',\n        accessor: 'total_tax',\n        sort: true,\n    },\n    {\n        Header: 'Total Amount',\n        accessor: 'total_amount',\n        sort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        sort: true,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        Cell: ActionColumn,\n    },\n\n];\n\nconst servicesColumns = [\n\n    {\n        Header: 'Contact',\n        accessor: 'contact_id.name',\n        sort: true,\n    },\n    {\n        Header: 'Service Type',\n        accessor: 'service_type',\n        sort: true,\n    },\n    {\n        Header: 'Contact Mode',\n        accessor: 'contact_mode',\n        sort: true,\n    },\n    {\n        Header: 'Payment Terms',\n        accessor: 'payment_terms',\n        sort: true,\n    },\n    {\n        Header: 'Tax Rate',\n        accessor: 'tax_rate',\n        sort: true,\n    },\n    {\n        Header: 'Unit Price',\n        accessor: 'unit_price',\n        sort: true,\n    },\n\n];\n\n\nconst ContactDetails = () => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const [contactId, setContactId] = useState();\n    const [pageSize, setPageSize] = useState(10);\n    const [invoiceSetting, setInvoiceSetting] = useState({\n        \"auto_approve\": false,\n        \"auto_invoice_send\": false,\n        \"reminder_service\": false,\n        \"contact_id\": contactId,\n        \"reminder_settings\": {\n            \"is_include_public_link\": false,\n            \"is_include_pdf_link\": false,\n            \"minimum_invoice_amount\": 0,\n            \"reminder_type\": \"\",\n            \"days\": []\n        }\n    });\n    const invoice_list = useSelector(state => state.Contact.invoice_list);\n    const invoice_list_pagination_data = useSelector(state => state.Contact.invoice_list_pagination_data);\n    const contact_details = useSelector(state => state.Contact.contact_details);\n    const invoice_setting = useSelector(state => state.Contact.invoice_setting);\n    const loading = useSelector(state => state.Contact.loading);\n    const invoice_setting_error = useSelector(state => state.Contact.invoice_setting_error);\n    const invoice_setting_success = useSelector(state => state.Contact.invoice_setting_success);\n    const services = useSelector(state => state.Service.contact_services);\n\n\n    useEffect(() => {\n        const state = location.state\n        if (state) {\n            setContactId(parseInt(state));\n        }\n    }, [])\n\n\n    const visitPage = (page) => {\n        dispatch(getContactInvoice(contactId, pageSize, page));\n    };\n\n    const previous_number = () => {\n        dispatch(getContactInvoice(contactId, pageSize, invoice_list_pagination_data.previous));\n    };\n\n    const next_number = () => {\n        dispatch(getContactInvoice(contactId, pageSize, invoice_list_pagination_data.next));\n    };\n\n    // console.log(\"invoice_list_pagination_data\", invoice_list_pagination_data)\n    // console.log(\"invoice_list\", invoice_list)\n    // console.log(\"contact_details\", contact_details)\n    // console.log(\"due_in\", invoiceSetting)\n\n    useEffect(() => {\n        if (contactId !== undefined && contactId !== null) {\n            dispatch(getContactInvoice(contactId, pageSize, 1))\n            dispatch(getContactDetails(contactId))\n            dispatch(getContactInvoiceSetting(contactId))\n            dispatch(getContactService(contactId)); \n        }\n    }, [contactId])\n\n\n    useEffect(() => {\n        if (invoice_setting !== undefined) {\n            setInvoiceSetting(invoice_setting)\n        }\n    }, [invoice_setting])\n\n\n    const mystyle = {\n        width: \"12rem\"\n    };\n\n    // const myDayStyle = {\n    //     \"display\": \"inline-block\",\n    //     \"width\": \"5rem\",\n    //     \"margin\": \"0 10px 10px\",\n    //     \"boxSizing\": \"border-box\",\n    //     \"border\": \"1px solid #ddd\",\n    //     \"borderBottomColor\": \"#d1d1d1\",\n    //     \"borderRadius\": \"3px\",\n    //     \"textAlign\": \"center\",\n    //     \"backgroundColor\": \"#fff\",\n    //     \"transition\": \"all .25s\",\n    //     \"cursor\": \"pointer\"\n    // };\n\n    const invoiceSettingChange = (e) => {\n        const data = { ...invoiceSetting }\n        const target = e.target.name;\n        const value = e.target.checked;\n        data[target] = value;\n\n        // if (target === \"reminder_service\" && value === false) {\n        // const id = invoiceSetting?.reminder_settings?.id;\n        // data['reminder_settings'] = {\n        //     \"id\":id,\n        //     \"contact_id\": contactId,\n        //     \"is_include_public_link\": false,\n        //     \"is_include_pdf_link\": false,\n        //     \"minimum_invoice_amount\": 0,\n        //     \"reminder_type\": \"\",\n        //     \"days\": []\n        // }\n        // }\n        setInvoiceSetting(data);\n    }\n\n    const invoiceReminderSettingChange = (e) => {\n        const reminder_settings = { ...invoiceSetting.reminder_settings }\n        const target = e.target.name;\n        let value = null;\n        if (target === \"minimum_invoice_amount\" || target === \"reminder_type\") {\n            value = e.target.value;\n        }\n\n        else {\n            value = e.target.checked;\n        }\n\n        reminder_settings[target] = value;\n        const data = { ...invoiceSetting }\n        data['reminder_settings'] = reminder_settings;\n\n        setInvoiceSetting(data);\n    }\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [inputDate, setInputDate] = useState(\"\");\n\n\n    const daySubmit = () => {\n        if (inputDate !== \"\" && parseInt(inputDate) > 0) {\n            const reminder_settings = { ...invoiceSetting.reminder_settings }\n            const days = reminder_settings?.days\n\n            let newDays = []\n            if (days !== undefined) {\n                newDays = [...days]\n            }\n            if (!newDays.includes(inputDate)) {\n                newDays.push(inputDate)\n            }\n            reminder_settings[\"days\"] = newDays;\n            const data = { ...invoiceSetting }\n            data['reminder_settings'] = reminder_settings;\n            setInvoiceSetting(data);\n\n\n            setInputDate(\"\")\n            setShow(false);\n        }\n\n    }\n\n\n    const deleteDay = (value) => {\n        const reminder_settings = { ...invoiceSetting.reminder_settings }\n        const days = reminder_settings?.days\n\n        let newDays = [...days]\n        if (days !== undefined && newDays.includes(value)) {\n            const index = newDays.indexOf(value);\n\n            if (index !== -1) {\n                newDays.splice(index, 1);\n            }\n        }\n\n        reminder_settings[\"days\"] = newDays;\n        const data = { ...invoiceSetting }\n        data['reminder_settings'] = reminder_settings;\n        setInvoiceSetting(data);\n\n    }\n\n    const finalSubmit = () => {\n        // console.log(\"data\", invoiceSetting)\n        // console.log(\"length\", Object.keys(invoiceSetting?.reminder_settings).length)\n        const newData = { ...invoiceSetting }\n        newData[\"contact_id\"] = contactId;\n        newData['reminder_settings'][\"contact_id\"] = contactId;\n        dispatch(updateContactInvoiceSetting(newData))\n    }\n\n\n\n    return (\n        <>\n\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Contact', path: '/app/contact', active: false },\n                    { label: 'Contact Details', path: '/app/contact_details', active: true },\n                ]}\n                title={'Contact Report'}\n            />\n            <Row>\n                <Col md={4} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <p>Personal Details</p>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className=\"container\">\n                                <div className=\"row mb-4\">\n                                    <div className=\"col-sm\">\n                                        <h5>Name: </h5>\n                                        <p>{contact_details?.name}</p>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>Contact ID:</h5>\n                                        <p>{contact_details?.client_id}</p>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>Contact Type:</h5>\n                                        <p>{contact_details?.contact_type}</p>\n\n                                    </div>\n                                </div>\n\n                                <div className=\"row mb-4\">\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>Contact Person:</h5>\n                                        <p>{contact_details?.contact_person}</p>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>Phone:</h5>\n                                        <p>{contact_details?.phone}</p>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>Email:</h5>\n                                        <p>{contact_details?.email}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"row mb-4\">\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>Country:</h5>\n                                        <p>{contact_details?.country?.name}</p>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>City:</h5>\n                                        <p>{contact_details?.city?.name}</p>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <h5 className='me-2'>Billing Address:</h5>\n                                        <p>{contact_details?.billing_address}</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col md={8} xl={8}>\n                    <Card>\n                        <Card.Header>\n                            <p style={{ marginBottom: '0px !important' }}>Services List</p>\n                        </Card.Header>\n\n                        <Card.Body>\n                            <span className=\"text-sm mt-2 mt-sm-0\">\n                                <Link className=\"btn btn-info mb-2 me-1\" to={{ pathname: '/app/service_form', state: { 'services': services, 'contactId': contactId } }}>\n                                    <i className=\"mdi mdi-pencil me-1\"></i> Edit\n                                </Link>\n\n                            </span>\n\n                            {services.length > 0 ?\n                                <>\n                                    <Table\n                                        columns={servicesColumns}\n                                        data={services}\n                                        pageSize={pageSize}\n                                        isSortable={true}\n                                        pagination={false}\n                                        isSearchable={true}\n                                        tableClass=\"table-nowrap table-hover\"\n                                        searchBoxClass=\"\"\n                                    />\n                                    {/* <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={invoice_list_pagination_data.total_page} current_page={invoice_list_pagination_data.current_page} active={invoice_list_pagination_data.active} /> */}\n                                </>\n                                :\n                                'No data available!'}\n                        </Card.Body>\n                    </Card>\n\n                </Col>\n\n            </Row>\n\n            <Row>\n                <Col md={4} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <p>Invoice Setting</p>\n                        </Card.Header>\n                        <Card.Body>\n                            {!loading && invoice_setting_error && !invoice_setting_success && (\n                                <Alert variant=\"danger\" className=\"my-2\">\n                                    {invoice_setting_error}\n                                </Alert>\n                            )}\n\n                            {!loading && invoice_setting_success && !invoice_setting_error && (\n                                <Alert variant=\"success\" className=\"my-2\">\n                                    {invoice_setting_success}\n                                </Alert>\n                            )}\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text style={mystyle}>\n                                    Auto Approve</InputGroup.Text>\n                                <InputGroup.Checkbox checked={invoiceSetting?.auto_approve} name=\"auto_approve\" onChange={(e) => invoiceSettingChange(e)} />\n                            </InputGroup>\n\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text style={mystyle}>\n                                    Auto Invoice Send</InputGroup.Text>\n                                <InputGroup.Checkbox checked={invoiceSetting?.auto_invoice_send} name=\"auto_invoice_send\" onChange={(e) => invoiceSettingChange(e)} />\n                            </InputGroup>\n\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text style={mystyle}>\n                                    Reminder Service</InputGroup.Text>\n                                <InputGroup.Checkbox name=\"reminder_service\" checked={invoiceSetting?.reminder_service} onChange={(e) => invoiceSettingChange(e)} />\n                            </InputGroup>\n\n                            {invoiceSetting?.reminder_service ?\n                                (\n                                    <div style={{ marginLeft: \"1rem\" }}>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroup.Text style={mystyle}>\n                                                Is Inclued Public Link</InputGroup.Text>\n                                            <InputGroup.Checkbox name=\"is_include_public_link\" checked={invoiceSetting?.reminder_settings?.is_include_public_link} onChange={(e) => invoiceReminderSettingChange(e)} />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroup.Text style={mystyle}>\n                                                Is Inclued Pdf Link</InputGroup.Text>\n                                            <InputGroup.Checkbox name=\"is_include_pdf_link\" checked={invoiceSetting?.reminder_settings?.is_include_pdf_link} onChange={(e) => invoiceReminderSettingChange(e)} />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroup.Text style={mystyle}>\n                                                Reminder Type</InputGroup.Text>\n                                            <Form.Check\n                                                type=\"radio\"\n                                                name=\"reminder_type\" checked={invoiceSetting?.reminder_settings?.reminder_type === \"due_in\"} onChange={(e) => invoiceReminderSettingChange(e)}\n                                                label=\"Due In\"\n                                                value=\"due_in\"\n                                                style={{ \"marginRight\": \"1rem\", \"marginLeft\": \"1rem\", marginTop: \"0.5rem\" }}\n                                            />\n                                            <Form.Check\n                                                type=\"radio\"\n                                                name=\"reminder_type\" checked={invoiceSetting?.reminder_settings?.reminder_type === \"over_due\"} onChange={(e) => invoiceReminderSettingChange(e)}\n                                                label=\"Over Due\"\n                                                value=\"over_due\"\n                                                style={{ \"marginRight\": \"1rem\", marginTop: \"0.5rem\" }}\n                                            />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroup.Text style={mystyle}>\n                                                Minimum Invoice Amount</InputGroup.Text>\n                                            <Form.Control type=\"number\" name=\"minimum_invoice_amount\" value={invoiceSetting?.reminder_settings?.minimum_invoice_amount\n                                            } onChange={(e) => invoiceReminderSettingChange(e)} />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroup.Text style={{ width: '6rem' }}>\n                                                Days</InputGroup.Text>\n                                            {invoiceSetting?.reminder_settings?.days?.map(day => (\n\n                                                <div key={day} style={{ \"margin\": \"0 5px\" }}>\n                                                    <div>\n                                                        <InputGroup.Text style={{ width: '6rem' }}>\n                                                            {day} days <i onClick={() => deleteDay(day)} style={{ marginLeft: \".8rem\", color: \"red\", cursor: \"pointer\" }} className=\"fe-delete\"></i>\n                                                        </InputGroup.Text>\n\n                                                    </div>\n                                                </div>\n\n                                            ))}\n                                            <>\n\n                                                <Button variant=\"primary\" onClick={handleShow}>\n                                                    Add\n                                                </Button>\n\n                                                {/* <MyVerticallyCenteredModal\n                                                    show={show}\n                                                    onHide={handleClose}\n                                                /> */}\n\n                                                <Modal show={show}\n\n                                                    size=\"sm\"\n                                                    aria-labelledby=\"contained-modal-title-vcenter\"\n                                                    centered\n                                                >\n                                                    <Modal.Header>\n                                                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                                                            Add Reminder Days\n                                                        </Modal.Title>\n                                                    </Modal.Header>\n                                                    <Modal.Body>\n                                                        <Form>\n                                                            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                                                                <Form.Label>Reminder Type</Form.Label>\n                                                                <Form.Select disabled aria-label=\"Default select example\">\n                                                                    <option selected={invoiceSetting?.reminder_settings?.reminder_type === \"due_in\"} value=\"due_in\">Due In</option>\n                                                                    <option selected={invoiceSetting?.reminder_settings?.reminder_type === \"over_due\"} value=\"over_due\">Over Due</option>\n                                                                </Form.Select>\n                                                            </Form.Group>\n                                                            <Form.Group\n                                                                className=\"mb-3\"\n                                                                controlId=\"exampleForm.ControlTextarea1\"\n                                                            >\n                                                                <Form.Label>Day</Form.Label>\n                                                                <Form.Control onChange={(e) => { setInputDate(e.target.value) }} type=\"number\" />\n                                                            </Form.Group>\n                                                        </Form>\n                                                    </Modal.Body>\n                                                    <Modal.Footer>\n                                                        <Button variant=\"secondary\" onClick={handleClose}>\n                                                            Close\n                                                        </Button>\n                                                        <Button variant=\"primary\" onClick={() => daySubmit()}>\n                                                            Submit\n                                                        </Button>\n                                                    </Modal.Footer>\n                                                </Modal>\n\n                                            </>\n                                        </InputGroup>\n                                    </div>\n                                ) :\n                                <></>\n                            }\n\n                            <Button variant=\"primary\" onClick={() => finalSubmit()}>\n                                Submit\n                            </Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={8} xl={8}>\n\n                    <Card>\n                        <Card.Header>\n                            <p style={{ marginBottom: '0px !important' }}>Invoice List</p>\n                        </Card.Header>\n\n                        <Card.Body>\n\n                            {invoice_list.length > 0 ?\n                                <>\n                                    <Table\n                                        columns={invoicesColumns}\n                                        data={invoice_list}\n                                        pageSize={pageSize}\n                                        isSortable={true}\n                                        pagination={false}\n                                        isSearchable={true}\n                                        tableClass=\"table-nowrap table-hover\"\n                                        searchBoxClass=\"\"\n                                    />\n                                    <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={invoice_list_pagination_data.total_page} current_page={invoice_list_pagination_data.current_page} active={invoice_list_pagination_data.active} />\n                                </>\n                                :\n                                'No data available!'}\n                        </Card.Body>\n                    </Card>\n\n                </Col>\n            </Row>\n\n\n        </>\n    );\n};\nexport default ContactDetails;\n","import React,{ useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\nimport { APICore } from '../../../helpers/api/apiCore';\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logoutUser } from '../../../redux/actions';\n\nconst api = new APICore();\n\nconst ChangePassword = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const[old_password,setOldPassword] = useState('');\n    const[new_password,setNewPassword] = useState('');\n    const[confirm_password,setConfirmPassword] = useState('');\n    const[error,setError] = useState(null);\n\n    const handleSubmit = (e:any) =>{\n        e.preventDefault();\n        api.update(`/api/change_password`,{'old_password':old_password,'new_password':new_password})\n            .then(res=>{\n                \n                if(res.data.success){\n                    history.push('/auth/logout');\n                }else{\n                    \n                   setError(res.data.error) \n                }\n                \n            })\n            .catch(err => {\n                setError(err);\n            })\n    }\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'My Profile', path: '/app/my-profile', active: true },\n                ]}\n                title={'My Profile'}\n            />\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <Row>\n                                <Col sm={2}>\n                                    <Link to='/app/my-profile'>\n                                    <Button variant=\"white\"  style={{width:'100%',fontWeight: '100 !important', textAlign: 'start',marginBottom: '8px',border: 'none'}}>\n                                        <FeatherIcon icon=\"user\" size={15} className=\"me-2\"/>My Profile\n                                    </Button> \n                                    </Link>\n\n                                    <Link to='/app/change_password'>\n                                    <Button variant=\"primary\"  style={{width:'100%',fontWeight: '100 !important', textAlign: 'start'}}>\n                                        <FeatherIcon icon=\"lock\" size={15} className=\"me-2\"/>Change Password\n                                    </Button> \n                                    </Link>\n                                </Col>\n                                <Col sm={10} style={{display: 'flex',justifyContent: 'center'}}>\n                                    \n                                    <Form style={{width: '50%'}} onSubmit={(e)=>handleSubmit(e)}>\n                                        {error && (\n                                            <Alert variant=\"danger\" className=\"my-2\">\n                                                {error}\n                                            </Alert>\n                                        )}\n                                            \n                                        <Form.Group  className=\"mb-3\">\n                                            <Form.Label  >\n                                                Old Password\n                                            </Form.Label>\n                                            <Form.Control type=\"password\" name=\"old_password\" value={old_password}  placeholder=\"Enter Old Password\"   size='lg' onChange={(e)=>setOldPassword(e.target.value)}/>\n                                        </Form.Group>\n                                        <Form.Group  className=\"mb-3\">\n                                            <Form.Label  >\n                                                New Password\n                                            </Form.Label>\n                                            <Form.Control type=\"password\" name=\"new_password\" value={new_password}  placeholder=\"Enter New Password\"   size='lg' onChange={(e)=>setNewPassword(e.target.value)}/>\n                                            {new_password.length > 0 && new_password.length < 4 && <p style={{color: 'red'}}>Password must be minimum 4 characters</p>}\n                                        </Form.Group>\n                                        <Form.Group  className=\"mb-3\">\n                                            <Form.Label  >\n                                                Confirm Password\n                                            </Form.Label>\n                                            <Form.Control type=\"password\" name=\"confirm_password\" value={confirm_password}  placeholder=\"Confirm Password\"   size='lg' onChange={(e)=>setConfirmPassword(e.target.value)}/>\n                                            {confirm_password.length > 0 && new_password !== confirm_password && <p style={{color: 'red'}}>Password not match</p>}\n                                        </Form.Group>                                            \n                                            \n                                        {old_password.length === 0 || new_password.length < 4 || confirm_password.length < 4 ?\n                                        <Button  variant=\"primary\" type='submit'  style={{width:'35%',marginTop: '20px'}} disabled>\n                                            Save\n                                        </Button> :\n                                        <Button  variant=\"primary\" type='submit'  style={{width:'35%',marginTop: '20px'}} >\n                                            Save\n                                        </Button>}\n                                        \n                                        \n\n                                    </Form>               \n                                </Col>\n                            </Row>   \n                                      \n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ChangePassword;\n","import React, { useState,useEffect } from 'react';\nimport { APICore } from '../../helpers/api/apiCore';\n\nimport { Row, Col, Card, Button,Form, Alert } from 'react-bootstrap';\nimport {useHistory, useLocation} from 'react-router-dom';\n// components\n\nimport PageTitle from '../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getUserRole } from '../../redux/actions';\n\nconst api = new APICore();\n\n\n\nconst RoleForm = () => {\n    const dispatch = useDispatch();\n    const location = useLocation()\n    const role = location.state;\n    const[permission,setPermission] = useState([]);\n    const[error,setError] = useState(null);\n    const[role_name,setRoleName] = useState('');\n    const[role_permission,setRolePermission] = useState([]);\n    const history = useHistory();\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if(role){\n            api.updatePatch(`/api/groups/${role.id}/`,{'name':role_name,'permissions':role_permission})\n            .then(res=>{\n                \n                if(res.data.success){\n                    dispatch(getUserRole());\n                    history.push('/app/roles');\n                }else{\n                    setError(res.data.error)\n                    \n                }\n                \n            })\n            .catch(err => {\n                setError(err)\n            })\n        }else{\n            api.create(`/api/groups/`,{'name':role_name,'permissions':role_permission})\n            .then(res=>{\n                \n                if(res.data.success){\n                    dispatch(getUserRole());\n                    history.push('/app/roles');\n                }else{\n                    setError(res.data.error)\n                    \n                }\n                \n            })\n            .catch(err => {\n                setError(err)\n            })\n        }\n        \n    }\n\n    const handleChange = (e) =>{\n        const isChecked = e.target.checked;\n        \n        if(isChecked){\n            setRolePermission([...role_permission,parseInt(e.target.value)  ]);\n            \n        }else{\n            let index = role_permission.findIndex((x) => parseInt(x) === parseInt(e.target.value))\n            role_permission.splice(index,1)\n            setRolePermission([...role_permission])\n            \n        }\n    }\n    \n    useEffect(()=>{\n        api.get(`/api/permission`,{})\n        .then(res=>{\n            setPermission(res.data)\n        })\n        if (role){\n            setRoleName(role?.name)\n            const permissions = role?.permissions;\n            const permissionsId = permissions.map(permission=>{\n                return permission.id\n            })\n            setRolePermission(permissionsId)\n        }\n        \n        \n    },[])\n    \n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Roles', path: '/app/roles', active: false },\n                    { label: 'Add Role', path: '/app/add_role', active: true },\n                ]}\n                title={'Add Role'}\n            />\n\n            \n            <Card>\n                <Card.Body>\n                    \n                    \n                    \n                        <Form onSubmit={handleSubmit}>\n                        {error && (\n                            <Alert variant=\"danger\" className=\"my-2\">\n                                {error}\n                            </Alert>\n                        )}\n                            <Form.Group  className=\"mb-3\" style={{width: '20%'}}>\n                                <Form.Label  >\n                                    Role Name\n                                </Form.Label>\n                                <Form.Control type=\"text\" name=\"name\" value={role_name} placeholder=\"Enter Role Name\"   onChange={(e)=>setRoleName(e.target.value)}  required/>\n                            </Form.Group>  \n\n                            <Row>\n                                {permission.map((item)=>{\n                                    return(\n                                        <Form.Group as={Col} sm={3} className=\"mb-3\" key={item.id} onChange={(e)=>handleChange(e)}> \n                                                                       \n                                            <Form.Check label={item.name} value={item.id} checked={role_permission.includes(item.id)} />                              \n                                                                          \n                                        </Form.Group>\n                                    )\n                                })}\n                                \n                            </Row>\n                            \n                            <Link to='/app/roles'>                           \n                            <Button  variant=\"white\" type='button'  style={{width:'15%',marginTop: '20px',marginRight: 5}} >\n                                Back\n                            </Button> \n                            </Link>\n                            <Button  variant=\"primary\" type='submit'  style={{width:'15%',marginTop: '20px'}}>\n                                Save\n                            </Button> \n                            \n\n                        </Form>\n                            \n                            \n                                                    \n                </Card.Body>\n            </Card>\n                       \n\n            \n        </>\n    );\n};\n\nexport default RoleForm;\n","import React,{ useEffect, useState } from 'react';\nimport { Button, Form, Alert } from 'react-bootstrap';\nimport { APICore } from '../../helpers/api/apiCore';\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { Link, useHistory} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport AuthLayout from './AuthLayout';\nimport { useTranslation } from 'react-i18next';\nimport queryString from 'query-string';\n\nconst api = new APICore();\n\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <footer className=\"footer footer-alt\">\n            <p className=\"text-muted\">\n                {t(\"Don't have an account?\")}{' '}\n                <Link to={'#'} className=\"text-muted ms-1\">\n                    <b>{t('Sign Up')}</b>\n                </Link>\n            </p>\n        </footer>\n    );\n};\n\nconst PasswordReset = (props:any) => {\n    const history = useHistory();\n    const[new_password,setNewPassword] = useState('');\n    const[confirm_password,setConfirmPassword] = useState('');\n    const[error,setError] = useState(null);\n    const { t } = useTranslation();\n    \n    const qString = queryString.parse(props.location.search);\n    \n    const handleSubmit = (e:any) =>{\n        e.preventDefault();\n        try{\n            api.create(`/api/password_reset/confirm/`,{'token':qString.token,'password':new_password})\n            .then((res:any)=>{\n                \n                history.push('/auth/password_reset_success');        \n            })\n            .catch(err => {\n                setError(err)\n            })\n        }\n        catch(error:any){\n            setError(error);\n        }\n        \n    }\n    return (\n        <AuthLayout bottomLinks={<BottomLink />}>\n                <div className=\"\">\n                    \n                    <h3>{t('Reset your password')}</h3>\n                    <Form  onSubmit={(e)=>handleSubmit(e)}>\n                                        {error && (\n                                            <Alert variant=\"danger\" className=\"my-2\">\n                                                {error}\n                                            </Alert>\n                                        )}\n                                            \n                                       \n                                        <Form.Group  className=\"mb-3\">\n                                            <Form.Label  >\n                                                New Password\n                                            </Form.Label>\n                                            <Form.Control type=\"password\" name=\"new_password\" value={new_password}  placeholder=\"Enter New Password\"   size='lg' onChange={(e)=>setNewPassword(e.target.value)} required/>\n                                            \n                                        </Form.Group>\n                                        <Form.Group  className=\"mb-3\">\n                                            <Form.Label  >\n                                                Confirm Password\n                                            </Form.Label>\n                                            <Form.Control type=\"password\" name=\"confirm_password\" value={confirm_password}  placeholder=\"Confirm Password\"   size='lg' onChange={(e)=>setConfirmPassword(e.target.value)} required/>\n                                            {confirm_password.length > 0 && new_password !== confirm_password && <p style={{color: 'red'}}>Password not match</p>}\n                                        </Form.Group>                                            \n                                            \n                                        <div className='d-flex justify-content-between'>\n                                            {new_password !== confirm_password ?\n                                            <Button  variant=\"primary\" type='submit'  style={{width:'40%',marginTop: '20px'}} disabled>\n                                                Save\n                                            </Button> :\n                                            <Button  variant=\"primary\" type='submit'  style={{width:'40%',marginTop: '20px'}} >\n                                                Save\n                                            </Button>}\n                                            <Link to=\"/auth/login\" className=\"btn btn-primary waves-effect waves-light\" style={{width:'40%',marginTop: '20px'}}>\n                                                {t('Back to Home')}{' '}\n                                            </Link>\n                                        </div>\n                                        \n                                        \n                                        \n\n                                    </Form>               \n                    \n                </div>\n            </AuthLayout>\n    );\n};\n\nexport default PasswordReset;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\n// components\nimport AuthLayout from './AuthLayout';\n\n\n\n/* bottom link */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <footer className=\"footer footer-alt\">\n            <p className=\"text-muted\">\n                {t('2018 - ' + new Date().getFullYear() + ' © UBold theme by')}{' '}\n                <Link to=\"#\" className=\"text-muted\">\n                    {t('Coderthemes')}\n                </Link>\n            </p>\n        </footer>\n    );\n};\n\nconst PasswordResetSuccess = (state:any) => {\n    const { t } = useTranslation();\n    return (\n        <>\n            <AuthLayout bottomLinks={<BottomLink />}>\n                <div className=\"text-center\">\n                    \n                    <h3>{t('Success !')}</h3>\n                    <p className=\"text-muted font-14 mt-2\">\n                        {t('Password has been Reseted Successfully')}\n                        {/* <b>{state.location.state.email} </b> */}\n                    </p>\n                    <Link to=\"/auth/login\" className=\"btn w-100 btn-primary waves-effect waves-light mt-3\">\n                        {t('Back to Home')}{' '}\n                    </Link>\n                </div>\n            </AuthLayout>\n        </>\n    );\n};\n\nexport default PasswordResetSuccess;\n","import React from 'react';\nimport { Route, Redirect, RouteProps, RouteComponentProps } from 'react-router-dom';\n\nimport { APICore } from '../helpers/api/apiCore';\n\ninterface PrivateRouteProps {\n    component: React.FunctionComponent<RouteProps>;\n    roles?: string;\n}\n\n/**\n * Private Route forces the authorization before the route can be accessed\n * @param {*} param0\n * @returns\n */\nconst PrivateRoute = ({ component: Component, roles, ...rest }: PrivateRouteProps) => {\n    const api = new APICore();\n\n    return (\n        <Route\n            {...rest}\n            render={(props: RouteComponentProps) => {\n                if (api.isUserAuthenticated() === false) {\n                    // not logged in so redirect to login page with the return url\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: '/auth/login',\n                                state: { from: props['location'] },\n                            }}\n                        />\n                    );\n                }\n\n                const loggedInUser = api.getLoggedInUser();\n\n                // check if route is restricted by role\n                if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                    // role not authorised so redirect to home page\n                    return <Redirect to={{ pathname: '/' }} />;\n                }\n                // authorised so return component\n                return <Component {...props} />;\n            }}\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// import { APICore } from '../helpers/api/apiCore';\n\nconst Root = () => {\n    // const api = new APICore();\n\n    const getRootUrl = () => {\n        let url: string = 'dashboard';\n\n        // // check if user logged in or not and return url accordingly\n        // if (api.isUserAuthenticated() === false) {\n        //     url = 'landing';\n        // } else {\n        //     url = 'dashboard-1';\n        // }\n        return url;\n    };\n\n    const url = getRootUrl();\n\n    return <Redirect to={`/${url}`} />;\n};\n\nexport default Root;\n","import React, { useEffect, useState } from 'react';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { Row, Col, Card, Form, Alert } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\n// components\nimport Table from '../../components/Table';\nimport PageTitle from '../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContactService } from '../../redux/actions';\n\n\n\n// const ExcelFile = ReactExport.ExcelFile;\n// const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst api = new APICore();\n\n\n// // action column render\n// const ActionColumn = withSwal(({ row, swal }) => {\n//     /*\n//      *   modal handeling\n//      */\n//     const dispatch = useDispatch();\n//     const user_role = useSelector((state)=> state.Role.user_role);\n    \n\n//     /*\n//     handle form submission\n//     */\n//     const onSubmit = (formData) => {\n        \n//         api.updatePatch(`/api/service/${row.original.id}/`,formData)\n//         .then(res=>{\n            \n//             if(res.data.success){\n                \n//             }else{\n//                 swal.fire({\n//                     title: res.data.error,\n//                 }) \n                \n//             }\n            \n//         })\n//         .catch(err => {\n//             swal.fire({\n//                 title: err,\n//             })\n//         })\n       \n//     };\n\n//     const onDelete = () => {\n//         swal.fire({\n//                 title: 'Are you sure?',\n//                 text: \"You won't be able to revert this!\",\n//                 icon: 'warning',\n//                 showCancelButton: true,\n//                 confirmButtonColor: '#28bb4b',\n//                 cancelButtonColor: '#f34e4e',\n//                 confirmButtonText: 'Yes, delete it!',\n//             })\n//             .then(function(result){\n//                 if(result.value){\n//                     // dispatch(deleteContact(row.original.id))\n//                     api.delete(`/api/service/${row.original.id}/`)\n//                 .then(res=>{\n                    \n//                     swal.fire(\n//                         'Deleted!',\n//                         'Account has been deleted.',\n//                         'success'\n//                     );            \n//                 })\n//                 .catch(err => {\n//                     swal.fire({\n//                         title: err,\n//                     }\n//                     );\n//                 })\n//                 }else if(result.dismiss === 'cancel'){\n                    \n//                 }\n//             })        \n//     }\n\n//     return (\n//         <>\n\n//             { user_role.includes('change_service') ?\n//                 <Link to=\"#\" className=\"action-icon\" >\n//                     <i className=\"mdi mdi-square-edit-outline\"></i>\n//                 </Link>:\n//                 <Link to=\"#\" className=\"action-icon\"  style={{pointerEvents: 'none'}}>\n//                     <i className=\"mdi mdi-square-edit-outline\"></i>\n//                 </Link>\n//             }\n            \n//             { user_role.includes('delete_service') ?\n//                 <Link to=\"#\" className=\"action-icon\" onClick={()=>onDelete()}>\n//                     <i className=\"mdi mdi-delete\"></i>\n//                 </Link>:\n//                 <Link to=\"#\" className=\"action-icon\" style={{pointerEvents: 'none'}}>\n//                     <i className=\"mdi mdi-delete\"></i>\n//                 </Link>\n//             }\n            \n//         </>\n//     );\n// });\n\nconst columns = [\n    \n    {\n        Header: 'Contact',\n        accessor: 'contact_id.name',\n        sort: true,\n    },\n    {\n        Header: 'Service Type',\n        accessor: 'service_type',\n        sort: true,\n    },\n    {\n        Header: 'Contact Mode',\n        accessor: 'contact_mode',\n        sort: true,\n    },\n    {\n        Header: 'Payment Terms',\n        accessor: 'payment_terms',\n        sort: true,\n    },\n    {\n        Header: 'Tax Rate',\n        accessor: 'tax_rate',\n        sort: true,\n    },\n    {\n        Header: 'Unit Price',\n        accessor: 'unit_price',\n        sort: true,\n    },\n    \n];\n\nconst Service = () => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const [contact,setContact] = useState({});\n    const services = useSelector(state => state.Service.contact_services);\n    // const previous = useSelector(state => state.Service.previous);\n    // const next = useSelector(state => state.Service.next);\n    // const current_page = useSelector(state => state.Service.current_page);\n    // const total_page = useSelector(state => state.Service.total_page);\n    // const active = useSelector(state => state.Service.active);\n    const user_role = useSelector((state)=> state.Role.user_role);\n    const loading = useSelector(state => state.Service.loading);\n    const error = useSelector(state => state.Service.error);\n    const [pageSize,setPageSize] = useState(10);\n    /*\n     *   modal handeling\n     */\n  \n\n    // const visitPage = (page) => {\n    //     dispatch(getService(pageSize,page));\n    // };\n\n    // const previous_number = () => {\n    //     dispatch(getService(pageSize,previous));\n    // };\n\n    // const next_number = () => {\n    //     dispatch(getService(pageSize,next));\n    // };\n\n    /*\n    handle form submission\n    */\n    \n\n\n    useEffect(()=>{ \n        const state = location.state;\n        setContact(state);\n        dispatch(getContactService(state.id));   \n    },[pageSize])\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Service', path: '/app/service', active: false },\n                    { label: 'Contact Service', path: '/app/service_by_contact', active: true },\n                ]}\n                title={`Service of ${contact.name}`}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                        {!loading && error && (\n                            <Alert variant=\"danger\" className=\"my-2\">\n                                {error}\n                            </Alert>\n                        )}\n                            <Row className=\"mb-2\">\n                                <Col sm={4}>\n                                    <div style={{display: 'flex',flexDirection: 'row',alignItems: 'center'}}>\n                                        <span className='me-2'>Show:</span>\n                                        <Form.Select style={{width: '40%'}} onChange={(e)=>{setPageSize(e.target.value)}}>\n                                            <option value='10'>10</option>\n                                            <option value='15'>20</option>\n                                            <option value='20'>30</option>\n                                        </Form.Select>\n                                    </div>\n                                </Col>\n\n                                <Col sm={8}>\n                                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                                        { user_role.includes('change_service') ?\n                                            <Link className=\"btn btn-info mb-2 me-1\" to={{pathname:'/app/service_form',state: {'services':services,'contactId':contact.id}}}>\n                                            <i className=\"mdi mdi-pencil me-1\"></i> Edit\n                                            </Link>:\n                                            <>\n                                            </>\n                                        }\n                                        \n                                        {/* <ExcelFile element={<Button className=\"btn btn-light mb-2\">Export</Button>}>\n                                            <ExcelSheet data={users} name=\"Users\">\n                                                <ExcelColumn label=\"Name\" value=\"name\"/>\n                                                <ExcelColumn label=\"Phone\" value=\"phone\"/>\n                                                <ExcelColumn label=\"Email\" value=\"email\"/>\n                                                <ExcelColumn label=\"Role\" value={(col)=> col.groups[0].name}/>                                            \n                                            </ExcelSheet>\n                                        </ExcelFile> */}\n  \n                                    </div>\n                                </Col>\n                            </Row>\n                            \n                            {loading ? <p>Loading...</p>:\n                            <>\n                            {services.length > 0 ?\n                            <>\n                            <Table\n                                columns={columns}\n                                data={services}\n                                pageSize={pageSize}\n                                isSortable={true}\n                                pagination={true}\n                                isSearchable={true}\n                                tableClass=\"table-nowrap table-hover\"\n                                searchBoxClass=\"\"\n                            />\n                            {/* <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={total_page} current_page={current_page} active={active}/> */}\n                            </>\n                            :\n                            'No data available!'}</>}\n                            \n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* add contact modal */}\n            \n            \n            \n            \n            \n        </>\n    );\n};\n\nexport default Service;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { Link, } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { useLocation, useHistory } from 'react-router-dom';\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { getAllContact } from '../../redux/actions';\n\nconst api = new APICore()\n\n\n\n\nconst ServiceForm = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const [oldItems, setOldItems] = useState([]);\n    const [contactId, setContactId] = useState('');\n    const [deletedItems, setDeletedItems] = useState([]);\n    // const[isEdit,setIsEdit] = useState(false);\n    // const user_role = useSelector((state:RootState)=> state.Role.user_role);\n    // const { user } = useSelector((state: RootState) => ({\n        //     user: state.Auth.user,\n        // }));\n        \n\n    const [items, setItems] = useState({\n        contact_id: contactId ? contactId : '',\n        service_type: '',\n        contact_mode: '',\n        payment_terms: '',\n        tax_rate: '',\n        unit_price: ''\n    });\n    const [newItems, setNewItems] = useState([]);\n\n    const dispatch = useDispatch();\n    const contacts = useSelector((state) => state.Contact.all_contact);\n    const cloading = useSelector((state) => state.Contact.loading);\n    const [rloading, setRloading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n\n    const ContactChange = (e) => {\n        let items = [...newItems];\n        items.forEach((item) => {\n            item.contact_id = e.target.value;\n        })\n        setNewItems(items);\n    }\n\n    const onNewItemsChange = (e, index) => {\n        let name = e.target.name;\n        let items = [...newItems];\n        let item = { ...items[index] };\n        item[name] = e.target.value;\n        items[index] = item;\n        setNewItems(items);\n    }\n\n    const onOldItemsChange = (e, index) => {\n        let name = e.target.name;\n        let items = [...oldItems];\n        let item = { ...items[index] };\n        item[name] = e.target.value;\n        items[index] = item;\n        setOldItems(items);\n    }\n\n\n    useEffect(() => {\n        const state = location.state\n        if (state) {\n            setContactId(state.contactId);\n            const allItems = state.services.map((item) => {\n                return {\n                    id: item.id,\n                    contact_id: item.contact_id.id,\n                    service_type: item.service_type,\n                    contact_mode: item.contact_mode,\n                    payment_terms: item.payment_terms,\n                    tax_rate: item.tax_rate,\n                    unit_price: item.unit_price,\n                }\n            })\n            setOldItems(allItems);\n            setItems({ ...items, contact_id: state.contactId })\n\n\n        } else {\n            setNewItems([items])\n        }\n        dispatch(getAllContact());\n    }, [])\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setRloading(true);\n        api.create(`/api/service/`, newItems)\n            .then(res => {\n\n                if (res.data.success) {\n                    setSuccess('Data Saved Successfully');\n                    setRloading(false);\n                    // setTimeout(() => {\n                    //     history.goBack()\n                    // }, 1000);\n                } else {\n                    setError(res.data.error)\n                    setRloading(false);\n                }\n\n            })\n            .catch(err => {\n                setError(err)\n            })\n    }\n\n    const onUpdate = (e) => {\n        e.preventDefault();\n        setRloading(true);\n        api.updatePatch(`/api/service/`, { 'updated_items': oldItems, 'new_items': newItems, 'deleted_items': deletedItems })\n            .then(res => {\n\n                if (res.data.success) {\n                    setSuccess('Data Updated Successfully');\n                    setRloading(false);\n                    // setTimeout(() => {\n                    //     history.goBack()\n                    // }, 1000);\n                } else {\n                    setError(res.data.error)\n                    setRloading(false);\n                }\n\n            })\n            .catch(err => {\n                setError(err)\n            })\n    }\n\n\n\n    return (\n        <>\n\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Service', path: '/app/service', active: false },\n                    { label: 'Service Form', path: '/app/service_form', active: true },\n                ]}\n                title={'Service Form'}\n            />\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            {error && (\n                                <Alert variant=\"danger\" className=\"my-2\" onClose={() => setError(null)} dismissible>\n                                    {error}\n                                </Alert>\n                            )}\n                            {success && (\n                                <Alert variant=\"success\" className=\"my-2\" onClose={() => setSuccess(null)} dismissible>\n                                    {success}\n                                </Alert>\n                            )}\n                            <Form onSubmit={(e) => { oldItems ? onUpdate(e) : onSubmit(e) }}>\n\n                                <Form.Group className='mb-3' style={{ width: '20%' }}>\n                                    <Form.Label >Contact</Form.Label>\n                                    {contactId ?\n\n                                        <Form.Select\n                                            aria-label=\"Default select example\"\n                                            required\n                                            onChange={(e) => ContactChange(e)}\n                                            disabled={contactId}\n                                            value={contactId}\n                                        >\n                                            {cloading ? <option value=\"\" disabled>Loading...</option> :\n                                                <>\n\n                                                    <option value=\"\" disabled>Select Contact ...</option>\n                                                    {contacts.length > 0 && contacts?.map((item) => {\n                                                        return (\n                                                            <option key={'scontact' + item.id} value={item.id} >{item.name}</option>\n                                                        )\n                                                    })}\n\n                                                </>\n                                            }\n                                        </Form.Select> :\n                                        <Form.Select\n                                            aria-label=\"Default select example\"\n                                            required\n                                            onChange={(e) => ContactChange(e)}\n                                            defaultValue=\"\"\n                                        >\n                                            {cloading ? <option value=\"\" disabled>Loading...</option> :\n                                                <>\n\n                                                    <option value=\"\" >Select Contact ...</option>\n                                                    {contacts.length > 0 && contacts?.map((item) => {\n                                                        return (\n                                                            <option key={'scontact' + item.id} value={item.id} >{item.name}</option>\n                                                        )\n                                                    })}\n\n                                                </>\n                                            }\n                                        </Form.Select>}\n\n                                </Form.Group>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th className='required'>Service Type</th>\n                                            <th className='required'>Contact Mode</th>\n                                            <th className='required'>Payment Terms</th>\n                                            <th className='required'>Govt VAT (%)</th>\n                                            <th className='required'>Total</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {oldItems && oldItems.length > 0 && oldItems.map((item, index) => {\n                                            return (\n                                                <tr key={'tr' + index}>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='service_type'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.service_type}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Select\n                                                                aria-label=\"Default select example\"\n                                                                required\n                                                                name='contact_mode'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.contact_mode}\n                                                            >\n\n                                                                <option value=\"\" disabled>Select Contact Mode ...</option>\n                                                                <option value=\"pre-paid\" >Pre-Paid</option>\n                                                                <option value=\"post-paid\" >Post-Paid</option>\n\n                                                            </Form.Select>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='payment_terms'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.payment_terms}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='tax_rate'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.tax_rate}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='unit_price'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.unit_price}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{ backgroundColor: '#1299dd', color: '#fff', height: '30px' }} onClick={() => {\n                                                            oldItems.splice(index, 1);\n                                                            setOldItems([...oldItems]);\n                                                            deletedItems.push(item.id)\n                                                        }}>\n                                                            <i className=\"mdi mdi-close\"></i>\n                                                        </Link>\n                                                    </td>\n                                                </tr>)\n                                        })}\n                                        {newItems.length > 0 && newItems.map((item, index) => {\n                                            return (\n                                                <tr key={'tr' + index}>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='service_type'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item.service_type}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Select\n                                                                aria-label=\"Default select example\"\n                                                                required\n                                                                name='contact_mode'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.contact_mode}\n                                                            >\n\n                                                                <option value=\"\" disabled>Select Contact Mode ...</option>\n                                                                <option value=\"pre-paid\" >Pre-Paid</option>\n                                                                <option value=\"post-paid\" >Post-Paid</option>\n\n                                                            </Form.Select>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='payment_terms'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item.payment_terms}\n\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='tax_rate'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item.tax_rate}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='unit_price'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item.unit_price}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{ backgroundColor: '#1299dd', color: '#fff', height: '30px' }} onClick={() => {\n\n                                                            newItems.splice(index, 1);\n                                                            setNewItems([...newItems])\n                                                        }}>\n                                                            <i className=\"mdi mdi-close\"></i>\n                                                        </Link>\n                                                    </td>\n                                                </tr>)\n                                        })}\n\n\n                                    </tbody>\n                                </Table>\n                                <div className=\"d-flex justify-content-between\">\n\n                                    <Button variant=\"info\" type=\"button\" className=\"waves-effect waves-light me-1\" onClick={() => setNewItems([...newItems, items])}>\n                                        Add a new line\n                                    </Button>\n                                    <div>\n                                        <Button variant=\"success\" type=\"submit\" className=\"waves-effect waves-light me-1\" disabled={rloading}>\n                                            {rloading ? 'Loaidng...' : 'Save'}\n                                        </Button>\n                                        <Link\n                                            to='/app/'\n                                            onClick={() => history.goBack()}\n                                            className=\" btn waves-effect waves-light\"\n                                        >\n                                            Cancel\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                            </Form>\n\n\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ServiceForm;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { useLocation } from 'react-router-dom';\nimport { format } from 'date-fns'\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { getAllContact, getChartAccount, getContactService, getInvoiceDetails } from '../../redux/actions';\n\n\nconst api = new APICore()\n\n\n\n\nconst InvoiceForm = () => {\n    const location = useLocation();\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const contacts = useSelector((state) => state.Contact.all_contact);\n    const accounts = useSelector((state) => state.ChartAccount.accounts);\n    const cloading = useSelector((state) => state.Contact.loading);\n    const chloading = useSelector((state) => state.ChartAccount.loading);\n    const [rloading, setRloading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n\n\n    const [oldItems, setOldItems] = useState([]);\n    const invoice_details = useSelector((state) => state.Invoice.invoice_details);\n    const contact_services = useSelector((state) => state.Service.contact_services);\n    const [contactId, setContactId] = useState('');\n    const [invoiceNo, setInvoiceNo] = useState('');\n    const [invoiceId, setInvoiceId] = useState(null);\n    const [date, setDate] = useState('');\n    const [due_date, setDueDate] = useState('');\n    const [reference, setReference] = useState('');\n    const [currency, setCurrency] = useState('1');\n    const [tax_type, setTaxType] = useState('inclusive');\n    const [sub_total, setSubTotal] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [total_tax, setTotalTax] = useState('');\n    const [status, setStatus] = useState('draft');\n    const [total_amount, setTotalAmount] = useState('');\n    const [deletedItems, setDeletedItems] = useState([]);\n    const [taxGroup, setTaxGroup] = useState({});\n\n    const [items, setItems] = useState({\n        item: '',\n        description: '',\n        qty: 1,\n        unit_price: 0,\n        discount: 0,\n        account_id: null,\n        tax_rate: 0,\n        tax_amount: 0,\n        sub_total: 0,\n        total_amount: 0\n    });\n    const [newItems, setNewItems] = useState([]);\n\n    const onContactChange = (e) => {\n        setNewItems([])\n        setContactId(e.target.value);\n        dispatch(getContactService(e.target.value));\n    }\n\n    useEffect(() => {\n        if (contact_services.length > 0) {\n            const allItems = contact_services.map((item) => {\n                return {\n                    item: item.service_type,\n                    description: '',\n                    qty: 1,\n                    unit_price: item.unit_price,\n                    discount: '0',\n                    account_id: '',\n                    tax_rate: item.tax_rate,\n                    tax_amount: (tax_type === 'inclusive' ?\n                        ((((1 * item.unit_price) * (item.tax_rate && parseInt(item.tax_rate))) / (100 + (item.tax_rate && parseInt(item.tax_rate)))).toFixed(2))\n                        : tax_type === 'exclusive' ?\n                            (((1 * item.unit_price) / 100) * (item.tax_rate && parseInt(item.tax_rate)))\n                            : 0\n                    ),\n                    sub_total: 1 * item.unit_price,\n                    total_amount: 1 * item.unit_price\n                }\n            });\n\n            setNewItems(allItems);\n        }\n        else {\n            setNewItems([items])\n        }\n\n\n    }, [contact_services])\n\n    const onNewItemsChange = (e, index) => {\n        let name = e.target.name;\n        let items = [...newItems];\n        let item = { ...items[index] };\n        item[name] = e.target.value;\n        if (name === 'qty' || name === 'unit_price' || name === 'discount' || name === 'tax_rate') {\n\n            item['sub_total'] = parseFloat(item['qty'] !== '' ? item['qty'] : 0) * parseFloat(item['unit_price'] !== '' ? item['unit_price'] : 0)\n            item['sub_total'] -= ((parseFloat(item['sub_total']) * parseFloat(item['discount'] !== '' ? item['discount'] : 0)) / 100)\n\n            if (tax_type === 'inclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)) / (100 + parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)))\n            } else if (tax_type === 'exclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) / 100) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0))\n            } else {\n                item['tax_amount'] = 0\n            }\n\n            item['total_amount'] = parseFloat((item['sub_total']))\n        }\n        items[index] = item;\n        setNewItems(items);\n    }\n\n    const onOldItemsChange = (e, index) => {\n        let name = e.target.name;\n        let items = [...oldItems];\n        let item = { ...items[index] };\n        item[name] = e.target.value;\n        if (name === 'qty' || name === 'unit_price' || name === 'discount' || name === 'tax_rate') {\n\n            item['sub_total'] = parseFloat(item['qty'] !== '' ? item['qty'] : 0) * parseFloat(item['unit_price'] !== '' ? item['unit_price'] : 0)\n            item['sub_total'] -= ((parseFloat(item['sub_total']) * parseFloat(item['discount'] !== '' ? item['discount'] : 0)) / 100)\n\n            if (tax_type === 'inclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)) / (100 + parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)))\n            } else if (tax_type === 'exclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) / 100) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0))\n            } else {\n                item['tax_amount'] = 0\n            }\n\n            item['total_amount'] = parseFloat((item['sub_total']))\n        }\n        items[index] = item;\n        setOldItems(items);\n    }\n\n    useEffect(() => {\n        const groupOfTax = {}\n        let total_discount = 0\n        let total_subTotal = 0.00\n        let total_taxAmount = 0\n        newItems.forEach((item) => {\n            total_discount += parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.discount));\n            total_subTotal += parseFloat(item.total_amount);\n            var item_tax_amount = 0;\n            if (tax_type === 'inclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)) / (100 + parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)))\n            } else if (tax_type === 'exclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0))\n            } else {\n                item_tax_amount = 0\n            }\n            total_taxAmount += parseFloat(item_tax_amount);\n\n            if ((item.tax_rate).toString() in groupOfTax) {\n                groupOfTax[(item.tax_rate).toString()] += parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n            else {\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n        })\n\n\n        oldItems.forEach((item) => {\n            total_discount += parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.discount));\n            total_subTotal += parseFloat(item.total_amount);\n\n            var item_tax_amount = 0;\n            if (tax_type === 'inclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)) / (100 + parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)))\n            } else if (tax_type === 'exclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0))\n            } else {\n                item_tax_amount = 0\n            }\n            total_taxAmount += parseFloat(item_tax_amount);\n\n            if ((item.tax_rate).toString() in groupOfTax) {\n                groupOfTax[(item.tax_rate).toString()] += parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n            else {\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n        })\n        setDiscount(parseFloat(parseFloat(total_discount).toFixed(2)));\n        setSubTotal(parseFloat(parseFloat(total_subTotal).toFixed(2)));\n        setTotalTax(parseFloat(parseFloat(total_taxAmount).toFixed(2)));\n        let totalAmount = parseFloat(parseFloat(parseFloat(total_subTotal) + (tax_type === 'exclusive' && parseFloat(total_taxAmount))).toFixed(2));\n        setTotalAmount(totalAmount)\n        setTaxGroup(groupOfTax)\n    }, [newItems, oldItems, tax_type])\n\n    useEffect(() => {\n        const state = location.state\n        dispatch(getAllContact());\n        dispatch(getChartAccount());\n        if (state) {\n            dispatch(getInvoiceDetails(state));\n            setInvoiceId(state);\n            setNewItems([]);\n\n        } else {\n            setNewItems([items]);\n            setOldItems([]);\n            setInvoiceId(null);\n        }\n\n    }, [])\n\n    useEffect(() => {\n        if (invoiceId) {\n            setNewItems([]);\n            setInvoiceNo(invoice_details?.invoice_no);\n            setContactId(invoice_details?.contact_id?.id);\n            setTaxType(invoice_details?.tax_type);\n            setDate(invoice_details?.date);\n            setDueDate(invoice_details?.due_date);\n            setReference(invoice_details?.reference);\n            setStatus(invoice_details?.status);\n            if (invoice_details?.items?.length > 0) {\n                const allItems = invoice_details.items.map((item) => {\n                    return {\n                        id: item.id,\n                        item: item.item,\n                        description: item.description,\n                        qty: item.qty,\n                        unit_price: item.unit_price,\n                        discount: item.discount,\n                        account_id: item.account_id.id,\n                        tax_rate: item.tax_rate,\n                        tax_amount: item.tax_amount,\n                        sub_total: item.sub_total,\n                        total_amount: item.total_amount\n                    }\n\n                });\n                setOldItems(allItems)\n            }\n\n        }\n\n    }, [invoice_details])\n\n\n    // console.log(\"newItems\", newItems)\n    // console.log(\"oldItems\", oldItems)\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setRloading(true);\n        let formatDate = format(new Date(date), 'yyyy-MM-dd');\n        let formatDueDate = format(new Date(due_date), 'yyyy-MM-dd');\n        api.create(`/api/invoice/`, { 'invoice_no': invoiceNo, 'contact_id': contactId, 'date': formatDate, 'due_date': formatDueDate, 'reference': reference, 'currency': currency, 'tax_type': tax_type, 'sub_total': sub_total, 'discount': discount, 'total_tax': total_tax, 'status': status, 'total_amount': total_amount, 'items': newItems })\n            .then(res => {\n\n                if (res.data.success) {\n                    setSuccess('Data Saved Successfully');\n                    setRloading(false);\n                    setTimeout(() => {\n                        history.goBack()\n                    }, 1000);\n                } else {\n                    setError(res.data.error)\n                    setRloading(false);\n\n                }\n\n            })\n            .catch(err => {\n                setError(err)\n            })\n    }\n\n    const onUpdate = (e) => {\n        e.preventDefault();\n        setRloading(true);\n        let formatDate = format(new Date(date), 'yyyy-MM-dd');\n        let formatDueDate = format(new Date(due_date), 'yyyy-MM-dd');\n        api.updatePatch(`/api/invoice/${invoiceId}/`, { 'invoice_no': invoiceNo, 'contact_id': contactId, 'date': formatDate, 'due_date': formatDueDate, 'reference': reference, 'currency': currency, 'tax_type': tax_type, 'sub_total': sub_total, 'discount': discount, 'total_tax': total_tax, 'status': status, 'total_amount': total_amount, 'items': oldItems, 'new_items': newItems, 'deleted_items': deletedItems })\n            .then(res => {\n\n                if (res.data.success) {\n                    setSuccess('Data Updated Successfully');\n                    setRloading(false);\n                    setTimeout(() => {\n                        history.goBack()\n                    }, 1000);\n                } else {\n                    setError(res.data.error)\n                    setRloading(false);\n                }\n\n            })\n            .catch(err => {\n                setError(err)\n            })\n    }\n\n    return (\n        <>\n\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Invoice', path: '/app/invoice', active: false },\n                    { label: 'Invoice Form', path: '/app/invoice_form', active: true },\n                ]}\n                title={'Invoice Form'}\n            />\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            {error && (\n                                <Alert variant=\"danger\" className=\"my-2\" onClose={() => setError(null)} dismissible>\n                                    {error}\n                                </Alert>\n                            )}\n                            {success && (\n                                <Alert variant=\"success\" className=\"my-2\" onClose={() => setSuccess(null)} dismissible>\n                                    {success}\n                                </Alert>\n                            )}\n                            <Form onSubmit={(e) => { oldItems.length > 0 ? onUpdate(e) : onSubmit(e) }}>\n                                <div className='mb-4'>\n                                    <Row className='mb-3'>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Contact</Form.Label>\n\n                                            <Form.Select\n                                                aria-label=\"Default select example\"\n                                                disabled={invoiceId ? true : false}\n                                                required\n                                                onChange={(e) => onContactChange(e)}\n                                                value={contactId}\n                                            >\n                                                {cloading ? <option value=\"\" disabled>Loading...</option> :\n                                                    <>\n\n                                                        <option value=\"\" disabled>Select Contact ...</option>\n                                                        {contacts.length > 0 && contacts?.map((item) => {\n                                                            return (\n                                                                <option key={'scontact' + item.id} value={item.id} >{item.name}</option>\n                                                            )\n                                                        })}\n\n                                                    </>\n                                                }\n                                            </Form.Select>\n\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Invoice No</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='invoice_no'\n                                                onChange={(e) => setInvoiceNo(e.target.value)}\n                                                defaultValue={invoiceId && invoice_details?.invoice_no}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Date</Form.Label>\n                                            <Form.Control\n                                                type='date'\n                                                required\n                                                name='date'\n                                                onChange={(e) => setDate(e.target.value)}\n                                                defaultValue={invoiceId && invoice_details?.date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Due Date</Form.Label>\n                                            <Form.Control\n                                                type='date'\n                                                required\n                                                name='due_date'\n                                                onChange={(e) => setDueDate(e.target.value)}\n                                                defaultValue={invoiceId && invoice_details?.due_date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Reference</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                \n                                                name='reference'\n                                                onChange={(e) => setReference(e.target.value)}\n                                                defaultValue={invoiceId && invoice_details?.reference}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Tax Type</Form.Label>\n\n                                            <Form.Select\n                                                aria-label=\"Default select example\"\n                                                required\n                                                onChange={(e) => setTaxType(e.target.value)}\n                                                value={tax_type}\n                                            >\n                                                <option value=\"inclusive\">Inclusive</option>\n                                                <option value=\"exclusive\">Exclusive</option>\n                                                <option value=\"no_tax\">No Tax</option>\n                                            </Form.Select>\n\n                                        </Form.Group>\n                                    </Row>\n\n\n\n                                </div>\n                                <Form.Label>Items:</Form.Label>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th className='required'>Item</th>\n                                            <th >Description</th>\n                                            <th className='required'>Quantity</th>\n                                            <th className='required'>Unit Price</th>\n                                            <th >Discount %</th>\n                                            <th className='required'>Account</th>\n                                            <th >Tax Rate %</th>\n\n                                            <th >Total</th>\n\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {oldItems && oldItems.length > 0 && oldItems.map((item, index) => {\n                                            return (\n                                                <tr key={'tr' + index}>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='item'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.item}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                as='textarea'\n                                                                rows='1'\n                                                                name='description'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.description}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='qty'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.qty}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='unit_price'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.unit_price}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                            \n                                                                name='discount'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.discount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group as={Col}>\n\n\n                                                            <Form.Select\n                                                                aria-label=\"Default select example\"\n                                                                required\n                                                                name='account_id'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.account_id}\n                                                            >\n                                                                {chloading ? <option value=\"\" disabled>Loading...</option> :\n                                                                    <>\n\n                                                                        <option value=\"\" disabled>Select Chart Account ...</option>\n                                                                        {accounts.length > 0 && accounts?.map((item) => {\n                                                                            return (\n                                                                                <option key={'aco' + item.id} value={item.id} >{item.account_name}</option>\n                                                                            )\n                                                                        })}\n\n                                                                    </>\n                                                                }\n                                                            </Form.Select>\n\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                \n                                                                name='tax_rate'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.tax_rate}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                readOnly={true}\n                                                                value={item?.total_amount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{ backgroundColor: '#1299dd', color: '#fff', height: '30px' }} onClick={() => {\n                                                            oldItems.splice(index, 1);\n                                                            setOldItems([...oldItems]);\n                                                            deletedItems.push(item.id)\n                                                        }}>\n                                                            <i className=\"mdi mdi-close\"></i>\n                                                        </Link>\n                                                    </td>\n                                                </tr>)\n                                        })}\n                                        {newItems.length > 0 && newItems.map((item, index) => {\n                                            return (\n                                                <tr key={'tr' + index}>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='item'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.item}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                as='textarea'\n                                                                rows='1'\n                                                                \n                                                                name='description'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.description}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='qty'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.qty}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='unit_price'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.unit_price}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                \n                                                                name='discount'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.discount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group as={Col}>\n\n\n                                                            <Form.Select\n                                                                aria-label=\"Default select example\"\n                                                                required\n                                                                name='account_id'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.account_id}\n                                                            >\n                                                                {chloading ? <option value=\"\" disabled>Loading...</option> :\n                                                                    <>\n\n                                                                        <option value=\"\">Select Chart Account ...</option>\n                                                                        {accounts.length > 0 && accounts?.map((item) => {\n                                                                            return (\n                                                                                <option key={'acn' + item.id} value={item.id} >{item.account_name}</option>\n                                                                            )\n                                                                        })}\n\n                                                                    </>\n                                                                }\n                                                            </Form.Select>\n\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                \n                                                                name='tax_rate'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.tax_rate}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                readOnly={true}\n                                                                value={item?.total_amount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{ backgroundColor: '#1299dd', color: '#fff', height: '30px' }} onClick={() => {\n                                                            newItems.splice(index, 1);\n                                                            setNewItems([...newItems])\n\n                                                        }}>\n                                                            <i className=\"mdi mdi-close\"></i>\n                                                        </Link>\n                                                    </td>\n                                                </tr>)\n                                        })}\n\n\n                                    </tbody>\n                                </Table>\n                                {/* <Card key={'tr2'+index}>\n                                        <Card.Header>\n                                            <div className='d-flex justify-content-between'>\n                                                <p>item: {++itemCount}</p>\n                                                <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{backgroundColor: '#1299dd',color: '#fff',height:'30px',width:'30px'}} onClick={()=>{newItems.splice(index,1)}}>\n                                                    <i className=\"mdi mdi-close\"></i>\n                                                </Link>\n                                            </div>\n                                        </Card.Header>\n                                        <Card.Body>\n                                        <Row className='mb-3'>\n                                        \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Item:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='item'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.item}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                                                                \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Quantity:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='qty'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.qty}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Unit Price:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='unit_price'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.unit_price}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Discount:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='discount'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.discount}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        </Row>\n                                        <Row className='mb-3'>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Chart Account:</Form.Label>                                                    \n                                            <Form.Select\n                                                aria-label=\"Default select example\"\n                                                required \n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                                                    \n                                            >\n                                                {chloading ? <option value=\"\" disabled>Loading...</option>: \n                                                <>\n                                                \n                                                    <option value=\"\" disabled>Select Chart Account ...</option>  \n                                                    {accounts.length > 0 && accounts?.map((item)=>{\n                                                        return(\n                                                            <option key={'aco'+item.id} value={item.id} >{item.account_name}</option>\n                                                        )\n                                                    })} \n                                                \n                                                </>\n                                                }\n                                            </Form.Select>                                        \n                                            \n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Tax Rate:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='tax_rate'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.tax_rate}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Tax Amount:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='tax_amount'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.tax_amount}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Sub Total:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='sub_total'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.sub_total}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        </Row>\n                                        <Row>\n                                        \n\n                                        <Form.Group as={Col} xs={6}>\n                                            <Form.Label >Description:</Form.Label>\n                                            <Form.Control\n                                                as='textarea'\n                                                rows={3}\n                                                required\n                                                name='description'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.description}\n                                            >\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                        <Form.Label >Total Amount:</Form.Label>\n                                        <Form.Control\n                                            type='text'\n                                            required\n                                            name='total_amount'\n                                            onChange={(e)=>onNewItemsChange(e,index)}\n                                            defaultValue={item?.total_amount}\n                                        >\n\n                                        </Form.Control>\n                                    </Form.Group>\n                                        <Form.Group as={Col}>\n\n                                        </Form.Group>\n                                        </Row>\n                                        </Card.Body>\n                                        \n                                        \n                                    </Card>                                    */}\n                                <div className=\"d-flex justify-content-between\">\n\n                                    <Link to=\"#\" className=\"btn-primary waves-effect waves-light\" onClick={() => setNewItems([...newItems, items])} style={{ maxHeight: '25px', padding: '3px' }}>\n                                        Add a new line\n                                    </Link>\n                                    <div >\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Subtotal</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{sub_total}</p>\n                                        </div>\n                                        {/* {newItems?.map((item)=>{\n                                                if(item.tax_rate > 0)\n                                                return(\n\n                                                <div className=\"d-flex justify-content-between\">\n                                                    <p style={{fontSize: '20px'}}>Total Tax {item.tax_rate}%</p>\n                                                    <p style={{fontSize: '20px',paddingLeft: '50px'}}>{item.tax_amount}</p>\n                                                </div>\n                                                )\n                                            })} */}\n                                        {/* {oldItems?.map((item)=>{\n                                                if(item.tax_rate > 0)\n                                                return (\n                                                <div className=\"d-flex justify-content-between\" >\n                                                    <p style={{fontSize: '20px'}}>Total Tax {item.tax_rate}%</p>\n                                                    <p style={{fontSize: '20px',paddingLeft: '50px'}}>{item.tax_amount}</p>\n                                                </div>\n                                                )\n                                            })} */}\n                                        {Object.entries(taxGroup).map(item => {\n                                            if (item[0] > 0) {\n                                                return (\n                                                    <div className=\"d-flex justify-content-between\" >\n                                                        <p style={{ fontSize: '20px' }}>Total Tax {item[0]}%</p>\n                                                        <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{item[1]}</p>\n\n                                                    </div>)\n                                            }\n                                        })}\n                                        <hr></hr>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Total</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{total_amount}</p>\n                                        </div>\n                                        <hr></hr><hr></hr>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex justify-content-between\">\n\n                                    <Button variant=\"info\" type=\"submit\" className=\"waves-effect waves-light me-1\" >\n                                        Save\n                                    </Button>\n                                    <div>\n                                        <Button variant=\"success\" type=\"submit\" className=\"waves-effect waves-light me-1\" disabled={rloading} onClick={() => setStatus('approve')}>\n                                            {rloading ? 'Loaidng...' : 'Approve'}\n                                        </Button>\n                                        <Link\n                                            to='/app/service'\n                                            className=\" btn btn-secondary waves-effect waves-light\"\n                                        >\n                                            Cancel\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                            </Form>\n\n\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default InvoiceForm;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { useLocation } from 'react-router-dom';\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { getInvoiceDetails } from '../../redux/actions';\nimport { isNumber } from '@amcharts/amcharts4/core';\n\n\nconst api = new APICore()\n\n\n\n\nconst InvoiceDetails = () => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const [invoiceId, setInvoiceId] = useState({});\n    const invoiceDetails = useSelector(state => state.Invoice.invoice_details);\n    const loading = useSelector(state => state.Invoice.loading);\n\n    useEffect(() => {\n        const state = location.state\n        \n        setInvoiceId(parseInt(state));\n        \n        \n    }, [])\n\n    \n\n    useEffect(() => {\n        if(isNumber(invoiceId)){\n            dispatch(getInvoiceDetails(invoiceId))\n        }\n        \n    }, [invoiceId])\n    \n    return (\n        <>\n\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Invoice', path: '/app/invoice', active: false },\n                    { label: 'Invoice Details', path: '/app/invoice_details', active: true },\n                ]}\n                title={'Invoice Details'}\n            />\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            {loading ? <p>Loading...</p> :\n                            <Form>\n                                <div className='mb-4'>\n                                    <Row className='mb-3'>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Contact</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={invoiceDetails?.contact_id?.name}\n                                            >\n\n                                            </Form.Control>\n\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Invoice No</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={invoiceDetails?.invoice_no}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Date</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={invoiceDetails?.date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Due Date</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={invoiceDetails?.due_date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Reference</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={invoiceDetails?.reference}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Tax Type</Form.Label>\n\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={invoiceDetails?.tax_type}\n                                            >\n                                            </Form.Control>\n\n\n                                        </Form.Group>\n                                    </Row>\n\n\n\n                                </div>\n                                <Form.Label>Items:</Form.Label>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Item</th>\n                                            <th>Description</th>\n                                            <th>Quantity</th>\n                                            <th>Unit Price</th>\n                                            <th>Discount %</th>\n                                            <th>Account</th>\n                                            <th>Tax Rate %</th>\n\n                                            <th>Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        \n                                            { invoiceDetails?.items?.length > 0 && invoiceDetails.items.map((item, index)=>{\n                                                return (\n                                                    <tr key={'tr'+ index}>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.item}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.description}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.qty}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.unit_price}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.discount}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group as={Col}>\n\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.account_id.account_name}\n                                                                >\n\n                                                                </Form.Control>\n\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.tax_rate}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.total_amount}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                    </tr>\n\n                                                )\n                                            })}\n                                        \n\n                                    </tbody>\n                                </Table>\n                                <div className=\"d-flex justify-content-between\">\n                                    <div></div>\n                                    <div >\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Subtotal (discount {invoiceDetails?.discount} )</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{invoiceDetails?.sub_total}</p>\n                                        </div>\n\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Total Tax</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{invoiceDetails?.total_tax}</p>\n                                        </div>\n\n                                        <hr></hr>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Total</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{invoiceDetails?.total_amount}</p>\n                                        </div>\n                                        <hr></hr><hr></hr>\n                                    </div>\n                                </div>\n\n                            </Form>\n                          }\n\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\nexport default InvoiceDetails;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { useLocation } from 'react-router-dom';\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { getRepeatingInvoiceDetails } from '../../redux/actions';\n\n\nconst api = new APICore()\n\n\n\n\nconst RepeatingInvoiceDetails = () => {\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const [invoiceId, setInvoiceId] = useState({});\n    const repeating_invoice_details = useSelector((state) => state.RepeatingInvoice.repeating_invoice_details);\n    const loading = useSelector(state => state.Invoice.loading);\n\n    useEffect(() => {\n        const state = location.state\n        setInvoiceId(state);\n    }, [])\n\n    useEffect(() => {\n        dispatch(getRepeatingInvoiceDetails(invoiceId))\n    }, [invoiceId])\n\n    return (\n        <>\n\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Invoice', path: '/app/invoice', active: false },\n                    { label: 'Invoice Details', path: '/app/invoice_details', active: true },\n                ]}\n                title={'Repeating Invoice Details'}\n            />\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n\n                            <Form>\n                                <div className='mb-4'>\n                                    <Row className='mb-3'>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Contact</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={repeating_invoice_details?.contact_id?.name}\n                                            >\n\n                                            </Form.Control>\n\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Invoice No</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={repeating_invoice_details?.invoice_no}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Date</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={repeating_invoice_details?.date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Due Date</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={repeating_invoice_details?.due_date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Repeat Date</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={repeating_invoice_details?.repeat_date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Reference</Form.Label>\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={repeating_invoice_details?.reference}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Tax Type</Form.Label>\n\n                                            <Form.Control\n                                                readOnly={true}\n                                                defaultValue={repeating_invoice_details?.tax_type}\n                                            >\n                                            </Form.Control>\n\n\n                                        </Form.Group>\n                                    </Row>\n\n\n\n                                </div>\n                                <Form.Label>Items:</Form.Label>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Item</th>\n                                            <th>Description</th>\n                                            <th>Quantity</th>\n                                            <th>Unit Price</th>\n                                            <th>Discount %</th>\n                                            <th>Account</th>\n                                            <th>Tax Rate %</th>\n\n                                            <th>Total</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {repeating_invoice_details && repeating_invoice_details.items ?  <>\n                                            {repeating_invoice_details.items.map((item, index)=>{\n                                                return (<>\n                                                    <tr key={'tr'+ index}>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    defaultValue={item.item}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    defaultValue={item.description}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    defaultValue={item.qty}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    defaultValue={item.unit_price}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    defaultValue={item.discount}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group as={Col}>\n\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    defaultValue={item.account_id.account_name}\n                                                                >\n\n                                                                </Form.Control>\n\n                                                            </Form.Group>\n                                                        </td>\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    defaultValue={item.tax_rate}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n\n                                                        <td>\n                                                            <Form.Group>\n                                                                <Form.Control\n                                                                    readOnly={true}\n                                                                    value={item.total_amount}\n                                                                >\n\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </td>\n                                                    </tr>\n\n                                                </>)\n                                            })}\n                                        </>: null}\n\n                                    </tbody>\n                                </Table>\n                                <div className=\"d-flex justify-content-between\">\n                                    <div></div>\n                                    <div >\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Subtotal (discount {repeating_invoice_details?.discount} )</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{repeating_invoice_details?.sub_total}</p>\n                                        </div>\n\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Total Tax</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{repeating_invoice_details?.total_tax}</p>\n                                        </div>\n\n                                        <hr></hr>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Total</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{repeating_invoice_details?.total_amount}</p>\n                                        </div>\n                                        <hr></hr><hr></hr>\n                                    </div>\n                                </div>\n\n                            </Form>\n\n\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\nexport default RepeatingInvoiceDetails;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { useLocation } from 'react-router-dom';\nimport { format } from 'date-fns'\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { getAllContact, getChartAccount, getContactService, getRepeatingInvoiceDetails } from '../../redux/actions';\n\n\nconst api = new APICore()\n\n\n\n\nconst RepeatingInvoiceForm = () => {\n    const location = useLocation();\n\n    const dispatch = useDispatch();\n    const contacts = useSelector((state) => state.Contact.all_contact);\n    const accounts = useSelector((state) => state.ChartAccount.accounts);\n    const cloading = useSelector((state) => state.Contact.loading);\n    const chloading = useSelector((state) => state.ChartAccount.loading);\n    const [rloading, setRloading] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(null);\n\n\n    const [oldItems, setOldItems] = useState([]);\n    const repeating_invoice_details = useSelector((state) => state.RepeatingInvoice.repeating_invoice_details);\n    const contact_services = useSelector((state) => state.Service.contact_services);\n    const [contactId, setContactId] = useState('');\n    const [invoiceNo, setInvoiceNo] = useState('');\n    const [invoiceId, setInvoiceId] = useState(null);\n    const [date, setDate] = useState('');\n    const [due_date, setDueDate] = useState('');\n    const [repeat_date, setRepeatDate] = useState('');\n    const [reference, setReference] = useState('');\n    const [currency, setCurrency] = useState('1');\n    const [tax_type, setTaxType] = useState('inclusive');\n    const [sub_total, setSubTotal] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [total_tax, setTotalTax] = useState('');\n    const [status, setStatus] = useState('draft');\n    const [total_amount, setTotalAmount] = useState('');\n    const [deletedItems, setDeletedItems] = useState([]);\n    const [taxGroup, setTaxGroup] = useState({});\n\n    const [items, setItems] = useState({\n        item: '',\n        description: '',\n        qty: 1,\n        unit_price: 0,\n        discount: 0,\n        account_id: null,\n        tax_rate: 0,\n        tax_amount: 0,\n        sub_total: 0,\n        total_amount: 0\n    });\n    const [newItems, setNewItems] = useState([]);\n\n    const onContactChange = (e) => {\n        setNewItems([])\n        setContactId(e.target.value);\n        dispatch(getContactService(e.target.value));\n    }\n    useEffect(() => {\n        let tempData = [];\n        if (contact_services.length > 0) {\n\n            contact_services?.forEach((item) => {\n                tempData.push(\n                    {\n                        item: item.service_type,\n                        description: '0',\n                        qty: 1,\n                        unit_price: item.unit_price,\n                        discount: '0',\n                        account_id: '',\n                        tax_rate: item.tax_rate,\n                        tax_amount: (tax_type === 'inclusive' ?\n                            ((((1 * item.unit_price) * (item.tax_rate && parseInt(item.tax_rate))) / (100 + (item.tax_rate && parseInt(item.tax_rate)))).toFixed(2))\n                            : tax_type === 'exclusive' ?\n                                (((1 * item.unit_price) / 100) * (item.tax_rate && parseInt(item.tax_rate)))\n                                : 0\n                        ),\n                        sub_total: 1 * item.unit_price,\n                        total_amount: 1 * item.unit_price\n                    })\n\n\n            })\n            setNewItems(tempData);\n\n        } else {\n            setNewItems([items])\n        }\n\n\n    }, [contact_services])\n\n    const onNewItemsChange = (e, index) => {\n        let name = e.target.name;\n        let items = [...newItems];\n        let item = { ...items[index] };\n        item[name] = e.target.value;\n        if (name === 'qty' || name === 'unit_price' || name === 'discount' || name === 'tax_rate') {\n\n            item['sub_total'] = parseFloat(item['qty'] !== '' ? item['qty'] : 0) * parseFloat(item['unit_price'] !== '' ? item['unit_price'] : 0)\n            item['sub_total'] -= ((parseFloat(item['sub_total']) * parseFloat(item['discount'] !== '' ? item['discount'] : 0)) / 100)\n\n            if (tax_type === 'inclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)) / (100 + parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)))\n            } else if (tax_type === 'exclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) / 100) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0))\n            } else {\n                item['tax_amount'] = 0\n            }\n\n            item['total_amount'] = parseFloat((item['sub_total']))\n        }\n        items[index] = item;\n        setNewItems(items);\n    }\n\n    const onOldItemsChange = (e, index) => {\n        let name = e.target.name;\n        let items = [...oldItems];\n        let item = { ...items[index] };\n        item[name] = e.target.value;\n        if (name === 'qty' || name === 'unit_price' || name === 'discount' || name === 'tax_rate') {\n\n            item['sub_total'] = parseFloat(item['qty'] !== '' ? item['qty'] : 0) * parseFloat(item['unit_price'] !== '' ? item['unit_price'] : 0)\n            item['sub_total'] -= ((parseFloat(item['sub_total']) * parseFloat(item['discount'] !== '' ? item['discount'] : 0)) / 100)\n\n            if (tax_type === 'inclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)) / (100 + parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0)))\n            } else if (tax_type === 'exclusive') {\n                item['tax_amount'] = parseFloat((parseFloat(item['sub_total']) / 100) * parseFloat(item['tax_rate'] !== '' ? item['tax_rate'] : 0))\n            } else {\n                item['tax_amount'] = 0\n            }\n\n            item['total_amount'] = parseFloat((item['sub_total']))\n        }\n        items[index] = item;\n        setOldItems(items);\n    }\n\n    useEffect(() => {\n        const groupOfTax = {}\n        let total_discount = 0\n        let total_subTotal = 0.00\n        let total_taxAmount = 0\n        newItems.forEach((item) => {\n            total_discount += parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.discount));\n            total_subTotal += parseFloat(item.total_amount);\n\n            var item_tax_amount = 0;\n            if (tax_type === 'inclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)) / (100 + parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)))\n            } else if (tax_type === 'exclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0))\n            } else {\n                item_tax_amount = 0\n            }\n            total_taxAmount += parseFloat(item_tax_amount);\n\n            if ((item.tax_rate).toString() in groupOfTax) {\n                groupOfTax[(item.tax_rate).toString()] += parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n            else {\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n\n        })\n\n\n        oldItems.forEach((item) => {\n            total_discount += parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.discount));\n            total_subTotal += parseFloat(item.total_amount);\n\n            var item_tax_amount = 0;\n            if (tax_type === 'inclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)) / (100 + parseFloat(item.tax_rate !== '' ? item.tax_rate : 0)))\n            } else if (tax_type === 'exclusive') {\n                item_tax_amount = parseFloat((parseFloat(item.sub_total) / 100) * parseFloat(item.tax_rate !== '' ? item.tax_rate : 0))\n            } else {\n                item_tax_amount = 0\n            }\n            total_taxAmount += parseFloat(item_tax_amount);\n            \n            if ((item.tax_rate).toString() in groupOfTax) {\n                groupOfTax[(item.tax_rate).toString()] += parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n            else {\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(item_tax_amount).toFixed(2));\n                groupOfTax[(item.tax_rate).toString()] = parseFloat(parseFloat(groupOfTax[(item.tax_rate).toString()]).toFixed(2))\n            }\n\n\n        })\n        setDiscount(parseFloat(parseFloat(total_discount).toFixed(2)));\n        setSubTotal(parseFloat(parseFloat(total_subTotal).toFixed(2)));\n        setTotalTax(parseFloat(parseFloat(total_taxAmount).toFixed(2)));\n        let totalAmount = parseFloat(parseFloat(parseFloat(total_subTotal) + (tax_type === 'exclusive' && parseFloat(total_taxAmount))).toFixed(2));\n        setTotalAmount(totalAmount)\n        setTaxGroup(groupOfTax)\n    }, [newItems, oldItems, tax_type])\n\n    useEffect(() => {\n        const state = location.state\n        dispatch(getAllContact());\n        dispatch(getChartAccount());\n        if (state) {\n            dispatch(getRepeatingInvoiceDetails(state));\n            setInvoiceId(state);\n            setNewItems([]);\n\n        } else {\n            setNewItems([items]);\n            setOldItems([]);\n            setInvoiceId(null);\n        }\n\n    }, [])\n\n    useEffect(() => {\n        if (invoiceId) {\n            setNewItems([]);\n            setInvoiceNo(repeating_invoice_details?.invoice_no);\n            setContactId(repeating_invoice_details?.contact_id?.id);\n            setTaxType(repeating_invoice_details?.tax_type);\n            setDate(repeating_invoice_details?.date);\n            setDueDate(repeating_invoice_details?.due_date);\n            setRepeatDate(repeating_invoice_details?.repeat_date);\n            setReference(repeating_invoice_details?.reference);\n            setStatus(repeating_invoice_details?.status);\n            if (repeating_invoice_details?.items?.length > 0) {\n                const allItems = repeating_invoice_details.items.map((item) => {\n                    return {\n                        id: item.id,\n                        item: item.item,\n                        description: item.description,\n                        qty: item.qty,\n                        unit_price: item.unit_price,\n                        discount: item.discount,\n                        account_id: item.account_id.id,\n                        tax_rate: item.tax_rate,\n                        tax_amount: item.tax_amount,\n                        sub_total: item.sub_total,\n                        total_amount: item.total_amount\n                    }\n\n                });\n                setOldItems(allItems)\n            }\n\n        }\n\n    }, [repeating_invoice_details])\n\n\n    // console.log(\"newItems\", newItems)\n    // console.log(\"oldItems\", oldItems)\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setRloading(true);\n        api.create(`/api/repeating-invoice/`, { 'invoice_no': invoiceNo, 'contact_id': contactId, 'date': date, 'due_date': due_date, 'repeat_date': repeat_date, 'reference': reference, 'currency': currency, 'tax_type': tax_type, 'sub_total': sub_total, 'discount': discount, 'total_tax': total_tax, 'status': status, 'total_amount': total_amount, 'items': newItems })\n            .then(res => {\n\n                if (res.data.success) {\n                    setSuccess('Data Saved Successfully');\n                    setRloading(false);\n                } else {\n                    setError(res.data.error)\n\n                }\n\n            })\n            .catch(err => {\n                setError(err)\n                setRloading(false);\n            })\n    }\n\n    const onUpdate = (e) => {\n        e.preventDefault();\n        setRloading(true);\n        api.updatePatch(`/api/repeating-invoice/${invoiceId}/`, { 'invoice_no': invoiceNo, 'contact_id': contactId, 'date': date, 'due_date': due_date, 'repeat_date': repeat_date, 'reference': reference, 'currency': currency, 'tax_type': tax_type, 'sub_total': sub_total, 'discount': discount, 'total_tax': total_tax, 'status': status, 'total_amount': total_amount, 'items': oldItems, 'new_items': newItems, 'deleted_items': deletedItems })\n            .then(res => {\n\n                if (res.data.success) {\n                    setSuccess('Data Updated Successfully');\n                    setRloading(false);\n                } else {\n                    setError(res.data.error)\n\n                }\n\n            })\n            .catch(err => {\n                setError(err)\n            })\n    }\n\n    return (\n        <>\n\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Repeating Invoice', path: '/app/repeating_invoice', active: false },\n                    { label: 'Repeating Invoice Form', path: '/app/repeating_invoice_form', active: true },\n                ]}\n                title={'Repeating Invoice Form'}\n            />\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            {!rloading && error && (\n                                <Alert variant=\"danger\" className=\"my-2\" onClose={() => setError(null)} dismissible>\n                                    {error}\n                                </Alert>\n                            )}\n                            {!rloading && success && (\n                                <Alert variant=\"success\" className=\"my-2\" onClose={() => setSuccess(null)} dismissible>\n                                    {success}\n                                </Alert>\n                            )}\n                            <Form onSubmit={(e) => { oldItems.length > 0 ? onUpdate(e) : onSubmit(e) }}>\n                                <div className='mb-4'>\n                                    <Row className='mb-3'>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Contact</Form.Label>\n\n                                            <Form.Select\n                                                aria-label=\"Default select example\"\n                                                disabled={invoiceId ? true : false}\n                                                required\n                                                onChange={(e) => onContactChange(e)}\n                                                value={contactId}\n                                            >\n                                                {cloading ? <option value=\"\" disabled>Loading...</option> :\n                                                    <>\n\n                                                        <option value=\"\" disabled>Select Contact ...</option>\n                                                        {contacts.length > 0 && contacts?.map((item) => {\n                                                            return (\n                                                                <option key={'scontact' + item.id} value={item.id} >{item.name}</option>\n                                                            )\n                                                        })}\n\n                                                    </>\n                                                }\n                                            </Form.Select>\n\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Invoice No</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='invoice_no'\n                                                onChange={(e) => setInvoiceNo(e.target.value)}\n                                                defaultValue={invoiceId && repeating_invoice_details?.invoice_no}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Day</Form.Label>\n                                            <Form.Control\n                                                type='number'\n                                                required\n                                                name='date'\n                                                max='31'\n                                                min='1'\n                                                onChange={(e) => setDate(e.target.value)}\n                                                defaultValue={invoiceId && repeating_invoice_details?.date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Due Day</Form.Label>\n                                            <Form.Control\n                                                type='number'\n                                                required\n                                                max='31'\n                                                min='1'\n                                                name='due_date'\n                                                onChange={(e) => setDueDate(e.target.value)}\n                                                defaultValue={invoiceId && repeating_invoice_details?.due_date}\n                                            >\n\n\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Repeat Day</Form.Label>\n                                            <Form.Control\n                                                type='number'\n                                                required\n                                                max='31'\n                                                min='1'\n                                                name='repeat_date'\n                                                onChange={(e) => setRepeatDate(e.target.value)}\n                                                defaultValue={invoiceId && repeating_invoice_details?.repeat_date}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Reference</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                \n                                                name='reference'\n                                                onChange={(e) => setReference(e.target.value)}\n                                                defaultValue={invoiceId && repeating_invoice_details?.reference}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                            <Form.Label className='required'>Tax Type</Form.Label>\n\n                                            <Form.Select\n                                                aria-label=\"Default select example\"\n                                                required\n                                                onChange={(e) => setTaxType(e.target.value)}\n                                                value={tax_type}\n                                            >\n                                                <option value=\"inclusive\">Inclusive</option>\n                                                <option value=\"exclusive\">Exclusive</option>\n                                                <option value=\"no_tax\">No Tax</option>\n                                            </Form.Select>\n\n                                        </Form.Group>\n                                    </Row>\n\n\n\n                                </div>\n                                <Form.Label>Items:</Form.Label>\n                                <Table striped bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th className='required'>Item</th>\n                                            <th>Description</th>\n                                            <th className='required'>Quantity</th>\n                                            <th className='required'>Unit Price</th>\n                                            <th>Discount %</th>\n                                            <th className='required'>Account</th>\n                                            <th>Tax Rate %</th>\n\n                                            <th>Total</th>\n\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {oldItems && oldItems.length > 0 && oldItems.map((item, index) => {\n                                            return (\n                                                <tr key={'tr' + index}>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='item'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.item}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                as='textarea'\n                                                                rows='1'\n                                                                \n                                                                name='description'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.description}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='qty'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.qty}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='unit_price'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.unit_price}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                \n                                                                name='discount'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.discount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group as={Col}>\n\n\n                                                            <Form.Select\n                                                                aria-label=\"Default select example\"\n                                                                required\n                                                                name='account_id'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.account_id}\n                                                            >\n                                                                {chloading ? <option value=\"\" disabled>Loading...</option> :\n                                                                    <>\n\n                                                                        <option value=\"\" disabled>Select Chart Account ...</option>\n                                                                        {accounts.length > 0 && accounts?.map((item) => {\n                                                                            return (\n                                                                                <option key={'aco' + item.id} value={item.id} >{item.account_name}</option>\n                                                                            )\n                                                                        })}\n\n                                                                    </>\n                                                                }\n                                                            </Form.Select>\n\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                \n                                                                name='tax_rate'\n                                                                onChange={(e) => onOldItemsChange(e, index)}\n                                                                value={item?.tax_rate}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                readOnly={true}\n                                                                value={item?.total_amount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{ backgroundColor: '#1299dd', color: '#fff', height: '30px' }} onClick={() => {\n                                                            oldItems.splice(index, 1);\n                                                            setOldItems([...oldItems]);\n                                                            deletedItems.push(item.id)\n                                                        }}>\n                                                            <i className=\"mdi mdi-close\"></i>\n                                                        </Link>\n                                                    </td>\n                                                </tr>)\n                                        })}\n                                        {newItems.length > 0 && newItems.map((item, index) => {\n                                            return (\n                                                <tr key={'tr' + index}>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='text'\n                                                                required\n                                                                name='item'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.item}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                as='textarea'\n                                                                rows='1'\n                                                                \n                                                                name='description'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.description}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='qty'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.qty}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                required\n                                                                name='unit_price'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.unit_price}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                \n                                                                name='discount'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.discount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group as={Col}>\n\n\n                                                            <Form.Select\n                                                                aria-label=\"Default select example\"\n                                                                required\n                                                                name='account_id'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.account_id}\n                                                            >\n                                                                {chloading ? <option value=\"\" disabled>Loading...</option> :\n                                                                    <>\n\n                                                                        <option value=\"\">Select Chart Account ...</option>\n                                                                        {accounts.length > 0 && accounts?.map((item) => {\n                                                                            return (\n                                                                                <option key={'acn' + item.id} value={item.id} >{item.account_name}</option>\n                                                                            )\n                                                                        })}\n\n                                                                    </>\n                                                                }\n                                                            </Form.Select>\n\n                                                        </Form.Group>\n                                                    </td>\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                type='number'\n                                                                \n                                                                name='tax_rate'\n                                                                onChange={(e) => onNewItemsChange(e, index)}\n                                                                value={item?.tax_rate}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Form.Group>\n                                                            <Form.Control\n                                                                readOnly={true}\n                                                                value={item?.total_amount}\n                                                            >\n\n                                                            </Form.Control>\n                                                        </Form.Group>\n                                                    </td>\n\n                                                    <td>\n                                                        <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{ backgroundColor: '#1299dd', color: '#fff', height: '30px' }} onClick={() => {\n                                                            newItems.splice(index, 1);\n                                                            setNewItems([...newItems])\n\n                                                        }}>\n                                                            <i className=\"mdi mdi-close\"></i>\n                                                        </Link>\n                                                    </td>\n                                                </tr>)\n                                        })}\n\n\n                                    </tbody>\n                                </Table>\n                                {/* <Card key={'tr2'+index}>\n                                        <Card.Header>\n                                            <div className='d-flex justify-content-between'>\n                                                <p>item: {++itemCount}</p>\n                                                <Link to=\"#\" className=\"d-flex justify-content-center align-items-center \" style={{backgroundColor: '#1299dd',color: '#fff',height:'30px',width:'30px'}} onClick={()=>{newItems.splice(index,1)}}>\n                                                    <i className=\"mdi mdi-close\"></i>\n                                                </Link>\n                                            </div>\n                                        </Card.Header>\n                                        <Card.Body>\n                                        <Row className='mb-3'>\n                                        \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Item:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='item'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.item}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                                                                \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Quantity:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='qty'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.qty}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Unit Price:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='unit_price'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.unit_price}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Discount:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='discount'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.discount}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        </Row>\n                                        <Row className='mb-3'>\n                                        <Form.Group as={Col}>\n                                            <Form.Label >Chart Account:</Form.Label>                                                    \n                                            <Form.Select\n                                                aria-label=\"Default select example\"\n                                                required \n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                                                    \n                                            >\n                                                {chloading ? <option value=\"\" disabled>Loading...</option>: \n                                                <>\n                                                \n                                                    <option value=\"\" disabled>Select Chart Account ...</option>  \n                                                    {accounts.length > 0 && accounts?.map((item)=>{\n                                                        return(\n                                                            <option key={'aco'+item.id} value={item.id} >{item.account_name}</option>\n                                                        )\n                                                    })} \n                                                \n                                                </>\n                                                }\n                                            </Form.Select>                                        \n                                            \n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Tax Rate:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='tax_rate'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.tax_rate}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Tax Amount:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='tax_amount'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.tax_amount}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                    \n                                        <Form.Group as={Col}>\n                                            <Form.Label >Sub Total:</Form.Label>\n                                            <Form.Control\n                                                type='text'\n                                                required\n                                                name='sub_total'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.sub_total}\n                                            >\n\n                                            </Form.Control>\n                                        </Form.Group>\n                                        </Row>\n                                        <Row>\n                                        \n\n                                        <Form.Group as={Col} xs={6}>\n                                            <Form.Label >Description:</Form.Label>\n                                            <Form.Control\n                                                as='textarea'\n                                                rows={3}\n                                                required\n                                                name='description'\n                                                onChange={(e)=>onNewItemsChange(e,index)}\n                                                defaultValue={item?.description}\n                                            >\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group as={Col}>\n                                        <Form.Label >Total Amount:</Form.Label>\n                                        <Form.Control\n                                            type='text'\n                                            required\n                                            name='total_amount'\n                                            onChange={(e)=>onNewItemsChange(e,index)}\n                                            defaultValue={item?.total_amount}\n                                        >\n\n                                        </Form.Control>\n                                    </Form.Group>\n                                        <Form.Group as={Col}>\n\n                                        </Form.Group>\n                                        </Row>\n                                        </Card.Body>\n                                        \n                                        \n                                    </Card>                                    */}\n                                <div className=\"d-flex justify-content-between\">\n\n                                    <Link to=\"#\" className=\"btn-primary waves-effect waves-light\" onClick={() => setNewItems([...newItems, items])} style={{ maxHeight: '25px', padding: '3px' }}>\n                                        Add a new line\n                                    </Link>\n                                    <div >\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Subtotal</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{sub_total}</p>\n                                        </div>\n                                        {/* {newItems?.map((item)=>{\n                                                if(item.tax_rate > 0)\n                                                return(\n\n                                                <div className=\"d-flex justify-content-between\">\n                                                    <p style={{fontSize: '20px'}}>Total Tax {item.tax_rate}%</p>\n                                                    <p style={{fontSize: '20px',paddingLeft: '50px'}}>{item.tax_amount}</p>\n                                                </div>\n                                                )\n                                            })} */}\n                                        {/* {oldItems?.map((item)=>{\n                                                if(item.tax_rate > 0)\n                                                return (\n                                                <div className=\"d-flex justify-content-between\" >\n                                                    <p style={{fontSize: '20px'}}>Total Tax {item.tax_rate}%</p>\n                                                    <p style={{fontSize: '20px',paddingLeft: '50px'}}>{item.tax_amount}</p>\n                                                </div>\n                                                )\n                                            })} */}\n                                        {Object.entries(taxGroup).map(item => {\n                                            if (item[0] > 0) {\n                                                return (\n                                                    <div className=\"d-flex justify-content-between\" >\n                                                        <p style={{ fontSize: '20px' }}>Total Tax {item[0]}%</p>\n                                                        <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{item[1]}</p>\n\n                                                    </div>)\n                                            }\n                                        })}\n                                        <hr></hr>\n                                        <div className=\"d-flex justify-content-between\">\n                                            <p style={{ fontSize: '20px' }}>Total</p>\n                                            <p style={{ fontSize: '20px', paddingLeft: '50px' }}>{total_amount}</p>\n                                        </div>\n                                        <hr></hr><hr></hr>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex justify-content-between\">\n\n                                    <Button variant=\"info\" type=\"submit\" className=\"waves-effect waves-light me-1\" >\n                                        Save\n                                    </Button>\n                                    <div>\n                                        <Button variant=\"success\" type=\"submit\" className=\"waves-effect waves-light me-1\" disabled={rloading} onClick={() => setStatus('approve')}>\n                                            {rloading ? 'Loaidng...' : 'Approve'}\n                                        </Button>\n                                        <Link\n                                            to='/app/service'\n                                            className=\" btn btn-secondary waves-effect waves-light\"\n                                        >\n                                            Cancel\n                                        </Link>\n                                    </div>\n                                </div>\n\n\n                            </Form>\n\n\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default RepeatingInvoiceForm;\n","import React, { useEffect, useState } from 'react';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { Row, Col, Card, Form, Alert, Tab, Nav} from 'react-bootstrap';\nimport { withSwal } from 'react-sweetalert2';\n\n// components\nimport Table from '../../components/Table';\nimport PageTitle from '../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRepeatingInvoice } from '../../redux/actions';\nimport Pagination from '../../components/CustomPagination';\n\n\n\n// const ExcelFile = ReactExport.ExcelFile;\n// const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst api = new APICore();\n\n\n// // action column render\nconst ActionColumn = withSwal(({ row, swal }) => {\n    /*\n     *   modal handeling\n     */\n    const dispatch = useDispatch();\n    const user_role = useSelector((state)=> state.Role.user_role);\n    \n\n    /*\n    handle form submission\n    */\n    \n    const onDelete = () => {\n        swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#28bb4b',\n                cancelButtonColor: '#f34e4e',\n                confirmButtonText: 'Yes, delete it!',\n            })\n            .then(function(result){\n                if(result.value){\n                    // dispatch(deleteContact(row.original.id))\n                    api.delete(`/api/repeating-invoice/${row.original.id}/`)\n                .then(res=>{\n                    dispatch(getRepeatingInvoice(10,1));\n                    swal.fire(\n                        'Deleted!',\n                        'Invoice has been deleted.',\n                        'success'\n                    );            \n                })\n                .catch(err => {\n                    swal.fire({\n                        title: err,\n                    }\n                    );\n                })\n                }else if(result.dismiss === 'cancel'){\n                    \n                }\n            })        \n    }\n\n    return (\n        <>\n            <Link to={{pathname: '/app/repeating_invoice_details',state: row.original.id}} className=\"action-icon\" >\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n\n            { user_role.includes('change_repeatinginvoice') ?\n                <Link to={{ pathname: '/app/repeating_invoice_form',state: row.original.id}} className=\"action-icon\" >\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\"  style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>\n            }\n            \n            { user_role.includes('delete_repeatinginvoice') ?\n                <Link to=\"#\" className=\"action-icon\" onClick={()=>onDelete()}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\" style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>\n            }\n\n            \n            \n        </>\n    );\n});\n\n\nexport const StatusColumn = withSwal(({ row, swal }) => {\n    /*\n     *   modal handeling\n     */\n    const dispatch = useDispatch();\n    const user_role = useSelector((state) => state.Role.user_role);\n\n    /*\n    handle form submission\n    */\n    const draftsOptions =\n        <>\n            <option selected={row.original.status === 'draft'} value='draft'>Draft</option>\n            <option selected={row.original.status === 'approve'} value='approve'>Approved</option>\n        </>\n\n    const approvesOptions =\n        <>\n            <option selected={row.original.status === 'approve'} value='approve'>Approved</option>\n        </>\n\n\n    var dropDown = (<div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n        <Form.Select style={{ width: '70%' }} onChange={(e) => handleShow(row, e)}>\n            {row.original.status === \"draft\" ? (draftsOptions) : null}\n            {row.original.status === \"approve\" ? (approvesOptions) : null}\n        </Form.Select>\n    </div>)\n\n    const handleShow = (row, e) => {\n        const value = e.target.value;\n        const data = {\n            \"status\": value\n        }\n        swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#28bb4b',\n            cancelButtonColor: '#f34e4e',\n            confirmButtonText: 'Yes, change it!',\n        })\n            .then(function (result) {\n\n                if (result.value) {\n                    api.update(`/api/change-repeating-invoice-status/?id=${row.original.id}`, data)\n                        .then(res => {\n                            if (res) {\n                                swal.fire(\n                                    'Updated!',\n                                    'Repeating Invoice Status has been Updated.',\n                                    'success'\n                                );\n                            }\n                            else {\n                                swal.fire(\n                                    'Updated!',\n                                    'Repeating Invoice Status has not Updated.',\n                                    'warning'\n                                );\n                            }\n                            // setTimeout(() => {\n                            //     refreshPage();\n                            // }, 600);\n                            dispatch(getRepeatingInvoice(10, 1));\n                        })\n                        .catch(err => {\n                            console.log('err', err)\n                            dispatch(getRepeatingInvoice(10, 1));\n                            swal.fire({\n                                title: err,\n                            }\n                            );\n                        })\n                } else if (result.dismiss === 'cancel') {\n                    dispatch(getRepeatingInvoice(10, 1));\n                }\n            })\n            .catch(err => {\n                console.log('swal fire err', err)\n            })\n    };\n\n    return (\n        <>\n            {dropDown}\n\n        </>\n    );\n});\n\n\n\nconst columns = [\n    {\n        Header: 'Invoice No',\n        accessor: 'invoice_no',\n        sort: true,\n    },\n    {\n        Header: 'Contact',\n        accessor: 'contact_id.name',\n        sort: true,\n    },\n    {\n        Header: 'Day',\n        accessor: 'date',\n        sort: true,\n    },\n    {\n        Header: 'Due Day',\n        accessor: 'due_date',\n        sort: true,\n    },\n    {\n        Header: 'Repeat Day',\n        accessor: 'repeat_date',\n        sort: true,\n    },\n    {\n        Header: 'Tax Type',\n        accessor: 'tax_type',\n        sort: true,\n    },\n    {\n        Header: 'Sub Total',\n        accessor: 'sub_total',\n        sort: true,\n    },\n    {\n        Header: 'Discount',\n        accessor: 'discount',\n        sort: true,\n        Cell: (row) => {\n            return <div>{(row.row.original.discount).toFixed(2)}</div>;\n        }\n    },\n    {\n        Header: 'Total Tax',\n        accessor: 'total_tax',\n        sort: true,\n    },\n    {\n        Header: 'Total Amount',\n        accessor: 'total_amount',\n        sort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        sort: true,\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        Cell: ActionColumn,\n    },\n    \n];\n\nconst RepeatingInvoice = () => {\n    const dispatch = useDispatch();\n    const [filteredIncoices,setFilteredInvoices] = useState([]);\n    const invoices = useSelector(state => state.RepeatingInvoice.repeating_invoices);\n    const previous = useSelector(state => state.RepeatingInvoice.previous);\n    const next = useSelector(state => state.RepeatingInvoice.next);\n    const current_page = useSelector(state => state.RepeatingInvoice.current_page);\n    const total_page = useSelector(state => state.RepeatingInvoice.total_page);\n    const active = useSelector(state => state.RepeatingInvoice.active);\n    const user_role = useSelector((state)=> state.Role.user_role);\n    const loading = useSelector(state => state.RepeatingInvoice.loading);\n    const error = useSelector(state => state.RepeatingInvoice.error);\n    const [pageSize,setPageSize] = useState(10);\n    const [activePage, setActivePage] = useState('all');\n\n    /*\n     *   modal handeling\n     */\n  \n\n    const visitPage = (page) => {\n        dispatch(getRepeatingInvoice(pageSize,page));\n    };\n\n    const previous_number = () => {\n        dispatch(getRepeatingInvoice(pageSize,previous));\n    };\n\n    const next_number = () => {\n        dispatch(getRepeatingInvoice(pageSize,next));\n    };\n\n    /*\n    handle form submission\n    */\n    \n    const onClickEvent = (value) => {\n        if (value === 'all') {\n            setActivePage('all');\n            setFilteredInvoices(invoices)\n        } else if (value === 'draft') {\n            setActivePage('draft');\n            setFilteredInvoices(invoices.filter((item) => item.status === 'draft'))\n\n        }else if (value === 'approve') {\n            setActivePage('approve');\n            setFilteredInvoices(invoices.filter((item) => item.status === 'approve'))\n        }\n        else {\n            setFilteredInvoices(invoices)\n        }\n    }\n    \n\n    useEffect(()=>{ \n        dispatch(getRepeatingInvoice(pageSize,1));   \n    },[pageSize])\n\n    useEffect(()=>{\n        setFilteredInvoices(invoices);\n        setActivePage('all');\n    },[invoices])\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Repeating Invoice', path: '/app/repeating_invoice', active: false },\n                ]}\n                title={`Repeating Invoice`}\n            />\n            <Tab.Container defaultActiveKey=\"all\">\n                <Nav as=\"ul\" variant=\"tabs\">                    \n                    <Nav.Item as=\"li\" key='all'>\n                        <Nav.Link active={activePage === \"all\"} className=\"cursor-pointer\" href=\"#\" eventKey='all' onClick={() => onClickEvent('all')}>\n                            All\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key='draft'>\n                        <Nav.Link active={activePage === \"draft\"} className=\"cursor-pointer\" href=\"#\" eventKey='draft' onClick={() => onClickEvent('draft')}>\n                            Draft\n                        </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item as=\"li\" key='approve'>\n                        <Nav.Link active={activePage === \"approve\"} className=\"cursor-pointer\" href=\"#\" eventKey='approve' onClick={() => onClickEvent('approve')}>\n                            Approved\n                        </Nav.Link>\n                    </Nav.Item>\n                </Nav>\n\n               \n            </Tab.Container>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                        {!loading && error && (\n                            <Alert variant=\"danger\" className=\"my-2\">\n                                {error}\n                            </Alert>\n                        )}\n                            <Row className=\"mb-2\">\n                                <Col sm={4}>\n                                    <div style={{display: 'flex',flexDirection: 'row',alignItems: 'center'}}>\n                                        <span className='me-2'>Show:</span>\n                                        <Form.Select style={{width: '40%'}} onChange={(e)=>{setPageSize(e.target.value);getRepeatingInvoice(pageSize,1)}}>\n                                            <option value='10'>10</option>\n                                            <option value='15'>20</option>\n                                            <option value='20'>30</option>\n                                        </Form.Select>\n                                    </div>\n                                </Col>\n\n                                <Col sm={8}>\n                                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                                        { user_role.includes('add_repeatinginvoice') ?\n                                            <Link className=\"btn btn-success mb-2 me-1\" to='/app/repeating_invoice_form'>\n                                            <i className=\"mdi mdi-plus-circle me-1\"></i> Add\n                                            </Link>:\n                                            <>\n                                            </>\n                                        }\n                                        \n                                        {/* <ExcelFile element={<Button className=\"btn btn-light mb-2\">Export</Button>}>\n                                            <ExcelSheet data={users} name=\"Users\">\n                                                <ExcelColumn label=\"Name\" value=\"name\"/>\n                                                <ExcelColumn label=\"Phone\" value=\"phone\"/>\n                                                <ExcelColumn label=\"Email\" value=\"email\"/>\n                                                <ExcelColumn label=\"Role\" value={(col)=> col.groups[0].name}/>                                            \n                                            </ExcelSheet>\n                                        </ExcelFile> */}\n  \n                                    </div>\n                                </Col>\n                            </Row>\n                            \n                            {loading ? <p>Loading...</p>:\n                            <>\n                            {filteredIncoices.length > 0 ?\n                            <>\n                            <Table\n                                columns={columns}\n                                data={filteredIncoices}\n                                pageSize={pageSize}\n                                isSortable={true}\n                                pagination={false}\n                                isSearchable={true}\n                                tableClass=\"table-nowrap table-hover\"\n                                searchBoxClass=\"\"\n                            />\n                            <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={total_page} current_page={current_page} active={active}/>\n                            </>\n                            :\n                            'No data available!'}</>}\n                            \n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* add contact modal */}\n            \n            \n            \n            \n            \n        </>\n    );\n};\n\nexport default RepeatingInvoice;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { APICore } from '../../helpers/api/apiCore';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst api = new APICore();\n\n\n// invoice component\nconst PublicInvoice = () => {\n    \n        \n    const [invoice_details,setInvoiceDetails] = useState({});\n    const urlParams = new URLSearchParams(window.location.search);\n    let unique_id = urlParams.get('unique_id');\n    \n    useEffect(()=>{\n        api.get(`/api/public-invoice?unique_id=${unique_id}`)\n        .then(res => {\n            console.log(res)\n            if(res.data.success){\n                setInvoiceDetails(res.data.result)\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    },[])\n    return (\n        <React.Fragment>\n            <div className='m-2'>\n            <PageTitle\n                breadCrumbItems={[\n                   \n                ]}\n                title={'Public Invoice'}\n                \n            />\n            </div>\n            \n\n            <Row >\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            \n\n                            \n\n                       \n                                \n\n                            <Row className=\"mt-3\">\n                                <Col sm={6}>\n                                <div >\n                                        <p>\n                                            <strong>Contact : </strong>{' '}\n                                            <span > &nbsp;&nbsp;&nbsp; {invoice_details?.contact_id?.name} </span>\n                                        </p>\n                                        <p>\n                                            <strong>Invoice No : </strong>{' '}\n                                            <span >\n                                                {' '}\n                                                <span >{invoice_details?.invoice_no}</span>\n                                            </span>\n                                        </p>\n                                        <p>\n                                            <strong>Date : </strong>\n                                            <span >\n                                                {' '}\n                                                <span >{invoice_details?.date}</span>\n                                            </span>\n                                        </p>\n                                        <p>\n                                            <strong>Due Date : </strong>\n                                            <span >\n                                                {' '}\n                                                <span >{invoice_details?.due_date}</span>\n                                            </span>\n                                        </p>\n                                        <p>\n                                            <strong>Reference : </strong>\n                                            <span >\n                                                {' '}\n                                                <span >{invoice_details?.reference}</span>\n                                            </span>\n                                        </p>\n                                        <p>\n                                            <strong>Tax Type : </strong>\n                                            <span >\n                                                {' '}\n                                                <span >{invoice_details?.tax_type}</span>\n                                            </span>\n                                        </p>\n                                    </div>\n                                </Col>\n                                <Col sm={6}>\n                                    <h6>Address</h6>\n                                    <address>\n                                        {invoice_details?.contact_id?.city?.name}, {invoice_details?.contact_id?.country?.name}\n                                        <br />\n                                        {invoice_details?.contact_id?.email}\n                                    </address>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col xs={12}>\n                                    <div className=\"table-responsive\">\n                                        <table className=\"table mt-4 table-centered\">\n                                        <thead>\n                                                <tr>\n                                                    <th>#</th>\n                                                    <th>Item</th>\n                                                    <th >Quantity</th>\n                                                    <th >Unit Price</th>\n                                                    <th >Discount</th>\n                                                    <th >Account</th>\n                                                    <th >Tax Rate</th>\n                                                    <th className=\"text-end\">Total</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {(invoice_details.items || []).map((item, idx) => {\n                                                    return (\n                                                        <tr key={idx}>\n                                                            <td>{idx + 1}</td>\n                                                            <td>\n                                                                <b>{item.item}</b> <br />\n                                                                {item.description}\n                                                            </td>\n                                                            <td>{item.qty}</td>\n                                                            <td>{item.unit_price}</td>\n                                                            <td>{item.discount}</td>\n                                                            <td>{item.account_id.account_name}</td>\n                                                            <td>{item.tax_rate}</td>\n                                                            <td className=\"text-end\">{item.total_amount}</td>\n                                                        </tr>\n                                                    );\n                                                })}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col sm={6}>\n                                    \n                                </Col>\n                                <Col sm={6}>\n                                    <div className=\"float-end\">\n                                        <p>\n                                            <b>Sub-total:</b> <span className=\"float-end\">{invoice_details.sub_total}</span>\n                                        </p>\n                                        <p>\n                                            <b>Total Tax:</b>{' '}\n                                            <span className=\"float-end\"> &nbsp;&nbsp;&nbsp; {invoice_details.total_tax}</span>\n                                        </p>\n                                        <h3>{invoice_details.total_amount}</h3>\n                                    </div>\n                                    <div className=\"clearfix\"></div>\n                                </Col>\n                            </Row>\n\n                            \n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default PublicInvoice;\n","import React, { useEffect, useState } from 'react';\nimport { APICore } from '../../helpers/api/apiCore';\nimport ContactForm from '../Form/ContactForm';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { withSwal } from 'react-sweetalert2';\n\n// components\nimport Table from '../../components/Table';\nimport PageTitle from '../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact,deleteContact,getContact } from '../../redux/actions';\nimport ReactExport from \"react-export-excel\";\nimport Pagination from '../../components/CustomPagination';\nimport { getCountry } from '../../redux/location/actions';\n\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst api = new APICore();\n\n\n// action column render\nconst ActionColumn = withSwal(({ row, swal }) => {\n    /*\n     *   modal handeling\n     */\n    const dispatch = useDispatch();\n    const country = useSelector(state => state.Location.country);\n    const user_role = useSelector((state)=> state.Role.user_role);\n    const [show, setShow] = useState(false);\n    const onCloseModal = () => setShow(false);\n    const onOpenModal = () => setShow(true);\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData) => {\n        \n        api.updatePatch(`/api/contact/${row.original.id}/`,formData)\n        .then(res=>{\n            \n            if(res.data.success){\n                dispatch(getContact(10,1));\n            }else{\n                swal.fire({\n                    title: res.data.error,\n                }) \n                \n            }\n            \n        })\n        .catch(err => {\n            swal.fire({\n                title: err,\n            })\n        })\n        onCloseModal()\n    };\n\n    const onDelete = () => {\n        swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#28bb4b',\n                cancelButtonColor: '#f34e4e',\n                confirmButtonText: 'Yes, delete it!',\n            })\n            .then(function(result){\n                if(result.value){\n                    // dispatch(deleteContact(row.original.id))\n                    api.delete(`/api/contact/${row.original.id}/`)\n                .then(res=>{\n                    dispatch(getContact(10,1))\n                    swal.fire(\n                        'Deleted!',\n                        'Account has been deleted.',\n                        'success'\n                    );            \n                })\n                .catch(err => {\n                    swal.fire({\n                        title: err,\n                    }\n                    );\n                })\n                }else if(result.dismiss === 'cancel'){\n                    console.log('cancel')\n                }\n            })        \n    }\n\n    return (\n        <>\n            <Link to={{ pathname: '/app/contact_details', state: row.original.id }} className=\"action-icon\" >\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n\n            { user_role.includes('change_contact') ?\n                <Link to=\"#\" className=\"action-icon\" onClick={()=>onOpenModal()}>\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\"  style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>\n            }\n            \n            { user_role.includes('delete_contact') ?\n                <Link to=\"#\" className=\"action-icon\" onClick={()=>onDelete()}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\" style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>\n            }\n            {\n                show?\n                <ContactForm show={show} onHide={onCloseModal} onSubmit={onSubmit} contact={row.original} countries={country}/>\n                :null\n            }\n        </>\n    );\n});\n\nconst columns = [\n    \n    {\n        Header: 'Name',\n        accessor: 'name',\n        sort: true,\n    },\n    {\n        Header: 'Client Id',\n        accessor: 'client_id',\n        sort: true,\n    },\n    {\n        Header: 'Contact Type',\n        accessor: 'contact_type',\n        sort: true,\n    },\n    {\n        Header: 'Contact Person',\n        accessor: 'contact_person',\n        sort: true,\n    },\n    {\n        Header: 'Phone',\n        accessor: 'phone',\n        sort: true,\n    },\n    {\n        Header: 'Email',\n        accessor: 'email',\n        sort: true,\n    },\n    {\n        Header: 'City',\n        accessor: 'city.name',\n        sort: true,\n    },\n    {\n        Header: 'country',\n        accessor: 'country.name',\n        sort: true,\n\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        Cell: ActionColumn,\n    },\n];\n\nconst CompanySettings = () => {\n    const dispatch = useDispatch();\n    const contact = useSelector(state => state.Contact.contact);\n    const country = useSelector(state => state.Location.country);\n    const previous = useSelector(state => state.Contact.previous);\n    const next = useSelector(state => state.Contact.next);\n    const current_page = useSelector(state => state.Contact.current_page);\n    const total_page = useSelector(state => state.Contact.total_page);\n    const active = useSelector(state => state.Contact.active);\n    const user_role = useSelector((state)=> state.Role.user_role);\n    const loading = useSelector(state => state.Contact.loading);\n    const error = useSelector(state => state.Contact.error);\n    const success = useSelector(state => state.Contact.success);\n    const [pageSize,setPageSize] = useState(10);\n    const [alertShow, setAlertShow] = useState(true);\n    /*\n     *   modal handeling\n     */\n    const [show, setShow] = useState(false);\n    const onCloseModal = () => setShow(false);\n    const onOpenModal = () => setShow(true);\n\n    const visitPage = (page) => {\n        dispatch(getContact(pageSize,page));\n    };\n\n    const previous_number = () => {\n        dispatch(getContact(pageSize,previous));\n    };\n\n    const next_number = () => {\n        dispatch(getContact(pageSize,next));\n    };\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData) => {\n        dispatch(addContact(formData));\n        onCloseModal();\n        \n    };\n\n\n    useEffect(()=>{ \n        dispatch(getContact(pageSize,1));\n        dispatch(getCountry());   \n    },[pageSize])\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Contact', path: '/app/contact', active: true },\n                ]}\n                title={'Contact'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            {!loading && alertShow && error && (\n                            <Alert variant=\"danger\" className=\"my-2\" onClose={()=>setAlertShow(false)} dismissible>\n                                {error}\n                            </Alert>\n                        )}\n                            {!loading && alertShow && success !== null && (\n                                <Alert variant=\"success\" className=\"my-2\" onClose={() => setAlertShow(false)} dismissible>\n                                {success}\n                            </Alert>\n                        )}\n                            <Row className=\"mb-2\">\n                                <Col sm={4}>\n                                    <div style={{display: 'flex',flexDirection: 'row',alignItems: 'center'}}>\n                                        <span className='me-2'>Show:</span>\n                                        <Form.Select style={{width: '40%'}} onChange={(e)=>{setPageSize(e.target.value);dispatch(getContact(e.target.value,current_page))}}>\n                                            <option value='10'>10</option>\n                                            <option value='15'>20</option>\n                                            <option value='20'>30</option>\n                                        </Form.Select>\n                                    </div>\n                                </Col>\n\n                                <Col sm={8}>\n                                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                                        { user_role.includes('add_contact') ?\n                                            <Button className=\"btn btn-success mb-2 me-1\" onClick={onOpenModal}>\n                                            <i className=\"mdi mdi-plus-circle me-1\"></i> Add New\n                                            </Button>:\n                                            <>\n                                            </>\n                                        }\n                                        \n                                        {/* <ExcelFile element={<Button className=\"btn btn-light mb-2\">Export</Button>}>\n                                            <ExcelSheet data={users} name=\"Users\">\n                                                <ExcelColumn label=\"Name\" value=\"name\"/>\n                                                <ExcelColumn label=\"Phone\" value=\"phone\"/>\n                                                <ExcelColumn label=\"Email\" value=\"email\"/>\n                                                <ExcelColumn label=\"Role\" value={(col)=> col.groups[0].name}/>                                            \n                                            </ExcelSheet>\n                                        </ExcelFile> */}\n  \n                                    </div>\n                                </Col>\n                            </Row>\n                            \n                            {loading ? <p>Loading...</p>:\n                            <>\n                            {contact.length > 0 ?\n                            <>\n                            <Table\n                                columns={columns}\n                                data={contact}\n                                pageSize={pageSize}\n                                isSortable={true}\n                                pagination={false}\n                                isSearchable={true}\n                                tableClass=\"table-nowrap table-hover\"\n                                searchBoxClass=\"\"\n                            />\n                            <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={total_page} current_page={current_page} active={active}/>\n                            </>\n                            :\n                            'No user available!'}</>}\n                            \n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* add contact modal */}\n            \n            <ContactForm show={show} onHide={onCloseModal} onSubmit={onSubmit} countries={country}/>\n            \n            \n            \n        </>\n    );\n};\n\nexport default CompanySettings;\n","import React from 'react';\nimport { Route, RouteProps } from 'react-router-dom';\nimport Contact from '../pages/app/Contact';\nimport ContactDetails from '../pages/app/ContactDetails';\n\nimport ChangePassword from '../pages/app/user-management/ChangePassword';\nimport RoleForm from '../pages/Form/RoleForm';\nimport PasswordReset from '../pages/auth/PasswordReset';\nimport PasswordResetSuccess from '../pages/auth/PasswordResetSuccess';\n\n// components\nimport PrivateRoute from './PrivateRoute';\nimport Root from './Root';\nimport Service from '../pages/app/service';\nimport ServiceForm from '../pages/Form/ServiceForm';\nimport ContactCard from '../pages/app/ContactCard';\nimport Invoice from '../pages/app/invoice';\nimport InvoiceForm from '../pages/Form/InvoiceForm';\nimport InvoiceDetails from '../pages/app/InvoiceDetails';\nimport RepeatingInvoiceDetails from '../pages/app/RepeatingInvoiceDetails';\nimport RepeatingInvoiceForm from '../pages/Form/RepeatingInvoiceForm';\nimport RepeatingInvoice from '../pages/app/RepeatingInvoice';\nimport PublicInvoice from '../pages/app/PublicInvoice';\nimport CompanySettings from '../pages/app/CompanySettings';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\n\n  \n// dashboard\nconst Dashboard = React.lazy(() => import('../pages/dashboard'));\n\n//apps\nconst MyProfile = React.lazy(() => import('../pages/app/user-management/MyProfile'));\nconst Users = React.lazy(() => import('../pages/app/user-management/Users'));\nconst Role = React.lazy(() => import('../pages/app/user-management/Role'));\n\n\n\n//others\nconst SearchResults = React.lazy(() => import('../pages/other/SearchResults/'));\nconst Error404Alt = React.lazy(() => import('../pages/error/Error404Alt'));\nconst Error500Two = React.lazy(() => import('../pages/error/Error500Two'));\n\n\n\n\nexport interface RoutesProps {\n    path: RouteProps['path'];\n    name?: string;\n    component?: RouteProps['component'];\n    route?: any;\n    exact?: RouteProps['exact'];\n    icon?: string;\n    header?: string;\n    roles?: string[];\n    children?: RoutesProps[];\n}\n\n// root routes\nconst rootRoute: RoutesProps = {\n    path: '/',\n    exact: true,\n    component: () => <Root />,\n    route: Route,\n};\n\n// dashboards\nconst dashboardRoutes: RoutesProps = {\n    path: '/dashboard',\n    name: 'Dashboards',\n    component: Dashboard,\n    route: PrivateRoute,\n};\n\n//apps\nconst AppRoutes = {\n    path: '/app',\n    name: 'App',\n    route: PrivateRoute,\n    \n    children: [\n        \n        {\n            path: '/app/my-profile',\n            name: 'My Profile',\n            component: MyProfile,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/change_password',\n            name: 'Change Password',\n            component: ChangePassword,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/add_role',\n            name: 'Add Role',\n            component: RoleForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/users',\n            name: 'Users',\n            component: Users,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/roles',\n            name: 'Roles',\n            component: Role,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/contact',\n            name: 'Contact',\n            component: Contact,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/contact_details',\n            name: 'Contact Details',\n            component: ContactDetails,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/service',\n            name: 'Service',\n            component: ServiceForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/service_by_contact',\n            name: 'Service',\n            component: Service,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/service_form',\n            name: 'Service Form',\n            component: ServiceForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/invoice',\n            name: 'Invoice',\n            component: Invoice,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/invoice_form',\n            name: 'Invoice Form',\n            component: InvoiceForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/repeating_invoice',\n            name: 'Repeating Invoice',\n            component: RepeatingInvoice,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/repeating_invoice_form',\n            name: 'Repeating Invoice Form',\n            component: RepeatingInvoiceForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/invoice_details',\n            name: 'Invoice Details',\n            component: InvoiceDetails,\n            route: PrivateRoute,\n        },\n        \n        {\n            path: '/app/repeating_invoice_details',\n            name: 'Repeating Invoice Details',\n            component: RepeatingInvoiceDetails,\n            route: PrivateRoute,\n        },\n        {\n            path: '/app/company_settings',\n            name: 'Company Settings',\n            component: CompanySettings,\n            route: PrivateRoute,\n        },\n        \n        \n    ],\n};\n\n// pages\nconst extrapagesRoutes = {\n    path: '/pages',\n    name: 'Pages',\n    children: [\n        \n        {\n            path: '/pages/serach-results',\n            name: 'Search Results',\n            component: SearchResults,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-404-alt',\n            name: 'Error - 404-alt',\n            component: Error404Alt,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-500',\n            name: 'Error - 500',\n            component: Error500Two,\n            route: PrivateRoute,\n        }\n    ],\n};\n\n\n// auth\nconst authRoutes: RoutesProps[] = [\n    {\n        path: '/auth/login',\n        name: 'Login',\n        component: Login,\n        route: Route,\n    },\n    {\n        path: '/public_invoice',\n        name: 'public invoice',\n        component: PublicInvoice,\n        route: Route,\n    },\n    {\n        path: '/auth/register',\n        name: 'Register',\n        component: Register,\n        route: Route,\n    },\n    {\n        path: '/auth/confirm',\n        name: 'Confirm',\n        component: Confirm,\n        route: Route,\n    },\n    {\n        path: '/auth/forget-password',\n        name: 'Forget Password',\n        component: ForgetPassword,\n        route: Route,\n    },\n    {\n        path: '/auth/password_reset',\n        name: 'Password Reset',\n        component: PasswordReset,\n        route: Route,\n    },\n    {\n        path: '/auth/password_reset_success',\n        name: 'Forget Password',\n        component: PasswordResetSuccess,\n        route: Route,\n    },\n    {\n        path: '/auth/logout',\n        name: 'Logout',\n        component: Logout,\n        route: Route,\n    },\n    \n];\n\n\n\n// flatten the list of all nested routes\nconst flattenRoutes = (routes: RoutesProps[]) => {\n    let flatRoutes: RoutesProps[] = [];\n\n    routes = routes || [];\n    routes.forEach((item: RoutesProps) => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst authProtectedRoutes = [rootRoute, dashboardRoutes,extrapagesRoutes,AppRoutes];\nconst publicRoutes = [...authRoutes];\n\nconst authProtectedFlattenRoutes = flattenRoutes([...authProtectedRoutes]);\nconst publicProtectedFlattenRoutes = flattenRoutes([...publicRoutes]);\nexport { publicRoutes, authProtectedRoutes, authProtectedFlattenRoutes, publicProtectedFlattenRoutes };\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// layout constants\nimport { LayoutTypes } from '../constants/layout';\n\n// strore\nimport { RootState } from '../redux/store';\n\n// All layouts containers\nimport DefaultLayout from '../layouts/Default';\nimport VerticalLayout from '../layouts/Vertical';\nimport DetachedLayout from '../layouts/Detached';\nimport HorizontalLayout from '../layouts/Horizontal';\nimport TwoColumnLayout from '../layouts/TwoColumn/';\n\nimport { authProtectedFlattenRoutes, publicProtectedFlattenRoutes } from './index';\n\ninterface RoutesProps {}\n\nconst Routes = (props: RoutesProps) => {\n    const { layout } = useSelector((state: RootState) => ({\n        layout: state.Layout,\n    }));\n\n    const getLayout = () => {\n        let layoutCls = TwoColumnLayout;\n\n        switch (layout.layoutType) {\n            case LayoutTypes.LAYOUT_HORIZONTAL:\n                layoutCls = HorizontalLayout;\n                break;\n            case LayoutTypes.LAYOUT_DETACHED:\n                layoutCls = DetachedLayout;\n                break;\n            case LayoutTypes.LAYOUT_VERTICAL:\n                layoutCls = VerticalLayout;\n                break;\n            default:\n                layoutCls = TwoColumnLayout;\n                break;\n        }\n        return layoutCls;\n    };\n\n    let Layout = getLayout();\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path={publicProtectedFlattenRoutes.map((r: any) => r['path'])}>\n                    <DefaultLayout {...props} layout={layout}>\n                        <Switch>\n                            {publicProtectedFlattenRoutes.map((route: any, index: number) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                            \n                        </Switch>\n                    </DefaultLayout>\n                </Route>\n\n                <Route path={authProtectedFlattenRoutes.map((r: any) => r['path'])}>\n                    <Layout {...props}>\n                        <Switch>\n                            {authProtectedFlattenRoutes.map((route: any, index: number) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                            \n                            <Redirect to=\"/pages/error-404-alt\" />\n                        </Switch>\n                    </Layout>\n                </Route>\n                \n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import React, { useEffect } from 'react';\n\nimport Routes from './routes/Routes';\n\n// Themes\n\n// For Default import Default.scss\nimport './assets/scss/Default.scss';\n\n\n// For Saas import Saas.scss\n// import './assets/scss/Saas.scss';\n\n// For Modern demo import Modern.scss\n// import './assets/scss/Modern.scss';\n\n// For Creative demo import Creative.scss\n// import './assets/scss/Creative.scss';\n\n// For Purple demo import Purple.scss\n// import './assets/scss/Purple.scss';\n\n// For Material demo import Material.scss\n// import './assets/scss/Material.scss';\n\n\n\nconst App = () => {\n    \n    return (\n        <>\n            <Routes></Routes>\n        </>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","// apicore\nimport { APICore } from '../../helpers/api/apiCore';\n\n// constants\nimport { AuthActionTypes } from './constants';\n\nconst api = new APICore();\n\nconst INIT_STATE = {\n    user: api.getLoggedInUser(),\n    loading: false,\n};\n\ninterface UserData {\n    id: number;\n    email: string;\n    phone: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    token: string;\n}\n\ninterface AuthActionType {\n    type:\n        | AuthActionTypes.API_RESPONSE_SUCCESS\n        | AuthActionTypes.API_RESPONSE_ERROR\n        | AuthActionTypes.LOGIN_USER\n        | AuthActionTypes.LOGOUT_USER\n        | AuthActionTypes.RESET;\n    payload: {\n        actionType?: string;\n        data?: UserData | {};\n        key?: any;\n        error?: string;\n        success?: string;\n    };\n}\n\ninterface State {\n    user?: UserData | {};\n    loading?: boolean;\n    value?: boolean;\n}\n\nconst Auth = (state: State = INIT_STATE, action: AuthActionType): any => {\n    switch (action.type) {\n        case AuthActionTypes.API_RESPONSE_SUCCESS:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        user: action.payload.data,\n                        userLoggedIn: true,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        loading: false,\n                        userSignUp: true,\n                    };\n                }\n                case AuthActionTypes.LOGOUT_USER: {\n                    return {\n                        ...state,\n                        user: null,\n                        loading: false,\n                        userLogout: true,\n                    };\n                }\n                \n                case AuthActionTypes.UPDATE_PROFILE: {\n                    return {\n                        ...state,\n                        user: api.getLoggedInUser(),\n                        loading: false,\n                        success: \"Profile Updated Successfully\"\n                    };\n                }\n                case AuthActionTypes.UPDATE_PROFILE_IMAGE: {\n                    return {\n                        ...state,\n                        user: api.getLoggedInUser(),\n                        loading: false,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.API_RESPONSE_ERROR:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        userLoggedIn: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        registerError: action.payload.error,\n                        userSignUp: false,\n                        loading: false,\n                    };\n                }\n                \n                case AuthActionTypes.UPDATE_PROFILE: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        \n                    };\n                }\n                case AuthActionTypes.UPDATE_PROFILE_IMAGE: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        \n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.LOGIN_USER:\n            return { ...state, loading: true, userLoggedIn: false };\n        case AuthActionTypes.LOGOUT_USER:\n            return { ...state, loading: true, userLogout: false };\n        case AuthActionTypes.RESET:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                userSignUp: false,\n                userLoggedIn: false,\n                passwordReset: false,\n                passwordChange: false,\n                resetPasswordSuccess: null,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// action constants\nimport { LayoutActionTypes, LayoutStateTypes } from './constants';\n\n// app constants\nimport {\n    LayoutTypes,\n    LayoutColor,\n    LayoutWidth,\n    MenuPositions,\n    SideBarTheme,\n    SideBarTypes,\n    TopbarTheme,\n} from '../../constants/layout';\n\n// actions\nimport { LayoutActionType } from './actions';\n\n// utils\nimport { getLayoutConfigs } from '../../utils';\n\nconst INIT_STATE = {\n    layoutType: LayoutTypes.LAYOUT_HORIZONTAL,\n    layoutColor: LayoutColor.LAYOUT_COLOR_LIGHT,\n    layoutWidth: LayoutWidth.LAYOUT_WIDTH_FLUID,\n    menuPosition: MenuPositions.MENU_POSITION_FIXED,\n    leftSideBarTheme: SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT,\n    leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n    showTwoToneIcons: false,\n    showSidebarUserInfo: false,\n    topbarTheme: TopbarTheme.TOPBAR_THEME_DARK,\n    isOpenRightSideBar: false,\n};\n\nconst Layout = (state: LayoutStateTypes = INIT_STATE, action: LayoutActionType<string | boolean | null>) => {\n    switch (action.type) {\n        case LayoutActionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n            return {\n                ...state,\n                layoutColor: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            const layoutConfig = getLayoutConfigs(action.payload! && action.payload);\n            return {\n                ...state,\n                layoutWidth: action.payload,\n                ...layoutConfig,\n            };\n        case LayoutActionTypes.CHANGE_MENU_POSITIONS:\n            return {\n                ...state,\n                menuPosition: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case LayoutActionTypes.TOGGLE_SIDEBAR_USER_INFO:\n            return {\n                ...state,\n                showSidebarUserInfo: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_TOPBAR_THEME:\n            return {\n                ...state,\n                topbarTheme: action.payload,\n            };\n        case LayoutActionTypes.TOGGLE_TWO_TONE_ICONS:\n            return {\n                ...state,\n                showTwoToneIcons: action.payload,\n            };\n        case LayoutActionTypes.SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                isOpenRightSideBar: true,\n            };\n        case LayoutActionTypes.HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                isOpenRightSideBar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    users: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_page: '',\n    active: '',\n    loading: false,\n    error: null,\n};\n\n\n\n\n\nconst User = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_USER_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_USER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                users: action.data.results,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_USER_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.ADD_USER_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.ADD_USER_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                users: [...state.users,action.user]\n                \n            };\n        }\n        case type.ADD_USER_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n        \n        default:\n            return state;\n    }\n};\n\nexport default User;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    roles: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_page: '',\n    active: '',\n    user_role: [],\n    loading: false,\n    error: null,\n};\n\n\n\nconst Role = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_ROLE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_ROLE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                roles: action.data.results,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_ROLE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.GET_USERROLE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_USERROLE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                user_role: action.user_role,\n            };\n        }\n        case type.GET_USERROLE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        \n        default:\n            return state;\n    }\n};\n\nexport default Role;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    contact: [],\n    invoice_list: [],\n    invoice_list_pagination_data: {},\n    invoice_setting: [],\n    contact_details: [],\n    all_contact: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_object: '',\n    total_page: '',\n    active: '',\n    loading: false,\n    error: null,\n    success:null,\n    invoice_setting_error: null,\n    invoice_setting_success:null,\n};\n\n\n\nconst Contact = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_CONTACT_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CONTACT_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                contact: action.data.results,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_object: action.data.total_object,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n                \n            };\n        }\n        case type.GET_CONTACT_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.GET_CONTACT_INVOICE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CONTACT_INVOICE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                invoice_list: action.data.results,\n                invoice_list_pagination_data: {\n                    previous: action.data.previous,\n                    next: action.data.next,\n                    current_page: action.data.current_page,\n                    total_page: action.data.total_page,\n                    active: action.data.current_page\n                }\n            };\n        }\n        case type.GET_CONTACT_INVOICE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n\n        case type.GET_CONTACT_INVOICE_SETTING_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CONTACT_INVOICE_SETTING_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                invoice_setting: action.data.results,\n            };\n        }\n        case type.GET_CONTACT_INVOICE_SETTING_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n\n\n        case type.UPDATE_CONTACT_INVOICE_SETTING_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.UPDATE_CONTACT_INVOICE_SETTING_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                invoice_setting: action.data,\n                invoice_setting_error: null,\n                invoice_setting_success:\"Contact Updated Successfully\"\n            };\n        }\n        case type.UPDATE_CONTACT_INVOICE_SETTING_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                invoice_setting_error: action.error,\n                invoice_setting_success: null,\n            };\n        }\n\n\n        case type.GET_CONTACT_DETAILS_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CONTACT_DETAILS_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                contact_details: action.data,\n            };\n        }\n        case type.GET_CONTACT_DETAILS_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.GET_ALLCONTACT_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_ALLCONTACT_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                all_contact: action.data,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_ALLCONTACT_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.ADD_CONTACT_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.ADD_CONTACT_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                contact: [action.contact,...state.contact],\n                success:'Contact Created Successfully'\n                \n            };\n        }\n        case type.ADD_CONTACT_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.DELETE_CONTACT_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.DELETE_CONTACT_SUCCESS: {\n            const newContact = state.contact.filter(({i}) => i !== action.id)\n            return {\n                ...state,\n                loading: false,\n                contact: newContact\n                \n            };\n        }\n        case type.DELETE_CONTACT_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n       \n                \n        default:\n            return state;\n    }\n};\n\nexport default Contact;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    country: [],\n    city: [],\n    loading: false,\n    error: null,\n};\n\n\n\nconst Location = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_COUNTRY_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_COUNTRY_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                country: action.data,\n            };\n        }\n        case type.GET_COUNTRY_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.GET_CITY_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CITY_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                city: action.data,\n            };\n        }\n        case type.GET_CITY_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                city: [],\n                error: action.error,\n            };\n        }\n\n               \n                \n        default:\n            return state;\n    }\n};\n\nexport default Location;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    services: [],\n    contact_services: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_page: '',\n    active: '',\n    loading: false,\n    error: null,\n};\n\n\n\nconst Service = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_SERVICE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_SERVICE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                services: action.data.results,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_SERVICE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.GET_CONTACTSERVICE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CONTACTSERVICE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                contact_services: action.data,\n                \n            };\n        }\n        case type.GET_CONTACTSERVICE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        case type.ADD_SERVICE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.ADD_SERVICE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                services: [action.data,...state.services]\n                \n            };\n        }\n        case type.ADD_SERVICE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        \n       \n                \n        default:\n            return state;\n    }\n};\n\nexport default Service;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    invoices: [],\n    invoice_details: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_page: '',\n    active: '',\n    loading: false,\n    error: null,\n};\n\n\n\nconst Invoice = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_INVOICE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_INVOICE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                invoices: action.data.results,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_INVOICE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n        \n        case type.GET_INVOICEDETAILS_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_INVOICEDETAILS_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                invoice_details: action.data.result,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_INVOICEDETAILS_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default Invoice;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    repeating_invoices: [],\n    repeating_invoice_details: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_page: '',\n    active: '',\n    loading: false,\n    error: null,\n};\n\n\n\nconst RepeatingInvoice = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_REPEATINGINVOICE_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_REPEATINGINVOICE_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                repeating_invoices: action.data.results,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_REPEATINGINVOICE_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n        \n        case type.GET_REPEATINGINVOICEDETAILS_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_REPEATINGINVOICEDETAILS_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                repeating_invoice_details: action.data.result,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_REPEATINGINVOICEDETAILS_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default RepeatingInvoice;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    currencies: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_page: '',\n    active: '',\n    loading: false,\n    error: null,\n};\n\n\n\nconst Currency = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_CURRENCY_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CURRENCY_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                currencies: action.data,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_CURRENCY_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n        \n        \n\n        default:\n            return state;\n    }\n};\n\nexport default Currency;\n","import * as type from './types';\n\nconst INIT_STATE = {\n    accounts: [],\n    previous: '',\n    next: '',\n    current_page: '',\n    total_page: '',\n    active: '',\n    loading: false,\n    error: null,\n};\n\n\n\nconst ChartAccount = (state = INIT_STATE, action: any) => {\n    switch (action.type) {\n        case type.GET_CHARTACCOUNT_REQUESTED: {\n            return {\n                ...state,\n                loading: true,\n            };\n        }\n        case type.GET_CHARTACCOUNT_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                accounts: action.data.results,\n                previous: action.data.previous,\n                next: action.data.next,\n                current_page: action.data.current_page,\n                total_page: action.data.total_page,\n                active: action.data.current_page,\n            };\n        }\n        case type.GET_CHARTACCOUNT_FAILED: {\n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            };\n        }\n        \n        \n\n        default:\n            return state;\n    }\n};\n\nexport default ChartAccount;\n","import { combineReducers } from 'redux';\n\nimport Auth from './auth/reducers';\nimport Layout from './layout/reducers';\nimport User from './user/reducers';\nimport Role from './roles/reducers';\nimport Contact from './contact/reducers';\nimport Location from './location/reducers';\nimport Service from './service/reducers';\nimport Invoice from './invoice/reducers';\nimport RepeatingInvoice from './repeating-invoice/reducers';\nimport Currency from './currency/reducers';\nimport ChartAccount from './chart-account/reducers';\n\n\nexport default combineReducers({\n    Auth,\n    Layout,\n    User,\n    Role,\n    Contact,\n    Location,\n    Service,\n    Invoice,\n    RepeatingInvoice,\n    Currency,\n    ChartAccount\n    \n});\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n// account\nfunction login(params: { email: string; password: string }) {\n    const baseUrl = '/api/auth/';\n    return api.create(`${baseUrl}`, params);\n}\n\n\n\nfunction signup(params: { first_name: string;last_name: string; email: string; phone: string; password: string }) {\n    const baseUrl = '/register/';\n    return api.create(`${baseUrl}`, params);\n}\n\n\n\nfunction updateProfile(params: { first_name: string;last_name: string; email: string; phone: string }) {\n    const baseUrl = '/api/update_profile';\n    return api.updatePatch(`${baseUrl}`, params);\n}\n\nfunction updateProfileImage(params: { profile_image: File }) {\n    const baseUrl = '/api/update_profile';\n    return api.updateWithFile(`${baseUrl}`, params);\n}\n\nexport { login, signup, updateProfile, updateProfileImage };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getUser(params: {limit: number,page:number}) {\n    const baseUrl = '/api/users/';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction addUser(params: { first_name:string;last_name:string;email:string;password:string;phone:string;groups:number[];is_active:boolean }) {\n    const baseUrl = '/api/users/';\n    return api.create(`${baseUrl}`,params);\n}\n\n\nexport { getUser, addUser };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getRole(params: {limit: number,page:number}) {\n    const baseUrl = '/api/groups';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction getUserRole() {\n    const baseUrl = '/api/user_role';\n    return api.get(`${baseUrl}`,{});\n}\n\n\n\nexport { getRole,getUserRole };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getContact(params: {limit: number,page:number}) {\n    const baseUrl = '/api/contact/';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction getContactDetails(params:any) {\n    const baseUrl = `/api/contact/${params.payload}`;\n    return api.get(`${baseUrl}`,null);\n}\n\nfunction getContactInvoice(params:any) {\n    const baseUrl = `/api/invoice?contact_id=${params.id}&limit=${params.limit}&page=${params.page}`;\n    return api.get(`${baseUrl}`,null);\n}\n\nfunction getContactInvoiceSetting(params:any) {\n    const baseUrl = `/api/invoice-setting?contact_id=${params.payload}`;\n    return api.get(`${baseUrl}`,null);\n}\n\nfunction updateContactInvoiceSetting(params:any) {\n    const baseUrl = `/api/invoice-setting/`;\n    return api.create(`${baseUrl}`,params.payload);\n}\n\nfunction getAllContact() {\n    const baseUrl = '/api/contact/';\n    return api.get(`${baseUrl}`,{});\n}\n\nfunction addContact(params: { name:string,client_id:string,contact_type:string,contact_person:string,phone:string,email:string,city:string,country:string,billing_address:string }) {\n    const baseUrl = '/api/contact/';\n    return api.create(`${baseUrl}`,params);\n}\n\nfunction deleteContact(id:number) {\n    const baseUrl = `/api/contact/${id}/`;\n    return api.delete(`${baseUrl}`);\n}\n\n\nexport { getContact, addContact,deleteContact,getAllContact, getContactInvoice, getContactDetails, getContactInvoiceSetting, updateContactInvoiceSetting };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getCountry(params: {}) {\n    const baseUrl = '/api/countries/';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction getCity(params: {country:number}) {\n    const baseUrl = '/api/cities';\n    return api.get(`${baseUrl}`,params);\n}\n\n\n\n\nexport { getCountry,getCity };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getService(params: {limit: number,page:number}) {\n    const baseUrl = '/api/service/';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction getContactService(params: {contact_id:number}) {\n    const baseUrl = '/api/service/';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction addService(params: { service: any[] }) {\n    const baseUrl = '/api/service/';\n    return api.create(`${baseUrl}`,params);\n}\n\n\n\nexport { getService, getContactService, addService };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getInvoice(params: {limit: number,page:number}) {\n    const baseUrl = '/api/invoice/';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction getInvoiceDetails(params:any) {\n    const baseUrl = `/api/invoice/${params.payload}/`;\n    return api.get(`${baseUrl}`,null);\n}\n\nexport { getInvoice,getInvoiceDetails };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getRepeatingInvoice(params: {limit: number,page:number}) {\n    const baseUrl = '/api/repeating-invoice/';\n    return api.get(`${baseUrl}`,params);\n}\n\nfunction getRepeatingInvoiceDetails(params:any) {\n    const baseUrl = `/api/repeating-invoice/${params.payload}/`;\n    return api.get(`${baseUrl}`,{});\n}\n\nexport { getRepeatingInvoice, getRepeatingInvoiceDetails };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getCurrency() {\n    const baseUrl = '/api/currency/';\n    return api.get(`${baseUrl}`,{});\n}\n\n\nexport { getCurrency };\n","import { APICore } from './apiCore';\n\nconst api = new APICore();\n\n\nfunction getChartAccount() {\n    const baseUrl = '/api/account/';\n    return api.get(`${baseUrl}`,{});\n}\n\n\nexport { getChartAccount };\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\nimport config from '../../config';\n// apicore\nimport { APICore, setAuthorization } from '../../helpers/api/apiCore';\n\n// helpers\nimport {\n    login as loginApi,\n    signup as signupApi,\n    updateProfile as updateProfileApi,\n    updateProfileImage as updateProfileImageApi,\n} from '../../helpers/';\n\n// actions\nimport { authApiResponseSuccess, authApiResponseError } from './actions';\n\n// constants\nimport { AuthActionTypes } from './constants';\n\ninterface UserData {\n    payload: {\n        email: string;\n        phone: string;\n        password: string;\n        first_name: string;\n        last_name: string;\n        profile_image: File;\n    };\n    type: string;\n}\n\nconst api = new APICore();\n\n/**\n * Login the user\n * @param {*} payload - username and password\n */\nfunction* login({ payload: { email, password }, type }: UserData): SagaIterator {\n    try {\n        const response = yield call(loginApi, { email, password });\n        const result = response.data;\n        // NOTE - You can change this according to response format from your api\n        \n        if(result.success){\n            api.setLoggedInUser(result.data);\n            setAuthorization(result.data.access);\n            yield put(authApiResponseSuccess(AuthActionTypes.LOGIN_USER, result.data));\n        }else{\n            yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, result.error));\n            api.setLoggedInUser(null);\n            setAuthorization(null);\n        }\n        \n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\n/**\n * Logout the user\n */\nfunction* logout(): SagaIterator {\n    try {\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGOUT_USER, {}));\n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.LOGOUT_USER, error));\n    }\n}\n\nfunction* signup({ payload: { first_name,last_name, email, phone, password } }: UserData): SagaIterator {\n    try {\n        const response = yield call(signupApi, { first_name,last_name, email, phone, password });\n        const user = response.data;\n        // api.setLoggedInUser(user);\n        // setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.SIGNUP_USER, user));\n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.SIGNUP_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\n\nfunction* updateProfile({ payload: { first_name,last_name, email, phone } }: UserData): SagaIterator {\n    try {\n        const response = yield call(updateProfileApi, { first_name,last_name, email, phone });\n        const result = response.data\n        if(result.success){\n            const profile = JSON.parse(localStorage.getItem('ccl_user') || '{}');\n            Object.keys({ first_name,last_name, email, phone }).forEach((key) => {\n                profile[key] = { first_name,last_name, email, phone }[key];\n            });\n            localStorage.setItem('ccl_user', JSON.stringify(profile));\n            yield put(authApiResponseSuccess(AuthActionTypes.UPDATE_PROFILE, response.data));\n        }else{\n            yield put(authApiResponseError(AuthActionTypes.UPDATE_PROFILE, result.error));\n        }\n        \n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.UPDATE_PROFILE, error));\n    }\n}\n\nfunction* updateProfileImage({ payload: { profile_image } }: UserData): SagaIterator {\n    try {\n        const response = yield call(updateProfileImageApi, { profile_image });\n        const result = response.data;\n        if(result.success){\n            const profile = JSON.parse(localStorage.getItem('ccl_user') || '{}');\n            profile['profile_image'] = config.API_URL+result.data.profile_image\n            localStorage.setItem('ccl_user', JSON.stringify(profile));\n            yield put(authApiResponseSuccess(AuthActionTypes.UPDATE_PROFILE_IMAGE, response.data));\n        }else{\n            yield put(authApiResponseError(AuthActionTypes.UPDATE_PROFILE_IMAGE, result.error));\n        }\n        \n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.UPDATE_PROFILE_IMAGE, error));\n    }\n}\nexport function* watchLoginUser() {\n    yield takeEvery(AuthActionTypes.LOGIN_USER, login);\n}\n\nexport function* watchLogout() {\n    yield takeEvery(AuthActionTypes.LOGOUT_USER, logout);\n}\n\nexport function* watchSignup(): any {\n    yield takeEvery(AuthActionTypes.SIGNUP_USER, signup);\n}\n\n\n\nexport function* watchUpdateProfile(): any {\n    yield takeEvery(AuthActionTypes.UPDATE_PROFILE, updateProfile);\n}\n\nexport function* watchUpdateProfileImage(): any {\n    yield takeEvery(AuthActionTypes.UPDATE_PROFILE_IMAGE, updateProfileImage);\n}\n\nfunction* authSaga() {\n    yield all([fork(watchLoginUser), fork(watchLogout), fork(watchSignup), fork(watchUpdateProfile),fork(watchUpdateProfileImage)]);\n}\n\nexport default authSaga;\n","import { all, call, fork, takeEvery } from 'redux-saga/effects';\n\n// constants\nimport { LayoutActionTypes } from './constants';\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass: string, action = 'toggle') {\n    switch (action) {\n        case 'add':\n            if (document.body) document.body.classList.add(cssClass);\n            break;\n        case 'remove':\n            if (document.body) document.body.classList.remove(cssClass);\n            break;\n        default:\n            if (document.body) document.body.classList.toggle(cssClass);\n            break;\n    }\n\n    return true;\n}\n\n/**\n * ---------------------------------------------------------------------------------------------------------------------------\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\n * For now, we are just applying the required logic on frontend side\n * ----------------------------------------------------------------------------------------------------------------------------\n */\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\n    } catch (error) {}\n}\n\n/**\n * Hides the rightsidebar\n */\nfunction* hideRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\n    } catch (error) {}\n}\n\nexport function* watchShowRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.SHOW_RIGHT_SIDEBAR, showRightSidebar);\n}\n\nexport function* watchHideRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.HIDE_RIGHT_SIDEBAR, hideRightSidebar);\n}\n\nfunction* LayoutSaga(): any {\n    yield all([fork(watchShowRightSidebar), fork(watchHideRightSidebar)]);\n}\n\nexport default LayoutSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getUser as getUserApi,\n    addUser as addUserApi\n    \n} from '../../helpers';\n\ninterface UserData {\n    payload: {\n        id: number;\n        first_name: string;\n        last_name: string;\n        email: string;\n        password: string;\n        phone: string;\n        groups: number[];\n        is_active: boolean;\n        limit: number;\n        page: number;\n    };\n    type: string;\n}\n\nfunction* getUser({ payload: {limit,page}}:UserData):SagaIterator {\n    try {\n        const response = yield call(getUserApi,{limit,page});\n        const data = response.data;\n        yield put({type: 'GET_USER_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_USER_FAILED', error: error});\n        \n    }\n}\n\nfunction* addUser({ payload: {first_name,last_name,email,password,phone,groups,is_active} }: UserData):SagaIterator {\n    \n    try {\n        const response = yield call(addUserApi,{first_name,last_name,email,password,phone,groups,is_active});\n        const result = response.data;\n        \n        if(result.success){\n            yield put({type: 'ADD_USER_SUCCESS' , user: result.data});\n        }else{\n            yield put({type: 'ADD_USER_FAILED', error: result.error});\n        }\n        \n    } catch (error) {\n        yield put({type: 'ADD_USER_FAILED', error: error});\n        \n    }\n}\n\n\nexport function* watchGetUser() {\n    yield takeEvery('GET_USER_REQUESTED', getUser);\n}\n\nexport function* watchAddUser() {\n    yield takeEvery('ADD_USER_REQUESTED', addUser);\n}\n\n\n\nfunction* userSaga() {\n    yield all([fork(watchGetUser),fork(watchAddUser)]);\n}\n\nexport default userSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getRole as getRoleApi,\n    getUserRole as getUserRoleApi,\n        \n} from '../../helpers';\n\ninterface RoleData {\n    payload: {\n        limit: number;\n        page: number;\n    };\n    type: string;\n}\n\nfunction* getRole({ payload: {limit,page}}:RoleData):SagaIterator {\n    try {\n        const response = yield call(getRoleApi,{limit,page});\n        const data = response.data;\n        yield put({type: 'GET_ROLE_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_ROLE_FAILED', error: error});\n        \n    }\n}\n\nfunction* getUserRole():SagaIterator {\n    try {\n        const response = yield call(getUserRoleApi);\n        const roles = response.data;\n        yield put({type: 'GET_USERROLE_SUCCESS' , user_role: roles.permissions});\n    } catch (error) {\n        yield put({type: 'GET_USERROLE_FAILED', error: error});\n        \n    }\n}\n\n\n\n\nexport function* watchGetRole() {\n    yield takeEvery('GET_ROLE_REQUESTED', getRole);\n}\n\nexport function* watchGetUserRole() {\n    yield takeEvery('GET_USERROLE_REQUESTED', getUserRole);\n}\n\n\n\nfunction* roleSaga() {\n    yield all([fork(watchGetRole),fork(watchGetUserRole)]);\n}\n\nexport default roleSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getContact as getContactApi,\n    getContactInvoice as getContactInvoiceApi,\n    getContactInvoiceSetting as getContactInvoiceSettingApi,\n    updateContactInvoiceSetting as updateContactInvoiceSettingApi,\n    getContactDetails as getContactDetailsApi,\n    getAllContact as getAllContactApi,\n    addContact as addContactApi,\n    deleteContact as deleteContactApi\n    \n} from '../../helpers';\n\ninterface ContactData {\n    payload: {\n        id: number;\n        name: string;\n        client_id: string;\n        contact_type: string;\n        contact_person: string;\n        phone: string;\n        email: string;\n        city: string;\n        country: string;\n        billing_address: string;\n        limit: number;\n        page: number;\n    };\n    type: string;\n}\n\nfunction* getContact({ payload: {limit,page}}:ContactData):SagaIterator {\n    try {\n        const response = yield call(getContactApi,{limit,page});\n        const data = response.data;\n        yield put({type: 'GET_CONTACT_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_CONTACT_FAILED', error: error});\n        \n    }\n}\n\n\nfunction* getContactInvoice({ payload }:any):SagaIterator {\n    try {\n        const response = yield call(getContactInvoiceApi,{...payload});\n        const data = response.data;\n        // console.log(\"data\",data)\n\n        yield put({type: 'GET_CONTACT_INVOICE_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_CONTACT_INVOICE_FAILED', error: error});\n        \n    }\n}\n\n\nfunction* getContactInvoiceSetting({ payload }:ContactData):SagaIterator {\n    try {\n        const response = yield call(getContactInvoiceSettingApi,{payload});\n        const data = response.data;\n        yield put({type: 'GET_CONTACT_INVOICE_SETTING_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_CONTACT_INVOICE_SETTING_FAILED', error: error});\n        \n    }\n}\n\n\nfunction* updateContactInvoiceSetting({ payload }:any):SagaIterator {\n    try {\n        const response = yield call(updateContactInvoiceSettingApi,{payload});\n        const data = response.data;\n        if(data.success){\n            yield put({type: 'UPDATE_CONTACT_INVOICE_SETTING_SUCCESS' , data: data.data});\n        }else{\n            yield put({type: 'UPDATE_CONTACT_INVOICE_SETTING_FAILED', error: data.error});\n        }\n    } catch (error) {\n        console.log(\"error\",error)\n        yield put({type: 'UPDATE_CONTACT_INVOICE_SETTING_FAILED', error: error});\n        \n    }\n}\n\n\nfunction* getContactDetails({ payload }:ContactData):SagaIterator {\n    try {\n        const response = yield call(getContactDetailsApi,{payload});\n        const data = response.data;\n        yield put({type: 'GET_CONTACT_DETAILS_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_CONTACT_DETAILS_FAILED', error: error});\n        \n    }\n}\n\n\n\nfunction* getAllContact():SagaIterator {\n    try {\n        const response = yield call(getAllContactApi);\n        const data = response.data;\n        yield put({type: 'GET_ALLCONTACT_SUCCESS' , data: data.results});\n    } catch (error) {\n        yield put({type: 'GET_ALLCONTACT_FAILED', error: error});\n        \n    }\n}\n\n\n\nfunction* addContact({ payload: {name,client_id,contact_type,contact_person,phone,email,city,country,billing_address} }: ContactData):SagaIterator {\n    \n    try {\n        const response = yield call(addContactApi,{name,client_id,contact_type,contact_person,phone,email,city,country,billing_address});\n        const result = response.data;\n        if(result.success){\n            yield put({type: 'ADD_CONTACT_SUCCESS' , contact: result.data});\n        }else{\n            yield put({type: 'ADD_CONTACT_FAILED', error: result.error});\n        }\n        \n    } catch (error) {\n        yield put({type: 'ADD_CONTACT_FAILED', error: error});\n        \n    }\n}\n\nfunction* deleteContact({ payload: {id} }: ContactData):SagaIterator {\n    try {\n        console.log(id)\n        const response = yield call(deleteContactApi,id);\n        const result = response.data;\n        if(result.success){\n            yield put({type: 'DELETE_CONTACT_SUCCESS' , id: id});\n        }else{\n            yield put({type: 'DELETE_CONTACT_FAILED', error: result.error});\n        }\n        \n    } catch (error) {\n        yield put({type: 'DELETE_CONTACT_FAILED', error: error});\n        \n    }\n}\n\n\nexport function* watchGetContact() {\n    yield takeEvery('GET_CONTACT_REQUESTED', getContact);\n}\n\n\nexport function* watchGetContactInvoice() {\n    yield takeEvery('GET_CONTACT_INVOICE_REQUESTED', getContactInvoice);\n}\n\nexport function* watchGetContactInvoiceSetting() {\n    yield takeEvery('GET_CONTACT_INVOICE_SETTING_REQUESTED', getContactInvoiceSetting);\n}\n\nexport function* watchUpdateContactInvoiceSetting() {\n    yield takeEvery('UPDATE_CONTACT_INVOICE_SETTING_REQUESTED', updateContactInvoiceSetting);\n}\n\nexport function* watchGetContactDetails() {\n    yield takeEvery('GET_CONTACT_DETAILS_REQUESTED', getContactDetails);\n}\n\n\nexport function* watchGetAllContact() {\n    yield takeEvery('GET_ALLCONTACT_REQUESTED', getAllContact);\n}\n\n\n\nexport function* watchAddContact() {\n    yield takeEvery('ADD_CONTACT_REQUESTED', addContact);\n}\n\nexport function* watchDeleteContact() {\n    yield takeEvery('DELETE_CONTACT_REQUESTED', deleteContact);\n}\n\n\n\nfunction* contactSaga() {\n    yield all([fork(watchGetContact),fork(watchAddContact),fork(watchDeleteContact),fork(watchGetAllContact), fork(watchGetContactInvoice), fork(watchGetContactDetails), fork(watchGetContactInvoiceSetting), fork(watchUpdateContactInvoiceSetting)]);\n}\n\nexport default contactSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getCountry as getCountryApi,    \n    getCity as getCityApi,    \n} from '../../helpers';\n\ninterface LocationData {\n    payload: {\n        id: number;\n        name: string;\n        country: any;\n    };\n    type: string;\n}\n\nfunction* getCountry({ payload: {}}:LocationData):SagaIterator {\n    try {\n        const response = yield call(getCountryApi,{});\n        const data = response.data;\n        yield put({type: 'GET_COUNTRY_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_COUNTRY_FAILED', error: error});\n        \n    }\n}\n\nfunction* getCity({ payload: {country}}:LocationData):SagaIterator {\n    try {\n        if (country!=='' && country!==null){\n            const response = yield call(getCityApi,{country});\n            const data = response.data;\n            yield put({type: 'GET_CITY_SUCCESS' , data: data});\n        }\n        else{\n            yield put({type: 'GET_CITY_FAILED', error: \"No country selected\"});\n        }\n    } catch (error) {\n        yield put({type: 'GET_CITY_FAILED', error: error});\n        \n    }\n}\n\n\n\nexport function* watchGetCountry() {\n    yield takeEvery('GET_COUNTRY_REQUESTED', getCountry);\n}\n\nexport function* watchGetCity() {\n    yield takeEvery('GET_CITY_REQUESTED', getCity);\n}\n\n\nfunction* locationSaga() {\n    yield all([fork(watchGetCountry),fork(watchGetCity)]);\n}\n\n\n\nexport default locationSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getService as getServiceApi,\n    getContactService as getContactServiceApi,\n    addService as addServiceApi,\n    \n} from '../../helpers';\n\ninterface ServiceData {\n    payload: {\n        id: number;\n        service: any[];\n        limit: number;\n        page: number;\n        contact_id: number;\n    };\n    type: string;\n}\n\nfunction* getService({ payload: {limit,page}}:ServiceData):SagaIterator {\n    try {\n        const response = yield call(getServiceApi,{limit,page});\n        const data = response.data;\n        yield put({type: 'GET_SERVICE_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_SERVICE_FAILED', error: error});\n        \n    }\n}\n\nfunction* getContactService({ payload: {contact_id}}:ServiceData):SagaIterator {\n    try {\n        const response = yield call(getContactServiceApi,{contact_id});\n        const data = response.data;\n        yield put({type: 'GET_CONTACTSERVICE_SUCCESS' , data: data.results});\n    } catch (error) {\n        yield put({type: 'GET_CONTACTSERVICE_FAILED', error: error});\n        \n    }\n}\n\n\n\nfunction* addService({ payload: {service} }: ServiceData):SagaIterator {\n    console.log(service)\n    try {\n        const response = yield call(addServiceApi,{service});\n        const result = response.data;\n        \n        if(result.success){\n            yield put({type: 'ADD_SERVICE_SUCCESS' , contact: result.data});\n        }else{\n            yield put({type: 'ADD_SERVICE_FAILED', error: result.error});\n        }\n        \n    } catch (error) {\n        yield put({type: 'ADD_SERVICE_FAILED', error: error});\n        \n    }\n}\n\n\n\nexport function* watchGetService() {\n    yield takeEvery('GET_SERVICE_REQUESTED', getService);\n}\n\nexport function* watchGetContactService() {\n    yield takeEvery('GET_CONTACTSERVICE_REQUESTED', getContactService);\n}\n\n\n\nexport function* watchAddService() {\n    yield takeEvery('ADD_SERVICE_REQUESTED', addService);\n}\n\n\n\nfunction* serviceSaga() {\n    yield all([fork(watchGetService),fork(watchAddService),fork(watchGetContactService)]);\n}\n\nexport default serviceSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getInvoice as getInvoiceApi,    \n    getInvoiceDetails as getInvoiceDetailsApi,    \n} from '../../helpers';\n\ninterface InvoiceData {\n    payload: {\n        id: number;\n        limit: number;\n        page: number;\n    };\n    type: string;\n}\n\nfunction* getInvoice({ payload: {limit,page}}:InvoiceData):SagaIterator {\n    try {\n        const response = yield call(getInvoiceApi,{limit,page});\n        const data = response.data;\n        yield put({type: 'GET_INVOICE_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_INVOICE_FAILED', error: error});\n        \n    }\n}\n\nfunction* getInvoiceDetails({ payload }:InvoiceData):SagaIterator {\n    try {\n        const response = yield call(getInvoiceDetailsApi,{payload});\n        const data = response.data;\n        yield put({type: 'GET_INVOICEDETAILS_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_INVOICEDETAILS_FAILED', error: error});\n        \n    }\n}\n\n\nexport function* watchGetInvoice() {\n    yield takeEvery('GET_INVOICE_REQUESTED', getInvoice);\n}\n\nexport function* watchGetInvoiceDetails() {\n    yield takeEvery('GET_INVOICEDETAILS_REQUESTED', getInvoiceDetails);\n}\n\n\n\nfunction* invoiceSaga() {\n    yield all([fork(watchGetInvoice),fork(watchGetInvoiceDetails)]);\n}\n\nexport default invoiceSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getRepeatingInvoice as getRepeatingInvoiceApi,    \n    getRepeatingInvoiceDetails as getRepeatingInvoiceDetailsApi,    \n} from '../../helpers';\n\ninterface InvoiceData {\n    payload: {\n        id: number;\n        limit: number;\n        page: number;\n    };\n    type: string;\n}\n\nfunction* getRepeatingInvoice({ payload: {limit,page}}:InvoiceData):SagaIterator {\n    try {\n        const response = yield call(getRepeatingInvoiceApi,{limit,page});\n        const data = response.data;\n        yield put({type: 'GET_REPEATINGINVOICE_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_REPEATINGINVOICE_FAILED', error: error});\n        \n    }\n}\n\nfunction* getRepeatingInvoiceDetails({ payload }:InvoiceData):SagaIterator {\n    try {\n        const response = yield call(getRepeatingInvoiceDetailsApi,{payload});\n        const data = response.data;\n        yield put({type: 'GET_REPEATINGINVOICEDETAILS_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_REPEATINGINVOICEDETAILS_FAILED', error: error});\n        \n    }\n}\n\n\nexport function* watchGetRepeatingInvoice() {\n    yield takeEvery('GET_REPEATINGINVOICE_REQUESTED', getRepeatingInvoice);\n}\n\nexport function* watchGetRepeatingInvoiceDetails() {\n    yield takeEvery('GET_REPEATINGINVOICEDETAILS_REQUESTED', getRepeatingInvoiceDetails);\n}\n\n\n\nfunction* repeatingInvoiceSaga() {\n    yield all([fork(watchGetRepeatingInvoice),fork(watchGetRepeatingInvoiceDetails)]);\n}\n\nexport default repeatingInvoiceSaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getCurrency as getCurrencyApi,        \n} from '../../helpers';\n\n\n\nfunction* getCurrency():SagaIterator {\n    try {\n        const response = yield call(getCurrencyApi);\n        const data = response.data;\n        yield put({type: 'GET_CURRENCY_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_CURRENCY_FAILED', error: error});\n        \n    }\n}\n\n\n\n\nexport function* watchGetCurrency() {\n    yield takeEvery('GET_CURRENCY_REQUESTED', getCurrency);\n}\n\n\n\n\n\nfunction* currencySaga() {\n    yield all([fork(watchGetCurrency)]);\n}\n\nexport default currencySaga;\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// helpers\nimport {\n    getChartAccount as getChartAccountApi,        \n} from '../../helpers';\n\n\n\nfunction* getChartAccount():SagaIterator {\n    try {\n        const response = yield call(getChartAccountApi);\n        const data = response.data;\n        yield put({type: 'GET_CHARTACCOUNT_SUCCESS' , data: data});\n    } catch (error) {\n        yield put({type: 'GET_CHARTACCOUNT_FAILED', error: error});\n        \n    }\n}\n\n\n\n\nexport function* watchGetChartAccount() {\n    yield takeEvery('GET_CHARTACCOUNT_REQUESTED', getChartAccount);\n}\n\n\n\n\n\nfunction* charAccountSaga() {\n    yield all([fork(watchGetChartAccount)]);\n}\n\nexport default charAccountSaga;\n","import { all } from 'redux-saga/effects';\n\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\nimport userSaga from './user/saga';\nimport roleSaga from './roles/saga';\nimport contactSaga from './contact/saga';\nimport locationSaga from './location/saga';\nimport serviceSaga from './service/saga';\nimport invoiceSaga from './invoice/saga';\nimport repeatingInvoiceSaga from './repeating-invoice/saga';\nimport currencySaga from './currency/saga';\nimport chartAccountSaga from './chart-account/saga';\n\n\n\nexport default function* rootSaga() {\n    yield all([authSaga(), layoutSaga(), userSaga(),roleSaga(),contactSaga(),locationSaga(),serviceSaga(),invoiceSaga(),currencySaga(),chartAccountSaga(),repeatingInvoiceSaga()]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nlet store: any;\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const localstore = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(rootSaga);\n    store = localstore;\n    return localstore;\n}\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\n\nReactDOM.render(\n    <Provider store={configureStore({})}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// constants\nimport { AuthActionTypes } from './constants';\n\nexport interface AuthActionType {\n    type:\n        | AuthActionTypes.API_RESPONSE_SUCCESS\n        | AuthActionTypes.API_RESPONSE_ERROR\n        | AuthActionTypes.LOGIN_USER\n        | AuthActionTypes.LOGOUT_USER\n        | AuthActionTypes.RESET\n        | AuthActionTypes.SIGNUP_USER\n        | AuthActionTypes.UPDATE_PROFILE\n        | AuthActionTypes.UPDATE_PROFILE_IMAGE\n    payload: {} | string;\n}\n\ninterface UserData {\n    id: number;\n    email: string;\n    phone: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    profile_image: File;\n    role: string;\n    token: string;\n}\n\n// common success\nexport const authApiResponseSuccess = (actionType: string, data: UserData | {}): AuthActionType => ({\n    type: AuthActionTypes.API_RESPONSE_SUCCESS,\n    payload: { actionType, data },\n});\n// common error\nexport const authApiResponseError = (actionType: string, error: string): AuthActionType => ({\n    type: AuthActionTypes.API_RESPONSE_ERROR,\n    payload: { actionType, error },\n});\n\nexport const loginUser = (email: string, password: string): AuthActionType => ({\n    type: AuthActionTypes.LOGIN_USER,\n    payload: { email, password },\n});\n\nexport const logoutUser = (): AuthActionType => ({\n    type: AuthActionTypes.LOGOUT_USER,\n    payload: {},\n});\n\nexport const signupUser = (first_name: string, last_name: string, email: string,phone: string, password: string): AuthActionType => ({\n    type: AuthActionTypes.SIGNUP_USER,\n    payload: { first_name,last_name, email,phone, password },\n});\n\n\n\nexport const resetAuth = (): AuthActionType => ({\n    type: AuthActionTypes.RESET,\n    payload: {},\n});\n\nexport const UpdateProfile = (formData:UserData): AuthActionType => ({\n    type: AuthActionTypes.UPDATE_PROFILE,\n    payload: formData,\n});\n\nexport const UpdateProfileImage = (profile_image:File): AuthActionType => ({\n    type: AuthActionTypes.UPDATE_PROFILE_IMAGE,\n    payload: profile_image,\n});\n","export * from './layout';\n","export const GET_SERVICE_REQUESTED ='GET_SERVICE_REQUESTED'\nexport const GET_SERVICE_SUCCESS ='GET_SERVICE_SUCCESS'\nexport const GET_SERVICE_FAILED ='GET_SERVICE_FAILED'\n\nexport const GET_CONTACTSERVICE_REQUESTED ='GET_CONTACTSERVICE_REQUESTED'\nexport const GET_CONTACTSERVICE_SUCCESS ='GET_CONTACTSERVICE_SUCCESS'\nexport const GET_CONTACTSERVICE_FAILED ='GET_CONTACTSERVICE_FAILED'\n\nexport const ADD_SERVICE_REQUESTED ='ADD_SERVICE_REQUESTED'\nexport const ADD_SERVICE_SUCCESS ='ADD_SERVICE_SUCCESS'\nexport const ADD_SERVICE_FAILED ='ADD_SERVICE_FAILED'\n\n\n\n\n\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ninterface PaginationProps {\n    tableProps: any;\n    sizePerPageList: {\n        text: string;\n        value: number;\n    }[];\n}\n\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps) => {\n    /**\n     * pagination count , index\n     */\n    const [pageCount, setPageCount] = useState<number>(tableProps.pageCount);\n    const [pageIndex, setPageIndex] = useState<number>(tableProps.state.pageIndex);\n\n    useEffect(() => {\n        setPageCount(tableProps.pageCount);\n        setPageIndex(tableProps.state.pageIndex);\n    }, [tableProps.pageCount, tableProps.state.pageIndex]);\n\n    /**\n     * get filter pages\n     */\n    const filterPages = useCallback(\n        (visiblePages: any, totalPages: number) => {\n            return visiblePages.filter((page: any) => page <= pageCount);\n        },\n        [pageCount]\n    );\n\n    /**\n     * handle visible pages\n     */\n    const getVisiblePages = useCallback(\n        (page: number | null, total: number) => {\n            if (total < 7) {\n                return filterPages([1, 2, 3, 4, 5, 6], total);\n            } else {\n                if (page! % 5 >= 0 && page! > 4 && page! + 2 < total) {\n                    return [1, page! - 1, page!, page! + 1, total];\n                } else if (page! % 5 >= 0 && page! > 4 && page! + 2 >= total) {\n                    return [1, total - 3, total - 2, total - 1, total];\n                } else {\n                    return [1, 2, 3, 4, 5, total];\n                }\n            }\n        },\n        [filterPages]\n    );\n\n    /**\n     * handle page change\n     * @param page - current page\n     * @returns\n     */\n    const changePage = (page: number) => {\n        const activePage = pageIndex + 1;\n\n        if (page === activePage) {\n            return;\n        }\n\n        const visiblePages = getVisiblePages(page, pageCount);\n        setVisiblePages(filterPages(visiblePages, pageCount));\n\n        tableProps.gotoPage(page - 1);\n    };\n\n    useEffect(() => {\n        const visiblePages = getVisiblePages(null, pageCount);\n        setVisiblePages(visiblePages);\n    }, [pageCount, getVisiblePages]);\n\n    const [visiblePages, setVisiblePages] = useState<number[]>(getVisiblePages(null, pageCount));\n    const activePage: number = pageIndex + 1;\n\n    return (\n        <>\n            <div className=\"d-lg-flex align-items-center text-center pb-1\">\n                {sizePerPageList.length > 0 && (\n                    <div className=\"d-inline-block me-3\">\n                        <label className=\"me-1\">Display :</label>\n                        <select\n                            value={tableProps.state.pageSize}\n                            onChange={(e: any) => {\n                                tableProps.setPageSize(Number(e.target.value));\n                            }}\n                            className=\"form-select d-inline-block w-auto\"\n                        >\n                            {(sizePerPageList || []).map((pageSize, index) => {\n                                return (\n                                    <option key={index} value={pageSize.value}>\n                                        {pageSize.text}\n                                    </option>\n                                );\n                            })}\n                        </select>\n                    </div>\n                )}\n\n                <span className=\"me-3\">\n                    Page{' '}\n                    <strong>\n                        {pageIndex + 1} of {tableProps.pageOptions.length}\n                    </strong>{' '}\n                </span>\n\n                <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\n                    <label className=\"form-label\">Go to page : </label>\n                    <input\n                        type=\"number\"\n                        value={pageIndex + 1}\n                        min=\"1\"\n                        onChange={(e: any) => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                            tableProps.gotoPage(page);\n                            setPageIndex(tableProps.state.pageIndex);\n                        }}\n                        className=\"form-control w-25 ms-1 d-inline-block\"\n                    />\n                </span>\n\n                <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0\">\n                    <li\n                        key=\"prevpage\"\n                        className={classNames('page-item', 'paginate_button', 'previous', {\n                            disabled: activePage === 1,\n                        })}\n                        onClick={() => {\n                            if (activePage === 1) return;\n                            changePage(activePage - 1);\n                        }}\n                    >\n                        <Link to=\"#\" className=\"page-link\">\n                            <i className=\"mdi mdi-chevron-left\"></i>\n                        </Link>\n                    </li>\n                    {(visiblePages || []).map((page, index, array) => {\n                        return array[index - 1] + 1 < page ? (\n                            <React.Fragment key={page}>\n                                <li className=\"page-item disabled d-none d-xl-inline-block\">\n                                    <Link to=\"#\" className=\"page-link\">\n                                        ...\n                                    </Link>\n                                </li>\n                                <li\n                                    className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\n                                        active: activePage === page,\n                                    })}\n                                    onClick={(e: any) => changePage(page)}\n                                >\n                                    <Link to=\"#\" className=\"page-link\">\n                                        {page}\n                                    </Link>\n                                </li>\n                            </React.Fragment>\n                        ) : (\n                            <li\n                                key={page}\n                                className={classNames('page-item', 'd-none', 'd-xl-inline-block', {\n                                    active: activePage === page,\n                                })}\n                                onClick={(e: any) => changePage(page)}\n                            >\n                                <Link to=\"#\" className=\"page-link\">\n                                    {page}\n                                </Link>\n                            </li>\n                        );\n                    })}\n                    <li\n                        key=\"nextpage\"\n                        className={classNames('page-item', 'paginate_button', 'next', {\n                            disabled: activePage === tableProps.pageCount,\n                        })}\n                        onClick={() => {\n                            if (activePage === tableProps.pageCount) return;\n                            changePage(activePage + 1);\n                        }}\n                    >\n                        <Link to=\"#\" className=\"page-link\">\n                            <i className=\"mdi mdi-chevron-right\"></i>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </>\n    );\n};\n\nexport default Pagination;\n","import React, { useRef, useEffect, forwardRef, useState } from 'react';\nimport {\n    useTable,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useGlobalFilter,\n    useAsyncDebounce,\n    useExpanded,\n} from 'react-table';\nimport classNames from 'classnames';\n\n\n// components\nimport Pagination from './Pagination';\n\ninterface GlobalFilterProps {\n    preGlobalFilteredRows: any;\n    globalFilter: any;\n    setGlobalFilter: any;\n    searchBoxClass: any;\n}\n\n// Define a default UI for filtering\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter, searchBoxClass }: GlobalFilterProps) => {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = useState<any>(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={classNames(searchBoxClass)}>\n            <span className=\"d-flex align-items-center justify-content-end\">\n                Search :{' '}\n                <input\n                    type=\"search\"\n                    value={value || ''}\n                    onChange={(e: any) => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                    className=\"form-control w-auto ms-1\"\n                />\n            </span>\n        </div>\n    );\n};\n\ninterface IndeterminateCheckboxProps {\n    indeterminate: any;\n    children?: React.ReactNode;\n}\n\nconst IndeterminateCheckbox = forwardRef<HTMLInputElement, IndeterminateCheckboxProps>(\n    ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = useRef();\n        const resolvedRef: any = ref || defaultRef;\n\n        useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate;\n        }, [resolvedRef, indeterminate]);\n\n        return (\n            <>\n                <div className=\"form-check\">\n                    <input type=\"checkbox\" className=\"form-check-input\" ref={resolvedRef} {...rest} />\n                    <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n                </div>\n            </>\n        );\n    }\n);\n\ninterface TableProps {\n    isSearchable?: boolean;\n    isSortable?: boolean;\n    pagination?: boolean;\n    isSelectable?: boolean;\n    isExpandable?: boolean;\n    sizePerPageList?: {\n        text: string;\n        value: number;\n    }[];\n    columns: {\n        Header: string; \n        accessor: string;\n        sort?: boolean;\n        Cell?: any;\n        className?: string;\n    }[];\n    data: any[];\n    pageSize?: any;\n    searchBoxClass?: string;\n    tableClass?: string;\n    theadClass?: string;\n    \n}\n\nconst Table = (props: TableProps) => {\n\n     \n\n    const isSearchable = props['isSearchable'] || false;\n    const isSortable = props['isSortable'] || false;\n    const pagination = props['pagination'] || false;\n    const isSelectable = props['isSelectable'] || false;\n    const isExpandable = props['isExpandable'] || false;\n    const sizePerPageList = props['sizePerPageList'] || [];\n\n    let otherProps: any = {};\n\n    if (isSearchable) {\n        otherProps['useGlobalFilter'] = useGlobalFilter;\n    }\n    if (isSortable) {\n        otherProps['useSortBy'] = useSortBy;\n    }\n    if (isExpandable) {\n        otherProps['useExpanded'] = useExpanded;\n    }\n    if (pagination) {\n        otherProps['usePagination'] = usePagination;\n    }\n    if (isSelectable) {\n        otherProps['useRowSelect'] = useRowSelect;\n    }\n\n    const dataTable = useTable(\n        {\n            columns: props['columns'],\n            data: props['data'],\n            initialState: { pageSize: props['pageSize'] || 10 },\n        },\n        otherProps.hasOwnProperty('useGlobalFilter') && otherProps['useGlobalFilter'],\n        otherProps.hasOwnProperty('useSortBy') && otherProps['useSortBy'],\n        otherProps.hasOwnProperty('useExpanded') && otherProps['useExpanded'],\n        otherProps.hasOwnProperty('usePagination') && otherProps['usePagination'],\n        otherProps.hasOwnProperty('useRowSelect') && otherProps['useRowSelect'],\n        (hooks) => {\n            isSelectable &&\n                hooks.visibleColumns.push((columns: any) => [\n                    // Let's make a column for selection\n                    {\n                        id: 'selection',\n                        // The header can use the table's getToggleAllRowsSelectedProps method\n                        // to render a checkbox\n                        Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\n                            <div>\n                                <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                            </div>\n                        ),\n                        // The cell can use the individual row's getToggleRowSelectedProps method\n                        // to the render a checkbox\n                        Cell: ({ row }: any) => (\n                            <div>\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                            </div>\n                        ),\n                    },\n                    ...columns,\n                ]);\n\n            isExpandable &&\n                hooks.visibleColumns.push((columns: any) => [\n                    // Let's make a column for selection\n                    {\n                        // Build our expander column\n                        id: 'expander', // Make sure it has an ID\n                        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }: any) => (\n                            <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? '-' : '+'}</span>\n                        ),\n                        Cell: ({ row }) =>\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                            // to build the toggle for expanding a row\n                            row.canExpand ? (\n                                <span\n                                    {...row.getToggleRowExpandedProps({\n                                        style: {\n                                            // We can even use the row.depth property\n                                            // and paddingLeft to indicate the depth\n                                            // of the row\n                                            paddingLeft: `${row.depth * 2}rem`,\n                                        },\n                                    })}\n                                >\n                                    {row.isExpanded ? '-' : '+'}\n                                </span>\n                            ) : null,\n                    },\n                    ...columns,\n                ]);\n        }\n    );\n\n    let rows = pagination ? dataTable.page : dataTable.rows;\n\n    return (\n        <>\n            <div>\n                {isSearchable && (\n                    <GlobalFilter\n                        preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n                        globalFilter={dataTable.state.globalFilter}\n                        setGlobalFilter={dataTable.setGlobalFilter}\n                        searchBoxClass={props['searchBoxClass']}\n                    />\n                )}\n            </div>\n            \n\n            <div className=\"table-responsive\">\n                <table\n                    {...dataTable.getTableProps()}\n                    className={classNames('table table-centered react-table', props['tableClass'])}\n                >\n                    <thead className={props['theadClass']}>\n                        {(dataTable.headerGroups || []).map((headerGroup: any) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {(headerGroup.headers || []).map((column: any) => (\n                                    <th\n                                        {...column.getHeaderProps(column.sort && column.getSortByToggleProps())}\n                                        className={classNames({\n                                            sorting_desc: column.isSortedDesc === true,\n                                            sorting_asc: column.isSortedDesc === false,\n                                            sortable: column.sort === true,\n                                        })}\n                                    >\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...dataTable.getTableBodyProps()}>\n                        {(rows || []).map((row: any, i: number) => {\n                            dataTable.prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {(row.cells || []).map((cell: any) => {\n                                        return (\n                                            <td\n                                                {...cell.getCellProps([\n                                                    {\n                                                        className: cell.column.className,\n                                                    },\n                                                ])}\n                                            >\n                                                {cell.render('Cell')}\n                                            </td>\n                                        );\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            {pagination && <Pagination tableProps={dataTable} sizePerPageList={sizePerPageList} />}\n\n            \n        </>\n    );\n};\n\nexport default Table;\n"],"sourceRoot":""}