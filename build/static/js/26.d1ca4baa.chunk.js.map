{"version":3,"sources":["pages/dashboard/AssetTypeChart.jsx","components/StatisticsWidget.tsx","pages/dashboard/Statistics.jsx","assets/images/dashboard/Available Balance.svg","assets/images/dashboard/total-investment.svg","assets/images/dashboard/Gain(LOSS).svg","assets/images/dashboard/Market Value of Investment.svg","assets/images/dashboard/Total Cash Injection.svg","pages/dashboard/CompanyDues.tsx","pages/dashboard/InvoiceChart.jsx","pages/dashboard/RevenueChart.tsx","pages/dashboard/index.jsx"],"names":["APICore","StatisticsWidget","styled","img","props","Card","className","style","backgroundColor","borderRadius","Body","Row","Col","duration","end","Statistics","useState","statistics","setStatistics","useSelector","state","Currency","selectedCurrency","useEffect","total_contact","draft_amount","awaiting_approval_amount","awaiting_payment_amount","paid_amount","variant","counterOptions","prefix","decimals","description","stats","color","CompanyDues","ProgressBar","now","label","RevenueChart","ChartjsDefaults","scale","grid","height","data","labels","datasets","borderColor","tension","fill","target","above","borderDash","options","bezierCurve","maintainAspectRatio","tooltips","intersect","hover","plugins","filler","propagate","legend","display","scales","x","y","ticks","stepSize","fontColor","Dashboard","xl"],"mappings":"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","file":"static/js/26.d1ca4baa.chunk.js","sourcesContent":["import * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {  useEffect, useLayoutEffect } from \"react\";\nimport { APICore } from '../../helpers/api/apiCore';\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { getAssetType } from \"../../redux/actions\";\n\nconst api = new APICore();\n\n\nconst AssetTypeChart = ({ isEdit }) => {\n  const dispatch = useDispatch();\n  // const asset_type = useSelector((state)=> state.AssetType.asset_types);\n  \n  useLayoutEffect(() => {\n    \n    am4core.addLicense(\"ch-custom-attribution\");\n    let chart = am4core.create(\"assetTypeChart\", am4charts.PieChart);\n    \n    // api.get(`/api/asset_type_graph`,{})\n    // .then(res=>{\n    //     chart.data=res.data;\n    // }) \n  \n    chart.data = [\n      {\n        amount: 10,\n        asset_type: \"3 mbps\"\n      },\n      {\n        amount: 20,\n        asset_type: \"4 mbps\"\n      },\n      {\n        amount: 30,\n        asset_type: \"6 mbps\"\n      },\n      {\n        amount: 20,\n        asset_type: \"8 mbps\"\n      },\n      {\n        amount: 10,\n        asset_type: \"10 mbps\"\n      }\n    ]\n  chart.dataSource.url = \"pie_chart_data.json\";\n  let pieSeries = chart.series.push(new am4charts.PieSeries());   \n  pieSeries.dataFields.value = \"amount\";\n  pieSeries.dataFields.category = \"asset_type\";\n  chart.innerRadius = am4core.percent(40);\n  pieSeries.slices.template.stroke = am4core.color(\"#4a2abb\");\n  pieSeries.slices.template.strokeWidth = 0;\n  pieSeries.slices.template.strokeOpacity = 1;\n  // pieSeries.labels.template.disabled = true;\n  // pieSeries.ticks.template.disabled = true;\n  chart.legend = new am4charts.Legend();\n  let marker = chart.legend.markers.template.children.getIndex(0);\n  marker.cornerRadius(12, 12, 12, 12);\n  marker.strokeWidth = 0;\n  let markerTemplate = chart.legend.markers.template;\n  markerTemplate.width = 10;\n  markerTemplate.height = 10;\n\n  }, []);\n  \n  // useEffect(()=>{\n  //   dispatch(getAssetType(0,1))\n  // },[])\n\n  return (\n    <Card className={isEdit ? 'mb-0':'mb-3'}>\n      <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n              <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                  <i className=\"mdi mdi-dots-vertical\"></i>\n              </Dropdown.Toggle>\n              \n          </Dropdown>\n\n          <h4 className=\"header-title mb-0\">Service</h4>\n          \n          <div id=\"assetTypeChart\" style={{ width: \"100%\", height: \"350px\" }}></div>\n          \n          {/* {!asset_type.length > 0 &&\n          <p>No asset type available</p>} */}\n         \n      </Card.Body>\n  </Card>\n    \n  )\n}\n\nexport default AssetTypeChart","import React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport CountUp from 'react-countup';\nimport styled from 'styled-components';\n\ninterface StatisticsWidgetProps {\n    variant: string;\n    description: string;\n    stats: string;\n    image: string;\n    color: string;\n    counterOptions?: any;\n}\n\nconst Image = styled.img`\n    height: 45px;\n`\n\nconst StatisticsWidget = (props: StatisticsWidgetProps) => {\n    return (\n        <>\n            <Card className=\"widget-rounded-circle\" style={{backgroundColor: props['color'], borderRadius:\"0.8rem\"}}>\n                <Card.Body>\n                    <Row>\n                        <Col >\n                            <div className=\"text-center\">\n                                \n                                <p className=\"text-cyans mt-1 text-truncate\">{props['description']}</p>\n                                \n                                \n                                <h3 className=\"text-blue mt-1\">\n                                    <span>\n                                        <CountUp duration={1} end={props['stats']} {...props['counterOptions']} />\n                                    </span>\n                                </h3>\n                                \n                                \n                            </div>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default StatisticsWidget;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// componets\nimport StatisticsWidget from '../../components/StatisticsWidget';\nimport AvailableBalanceImage from '../../assets/images/dashboard/Available Balance.svg';\nimport TotalInvestmentImage from '../../assets/images/dashboard/total-investment.svg';\nimport GainLossImage from '../../assets/images/dashboard/Gain(LOSS).svg';\nimport MarketValueImage from '../../assets/images/dashboard/Market Value of Investment.svg';\nimport TotalCashInjectionImage from '../../assets/images/dashboard/Total Cash Injection.svg';\nimport { APICore } from '../../helpers/api/apiCore';\nimport { useSelector } from 'react-redux';\n\nconst api = new APICore();\n\n\nconst Statistics = () => {\n    const[statistics,setStatistics] = useState({});\n    const scurrency = useSelector(state => state.Currency.selectedCurrency)\n    useEffect(()=>{\n\n        const data = {\n            total_contact: 500,\n            draft_amount: 420,\n            awaiting_approval_amount: 645,\n            awaiting_payment_amount: 785,\n            paid_amount: 310,\n\n        }\n        setStatistics(data)\n\n        // api.get(`/api/statistics`,{})\n        // .then(res=>{\n        //     setStatistics(res.data)\n        // }) \n    },[])\n    return (\n        <>\n            <Row >\n                <Col  >\n                    <StatisticsWidget\n                        variant=\"primary\"\n                        counterOptions={{\n                            prefix: '',\n                            decimals: 0,\n                        }}\n                        description=\"Total Contact\"\n                        stats={statistics.total_contact}\n                        color=\"#fff\"\n                    />\n                </Col>\n                <Col  >\n                    <StatisticsWidget\n                        variant=\"success\"\n                        description=\"Draft (5)\"\n                        counterOptions={{\n                            prefix: '৳',\n                            decimals: 2,\n                        }}\n                        stats={statistics.draft_amount}\n                        color=\"#fff\"\n                    />\n                </Col>\n                <Col  >\n                    <StatisticsWidget\n                        variant=\"info\"\n                        description=\"Awaiting Approval (33)\"\n                        counterOptions={{\n                            prefix: '৳',\n                            decimals: 2,\n                        }}\n                        stats={statistics.awaiting_approval_amount}\n                        color=\"#fff\"\n                    />\n                </Col>\n                <Col  >\n                    <StatisticsWidget \n                        variant=\"warning\" \n                        description=\"Awaiting Payment (25)\" \n                        counterOptions={{\n                            prefix: '৳',\n                            decimals: 2,\n                        }}\n                        stats={statistics.awaiting_payment_amount} \n                        color=\"#fff\" \n                    />\n                </Col>\n                <Col  >\n                <StatisticsWidget \n                    variant=\"warning\" \n                    description=\"Paid (18)\" \n                    counterOptions={{\n                        prefix: '৳',\n                        decimals: 2,\n                    }}\n                    stats={statistics.paid_amount} \n                    color=\"#fff\" \n                />\n                </Col>\n                \n            </Row>\n        </>\n    );\n};\n\nexport default Statistics;\n","export default __webpack_public_path__ + \"static/media/Available Balance.8a72c390.svg\";","export default __webpack_public_path__ + \"static/media/total-investment.bd055130.svg\";","export default __webpack_public_path__ + \"static/media/Gain(LOSS).c60d8c00.svg\";","export default __webpack_public_path__ + \"static/media/Market Value of Investment.af093a7d.svg\";","export default __webpack_public_path__ + \"static/media/Total Cash Injection.7ac3e123.svg\";","import React from 'react';\nimport {Card, Row, Col, ProgressBar } from 'react-bootstrap';\n\n// componets\n\nconst CompanyDues = () => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    \n\n                    <h4 className=\"header-title\">Company Dues</h4>\n                    \n                    <div className=\"mt-4\">\n                        <h6 className=\"text-uppercase\">\n                            Shuvo Software LTD <span className=\"float-end\">10%</span>\n                        </h6>\n\n                        <ProgressBar\n                            now={10}\n                            className=\"progress m-0\"\n                            label=\"10%\"\n                            // visuallyHidden\n                            variant=\"info\"\n                        />\n                    </div>\n\n                    <div className=\"mt-4\">\n                        <h6 className=\"text-uppercase\">\n                            Nasir Software LTD <span className=\"float-end\">20%</span>\n                        </h6>\n\n                        <ProgressBar\n                            now={20}\n                            className=\"progress m-0\"\n                            label=\"20%\"\n                            // visuallyHidden\n                            variant=\"info\"\n                        />\n                    </div>\n\n                    <div className=\"mt-4\">\n                        <h6 className=\"text-uppercase\">\n                            Titas Software LTD <span className=\"float-end\">30%</span>\n                        </h6>\n\n                        <ProgressBar\n                            now={30}\n                            className=\"progress m-0\"\n                            label=\"30%\"\n                            // visuallyHidden\n                            variant=\"info\"\n                        />\n                    </div>\n\n                    <div className=\"mt-4\">\n                        <h6 className=\"text-uppercase\">\n                            Anik Software LTD <span className=\"float-end\">40%</span>\n                        </h6>\n\n                        <ProgressBar\n                            now={40}\n                            className=\"progress m-0\"\n                            label=\"40%\"\n                            // visuallyHidden\n                            variant=\"info\"\n                        />\n                    </div>\n\n                    <div className=\"mt-4 mb-1\">\n                        <h6 className=\"text-uppercase\">\n                            Shojib Software LTD <span className=\"float-end\">50%</span>\n                        </h6>\n\n                        <ProgressBar\n                            now={50}\n                            className=\"progress m-0\"\n                            label=\"50%\"\n                            // visuallyHidden\n                            variant=\"info\"\n                        />\n                    </div>\n\n                    \n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default CompanyDues;\n","import * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport { Card, Dropdown } from 'react-bootstrap';\nimport {  useEffect, useLayoutEffect } from \"react\";\nimport { APICore } from '../../helpers/api/apiCore';\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { getAssetType } from \"../../redux/actions\";\n\nconst api = new APICore();\n\n\nconst InvoiceChart = ({ isEdit }) => {\n  const dispatch = useDispatch();\n  // const asset_type = useSelector((state)=> state.AssetType.asset_types);\n  \n  useLayoutEffect(() => {\n    \n    am4core.addLicense(\"ch-custom-attribution\");\n    let chart = am4core.create(\"invoiceChart\", am4charts.PieChart);\n    \n    // api.get(`/api/asset_type_graph`,{})\n    // .then(res=>{\n    //     chart.data=res.data;\n    // }) \n  \n    chart.data = [\n      {\n        amount: 10,\n        asset_type: \"3 mbps\"\n      },\n      {\n        amount: 20,\n        asset_type: \"4 mbps\"\n      },\n      {\n        amount: 30,\n        asset_type: \"6 mbps\"\n      },\n      {\n        amount: 20,\n        asset_type: \"8 mbps\"\n      },\n      {\n        amount: 10,\n        asset_type: \"10 mbps\"\n      }\n    ]\n  chart.dataSource.url = \"pie_chart_data.json\";\n  let pieSeries = chart.series.push(new am4charts.PieSeries());   \n  pieSeries.dataFields.value = \"amount\";\n  pieSeries.dataFields.category = \"asset_type\";\n  chart.innerRadius = am4core.percent(40);\n  pieSeries.slices.template.stroke = am4core.color(\"#4a2abb\");\n  pieSeries.slices.template.strokeWidth = 0;\n  pieSeries.slices.template.strokeOpacity = 1;\n  // pieSeries.labels.template.disabled = true;\n  // pieSeries.ticks.template.disabled = true;\n  chart.legend = new am4charts.Legend();\n  let marker = chart.legend.markers.template.children.getIndex(0);\n  marker.cornerRadius(12, 12, 12, 12);\n  marker.strokeWidth = 0;\n  let markerTemplate = chart.legend.markers.template;\n  markerTemplate.width = 10;\n  markerTemplate.height = 10;\n\n  }, []);\n  \n  // useEffect(()=>{\n  //   dispatch(getAssetType(0,1))\n  // },[])\n\n  return (\n    <Card className={isEdit ? 'mb-0':'mb-3'}>\n      <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n              <Dropdown.Toggle as=\"a\" className=\"cursor-pointer card-drop\">\n                  <i className=\"mdi mdi-dots-vertical\"></i>\n              </Dropdown.Toggle>\n              \n          </Dropdown>\n\n          <h4 className=\"header-title mb-0\">Invoice</h4>\n          \n          <div id=\"invoiceChart\" style={{ width: \"100%\", height: \"350px\" }}></div>\n          \n          {/* {!asset_type.length > 0 &&\n          <p>No asset type available</p>} */}\n         \n      </Card.Body>\n  </Card>\n    \n  )\n}\n\nexport default InvoiceChart","import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Line, defaults as ChartjsDefaults } from 'react-chartjs-2';\n\n// components\nimport ChartStatistics from '../../components/ChartStatistics';\n\nconst RevenueChart = () => {\n    ChartjsDefaults.color = '#8391a2';\n    ChartjsDefaults.scale.grid.color = '#8391a2';\n\n    // chart data\n    const lineChartData = {\n        labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        datasets: [\n            {\n                label: 'Current Week',\n                backgroundColor: '#009ADC',\n                borderColor: '#009ADC',\n                data: [32, 42, 42, 62, 52, 75, 62],\n                tension: 0.4,\n                fill: {\n                    target: 'origin',\n                    above: 'rgb(0, 154, 220, 0.3)',\n                },\n            },\n            {\n                label: 'Previous Week',\n                fill: true,\n                backgroundColor: 'transparent',\n                borderColor: '#009ADC',\n                borderDash: [5, 5],\n                data: [42, 58, 66, 93, 82, 105, 92],\n                tension: 0.4,\n            },\n        ],\n    };\n\n    // chart options\n    const lineChartOpts = {\n        bezierCurve: false,\n        maintainAspectRatio: false,\n        tooltips: {\n            intersect: false,\n        },\n        hover: {\n            intersect: true,\n        },\n        plugins: {\n            filler: {\n                propagate: false,\n            },\n            legend: {\n                display: false,\n            },\n        },\n        scales: {\n            x: {\n                grid: {\n                    color: 'rgba(0,0,0,0.05)',\n                },\n            },\n            y: {\n                ticks: {\n                    stepSize: 20,\n                },\n                display: true,\n                borderDash: [5, 5],\n                grid: {\n                    color: 'rgba(0,0,0,0)',\n                    fontColor: '#fff',\n                },\n            },\n        },\n    };\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <div className=\"float-end d-none d-md-inline-block\">\n                        <div className=\"btn-group mb-2\">\n                            {/* <button type=\"button\" className=\"btn btn-xs btn-secondary\">\n                                Today\n                            </button>\n                            <button type=\"button\" className=\"btn btn-xs btn-light\">\n                                Weekly\n                            </button>\n                            <button type=\"button\" className=\"btn btn-xs btn-light\">\n                                Monthly\n                            </button> */}\n                        </div>\n                    </div>\n\n                    <h4 className=\"header-title\">Payment Receive</h4>\n\n                    <Row className=\"mt-4 text-center\">\n                        {/* <Col className=\"col-4\">\n                            <ChartStatistics title=\"Target\" icon=\"fe-arrow-down\" stats=\"$7.8k\" variant=\"danger\" />\n                        </Col>\n                        <Col className=\"col-4\">\n                            <ChartStatistics title=\"Last week\" icon=\"fe-arrow-up\" stats=\"$1.4k\" variant=\"success\" />\n                        </Col>\n                        <Col className=\"col-4\">\n                            <ChartStatistics title=\"Last Month\" icon=\"fe-arrow-down\" stats=\"$15k\" variant=\"danger\" />\n                        </Col> */}\n                    </Row>\n\n                    <div style={{ height: '300px' }} className=\"mt-3 chartjs-chart\">\n                        <Line data={lineChartData} options={lineChartOpts} />\n                    </div>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default RevenueChart;\n","import { Button,Row, Col, Form } from 'react-bootstrap';\n\n// components\n\n\nimport AssetTypeChart from './AssetTypeChart';\nimport Statistics from './Statistics';\nimport CompanyDues from './CompanyDues';\nimport { ReactSortable } from 'react-sortablejs';\nimport { useEffect, useState } from 'react';\nimport InvoiceChart from './InvoiceChart';\nimport RevenueChart from './RevenueChart';\n\n\n\nconst Dashboard = () => {   \n    \n\n    \n    return (\n        <div className='mt-4'>\n            <Row>\n                <Col>\n                    {/* <div className=\"page-title-box\">\n                        <div className=\"page-title-right\">\n                            {editDashboard ?\n                            <>\n                            <Button variant=\"outline-info\" className=\"waves-effect waves-light me-2\" onClick={()=>setEditDashboard(!editDashboard)}>\n                                Cancel\n                            </Button> \n                            <Button variant=\"primary\" className=\"waves-effect waves-light\" onClick={()=>onSave()}>\n                                Save Changes\n                            </Button> \n                            </>:\n                            <Button variant=\"primary\" className=\"waves-effect waves-light\" onClick={()=>setEditDashboard(!editDashboard)}>\n                                Edit Dashboard\n                            </Button> \n                            }\n                        </div>\n                        <h4 className=\"page-title\">Dashboard</h4>\n                    </div> */}\n                </Col>\n            </Row>\n\n            <Statistics />\n            \n\n                <Row>\n                \n                    <Col  xl={6}>\n                        \n                        <RevenueChart/>\n                        \n                    </Col>\n                    <Col  xl={6}>\n                    <CompanyDues />\n                        {/* <AssetTypeChart/> */}\n                        \n                    </Col>\n                \n                \n                </Row>\n\n\n            \n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}