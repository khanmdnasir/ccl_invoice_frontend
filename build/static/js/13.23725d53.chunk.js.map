{"version":3,"sources":["layouts/Horizontal/Menu.tsx","hooks/useViewPort.ts","layouts/Horizontal/Navbar.tsx","constants/menu.ts","helpers/menu.ts","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"names":["MenuItemWithChildren","item","tag","linkClassName","className","subMenuClassNames","activeMenuItems","toggleMenu","Tag","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","useEffect","handleWindowResize","addEventListener","removeEventListener","useViewport","user_permissions","useSelector","state","Role","user_role","includes","key","open","setOpen","showMenu","hasChild","children","filter","child","length","hasGrandChild","chunks","splitArray","classNames","to","onClick","e","preventDefault","status","active","id","role","icon","label","show","Row","map","i","Col","lg","Fragment","MenuItem","MenuItemLink","url","target","MegaMenu","AppMenu","menuItems","location","useLocation","menuRef","useRef","topnavMenuItems","setActiveMenuItems","menuItem","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","pathname","mid","getAttribute","activeMt","findMenuItem","ref","idx","Navbar","isMenuOpened","Collapse","in","getHorizontalMenuItems","MENU_ITEMS","isTitle","parentKey","HORIZONTAL_MENU_ITEMS","TWO_COl_MENU_ITEMS","getMenuItems","getTwoColumnMenuItems","parents","parent","push","menuItemKey","found","createChainedFunction","funcs","f","reduce","acc","Error","args","apply","this","MARGINS","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","React","forwardRef","onEnter","onEntering","onEntered","onExit","onExiting","props","computedDimension","handleEnter","useMemo","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","_jsx","TransitionWrapper","addEndListener","transitionEndListener","childRef","innerProps","cloneElement"],"mappings":"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","file":"static/js/13.23725d53.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport FeatherIcon from 'feather-icons-react';\n\n// helpers\nimport { findAllParent, findMenuItem } from '../../helpers/menu';\n\n// constants\nimport { MenuItemTypes } from '../../constants/menu';\n\n// utils\nimport { splitArray } from '../../utils/';\n\n// custom hook\nimport { useViewport } from '../../hooks/useViewPort';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\n\ninterface MenuItems {\n    item: MenuItemTypes;\n    tag?: string;\n    linkClassName?: string;\n    className?: string;\n    subMenuClassNames?: string;\n    activeMenuItems?: string[];\n    toggleMenu?: (item: any, status: boolean) => void;\n}\n\nconst MenuItemWithChildren = ({\n    item,\n    tag,\n    linkClassName,\n    className,\n    subMenuClassNames,\n    activeMenuItems,\n    toggleMenu,\n}: MenuItems) => {\n    const Tag: any = tag;\n    const { width } = useViewport();\n    const user_permissions = useSelector((state:RootState)=> state.Role.user_role);\n    const [open, setOpen] = useState<boolean>(activeMenuItems!.includes(item.key));\n\n    const showMenu = width <= 768 && open;\n\n    const hasChild = item.children && (item.children || []).filter((child) => child.children?.length && child.children);\n\n    const hasGrandChild = !(hasChild!.length > 0 && hasChild) && item.children!.length >= 15;\n\n    let chunks: any[] = hasGrandChild ? splitArray(item.children!, 7) : [];\n\n    useEffect(() => {\n        setOpen(activeMenuItems!.includes(item.key));\n    }, [activeMenuItems, item]);\n\n    /**\n     * toggles the menu\n     */\n    const toggleMenuItem = (e: any) => {\n        e.preventDefault();\n        const status = !open;\n        setOpen(status);\n        if (toggleMenu) toggleMenu(item, status);\n        return false;\n    };\n\n    return (\n        <Tag className={classNames('dropdown', className, activeMenuItems!.includes(item.key) ? 'active' : '')}>\n            <Link\n                to=\"/#\"\n                onClick={toggleMenuItem}\n                data-menu-key={item.key}\n                className={classNames('dropdown-toggle', linkClassName, {\n                    active: activeMenuItems!.includes(item.key),\n                })}\n                id={item.key}\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded={open}\n            >\n                {item.icon && <FeatherIcon icon={item.icon} className=\"hori-icon me-1\" />}\n                <span> {item.label} </span>\n                <div className=\"arrow-down\"></div>\n            </Link>\n\n            {item.children &&\n                (hasGrandChild ? (\n                    <div\n                        className={classNames(subMenuClassNames, 'mega-dropdown-menu dropdown-mega-menu-xl', {\n                            show: showMenu,\n                        })}\n                        aria-labelledby={item.key}\n                    >\n                        <Row>\n                            {(chunks || []).map((child, i) => {\n                                return (\n                                    <Col key={i} lg={4}>\n                                        <MegaMenu item={child} activeMenuItems={activeMenuItems!} />\n                                    </Col>\n                                );\n                            })}\n                        </Row>\n                    </div>\n                ) : (\n                    <div className={classNames(subMenuClassNames, { show: showMenu })} aria-labelledby={item.key}>\n                        {(item.children || []).map((child, i) => {\n                            \n                            return (\n                                <React.Fragment key={i}>\n                                    {child.children ? (\n                                        <>\n                                            {/* parent */}\n                                            <MenuItemWithChildren\n                                                item={child}\n                                                tag=\"div\"\n                                                linkClassName={classNames(\n                                                    'dropdown-item',\n                                                    activeMenuItems!.includes(child.key) ? 'active' : ''\n                                                )}\n                                                activeMenuItems={activeMenuItems}\n                                                className=\"\"\n                                                subMenuClassNames=\"dropdown-menu\"\n                                                toggleMenu={toggleMenu}\n                                            />\n                                        </>\n                                    ) : (\n                                        \n                                        \n                                        user_permissions.includes(child.key)  &&\n                                        <>\n                                            {/* child */}\n                                            \n                                            <MenuItemLink\n                                                item={child}\n                                                className={classNames('dropdown-item', {\n                                                    active: activeMenuItems!.includes(child.key),\n                                                })}\n                                            />\n                                        </>\n                                            \n                                    )}\n                                </React.Fragment>\n                            );\n                        })}\n                    </div>\n                ))}\n        </Tag>\n    );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: MenuItems) => {\n    return (\n        <li className={classNames('nav-item', className)}>\n            <MenuItemLink item={item} className={linkClassName} />\n        </li>\n    );\n};\n\nconst MenuItemLink = ({ item, className }: MenuItems) => {\n    return (\n        <Link to={item.url!} target={item.target} className={classNames(className)} data-menu-key={item.key}>\n            {item.icon && <FeatherIcon icon={item.icon} className=\"hori-icon me-1\" />}\n            <span> {item.label} </span>\n        </Link>\n    );\n};\n\ninterface MegaMenuProps {\n    item: MenuItemTypes[];\n    activeMenuItems: string[];\n}\n\nconst MegaMenu = ({ item, activeMenuItems }: MegaMenuProps) => {\n    return (\n        <>\n            {item.map((child, i) => {\n                return (\n                    <MenuItemLink\n                        key={i}\n                        item={child}\n                        className={classNames('dropdown-item', {\n                            active: activeMenuItems!.includes(child.key),\n                        })}\n                    />\n                );\n            })}\n        </>\n    );\n};\n\n/**\n * Renders the application menu\n */\n\ninterface AppMenuProps {\n    menuItems: MenuItemTypes[];\n}\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n    let location = useLocation();\n    const menuRef = useRef(null);\n    const [topnavMenuItems] = useState<MenuItemTypes[]>(menuItems);\n    const [activeMenuItems, setActiveMenuItems] = useState<string[]>([]);\n    \n    const user_permissions = useSelector((state:RootState)=> state.Role.user_role);\n\n    /*\n     * toggle the menus\n     */\n    const toggleMenu = (menuItem: MenuItemTypes, show: boolean) => {\n        if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(topnavMenuItems, menuItem)]);\n    };\n\n\n    \n    /**\n     * activate the menuitems\n     */\n    const activeMenu = useCallback(() => {\n        const div = document.getElementById('main-side-menu');\n        let matchingMenuItem = null;\n\n        if (div) {\n            let items: any = div.getElementsByTagName('a');\n            for (let i: number = 0; i < items.length; ++i) {\n                if (location.pathname === items[i].pathname) {\n                    matchingMenuItem = items[i];\n                    break;\n                }\n            }\n\n            if (matchingMenuItem) {\n                const mid = matchingMenuItem.getAttribute('data-menu-key');\n                const activeMt = findMenuItem(topnavMenuItems, mid);\n                if (activeMt) {\n                    setActiveMenuItems([activeMt['key'], ...findAllParent(topnavMenuItems, activeMt)]);\n                }\n            }\n        }\n    }, [location.pathname, topnavMenuItems]);\n\n    useEffect(() => {\n        if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n        \n    }, [activeMenu, topnavMenuItems]);\n    \n    return (\n        <>\n            <ul className=\"navbar-nav\" ref={menuRef} id=\"main-side-menu\">\n                {(topnavMenuItems || []).map((item, idx) => {\n                    if(['dashboards','invoice','settings'].includes(item.key) || user_permissions.includes(item.key))\n                    return (\n                        <React.Fragment key={idx}>\n                            {item.children ? (\n                                <MenuItemWithChildren\n                                    item={item}\n                                    tag=\"li\"\n                                    className=\"nav-item\"\n                                    subMenuClassNames=\"dropdown-menu\"\n                                    activeMenuItems={activeMenuItems}\n                                    linkClassName=\"nav-link\"\n                                    toggleMenu={toggleMenu}\n                                />\n                            ) : (\n                                \n                                <MenuItem\n                                    item={item}\n                                    linkClassName={classNames('nav-link', 'dropdown-toggle', {\n                                        active: activeMenuItems.includes(item.key),\n                                    })}\n                                />\n                            )}\n                        </React.Fragment>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\n\nexport default AppMenu;\n","import { useState, useEffect } from 'react';\n\nconst useViewport = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n\n    useEffect(() => {\n        const handleWindowResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleWindowResize);\n        return () => window.removeEventListener('resize', handleWindowResize);\n    }, []);\n    return { width, height };\n};\n\nexport { useViewport };\n","import React from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// helpers\nimport { getHorizontalMenuItems } from '../../helpers/menu';\n\n// components\nimport AppMenu from './Menu';\n\ninterface NavbarProps {\n    isMenuOpened?: boolean;\n}\n\nconst Navbar = ({ isMenuOpened }: NavbarProps) => {\n    // change the inputTheme value to light for creative theme\n    const inputTheme = 'light';\n\n    return (\n        <React.Fragment>\n            <div className=\"topnav\">\n                <div className=\"container-fluid\">\n                    <nav className={classNames('navbar', 'navbar-expand-lg', 'topnav-menu', 'navbar-' + inputTheme)}>\n                        <Collapse in={isMenuOpened} className=\"navbar-collapse\">\n                            <div id=\"topnav-menu-content\">\n                                <AppMenu menuItems={getHorizontalMenuItems()} />\n                            </div>\n                        </Collapse>\n                    </nav>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default Navbar;\n","\nexport interface MenuItemTypes {\n    key: string;\n    label: string;\n    isTitle?: boolean;\n    icon?: string;\n    image?: string;\n    url?: string;\n    badge?: {\n        variant: string;\n        text: string;\n    };\n    parentKey?: string;\n    target?: string;\n    children?: MenuItemTypes[];\n}\n\nconst MENU_ITEMS: MenuItemTypes[] = [\n    { key: 'navigation', label: 'Navigation', isTitle: true },\n    {\n        key: 'dashboards',\n        label: 'Dashboards',\n        isTitle: false,\n        icon: 'airplay',\n        url: '/dashboard',\n        \n    },\n    {\n        key: 'view_contact',\n        label: 'Contact',\n        isTitle: false,\n        icon: 'clipboard',\n        url: '/app/contact',\n        \n    },\n    {\n        key: 'view_service',\n        label: 'Add Service',\n        isTitle: false,\n        icon: 'service',\n        url: '/app/service',\n        \n    },\n    {\n        key: 'invoice',\n        label: 'Invoice',\n        isTitle: false,\n        icon: 'invoice',\n        children: [ \n            {\n                key: 'view_invoice',\n                label: 'Invoice',\n                url: '/app/invoice',\n                parentKey: 'dashboards',\n            },\n            {\n                key: 'view_repeatinginvoice',\n                label: 'Repeating Invoice',\n                url: '/app/repeating_invoice',\n                parentKey: 'dashboards',\n            },\n            \n            \n        ],\n        \n        \n    },\n    {\n        key: 'settings',\n        label: 'Settings',\n        isTitle: false,\n        icon: 'settings',\n        children: [ \n            {\n                key: 'view_group',\n                label: 'Roles',\n                url: '/app/roles',\n                parentKey: 'settings',\n            },\n            {\n                key: 'view_user',\n                label: 'Users',\n                url: '/app/users',\n                parentKey: 'settings',\n            },\n            \n            \n        ],\n    },  \n    \n];\n\nconst HORIZONTAL_MENU_ITEMS: MenuItemTypes[] = [\n    {\n        key: 'dashboards',\n        label: 'Dashboards',\n        isTitle: false,\n        icon: 'airplay',\n        url: '/dashboard',\n        \n    },\n    {\n        key: 'view_contact',\n        label: 'Contact',\n        isTitle: false,\n        icon: 'clipboard',\n        url: '/app/contact',\n        \n    },\n    {\n        key: 'view_service',\n        label: 'Add Service',\n        isTitle: false,\n        icon: 'service',\n        url: '/app/service',\n        \n    },\n    {\n        key: 'invoice',\n        label: 'Invoice',\n        isTitle: false,\n        icon: 'invoice',\n        children: [ \n            {\n                key: 'view_invoice',\n                label: 'Invoice',\n                url: '/app/invoice',\n                parentKey: 'invoice',\n            },\n            {\n                key: 'view_repeatinginvoice',\n                label: 'Repeating Invoice',\n                url: '/app/repeating_invoice',\n                parentKey: 'invoice',\n            },\n            \n            \n        ],\n        \n        \n    },\n    {\n        key: 'settings',\n        label: 'Settings',\n        isTitle: false,\n        icon: 'settings',\n        children: [ \n            {\n                key: 'view_group',\n                label: 'Roles',\n                url: '/app/roles',\n                parentKey: 'settings',\n            },\n            {\n                key: 'view_user',\n                label: 'Users',\n                url: '/app/users',\n                parentKey: 'settings',\n            },\n            \n            \n        ],\n    },\n    \n];\n\nconst TWO_COl_MENU_ITEMS: MenuItemTypes[] = [\n    {\n        key: 'dashboards',\n        label: 'Dashboards',\n        isTitle: false,\n        icon: 'airplay',\n        url: '/dashboard',\n        \n    },\n    {\n        key: 'view_contact',\n        label: 'Contact',\n        isTitle: false,\n        icon: 'clipboard',\n        url: '/app/contact',\n        \n    },\n    {\n        key: 'view_service',\n        label: 'Add Service',\n        isTitle: false,\n        icon: 'service',\n        url: '/app/service',\n        \n    },\n    {\n        key: 'invoice',\n        label: 'Invoice',\n        isTitle: false,\n        icon: 'invoice',\n        children: [ \n            {\n                key: 'view_invoice',\n                label: 'Invoice',\n                url: '/app/invoice',\n                parentKey: 'dashboards',\n            },\n            {\n                key: 'view_repeatinginvoice',\n                label: 'Repeating Invoice',\n                url: '/app/repeating_invoice',\n                parentKey: 'dashboards',\n            },\n            \n            \n        ],\n        \n        \n    },\n    {\n        key: 'settings',\n        label: 'Settings',\n        isTitle: false,\n        icon: 'settings',\n        children: [ \n            {\n                key: 'view_group',\n                label: 'Roles',\n                url: '/app/roles',\n                parentKey: 'settings',\n            },\n            {\n                key: 'view_user',\n                label: 'Users',\n                url: '/app/users',\n                parentKey: 'settings',\n            },\n            \n            \n        ],\n    },\n   \n    \n];\n\nexport { MENU_ITEMS, TWO_COl_MENU_ITEMS, HORIZONTAL_MENU_ITEMS };\n","import { MENU_ITEMS, HORIZONTAL_MENU_ITEMS, TWO_COl_MENU_ITEMS, MenuItemTypes } from '../constants/menu';\n\nconst getMenuItems = () => {\n    // NOTE - You can fetch from server and return here as well\n    return MENU_ITEMS;\n};\n\nconst getHorizontalMenuItems = () => {\n    // NOTE - You can fetch from server and return here as well\n    return HORIZONTAL_MENU_ITEMS;\n};\n\nconst getTwoColumnMenuItems = () => {\n    // NOTE - You can fetch from server and return here as well\n    return TWO_COl_MENU_ITEMS;\n};\n\nconst findAllParent = (menuItems: MenuItemTypes[], menuItem: MenuItemTypes): string[] => {\n    let parents: string[] = [];\n    const parent = findMenuItem(menuItems, menuItem['parentKey']);\n\n    if (parent) {\n        parents.push(parent['key']);\n        if (parent['parentKey']) parents = [...parents, ...findAllParent(menuItems, parent)];\n    }\n\n    return parents;\n};\n\nconst findMenuItem = (\n    menuItems: MenuItemTypes[] | undefined,\n    menuItemKey: MenuItemTypes['key'] | undefined\n): MenuItemTypes | null => {\n    if (menuItems && menuItemKey) {\n        for (var i = 0; i < menuItems.length; i++) {\n            if (menuItems[i].key === menuItemKey) {\n                return menuItems[i];\n            }\n            var found = findMenuItem(menuItems[i].children, menuItemKey);\n            if (found) return found;\n        }\n    }\n    return null;\n};\n\nexport { getMenuItems, getHorizontalMenuItems, getTwoColumnMenuItems, findAllParent, findMenuItem };\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"sourceRoot":""}