{"version":3,"sources":["components/FileUploader.tsx","pages/app/user-management/MyProfile.jsx"],"names":["FileUploader","props","useState","selectedFiles","setSelectedFiles","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","onDrop","acceptedFiles","files","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","size","push","onFileUpload","handleAcceptedFiles","getRootProps","getInputProps","className","id","f","Card","Row","Col","alt","name","src","type","to","onClick","fileIndex","newFiles","splice","removeFile","defaultProps","APICore","MyProfile","dispatch","useDispatch","isEdit","setIsEdit","isImageEdit","setIsImageEdit","useSelector","state","user","Auth","error","loading","success","first_name","setFirstName","last_name","setLastName","email","setEmail","phone","setPhone","profile_image","setProfileImage","PageTitle","breadCrumbItems","label","path","active","title","Body","Alert","variant","sm","Button","style","width","fontWeight","textAlign","marginBottom","icon","border","margin","position","height","objectFit","borderRadius","display","justifyContent","alignItems","bottom","right","Form","onSubmit","e","preventDefault","UpdateProfileImage","handleProfileImageUpdate","marginTop","marginRight","UpdateProfile","handleProfileUpdate","Group","Label","Control","placeholder","value","readOnly","onChange","target"],"mappings":"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","file":"static/js/19.a1b7d29f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\n\ninterface FileType extends File {\n    preview?: string;\n    formattedSize?: string;\n}\n\ninterface FileUploaderProps {\n    onFileUpload?: (files: FileType[]) => void;\n    showPreview?: boolean;\n}\n\nconst FileUploader = (props: FileUploaderProps) => {\n    const [selectedFiles, setSelectedFiles] = useState<FileType[]>([]);\n\n    /**\n     * Handled the accepted files and shows the preview\n     */\n    const handleAcceptedFiles = (files: FileType[]) => {\n        var allFiles = files;\n\n        if (props.showPreview) {\n            (files || []).map((file) =>\n                Object.assign(file, {\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n                    formattedSize: formatBytes(file.size),\n                })\n            );\n            allFiles = [...selectedFiles];\n            allFiles.push(...files);\n            setSelectedFiles(allFiles);\n        }\n\n        if (props.onFileUpload) props.onFileUpload(allFiles);\n    };\n\n    /**\n     * Formats the size\n     */\n    const formatBytes = (bytes: number, decimals: number = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    /*\n     * Removes the selected file\n     */\n    const removeFile = (fileIndex: number) => {\n        const newFiles = [...selectedFiles];\n        newFiles.splice(fileIndex, 1);\n        setSelectedFiles(newFiles);\n        if (props.onFileUpload) props.onFileUpload(newFiles);\n    };\n\n    return (\n        <>\n            <Dropzone {...props} onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}>\n                {({ getRootProps, getInputProps }) => (\n                    <div className=\"dropzone\">\n                        <div className=\"dz-message needsclick\" {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            <i className=\"h3 text-muted dripicons-cloud-upload\"></i>\n                            <h4>Drop files here or click to upload.</h4>\n                            \n                        </div>\n                    </div>\n                )}\n            </Dropzone>\n\n            {props.showPreview && (\n                <div className=\"dropzone-previews mt-3\" id=\"uploadPreviewTemplate\">\n                    {(selectedFiles || []).map((f, i) => {\n                        return (\n                            <Card className=\"mt-1 mb-0 shadow-none border\" key={i + '-file'}>\n                                <div className=\"p-2\">\n                                    <Row className=\"align-items-center\">\n                                        {f.preview && (\n                                            <Col className=\"col-auto\">\n                                                <img\n                                                    data-dz-thumbnail=\"\"\n                                                    className=\"avatar-sm rounded bg-light\"\n                                                    alt={f.name}\n                                                    src={f.preview}\n                                                />\n                                            </Col>\n                                        )}\n                                        {!f.preview && (\n                                            <Col className=\"col-auto\">\n                                                <div className=\"avatar-sm\">\n                                                    <span className=\"avatar-title bg-primary rounded\">\n                                                        {f.type.split('/')[0]}\n                                                    </span>\n                                                </div>\n                                            </Col>\n                                        )}\n                                        <Col className=\"ps-0\">\n                                            <Link to=\"#\" className=\"text-muted fw-bold\">\n                                                {f.name}\n                                            </Link>\n                                            <p className=\"mb-0\">\n                                                <strong>{f.formattedSize}</strong>\n                                            </p>\n                                        </Col>\n                                        <Col className=\"text-end\">\n                                            <Link to=\"#\" className=\"btn btn-link btn-lg text-muted shadow-none\">\n                                                <i className=\"dripicons-cross\" onClick={() => removeFile(i)}></i>\n                                            </Link>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        );\n                    })}\n                </div>\n            )}\n        </>\n    );\n};\n\nFileUploader.defaultProps = {\n    showPreview: true,\n};\n\nexport default FileUploader;\n","import React,{ useEffect, useState } from 'react';\nimport { Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\nimport FileUploader from '../../../components/FileUploader';\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { APICore } from '../../../helpers/api/apiCore';\nimport { UpdateProfile, UpdateProfileImage} from '../../../redux/actions';\n\nconst api = new APICore()\n\n\nconst MyProfile = () => {\n    const dispatch = useDispatch();\n    const[isEdit,setIsEdit] = useState(false);\n    const[isImageEdit,setIsImageEdit] = useState(false);\n    const { user, error, loading, success } = useSelector((state) => ({\n        user: state.Auth.user,\n        error: state.Auth.error,\n        loading: state.Auth.loading,\n        success: state.Auth.success,\n    }));\n\n   const[first_name,setFirstName] = useState(user.first_name);\n   const[last_name,setLastName] = useState(user.last_name);\n   const[email,setEmail] = useState(user.email);\n   const[phone,setPhone] = useState(user.phone);\n   const[profile_image,setProfileImage] = useState(user.profile_image);\n\n   const handleProfileUpdate = (e) =>{\n    e.preventDefault();\n    dispatch(UpdateProfile({first_name,last_name,email,phone}));\n    setIsEdit(!isEdit);\n   }\n   const handleProfileImageUpdate = (e) =>{\n    e.preventDefault();\n    dispatch(UpdateProfileImage({profile_image}));\n    setIsImageEdit(!isImageEdit);\n   }\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'My Profile', path: '/app/my-profile', active: true },\n                ]}\n                title={'My Profile'}\n            />\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                        {!loading && error && (\n                                <Alert variant=\"danger\" className=\"my-2\">\n                                    {error}\n                                </Alert>\n                            )}\n                        {!loading && success && (\n                            <Alert variant=\"success\" className=\"my-2\">\n                                {success}\n                            </Alert>\n                        )}\n                            <Row>\n                                <Col sm={2}>\n                                    <Link to='/app/my-profile'>\n                                    <Button variant=\"primary\"  style={{width:'100%',fontWeight: '100 !important', textAlign: 'start',marginBottom: '8px'}}>\n                                        <FeatherIcon icon=\"user\" size={15} className=\"me-2\"/>My Profile\n                                    </Button> \n                                    </Link>\n\n                                    <Link to='/app/change_password'>\n                                    <Button variant=\"white\"  style={{width:'100%',fontWeight: '100 !important', textAlign: 'start',border: 'none'}}>\n                                        <FeatherIcon icon=\"lock\" size={15} className=\"me-2\"/>Change Password\n                                    </Button> \n                                    </Link>\n                                </Col>\n                                <Col sm={10}>\n                                    <div style={{margin: 50}}>\n                                    {!isEdit && !isImageEdit &&\n                                    <Row style={{marginBottom: '40px'}}>\n                                        <Col sm={1} style={{position: 'relative'}}>\n                                            \n                                            <img src={user.profile_image}   style={{width: '100px',height:'100px',objectFit: 'cover',borderRadius: '100%'}} alt=\"\" />\n                                            <Button  variant=\"primary\" type='button'  style={{width:'40px',height: '40px',borderRadius: '100%',display: 'flex',justifyContent: 'center',alignItems:'center',position: 'absolute',bottom: -8,right:-8}} onClick={()=>setIsImageEdit(!isImageEdit)}>\n                                                <FeatherIcon icon=\"edit\" size={15} />\n                                            </Button>\n                                            \n                                        \n                                        </Col>\n                                        <Col sm={11}>\n                                            <h3>{first_name} {last_name}</h3>\n                                            \n                                        </Col>\n                                    </Row>\n                                    }\n\n                                    {isImageEdit ? \n                                    <Form onSubmit={(e)=>handleProfileImageUpdate(e)}>\n                                        <Row>\n                                            <Col>\n                                                <Card>\n                                                    <Card.Body>\n                                                        <FileUploader\n                                                            onFileUpload={(files) => {\n                                                                setProfileImage(files[0])\n                                                            }}\n                                                        />\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                        \n                                                                   \n                                        <Button  variant=\"white\" type='button'  style={{width:'15%',marginTop: '20px',marginRight: 5}} onClick={()=>setIsImageEdit(!isImageEdit)}>\n                                            Cancel\n                                        </Button> \n                                        <Button  variant=\"primary\" type='submit'  style={{width:'15%',marginTop: '20px'}}>\n                                            Save\n                                        </Button> \n                                        \n\n                                    </Form>\n                                    :\n                                    <Form onSubmit={(e)=>handleProfileUpdate(e)}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Group  className=\"mb-3\">\n                                                    <Form.Label  >\n                                                        First Name\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" name=\"first_name\"  placeholder=\"Enter First Name\" value={first_name} readOnly={isEdit ? false:true} size='lg' onChange={(e)=>setFirstName(e.target.value)}/>\n                                                </Form.Group>\n                                                <Form.Group  className=\"mb-3\">\n                                                    <Form.Label  >\n                                                        Last Name\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" name=\"last_name\"  placeholder=\"Enter Last Name\" value={last_name} readOnly={isEdit ? false:true} size='lg' onChange={(e)=>setLastName(e.target.value)}/>\n                                                </Form.Group>\n                                            </Col>\n                                            <Col>\n                                                <Form.Group  className=\"mb-3\">\n                                                    <Form.Label  >\n                                                        Email\n                                                    </Form.Label>\n                                                    <Form.Control type=\"email\" name=\"email\"  placeholder=\"Enter Email\" value={email} readOnly={isEdit ? false:true} size='lg' onChange={(e)=>setEmail(e.target.value)}/>\n                                                </Form.Group>\n                                                <Form.Group  className=\"mb-3\">\n                                                    <Form.Label  >\n                                                        Phone\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" name=\"phone\"  placeholder=\"Enter Phone\" value={phone} readOnly={isEdit ? false:true} size='lg' onChange={(e)=>setPhone(e.target.value)}/>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        \n                                        {isEdit ?  \n                                        <>                            \n                                        <Button  variant=\"white\" type='button'  style={{width:'15%',marginTop: '20px',marginRight: 5}} onClick={()=>setIsEdit(!isEdit)}>\n                                            Cancel\n                                        </Button> \n                                        <Button  variant=\"primary\" type='submit'  style={{width:'15%',marginTop: '20px'}}>\n                                            Save\n                                        </Button> \n                                        </>\n                                        :\n                                        <Button  variant=\"primary\" type='button'  style={{width:'15%',marginTop: '20px'}} onClick={()=>setIsEdit(!isEdit)}>\n                                            <FeatherIcon icon=\"edit\" size={15} className=\"me-2\"/>Edit\n                                        </Button>\n                                        }\n\n                                    </Form>\n                                    }\n                                    </div>\n                                </Col>\n                            </Row>                            \n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default MyProfile;\n"],"sourceRoot":""}