{"version":3,"sources":["../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs","../node_modules/chart.js/auto/auto.mjs","../../src/chart.tsx","../../src/index.tsx","../node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.browser.esm.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/lodash/_assignMergeValue.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/_safeGet.js","../node_modules/lodash/_copyObject.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/keysIn.js","../node_modules/lodash/_createAssigner.js","../../../../../src/.internal/core/elements/Grip.ts","../../../../../src/.internal/charts/Chart.ts","../../../../../src/.internal/charts/elements/Bullet.ts","../../../../../src/.internal/charts/Legend.ts","../../../../../src/.internal/charts/series/Series.ts","../../../../../src/.internal/charts/types/SerialChart.ts","../../../../../src/.internal/charts/axes/AxisBreak.ts","../../../../../src/.internal/charts/axes/Axis.ts","../../../../../src/.internal/charts/axes/AxisLine.ts","../../../../../src/.internal/charts/axes/AxisFill.ts","../../../../../src/.internal/charts/axes/Grid.ts","../../../../../src/.internal/charts/axes/AxisLabel.ts","../../../../../src/.internal/charts/elements/Tick.ts","../../../../../src/.internal/charts/axes/AxisTick.ts","../../../../../src/.internal/charts/axes/AxisRenderer.ts","../../../../../src/.internal/charts/axes/AxisBullet.ts","../../../../../src/.internal/charts/axes/AxisRendererY.ts","../../../../../src/.internal/charts/axes/ValueAxisBreak.ts","../../../../../src/.internal/charts/axes/ValueAxis.ts","../../../../../src/.internal/charts/axes/DateAxisBreak.ts","../../../../../src/.internal/charts/axes/DateAxis.ts","../../../../../src/.internal/charts/axes/AxisRendererX.ts","../../../../../src/.internal/charts/axes/CategoryAxisBreak.ts","../../../../../src/.internal/charts/axes/CategoryAxis.ts","../../../../../src/.internal/charts/series/XYSeries.ts","../../../../../src/.internal/charts/elements/XYChartScrollbar.ts","../../../../../src/.internal/charts/types/XYChart.ts","../../../../../src/.internal/charts/series/LineSeriesSegment.ts","../../../../../src/.internal/charts/axes/DurationAxis.ts","../../../../../src/.internal/charts/series/LineSeries.ts","../../../../../src/.internal/charts/series/RadarSeries.ts","../../../../../src/.internal/charts/axes/AxisFillCircular.ts","../../../../../src/.internal/charts/axes/GridCircular.ts","../../../../../src/.internal/charts/axes/AxisLabelCircular.ts","../../../../../src/.internal/charts/axes/AxisRendererCircular.ts","../../../../../src/.internal/charts/axes/AxisRendererRadial.ts","../../../../../src/.internal/charts/types/RadarChart.ts","../../../../../src/.internal/charts/elements/ClockHand.ts","../../../../../src/.internal/charts/types/GaugeChart.ts","../../../../../src/.internal/charts/series/PercentSeries.ts","../../../../../src/.internal/charts/types/PercentChart.ts","../../../../../src/.internal/charts/elements/PieTick.ts","../../../../../src/.internal/charts/series/PieSeries.ts","../../../../../src/.internal/charts/types/PieChart.ts","../../../../../src/.internal/charts/series/PieSeries3D.ts","../../../../../src/.internal/charts/types/PieChart3D.ts","../../../../../src/.internal/charts/types/SlicedChart.ts","../../../../../src/.internal/charts/elements/FlowDiagramNode.ts","../../../../../src/.internal/charts/elements/FlowDiagramLink.ts","../../../../../src/.internal/charts/types/FlowDiagram.ts","../../../../../src/.internal/charts/elements/LabelBullet.ts","../../../../../src/.internal/charts/elements/SankeyNode.ts","../../../../../src/.internal/charts/elements/SankeyLink.ts","../../../../../src/.internal/charts/types/SankeyDiagram.ts","../../../../../src/.internal/charts/elements/ChordNode.ts","../../../../../src/.internal/core/elements/QuadraticCurve.ts","../../../../../src/.internal/charts/elements/ChordLink.ts","../../../../../src/.internal/charts/types/ChordDiagram.ts","../../../../../src/.internal/charts/elements/Column.ts","../../../../../src/.internal/charts/series/ColumnSeries.ts","../../../../../src/.internal/charts/series/TreeMapSeries.ts","../../../../../src/.internal/charts/types/TreeMap.ts","../../../../../src/.internal/charts/axes/AxisRendererX3D.ts","../../../../../src/.internal/charts/axes/AxisRendererY3D.ts","../../../../../src/.internal/charts/elements/Column3D.ts","../../../../../src/.internal/charts/series/ColumnSeries3D.ts","../../../../../src/.internal/charts/types/XYChart3D.ts","../../../../../src/.internal/charts/elements/HeatLegend.ts","../../../../../src/.internal/charts/elements/Candlestick.ts","../../../../../src/.internal/charts/series/CandlestickSeries.ts","../../../../../src/.internal/charts/elements/OHLC.ts","../../../../../src/.internal/charts/series/OHLCSeries.ts","../../../../../src/.internal/charts/series/StepLineSeriesSegment.ts","../../../../../src/.internal/charts/series/StepLineSeries.ts","../../../../../src/.internal/charts/elements/RadarColumn.ts","../../../../../src/.internal/charts/series/RadarColumnSeries.ts","../../../../../src/.internal/charts/elements/FunnelSlice.ts","../../../../../src/.internal/charts/elements/FunnelTick.ts","../../../../../src/.internal/charts/series/FunnelSeries.ts","../../../../../src/.internal/charts/series/PyramidSeries.ts","../../../../../src/.internal/charts/series/PictorialStackedSeries.ts","../../../../../src/.internal/charts/elements/ConeColumn.ts","../../../../../src/.internal/charts/series/ConeSeries.ts","../../../../../src/.internal/charts/elements/CurvedColumn.ts","../../../../../src/.internal/charts/series/CurvedColumnSeries.ts","../../../../../src/.internal/charts/elements/CircleBullet.ts","../../../../../src/.internal/charts/elements/ErrorBullet.ts","../../../../../src/.internal/charts/elements/NavigationBar.ts","../../../../../src/.internal/charts/cursors/Cursor.ts","../../../../../src/.internal/charts/cursors/XYCursor.ts","../../../../../src/.internal/charts/cursors/RadarCursor.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/react-countup/build/index.js","../node_modules/countup.js/dist/countUp.min.js","../../src/utils/interleave.js","../../src/utils/isPlainObject.js","../../src/utils/empties.js","../../src/utils/isFunction.js","../../src/utils/getComponentName.js","../../src/utils/isStyledComponent.js","../../src/constants.js","../../src/utils/error.js","../../src/sheet/GroupedTag.js","../../src/sheet/GroupIDAllocator.js","../../src/sheet/Rehydration.js","../../src/utils/nonce.js","../../src/sheet/dom.js","../../src/sheet/Tag.js","../../src/sheet/Sheet.js","../../src/utils/generateAlphabeticName.js","../../src/utils/hash.js","../../src/utils/isStaticRules.js","../../src/models/ComponentStyle.js","../../src/utils/stylis.js","../../src/utils/stylisPluginInsertRule.js","../../src/models/StyleSheetManager.js","../../src/models/Keyframes.js","../../src/utils/hyphenateStyleName.js","../../src/utils/flatten.js","../../src/utils/isStatelessFunction.js","../../src/utils/addUnitIfNeeded.js","../../src/constructors/css.js","../../src/utils/checkDynamicCreation.js","../../src/utils/determineTheme.js","../../src/utils/escape.js","../../src/utils/generateComponentId.js","../../src/utils/isTag.js","../../src/utils/mixinDeep.js","../../src/models/ThemeProvider.js","../../src/models/StyledComponent.js","../../src/utils/generateDisplayName.js","../../src/utils/joinStrings.js","../../src/utils/domElements.js","../../src/constructors/styled.js","../../src/constructors/constructWithOptions.js","../../src/models/GlobalStyle.js","../../src/models/ServerStyleSheet.js","../../src/base.js","../node_modules/shallowequal/index.js","../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../home/runner/work/react-sortablejs/react-sortablejs/node_modules/@parcel/scope-hoisting/lib/helpers.js","util.ts","react-sortable.tsx","../node_modules/sortablejs/modular/sortable.esm.js","../node_modules/lodash/merge.js","../node_modules/lodash/_baseMerge.js","../node_modules/lodash/_baseMergeDeep.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/isArrayLikeObject.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/toPlainObject.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_baseRest.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/constant.js","../node_modules/lodash/_shortOut.js","../node_modules/lodash/_isIterateeCall.js","../node_modules/lodash/assign.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_trimmedEndIndex.js"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","this","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","get","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","update","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","Element","useFinalPosition","getProps","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","ScatterController","getElement","__proto__","abstract","DateAdapter","chartOptions","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","autoPadding","_layers","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","maxAreaPoint","maxArea","nextA","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","destroy","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","_draw","cursor","defaultColor","fontColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_willRender","labelCount","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","ChartComponent","forwardRef","className","redraw","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","fallbackContent","useRef","computedData","useMemo","useState","setChart","useImperativeHandle","renderChart","destroyChart","useEffect","newDataSets","newChartData","currentDataSets","currentDataSet","find","newDataSet","updateChart","ref","role","Line","chartjs","memoize","reactPropsRegex","isPropValid","test","charCodeAt","children","func","React","child","getPercentage","percentage","renderProgressBar","visuallyHidden","striped","variant","bsPrefix","_jsx","classNames","ProgressBar","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps","baseAssignValue","require","module","exports","getPrototype","overArg","assignValue","customizer","isNew","newValue","objValue","arrayLikeKeys","baseKeysIn","isArrayLike","baseRest","isIterateeCall","assigner","guard","cs","InterfaceColorSet","background","fillOpacity","icon","Sprite","paper","pixelPerfect","getFor","strokeOpacity","valign","dispose","autoHideDelay","on","ev","_autoHideTimeout","applyTheme","setPropertyValue","horizontalCenter","verticalCenter","Button","registeredClasses","DataItem","_legend","template","Label","titles","List","_disposers","chartAndLegendContainer","createChild","Container","shouldClone","chartContainer","showOnInit","processTitle","updateReaderTitleReferences","defaultState","transitionDuration","applyInternalDefaults","readerTitle","language","fixLayout","toBack","toFront","isMeasured","feedLegend","uidAttr","iterator","setSVGAttribute","removeSVGAttribute","setLegend","addDisposer","Disposer","processConfig","copyFrom","removeChildren","_dragGrip","tooltipContainer","touch","interactionsEnabled","focusable","Component","relevant","Responsive","widthXS","state","stateId","states","pixelPaddingLeft","pixelPaddingRight","heightXS","pixelPaddingTop","pixelPaddingBottom","widthXXS","heightXXS","tooltipX","tooltipY","applyOnClones","copyToLegendMarker","dataItem","isXS","childrenCreated","_label","addSprite","itemContainer","removeValue","_valueLabel","valueLabels","_itemContainer","itemContainers","togglable","toggleDataItem","focusedItem","dataContext","readerControls","readerLabelledBy","sprite","isDisposed","visibilitychanged","readerChecked","disableType","isActive","enableType","dataItems","_marker","markers","createMarker","clickable","cursorOverStyle","Mouse","pointer","isKey","isEnabled","dispatchImmediately","interfaceColors","marker","setStateOnChildren","propertyFields","disabledColor","activeState","rectangle","RoundedRectangle","truncate","fullWords","valueLabel","handleScrollbar","createDataItem","validateDataElements","scrollbar","validateDataElement","legendDataItem","tempMaxWidth","Percent","legendSettings","createLegendMarker","useDefaultMarker","updateLegendValue","invalid","validate","__disabled","itemValueText","valueText","setState","measuredWidth","pixelMarginLeft","pixelMarginRight","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","scrollable","measuredHeight","pixelWidth","contentHeight","thumb","updateMasks","contentAlign","maxColumns","Scrollbar","orientation","endGrip","startGrip","marginLeft","_mouseWheelDisposer","handleWheel","ds","dy","pixelY","maskRectangle","isHiding","isHidden","colorOrig","appeared","svgContainer","readerAlert","handleDataItemPropertyChange","_bullets","Dictionary","bullets","setValue","_ignoreMinMax","_showBullets","LegendSettings","_tmin","_tmax","_smin","_smax","dataItemsByAxis","skipFocusThreshold","_itemReaderTextChanged","calculatePercent","usePercentHack","autoDispose","simplifiedProcessing","Series","axisRanges","processAxisRange","minBulletDistance","mainContainer","mask","bulletsContainer","_shouldBeReady","virtualParent","hiddenState","transitionEasing","autoSetClassName","setClassName","positionBullet","bullet","processBullet","isTemplate","once","itemsFocusable","removeBullet","oldValue","eachBullet","getKey","validateDataItems","processValues","getFirstValue","getIndex","getActualWorkingValue","getAbsoluteFirstValue","rangeChangeUpdate","working","setCalculatedValue","ksum","filters","axisRange","pixelX","updateTooltipBounds","topParent","setBounds","shouldCreateBullet","bulletTemplate","disabledField","currentDataItem","setKey","itemReaderText","xField","yField","isDynamic","deepInvalidate","populateString","hoverable","handleDataItemWorkingValueChange","dataRangeInvalid","invalidateProcessedData","invalidateDataItems","createMask","rangesContainer","contents","isRange","getAxisField","showTooltipAtPosition","xPosition","yPosition","invalidateRawData","readerText","_itemReaderText","tooltipText","tooltipHTML","_adapterO","_legendDataItem","notRange","itemLabelText","labelText","raiseCriticalError","modal","content","message","closable","suppressErrors","open","verbose","log","applyFilters","_heatRules","heatRule","dataField","minValue","maxValue","foundSprite","sprites","clonedFrom","anySprite","anyChild","ruleTarget","propertyField","low","high","workingValue","LOG10E","heatRules","rule","hasKey","listitem","maybeIndex","maybeColorOrPercent","configOrder","setVisibility","ColorSet","_usesData","seriesContainer","zIndex","patterns","_series","createSeries","handleSeriesAdded","handleSeriesRemoved","series","dataUsers","dataUser","di","_dataUsers","moveValue","handleSeriesAdded2","handleLegendSeriesAdded","hiddenInLegend","addData","dataInvalid","reinit","dataFields","appear","inited","_axis","breakSize","marginRight","marginTop","marginBottom","fillShape","WavedLine","_fillShape","startLine","_startLine","endLine","_endLine","addBreakSprite","renderer","gridContainer","createBreakSprites","breakTemplate","axisBreaks","invalidateSeries","positionToPoint","startPosition","endPosition","updateBreakElement","AxisItemLocation","_grid","_tick","_axisFill","axisFill","axisFills","_text","_mask","_contents","createFill","_axisBreak","axisBreak","appendChildren","appendDataItem","hasProperty","minPosition","maxPosition","noChangeValues","_bullet","_gridCount","_axisItemCount","Axis","hideTooltipWhileZooming","minWidth","minHeight","toggleZoomOutButton","zoomable","_dataItemsIterator","createNewItems","pointerLength","fitPointerToBounds","readerHidden","preventShow","fillRule","invalidateLayout","ghostLabel","updateLabelElement","updateGridCount","gridCount","axisLength","minGridDistance","validateLayout","axisFullLength","updateAxisLine","updateTooltip","updateBaseGridElement","_prevLength","initRenderer","updateGridContainer","validateAxisRanges","validateBreaks","_axisBreaks","processBreak","breakContainer","registerSeries","_renderer","positionToAngle","pointToPosition","positionToCoordinate","getAnyRangePath","getPositionRangePath","anyToPosition","anyToPoint","hideTooltip","_tooltipPosition","_tooltip","toAxisPosition","tooltipLocation","getCellStartPosition","getCellEndPosition","tooltipLocation2","startPoint","endPoint","currentItemStartPoint","currentItemEndPoint","fullWidthTooltip","globalPoint","getTooltipText","delayedPointTo","cursorTooltipEnabled","inversed","toGlobalPosition","pointerOrientation","boundingRectangle","fixDoc","roundPosition","location","axisLocation","_axisRanges","SortedList","createAxisBreak","adjustedStartValue","processSeriesDataItems","processSeriesDataItem","axisLetter","postProcessSeriesDataItems","postProcessSeriesDataItem","updateAxisBySeries","hideUnusedDataItems","dataItemsIterator","getSeriesDataItem","findNearest","getAngle","getX","getPositionX","getY","getPositionY","dataChangeUpdate","seriesDataChangeUpdate","adjustDifference","difference","adjustedEndValue","intersection","isInBreak","fixAxisBreaks","firstAxisBreak","getPositionLabel","createSeriesRange","resetIterators","setDisabled","_title","maybeXS","fillPath","measure","setPath","attr","nonScalingStroke","cellStartLocation","cellEndLocation","minLabelPosition","maxLabelPosition","invalidateAxisItems","baseGrid","disposers","setAxis","processRenderer","positionItem","position2","getHeight","pixelHeight","getWidth","coordinateToPosition","coordinate","coordinate2","updateGridElement","updateTickElement","updateBullet","updateFillElement","toggleVisibility","updatedStart","updatedEnd","_axisFills","createGrid","_ticks","createTick","_labels","createLabel","opposite","inversedPosition","relativePositionSprite","innerHeight","bigNum","bbx","bbw","bbh","basePoint","wavedRectangle","WavedRectangle","setWavedSides","widthS","valueToPosition","_stepDecimalPlaces","_prevStepDecimalPlaces","_adjustLabelPrecision","_baseValue","_adjustedStart","_adjustedEnd","_extremesChanged","_deltaMinMax","_dsc","calculateTotals","axisFieldName","MAX_VALUE","keepSelection","includeRangesInMinMax","_end","_maxZoomed","_maxDefined","_minZoomed","_minDefined","_maxAdjusted","_minAdjusted","sum","excludeFromTotal","calculateZoom","validateAxisElements","positionToValue","differece","minMaxStep","adjustMinMax","stepDecimalPlaces","syncWithAxis","calculated","getCache","_step","fixSmallStep","minZoomed","maxZoomed","precisionChanged","formatLabel","currentText","stepPower","decCount","adjustedMin","adjustedMax","adjustedStep","itemIndex","fillEndPosition","adjustLabelPrecision","numberFormatter","valueToPoint","_difference","treatZeroAs","invalidateLabels","breakStartPosition","breakEndPosition","breakStartValue","breakEndValue","xToValue","yToValue","animateMinMax","rangeChangeDuration","rangeChangeEasing","ignoreMinMax","seriesMin","seriesMax","_minReal","_maxReal","dif","fixMin","fixMax","exponent","power","extraMin","extraMax","strict","strictMinMax","_minMaxAnimation","isFinished","_finalMax","_finalMin","handleSelectionExtremesChange","strictMode","initialMin","initialMax","stepDivisor","maxPrecision","minCount","maxCount","handleExtremesChange","selectionMin","selectionMax","allHidden","outOfRange","seriesSelectionMin","seriesSelectionMax","minMaxStep2","syncAxes","declination","setCache","zoom","getWorkingValue","getValue","extraTooltipPrecision","valueStr","zoomToValues","skipRangeEvent","instantly","axisBreakDif","axisBreakGridCount","breakMinMaxStep","showTooltipAt","currentCount","synced","omin","omax","ostep","checkSync","processingErrors","getTime","endDate","dates","setDate","_gapBreaks","gridIntervals","groupIntervals","dateFormats","periodChangeDateFormats","_baseIntervalReal","timeUnit","_prevSeriesTime","_minDifference","_firstWeekDay","groupMin","groupMax","snapTooltip","groupCount","getDFFormatter","pushAll","gridInterval","_gridInterval","gridDuration","baseDuration","periodCount","getFirstWeekDay","mainBaseDuration","mainBaseInterval","maxZoomFactor","dataSetChanged","groupData","modifiedDifference","startLocation","endLocation","groupInterval","chooseInterval","_groupInterval","newId","_currentDataSetId","dispatch","baseAxis","setDataSet","baseInterval","_nextGridUnit","_intervalDuration","_gridDate","_df","utc","timezoneMinutes","timezone","minZoomedStr","startDataItem","currentDataSetId","findFirst","findClosestIndex","maxZoomedStr","endDataItem","validateDataRange","previousDataItem","previousDate","validateData","minDifference","seriesGroupUpdate","addEmptyUnitsBreaks","_baseInterval","mainDataSet","groupSeriesData","dataGrouped","intervalDuration","_dataSets","dataSetId","dataSet","dataSets","newDataItem","roundedDate","previousTime","dfkey","df","dfk","getDate","currentTime","firstDayOfWeek","vkey","setWorkingLocation","locations","dateX","openDateX","dateY","openDateY","_index","dvalues","close","fieldValue","hasProperties","groupDataItems","groupFieldName","groupFields","dateFormatter","intervalID","startTime","skipEmptyPeriods","startTimeStr","startDate","breakGridCount","gridDate","getGridDate","intervalCount","realIntervalCount","prevTimestamp","newDate","durationBreaksRemoved","getBreaklessDate","prevGridDate","markUnitChange","endTimestamp","intervals","dateToPosition","dateToPoint","positionToDate","getTimeByLocation","workingLocations","endTime","timezoneOffset","setTime","getTimezoneOffset","openTime","openDate","prevSeriesTime","_mainBaseInterval","timeInterval","invalidateData","tooltipDate","tooltipDateFormat","dateFormat","deltaValue","nextDate","getCurrentLabelFormat","zoomToDates","adjust","isEnd","isStart","mindi","maxdi","yAxis","asIs","field","snapToSeries","showTooltipAtDataItem","_seriesPoints","makeGap","connect","autoGapCount","prevDate","bby","pixelMarginTop","pixelMarginBottom","innerWidth","indexToPosition","category","categoryToIndex","seriesDataItems","endCategory","deltaPosition","oldCategory","deltaCoordinate","dataItemsByCategory","_lastDataItem","removeKey","categoryAxisDataItem","seriesId","CategoryAxis","invalidateDataRange","positionToIndex","axisDataItem","seriesDataItem","dataCount","frequency","_startIndex","_endIndex","_frequency","fillEndIndex","fillPosition","html","disposeData","processDataItem","getDataItem","breakStartIndex","breakEndIndex","categoryToPosition","categoryToPoint","zoomToCategories","startCategory","zoomToIndexes","startPos","endPos","getFirstSeriesDataItem","categoryX","categoryY","getLastSeriesDataItem","getSeriesDataItemByCategory","categories","tooltipDataItem","breakPosition","positionToCategory","sortBySeries","addDelayedMap","customValue","valueX","valueY","openValueX","openValueY","setLocation","setCategory","openCategoryX","openCategoryY","getMin","fields","stackValue","getMax","_xAxis","_yAxis","_xValueFields","_yValueFields","usesShowFields","_dataSetChanged","_maxxX","_maxxY","_propertiesChanged","cursorHoverEnabled","setElement","stackToNegative","returnBulletDefaultState","resetExtremes","valueYShow","openValueXShow","openValueYShow","defineFields","updateItemReaderText","_xField","_yField","setInitialWorkingValues","updateDataItem","dataItemsX","clearCatAxis","dataItemsY","xAxisFieldName","xOpenField","yAxisFieldName","yOpenField","_xOpenField","_yOpenField","addValueField","setCategoryAxisField","setDateAxisField","getMaskPath","plotContainer","maskBullets","leftAxesContainer","rightAxesContainer","topAxesContainer","bottomAxesContainer","xAxes","setXAxis","oldAxis","yAxes","setYAxis","handleYAxisSet","_baseAxis","rawDataItem","removeCount","skipRaw","scrollbarSeries","_parseDataFrom","setData","_prevStartIndex","_prevEndIndex","workingStartIndex","workingEndIndex","getStackValue","stackX","stackY","xAxisId","yAxisId","stackedSeries","tmin","isShowing","tmax","_prevTooltipDataItem","getAdjustedXLocation","bulletLocationX","getAdjustedYLocation","bulletLocationY","hideSeriesTooltipsOnSelection","selection","downPoint","tooltipXField","tooltipYField","interactions","isRealHover","isHover","showTooltip","fireEvent","getBulletLocationX","getBulletLocationY","positionX","positionY","openValue","closeValue","middleValue","rightLocation","locationX","leftLocation","openPositionX","topLocation","locationY","bottomLocation","openPositionY","positionBulletReal","bulletLocation","updateStacking","interpolationDuration","animationsEnabled","realDuration","sequencedInterpolation","sequencedInterpolationDelay","disable","enable","axisSeries","backwards","prevSeries","prevDataItem","prevRealValue","_tooltipXField","_tooltipYField","xKey","yKey","stackKeyX","stackKeyY","axisBulletsContainer","scrollbarChart","_scrollbarChart","DesaturateFilter","filterUnits","unselectedOverlay","_unselectedOverlay","thumbBackground","hoverState","downState","sourceSeries","zoomOutButton","inputDateFormat","addXAxis","addYAxis","onlyShowOnViewport","queue","maxZoomCount","minZoomCount","sourceAxis","zoomOutAxes","updateByOrientation","off","err","handleDataChanged","dataProvider","updateThumb","dispatchEvents","_axisRendererX","_axisRendererY","arrangeTooltips","topAxesCont","yAxesAndPlotCont","yAxesAndPlotContainer","bottomAxesCont","leftAxesCont","updateXAxesMargins","plotCont","mouseWheelBehavior","_cursorContainer","rightAxesCont","ZoomOutButton","_bulletMask","exportable","updateSeriesLegend","updatePlotElements","leftAxesWidth","rightAxesWidth","handleXAxisChange","updateXAxis","handleYAxisChange","updateYAxis","processXAxis","handleXAxisRangeChange","processAxis","processYAxis","handleYAxisRangeChange","getCommonAxisRange","scrollbarX","zoomAxes","updateScrollbar","minZoomFactor","seriesAppeared","scrollbarY","skipRangeEvents","axes","axisStart","axisEnd","updateSeriesMasks","_xAxes","handleAxisRemoval","_yAxes","removeFromInvalidComponents","backgroundOpacity","_cursor","removeDispose","handleCursorPositionChange","handleCursorZoomStart","handleCursorZoomEnd","handleCursorPanStart","handleCursorPanning","handleCursorPanEnd","handleCursorCanceled","handleHideCursor","tapToActivate","setTapToActivate","showSeriesTooltip","snpSeries","getClosest","closestSeries","handleSnap","_cursorXPosition","showAxisTooltip","_cursorYPosition","sortSeriesTooltips","closestDataItem","xPos","yPos","dxPosition","dyPosition","hideObjectTooltip","seriesPoints","maxTooltipDistance","seriesPoint","fixedPoint","handleOutReal","np","firstSeries","averageY","SVGContainer","dropped","nextHeight","pointY","nextY","except","getUpdatedRange","behavior","xRange","priority","yRange","_panStartXRange","_panStartYRange","_panEndXRange","panEndRange","panStartRange","snapOnPan","_panEndYRange","maxPanOut","newStart","newEnd","newRange","_scrollbarX","handleXScrollbarChange","_scrollbarY","handleYScrollbarChange","fixRange","realRange","originalRange","cellWidth","svgPoint","htmlContainer","cssScale","plotPoint","handleWheelReal","handleHorizontalWheel","horizontalMouseWheelBehavior","rangeX","rangeY","shiftStep","differenceX","newStartX","newEndX","differenceY","newStartY","newEndY","location2X","location2Y","wheelable","_mouseWheelDisposer2","dataSourceDateFields","populateDataSourceFields","dataSourceNumberFields","_zoomOutButton","button","addScrollbarData","removeScrollbarData","removeData","isTouchProtected","handleTapToActivate","handleTapToActivateDeactivation","fillSprite","strokeSprite","drawSegment","closePoints","smoothnessX","smoothnessY","smoothing","smooth","closed","lineElement","fillElement","_baseUnit","durationFormatter","axisDurationFormat","baseUnit","divisors","realDivisor","divisor","reducedCount","getValueUnit","getFormat","_tooltipDurationFormat","tooltipDurationFormat","createSegment","_segmentsIterator","tensionX","tensionY","segmentsContainer","initialY","setWorkingValue","initialX","tooltipColorSource","openSegmentWrapper","_adjustedStartIndex","sliceData","findAdjustedIndex","_workingStartIndex","_workingEndIndex","adjustedIndex","openIndex","openSegment","getFirst","addToClose","closeIndex","propertiesChanged","strokeDasharray","group","valuesFound","updateSegmentProperties","addPoints","closeSegment","itemProperties","checkOnly","propertyName","currentValueStr","disposeChildren","Rectangle","hasLabels","connectEnds","pixelRadius","pixelInnerRadius","updateRendererRefs","rendererX","rendererY","axisRendererY","setPercentProperty","fdx","fdy","locationOnPath","textPathElement","axisRadius","pixelRadiusY","axisRadiusY","fixPosition","isNegative","realRadius","relativeRotation","labelRadius","bent","bbox","dH","dW","_measuredHeight","_measuredWidth","pixelRadiusReal","useChartAngles","mr","innerRadiusModifyer","angleToPosition","gridInnerRadius","fitsToBounds","gridType","axisAngle","gridLocation","WavedCircle","tooltipOrientation","radarContainer","Circle","innerRect","wr","hr","diameter","_pixelInnerRadius","definedBBox","validatePosition","pin","startWidth","endWidth","hand","Trapezoid","leftSide","rightSide","x0","_pin","_hand","showValue","_value","newAngle","currentAngle","rotationDirection","updateValue","hands","processHand","toValue","ticksContainer","labelsContainer","_slice","slices","slicesContainer","_addAllDataItems","alignLabels","createSlice","_slices","initSlice","initTick","initLabel","arrangeLabels","nextLabel","getNextLabel","arrangeLabels2","previousTop","nextDataItem","handleSliceScale","handleSliceMove","setAlignLabels","percentSeriesDataItem","ix","y0","iy","radiusY","radiusValue","Slice","shiftRadius","lastHitPointer","_leftItems","_rightItems","_currentStartAngle","_arcRect","_maxRadiusPercent","radiusValuePercent","aAngle","middleAngle","bAngle","ignoreZeroValues","normalizedMiddleAngle","arcRect","depth","_pixelRadius","_startAngleInternal","_endAngleInternal","updateRadius","_chartPixelRadius","updateSeriesAngles","chartCont","chartRadius","chartPixelInnerRadius","seriesRadius","_chartPixelInnerRadius","depthValue","Slice3D","depthPercent","invalidateDataUsers","draggable","inert","invalidateLinks","handleHit","outgoingDataItems","toNode","link","incomingDataItems","fromNode","colorMode","gradient","stops","_incomingDataItems","sortBy","_incomingSorted","fromName","_outgoingDataItems","_outgoingSorted","setColorProperty","_background","column","positionBullets","_bulletsContainer","_bulletsMask","bulletsMask","middleLine","rotationField","addColor","setFill","_gradient","measureElement","Polyline","getTooltipX","getTooltipY","LinearGradient","toName","_link","links","nodePadding","minNodeSize","linksContainer","nodesContainer","nodes","sortNodes","strokeModifier","LinearGradientModifier","opacities","fillModifier","strNode","getNodeValue","sortedIterator","incomingTotal","outgoingTotal","totalIncoming","totalOutgoing","changeSorting","_nodes","createNode","_links","createLink","hideOversized","handleMaxSize","nextInCoord","nextOutCoord","nameLabel","linkWidth","valueHeight","controlPointDistance","Polyspline","makeBackwards","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","_bbox","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","kxb0","kyb0","kxb1","kyb1","nodeAlign","_valueHeight","_levelCount","level","getNodeLevel","levels","_counter","checkLoop","calculateValueHeight","_levelSum","_levelNodesCount","maxSum","maxSumLevel","realValue","levelNodeCount","_maxSumLevel","maxSumLevelNodeCount","finalHeight","_heightAnimation","interpolationEasing","nextCoordinate","levelCoordinate","nodeCount","showReal","nodeHeight","updateRotation","childAngle","childRadius","labelAngle","adjustedTotal","nextAngle","nonRibbon","percentWidth","valueAngle","mAngle","trueStartAngle","tx","ty","cpx","cpy","cp","point1","point2","fromX","fromY","toX","toY","mAngle1","mAngle2","chordContainer","newTotal","createAssets","handleKidAdded","_column","setColumn","columns","_rangesColumns","_startLocation","_endLocation","clustered","columnsContainer","_columnsContainer","baseAxisSeries","ColumnSeries","sortedItem","sortCategoryAxis","disableUnusedColumns","currentPosition","deltaAnimation","validateDataElementReal","getStartLocation","getEndLocation","percentHeight","outOfBounds","diw","dih","fixHorizontalCoordinate","fixVerticalCoordinate","axisLenght","realX","realY","realWidth","realHeight","setColumnStates","rangeColumn","rangesColumns","_dropFromOpenState","_dropFromPreviousState","_riseFromOpenState","_riseFromPreviousState","droppedFromOpen","droppedFromPrevious","_columns","createColumnTemplate","treeMapDataItem","_dataContext","configField","hideReal","rows","hasChildren","getDuration","childValue","layoutAlgorithm","squarify","maxLevels","currentLevel","hideParentColumns","sorting","xRenderer","yRenderer","seriesTemplates","zoomToChartDataItem","_homeDataItem","_navigationBar","navigationBar","createTreeSeries","_tempSeries","homeDataItem","_homeText","layoutItems","_updateDataItemIndexes","navigationData","parentDataItem","initSeries","createTreeSeriesReal","currentlyZoomed","zoomToSeriesDataItem","toggleBullets","rangeChangeAnimation","_dataDisposers","binaryTree","dice","sliceDice","validateRawData","sums","partition","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","nodeValue","sumValue","minRatio","beta","i0","i1","handleDataItemValueChange","getLegendLevel","legendParent","getExporting","exporting","dx3D","dy3D","handle3DChanged","column3D","Rectangle3D","fixColumns","depthIndex","maskColumns","markerContainer","markerCount","getMinFromRules","getMaxFromRules","reverseOrder","minColor","maxColor","seriesFill","minOpacity","maxOpacity","minStrokeOpacity","maxStrokeOpacity","minStroke","maxStroke","strokeGradient","_valueAxis","dataFieldDefined","updateMinMax","lowLine","highLine","lowValueX","lowValueY","highValueX","highValueY","positiveColor","negativeColor","dropFromOpenState","riseFromOpenState","validateCandlestick","yOpen","yClose","yLow","yLowField","yHigh","yHighField","xOpen","xClose","xLow","xLowField","xHigh","xHighField","rangeLowLine","rangehighLine","_xLowField","_yLowField","_xHighField","_yHighField","cw","ch","openLine","highLowLine","closeLine","rangeOpenLine","rangeCloseLine","rangeHighLowLine","noRisers","startLocationX","endLocationX","startLocationY","endLocationY","prevPoint","point0","radarColumn","lAngle","rAngle","tRadius","bRadius","cellAngle","temp","bottomWidth","topWidth","expandDistance","pb","pr","pl","ed","tw","tr","br","bw","bl","cpr","cpl","qp1","qp2","tickPoint","tt","tb","bt","bb","mlx","mty","labelsOpposite","maxRight","maxBottom","_sliceLink","sliceLinks","_nextY","bottomRatio","labelTemplate","dItem","_count","getNextValue","nextValue","nextItem","formDataElement","sliceLink","decorateSlice","linkHeight","getLastLabel","lastLabel","lastX","_sliceLinks","labelAlign","labelValign","pyramidHeight","valueIs","_nextWidth","relValue","_pyramidHeight","_pyramidWidth","absoluteSum","pyramidWidth","sliceTopWidth","sliceHeight","sliceBottomWidth","square","sliceWidth","_maskSprite","maskSprite","pictureWidth","pictureHeight","hs","coneColumn","Cone","curvedColumn","circle","errorLine","textLink","TextLink","_linksIterator","triangle","Triangle","separators","activeLink","fontWeight","getLast","separator","_stick","trackable","handleCursorDown","handleCursorUp","handleCursorMove","_generalBehavior","isLocalElement","svg","_stickPoint","triggerMove","stick","force","triggerMoveReal","invalidatePosition","getPositions","triggerDown","triggerDownReal","setGlobalStyle","grabbing","triggerUp","triggerUpReal","requestFrame","updatePoint","upPoint","_upPointOrig","_downPointOrig","getHitOption","default","updateSelection","shouldPreventGestures","preventDefault","lockElement","_lineX","_lineY","_snapToDisposers","lineX","lineY","updateSize","_usesSelection","_positionPrecision","fixPoint","updateLinePositions","getPanningRanges","selectionX","selectionY","hasMoved","getRanges","handleXTooltipPosition","handleYTooltipPosition","fullWidthLineX","fullWidthLineY","_selection","snap","disposer","xx","yy","animationDuration","animationEasing","truePixelRadius","updateLineX","updateLineY","fillStartAngle","downAngle","downRadius","currentRadius","_prevAngle","downSin","downCos","upAngle","upRadius","_taggedTemplateLiteral","strings","countup_js","_interopDefaultLegacy","React__default","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","_defineProperty","getOwnPropertyDescriptors","_classCallCheck","instance","Constructor","TypeError","_defineProperties","_getPrototypeOf","setPrototypeOf","_setPrototypeOf","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget","DEFAULTS","createCountUpInstance","decimals","easingFn","formattingFn","numerals","useEasing","CountUp","startVal","useGrouping","_Component","subClass","superClass","_inherits","protoProps","staticProps","_super","_this","_len","_key","updatedProps","_this$props","containerRef","_this$instance","_assertThisInitialize","restart","onPauseResume","pauseResume","_this$instance2","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props2","onEnd","onStart","run","_this$instance3","timeoutId","_this$instance4","_assertThisInitialize4","onUpdate","createRef","_this$props3","createInstance","nextProps","checkProps","prevProps","_this$instance5","_this$instance7","_this$instance6","_this$props4","preserveValue","_this$instance8","_this$props5","countUpRef","createElement","startOnMount","useCountUp","parsedProps","timerRef","getCountUp","recreate","countUp","newCountUp","__assign","endVal","smartEasingThreshold","smartEasingAmount","finalEndVal","countDown","paused","frameVal","toFixed","printValue","rAF","validateValue","resetDuration","determineDirectionAndSmartEasing","cancelAnimationFrame","tagName","textContent","innerHTML","ensureNumber","interpolations","typeOf","EMPTY_ARRAY","EMPTY_OBJECT","getComponentName","isStyledComponent","styledComponentId","SC_ATTR","process","REACT_APP_SC_ATTR","IS_BROWSER","DISABLE_SPEEDY","SC_DISABLE_SPEEDY","REACT_APP_SC_DISABLE_SPEEDY","throwStyledComponentsError","code","DefaultGroupedTag","tag","groupSizes","Uint32Array","indexOfGroup","insertRules","rules","oldBuffer","oldSize","throwStyledError","ruleIndex","insertRule","clearGroup","deleteRule","getGroup","css","getRule","groupIDRegister","reverseRegister","nextFreeGroup","getGroupForId","getIdForGroup","setGroupForId","SELECTOR","MARKER_RE","rehydrateNamesFromContent","sheet","registerName","rehydrateSheetFromTag","part","trim","getTag","getNonce","__webpack_nonce__","makeStyleTag","childNodes","nodeType","hasAttribute","nextSibling","__VERSION__","nonce","insertBefore","CSSOMTag","appendChild","createTextNode","styleSheets","ownerNode","_error","cssRules","cssText","TextTag","refNode","removeChild","VirtualTag","SHOULD_REHYDRATE","defaultOptions","isServer","useCSSOMInjection","StyleSheet","globalStyles","gs","server","querySelectorAll","registerId","reconstructWithOptions","withNames","allocateGSInstance","hasNameForId","groupNames","clearNames","clearRules","clearTag","selector","AD_REPLACER_R","getAlphabeticChar","fromCharCode","generateAlphabeticName","phash","hash","isStaticRules","SEED","ComponentStyle","componentId","staticRulesId","isStatic","NODE_ENV","baseHash","generateAndInjectStyles","executionContext","styleSheet","stylis","cssStatic","flatten","generateName","cssStaticFormatted","dynamicHash","partRule","partChunk","partString","cssFormatted","COMMENT_REGEX","COMPLEX_SELECTOR_PREFIX","createStylisInstance","_componentId","_selector","_selectorRegexp","_consecutiveSelfRefRegExp","Stylis","parsingRules","parseRulesPlugin","toSheet","block","selectors","parents","ns","at","delimiter","selfReferenceReplacer","stringifyRules","flatCSS","cssStr","use","_","parsedRules","StyleSheetContext","StylisContext","Consumer","masterSheet","masterStylis","useStyleSheet","useContext","useStylis","StyleSheetManager","stylisPlugins","setPlugins","contextStyleSheet","disableCSSOMInjection","disableVendorPrefixes","shallowequal","Provider","Keyframes","inject","stylisInstance","resolvedName","getName","uppercaseCheck","uppercasePattern","msPattern","prefixAndLowerCase","char","hyphenateStyleName","isFalsish","ruleSet","isReactComponent","isPlainObject","objToCssArray","prevKey","isCss","hyphenate","unitless","addTag","interleave","originalConsoleError","providedTheme","theme","escapeRegex","dashesAtEnds","escape","isTag","mixin","mixinDeep","ThemeContext","identifiers","createStyledComponent","isTargetStyledComp","isCompositeComponent","attrs","parentComponentId","generateComponentId","finalAttrs","shouldForwardProp","filterFn","elementToBeCreated","WrappedStyledComponent","componentStyle","forwardedComponent","forwardedRef","componentAttrs","foldedComponentIds","resolvedAttrs","resolvedAttrDef","attrDef","determineTheme","generatedClassName","warnTooManyClasses","refToForward","$as","as","isTargetTag","computedProps","propsForElement","validAttr","withComponent","previousComponentId","optionsToCopy","newComponentId","_foldedDefaultProps","hoist","styled","constructWithOptions","componentConstructor","isValidElementType","templateFunction","withConfig","StyledComponent","domElement","GlobalStyle","createStyles","removeStyles","renderStyles","ServerStyleSheet","_emitSheetCSS","SC_ATTR_VERSION","getStyleTags","sealed","getStyleElement","dangerouslySetInnerHTML","__html","seal","collectStyles","interleaveWithNodeStream","objA","objB","compareContext","keysA","keysB","bHasOwnProperty","valueA","valueB","stylis_min","q","u","substring","ca","da","ea","ha","ia","ja","ka","aa","ba","la","ma","na","oa","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","orphans","tabSize","widows","WebkitLineClamp","floodOpacity","stopOpacity","strokeDashoffset","strokeMiterlimit","$parcel$interopDefault","__esModule","removeNode","parentElement","removeNodes","customs","insertNodes","newChild","refChild","oldIndex","createCustoms","list","getMode","newIndex","$bf037e368b3040002dda64d69d3f$var$_objectSpread","swapItem","oldIndicies","multiDragElement","newIndicies","handleStateRemove","newList","$bf037e368b3040002dda64d69d3f$var$_toConsumableArray","handleStateAdd","newItem","store","dragging","ReactSortable","chosen","selected","setList","sortable","invariant","makeOptions","Sortable","classicProps","$ff006f4a88ed11a8119708ec3f19c5db$var$_objectSpread","getChildren","dataIdAttr","selectedClass","chosenClass","dragClass","fallbackClass","ghostClass","swapClass","dataid","Children","prevClassName","filtered","$ff006f4a88ed11a8119708ec3f19c5db$var$_defineProperty","onAdd","onChange","onChoose","onClone","onFilter","onRemove","onSort","onUnchoose","onMove","onSpill","onSelect","onDeselect","$bf037e368b3040002dda64d69d3f$var$_objectWithoutProperties","_this2","prepareOnHandlerPropAndDOM","prepareOnHandlerProp","originalEvt","willInsertAfter","evtName","_this3","callOnHandlerProp","_this4","propEvent","$bf037e368b3040002dda64d69d3f$export$createCustoms","$ff006f4a88ed11a8119708ec3f19c5db$var$_toConsumableArray","$bf037e368b3040002dda64d69d3f$export$removeNodes","$bf037e368b3040002dda64d69d3f$export$handleStateAdd","$bf037e368b3040002dda64d69d3f$export$getMode","$bf037e368b3040002dda64d69d3f$export$insertNodes","pullMode","$bf037e368b3040002dda64d69d3f$export$handleStateRemove","customClones","clones","_this5","removeOnSpill","revertOnSpill","$bf037e368b3040002dda64d69d3f$export$removeNode","_typeof","_extends","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","_iterableToArray","minLen","_unsupportedIterableToArray","_nonIterableSpread","arr2","userAgent","pattern","navigator","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","msMatchesSelector","webkitMatchesSelector","getParentOrHost","closest","includeCTX","_throttleTimeout","R_SPACE","toggleClass","classList","defaultView","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","getElementsByTagName","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","elRect","containerRect","elMatrix","scaleX","scaleY","isScrolledPast","elSide","parentSide","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","includeDragEl","currentChild","ghost","dragged","lastChild","lastElementChild","previousElementSibling","nodeName","getRelativeScrollOffset","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","scrollWidth","scrollHeight","elemCSS","overflowX","overflowY","isRectEqual","rect1","rect2","throttle","ms","scrollBy","Polymer","$","jQuery","Zepto","dom","cloneNode","setRect","unsetRect","expando","AnimationStateManager","animationCallbackId","animationStates","captureAnimationState","fromRect","thisAnimationDuration","childMatrix","addAnimationState","removeAnimationState","indexOfObject","animateAll","animating","animationTime","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","calculateRealTime","animationResetTimer","currentRect","translateX","translateY","animatingX","animatingY","forRepaintDummy","offsetWidth","repaint","initializeByDefault","PluginManager","mount","pluginName","pluginEvent","eventName","eventCanceled","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","extraEventProperties","onName","substr","CustomEvent","createEvent","initEvent","bubbles","lastPutMode","allEventProperties","_excluded","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","supportCssPointerEvents","pointerEvents","_detectDirection","elCSS","elWidth","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","secondChildWidth","flexDirection","gridTemplateColumns","touchingSideChild2","_prepareGroup","toFn","pull","sameGroup","otherGroup","originalGroup","checkPull","checkPut","put","revertClone","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","emptyInsertThreshold","insideHorizontally","insideVertically","_detectNearestEmptySortable","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","handle","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","ignore","preventOnFilter","dataTransfer","dropBubble","dragoverBubble","delayOnTouchOnly","touchStartThreshold","forceFallback","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","_onMove","dragRect","targetRect","retVal","onMoveFn","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","href","_nextTick","_cancelNextTick","_getDirection","pointerType","originalTarget","composedPath","checked","_saveInputCheckedState","isContentEditable","criteria","_prepareDragStart","dragStartFn","ownerDocument","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","_onTouchMove","_onDragStart","empty","getSelection","removeAllRanges","_dragStarted","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","cssMatrix","_hideClone","cloneId","_loopId","setInterval","effectAllowed","_dragStartId","revert","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","spacer","_ghostIsLast","_ghostIsFirst","firstChild","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_dragElInRowColumn","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_getSwapDirection","dragIndex","nextElementSibling","moveVector","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","dropEffect","_globalDragOver","toArray","useAnimation","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","lastSwapEl","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","drop","toSortable","changedTouches","Revert","Remove","SwapPlugin","Swap","dragStart","dragOverValid","_ref2","swap","prevSwapEl","_ref3","n1","n2","i2","isEqualNode","swapNodes","nulling","_ref4","parentSortable","lastMultiDragSelect","multiDragSortable","dragEl$1","clonesFromRect","clonesHidden","multiDragElements","multiDragClones","initialFolding","folding","MultiDragPlugin","MultiDrag","_deselectMultiDrag","_checkKeyDown","_checkKeyUp","multiDragKey","multiDragKeyDown","isMultiDrag","delayStartGlobal","delayEnded","setupClone","sortableIndex","insertMultiDragClones","showClone","hideClone","_ref5","dragStartGlobal","_ref6","multiDrag","_ref7","removeMultiDragElements","dragOver","_ref8","_ref9","clonesInserted","insertMultiDragElements","dragOverCompleted","_ref10","dragRectAbsolute","clonesHiddenBefore","dragOverAnimationCapture","_ref11","dragMatrix","dragOverAnimationComplete","_ref12","shiftKey","currentIndex","multiDragIndex","nullingGlobal","destroyGlobal","select","deselect","elementsInserted","AutoScroll","forceAutoScrollFallback","_handleAutoScroll","_handleFallbackAutoScroll","dragOverBubble","ogElemScroller","newElem","baseMerge","createAssigner","srcIndex","Stack","assignMergeValue","baseFor","baseMergeDeep","keysIn","safeGet","srcValue","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArguments","isArrayLikeObject","isBuffer","isTypedArray","toPlainObject","mergeFunc","isCommon","isArr","isBuff","isTyped","freeExports","freeModule","Buffer","allocUnsafe","buffer","isDeep","copy","cloneArrayBuffer","typedArray","byteOffset","Uint8Array","arrayBuffer","byteLength","baseCreate","isPrototype","objectCreate","isObjectLike","baseGetTag","funcProto","Function","objectProto","funcToString","objectCtorString","Ctor","copyObject","nativeKeysIn","isProto","identity","overRest","setToString","nativeMax","otherArgs","baseSetToString","shortOut","constant","nativeNow","lastCalled","stamp","isIndex","createFind","baseIteratee","findIndexFunc","collection","predicate","fromIndex","iterable","iteratee","baseFindIndex","toInteger","fromRight","toFinite","remainder","toNumber","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","trimmedEndIndex","reTrimStart","reWhitespace"],"mappings":"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zBOnN,CAAqCqN,GAAiBrN,IDJvD,CACb,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,MAGA,SACA,WACA,OACA,UACA,gBACA,IACA,QACA,OACA,iBACA,SACA,OACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,MACA,OACA,WACA,SCnIUt0I,SAAQ,YAClBqhJ,GAAOO,GAAcP,GAAOO,OELTC,sBAOPlN,EAAgB4E,QACrB5E,MAAQA,OACR4E,YAAcA,OACdE,SAAWL,EAAczE,GAI9BoD,EAAWK,WAAWpkI,KAAKulI,YAAc,uBAG3CuI,sBACEjV,EACAgN,EACAC,EACAC,OAGM3E,EAAM2E,EADIE,GAAQjmI,KAAK2gI,MAAOkF,EAAkBC,EAAYC,GACvC12H,KAAK,IAAK,IAC/B7tB,EAAKwe,KAAKulI,YAAc1M,EAG9BiN,EAAWpF,YAAYl/I,EAAIA,EAAI4/I,MAGjC2M,sBAAalV,EAAkBiN,GAC7BA,EAAWnB,WAAW3kI,KAAKulI,YAAc1M,MAG3CmV,sBACEnV,EACAgN,EACAC,EACAC,GAEIlN,EAAW,GAAGkL,EAAWK,WAAWpkI,KAAKulI,YAAc1M,QAGtDkV,aAAalV,EAAUiN,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","file":"static/js/12.4961d3b7.chunk.js","sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import {Chart, registerables} from '../dist/chart.mjs';\n\nChart.register(...registerables);\n\nexport default Chart;\n","import React, {\n  useEffect,\n  useState,\n  useRef,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\n\nimport Chart from 'chart.js/auto';\n\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nconst ChartComponent = forwardRef<Chart | undefined, Props>((props, ref) => {\n  const {\n    id,\n    className,\n    height = 150,\n    width = 300,\n    redraw = false,\n    type,\n    data,\n    options = {},\n    plugins = [],\n    getDatasetAtEvent,\n    getElementAtEvent,\n    getElementsAtEvent,\n    fallbackContent,\n    ...rest\n  } = props;\n\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const computedData = useMemo<Chart.ChartData>(() => {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {};\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  const [chart, setChart] = useState<Chart>();\n\n  useImperativeHandle<Chart | undefined, Chart | undefined>(ref, () => chart, [\n    chart,\n  ]);\n\n  const renderChart = () => {\n    if (!canvas.current) return;\n\n    setChart(\n      new Chart(canvas.current, {\n        type,\n        data: computedData,\n        options,\n        plugins,\n      })\n    );\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!chart) return;\n\n    getDatasetAtEvent &&\n      getDatasetAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'dataset',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementAtEvent &&\n      getElementAtEvent(\n        chart.getElementsAtEventForMode(\n          e,\n          'nearest',\n          { intersect: true },\n          false\n        ),\n        e\n      );\n    getElementsAtEvent &&\n      getElementsAtEvent(\n        chart.getElementsAtEventForMode(e, 'index', { intersect: true }, false),\n        e\n      );\n  };\n\n  const updateChart = () => {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = { ...options };\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    const { datasets: newDataSets = [], ...newChartData } = computedData;\n    const { datasets: currentDataSets = [] } = chart.config.data;\n\n    // copy values\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map((newDataSet: any) => {\n      // given the new set, find it's current match\n      const currentDataSet = find(\n        currentDataSets,\n        d => d.label === newDataSet.label && d.type === newDataSet.type\n      );\n\n      // There is no original to update, so simply add new one\n      if (!currentDataSet || !newDataSet.data) return newDataSet;\n\n      if (!currentDataSet.data) {\n        currentDataSet.data = [];\n      } else {\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      // copy in values\n      assign(currentDataSet.data, newDataSet.data);\n\n      // apply dataset changes, but keep copied data\n      return {\n        ...currentDataSet,\n        ...newDataSet,\n        data: currentDataSet.data,\n      };\n    });\n\n    chart.update();\n  };\n\n  const destroyChart = () => {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  useEffect(() => {\n    if (redraw) {\n      destroyChart();\n      setTimeout(() => {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  }, [props, computedData]);\n\n  return (\n    <canvas\n      {...rest}\n      height={height}\n      width={width}\n      ref={canvas}\n      id={id}\n      className={className}\n      onClick={onClick}\n      data-testid='canvas'\n      role='img'\n    >\n      {fallbackContent}\n    </canvas>\n  );\n});\n\nexport default ChartComponent;\n","import React, { forwardRef } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport { Props } from './types';\nimport ChartComponent from './chart';\n// eslint-disable-next-line no-unused-vars\nimport Chart from 'chart.js/auto';\nimport * as chartjs from 'chart.js';\n\nexport const Line = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='line'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bar = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Radar = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='radar'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Doughnut = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='doughnut'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const PolarArea = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='polarArea'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Bubble = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='bubble'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Pie = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='pie'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const Scatter = forwardRef<Chart | undefined, Omit<Props, 'type'>>((props, ref) => (\n  <ChartComponent\n    {...props}\n    type='scatter'\n    ref={ref}\n    options={props.options || {}}\n  />\n));\n\nexport const defaults = chartjs.defaults;\n\nexport const Chart = chartjs.Chart;\n\nexport default ChartComponent;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","/**\r\n * Grip module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grip]].\r\n */\r\nexport interface IGripProperties extends IButtonProperties {\r\n\tposition: Align | VerticalAlign;\r\n\tautoHideDelay: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grip]] for [[Grip]].\r\n */\r\nexport interface IGripEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Grip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGripAdapters extends IButtonAdapters, IGripProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nexport class Grip extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGripProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGripAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGripEvents;\r\n\r\n\t\t/**\r\n\t * Disposer for grip autohide timeout.\r\n\t */\r\n\tprotected _autoHideTimeout: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Grip\";\r\n\r\n\t\tconst cs = new InterfaceColorSet();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.margin(3, 3, 3, 3);\r\n\t\tthis.background.fillOpacity = 0.3;\r\n\t\tthis.background.cornerRadius(10, 10, 10, 10);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -6, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 6, y: 0 });\r\n\t\tpath += $path.moveTo({ x: -8, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: -12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: -6 });\r\n\t\tpath += $path.moveTo({ x: -8, y: 6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: 12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: 6 });\r\n\t\ticon.path = path;\r\n\t\ticon.strokeWidth = 2;\r\n\t\ticon.fillOpacity = 0;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = cs.getFor(\"text\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\ticon.align = \"center\";\r\n\t\ticon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Set default position\r\n\t\tthis.position = \"right\";\r\n\r\n\t\t// Set up autohide\r\n\t\tthis.autoHideDelay = 3000;\r\n\t\tthis.events.on(\"shown\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"out\", (ev) => {\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets position of the grip.\r\n\t *\r\n\t * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n\t *\r\n\t * @param  value  Position\r\n\t */\r\n\tpublic set position(value: Align | VerticalAlign) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tswitch(value) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tthis.align = \"left\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"left\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.align = \"right\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"right\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"top\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"top\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"bottom\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"bottom\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): Align | VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of milliseconds to show grip until it is hidden automatically.\r\n\t *\r\n\t * @default 3000\r\n\t * @param  value  Delay\r\n\t */\r\n\tpublic set autoHideDelay(value: number) {\r\n\t\tthis.setPropertyValue(\"autoHideDelay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Delay\r\n\t */\r\n\tpublic get autoHideDelay(): number {\r\n\t\treturn this.getPropertyValue(\"autoHideDelay\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { Legend } from \"../charts/Legend\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChartDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Chart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Chart]].\r\n */\r\nexport interface IChartDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Chart]].\r\n */\r\nexport interface IChartProperties extends IComponentProperties { }\r\n\r\n/**\r\n * Defines events for [[Chart]].\r\n */\r\nexport interface IChartEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Chart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChartAdapters extends IComponentAdapters, IChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nexport class Chart extends Component {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChartEvents;\r\n\r\n\t/**\r\n\t * A List of chart titles.\r\n\t */\r\n\tpublic titles: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Container that holds the chart itself.\r\n\t */\r\n\tpublic chartContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to a container that holds both the chart and the legend.\r\n\t */\r\n\tpublic chartAndLegendContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to chart's [[Legend]].\r\n\t * @ignore\r\n\t */\r\n\tprotected _legend = new MutableValueDisposer<Legend>();\r\n\r\n\t/**\r\n\t * Instance of the grip element.\r\n\t */\r\n\tprotected _dragGrip: $type.Optional<Grip>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Chart) {\r\n\t\t\tthrow new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n\t\t}\r\n\t\tthis.className = \"Chart\";\r\n\r\n\t\t// Create a list of titles\r\n\t\tconst template = new Label();\r\n\t\tthis.titles = new ListTemplate<Label>(template);\r\n\t\tthis._disposers.push(new ListDisposer(this.titles));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\t// Chart component is also a container. it holds _chartAndLegendCont and titles\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\t// Chart and legend\r\n\t\tlet chartAndLegendContainer: Container = this.createChild(Container);\r\n\t\tchartAndLegendContainer.shouldClone = false;\r\n\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\tchartAndLegendContainer.width = percent(100);\r\n\t\tchartAndLegendContainer.height = percent(100);\r\n\t\tthis.chartAndLegendContainer = chartAndLegendContainer;\r\n\r\n\t\t// Chart container holds all the elements of a chart, extept titles and legend\r\n\t\tlet chartContainer = chartAndLegendContainer.createChild(Container);\r\n\t\tchartContainer.shouldClone = false;\r\n\t\tchartContainer.width = percent(100);\r\n\t\tchartContainer.height = percent(100);\r\n\t\tthis.chartContainer = chartContainer;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\tthis._disposers.push(this._legend);\r\n\r\n\t\t// Add title list events to apply certain formatting options and to make\r\n\t\t// the chart reference them as accessible screen reader labels\r\n\t\tthis.titles.events.on(\"inserted\", (label) => {\r\n\t\t\tthis.processTitle(label);\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\t\tthis.titles.events.on(\"removed\", (label) => {\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\r\n\t\t// Accessibility\r\n\t\t// It seems we can't set focusable on the whole chart because it seems to\r\n\t\t// mess up the whole focus event system - getting a focus on an inside\r\n\t\t// object also trigger focus on parent\r\n\t\t//this.focusable = true;\r\n\t\tthis.role = \"region\";\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.fixLayout();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates legend's hierarchy based on the position.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet chartAndLegendContainer = this.chartAndLegendContainer;\r\n\t\t\tlet chartContainer = this.chartContainer;\r\n\t\t\tchartContainer.x = undefined;\r\n\t\t\tchartContainer.y = undefined;\r\n\t\t\tif (legend.position != \"absolute\") {\r\n\t\t\t\tlegend.x = undefined;\r\n\t\t\t\tlegend.y = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (legend.position) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\tlegend.isMeasured = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\r\n\t\t// Nothing here. This method is provided only as a \"placeholder\" for\r\n\t\t// extending classes to override\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new title to the chart when it is inserted into chart's titles\r\n\t * list.\r\n\t * @param event  An event object which is triggered when inserting into titles list\r\n\t * @return Label object\r\n\t */\r\n\tprotected processTitle(event: IListEvents<Label>[\"inserted\"]): Label {\r\n\t\tlet title: Label = event.newValue;\r\n\t\ttitle.parent = this;\r\n\t\ttitle.toBack();\r\n\t\ttitle.shouldClone = false;\r\n\t\ttitle.align = \"center\";\r\n\r\n\t\t// Need to explicitly apply the `id` attribute so it can be referenced by\r\n\t\t// `aria-labelledby`\r\n\t\ttitle.uidAttr();\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if chart has any title elements. If it does, we will use them in an\r\n\t * `aria-labelledby` attribute so that screen readers can use them to properly\r\n\t * describe the chart when it is focused or hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateReaderTitleReferences(): void {\r\n\t\tif (this.titles.length) {\r\n\t\t\tlet titleIds: Array<string> = [];\r\n\t\t\t$iter.each(this.titles.iterator(), (title) => {\r\n\t\t\t\ttitleIds.push(title.uid);\r\n\t\t\t});\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": titleIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Holds the instance of chart's [[Leged]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n\t * @param Legend\r\n\t */\r\n\tpublic set legend(legend: Legend) {\r\n\t\tthis.setLegend(legend);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend\r\n\t */\r\n\tpublic get legend(): Legend {\r\n\t\treturn this._legend.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tif (this._legend.get() !== legend) {\r\n\t\t\tif (legend) {\r\n\t\t\t\t// Set legend options\r\n\t\t\t\tlegend.parent = this.chartAndLegendContainer;\r\n\r\n\t\t\t\tthis._legend.set(legend, legend.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"position\") {\r\n\t\t\t\t\t\tthis.fixLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false));\r\n\r\n\t\t\t\tlegend.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tthis.legend = undefined;\r\n\t\t\t\t}))\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._legend.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\t// otherwise there might be some errors when disposing chart which was just inited\r\n\t\tif (this.legend) {\r\n\t\t\tthis.legend.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up legend\r\n\t\t\tif ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n\t\t\t\tconfig.legend.type = \"Legend\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.titles.copyFrom(source.titles);\r\n\t\tthis.chartContainer.copyFrom(source.chartContainer);\r\n\t\tif (source.legend) {\r\n\t\t\tthis.legend = source.legend.clone();\r\n\t\t\tthis.legend.removeChildren();\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[Grip]] which serves as a grip point which appears on\r\n\t * touch and allows scrolling whole page even if chart is occupying the\r\n\t * whole of the screen and would otherwise prevent scrolling.\r\n\t *\r\n\t * @since 4.4.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n\t * @param  value  Grip\r\n\t */\r\n\tpublic set dragGrip(value: Grip) {\r\n\t\tthis._dragGrip = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip\r\n\t */\r\n\tpublic get dragGrip(): Grip {\r\n\t\tif (!this._dragGrip) {\r\n\t\t\tlet grip = this.tooltipContainer.createChild(Grip);\r\n\t\t\tgrip.align = \"right\";\r\n\t\t\tgrip.valign = \"middle\";\r\n\t\t\tgrip.hide(0);\r\n\r\n\t\t\tgrip.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tthis.interactionsEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgrip.events.on(\"up\", (ev) => {\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t});\r\n\r\n\t\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tgrip.show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._dragGrip = grip;\r\n\t\t}\r\n\t\treturn this._dragGrip;\r\n\t}\r\n\r\n\tpublic set focusable(value: boolean) {\r\n\t\tthis.parent.focusable = value;\r\n\t}\r\n\r\n\tpublic get focusable(): boolean {\r\n\t\treturn this.parent.focusable;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingLeft > 10) {\r\n\t\t\t\tstate.properties.paddingLeft = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingRight > 10) {\r\n\t\t\t\tstate.properties.paddingRight = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingTop > 10) {\r\n\t\t\t\tstate.properties.paddingTop = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingBottom > 10) {\r\n\t\t\t\tstate.properties.paddingBottom = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingLeft = 0;\r\n\t\t\tstate.properties.paddingRight = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingTop = 0;\r\n\t\t\tstate.properties.paddingBottom = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]].\r\n */\r\nexport interface IBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t */\r\n\tlocationX?: number;\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t */\r\n\tlocationY?: number;\r\n\r\n\t/**\r\n\t * Specifies if bullet needs to be redrawn if the underlying data changes.\r\n\t */\r\n\tisDynamic?: boolean;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\txField?: string;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tyField?: string;\r\n\r\n\t/**\r\n\t * Defines if this bullet should be copied to legend marker\r\n\t */\r\n\tcopyToLegendMarker?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Bullet]].\r\n */\r\nexport interface IBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Bullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IBulletAdapters extends IContainerAdapters, IBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Bullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IBulletEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Bullet\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.tooltipX = 0;\r\n\t\tthis.tooltipY = 0;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.copyToLegendMarker = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationX\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationY\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set xField(value: string) {\r\n\t\tthis.setPropertyValue(\"xField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this.getPropertyValue(\"xField\");\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set yField(value: string) {\r\n\t\tthis.setPropertyValue(\"yField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this.getPropertyValue(\"yField\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the bullet is \"dynamic\".\r\n\t *\r\n\t * In most cases the bullets remain the same, even if the underlying data\r\n\t * changes.\r\n\t *\r\n\t * However, in cases where bullet also displays a label, or its size depends\r\n\t * on data, it also needs to be redrawn when the underlying data changes.\r\n\t *\r\n\t * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n\t * time data changes. Regular bullets will be reused as they are.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set isDynamic(value: boolean) {\r\n\t\tthis.setPropertyValue(\"isDynamic\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get isDynamic(): boolean {\r\n\t\treturn this.getPropertyValue(\"isDynamic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if the bullet should be copied to legend marker\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set copyToLegendMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"copyToLegendMarker\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get copyToLegendMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"copyToLegendMarker\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Bullet) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Legend-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../core/Component\";\r\nimport { DataItem, IDataItemEvents } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Optional } from \"../core/utils/Type\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { Color } from \"../core/utils/Color\";\r\nimport { RadialGradient } from \"../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../core/rendering/fills/Pattern\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../core/Sprite\";\r\nimport { Disposer, IDisposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LegendDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * A container data item's elements will be placed in.\r\n\t */\r\n\tprotected _itemContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the item label.\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * A [[Container]] for legend item marker.\r\n\t */\r\n\tprotected _marker: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the value label.\r\n\t */\r\n\tprotected _valueLabel: Label;\r\n\r\n\t/**\r\n\t * A data context for legend item.\r\n\t */\r\n\tpublic dataContext: any;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Legend;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic childrenCreated: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic colorOrig: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LegendDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element.\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Main color of legend data item.\r\n\t *\r\n\t * This is set by the target element this legend item represents, like\r\n\t * a Series or a Slice.\r\n\t *\r\n\t * It can be used to derive a color in legend's sub-items, like label:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"legend\": {\r\n\t *     // ...\r\n\t *     \"labels\": {\r\n\t *       \"text\": \"[{color}]{name}[/]\"\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n\t * @param value  Main color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Main color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color | Pattern | LinearGradient | RadialGradient> {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element for \"value label\".\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get valueLabel(): Label {\r\n\t\tif (!this._valueLabel) {\r\n\t\t\tlet valueLabel = this.component.valueLabels.create();\r\n\t\t\tthis._valueLabel = valueLabel;\r\n\r\n\t\t\tthis.addSprite(valueLabel);\r\n\t\t\tthis._disposers.push(valueLabel);\r\n\t\t\tvalueLabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.valueLabels.removeValue(valueLabel);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._valueLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to the main [[Container]] that holds legend item's elements:\r\n\t * marker and labels.\r\n\t *\r\n\t * @return Item container\r\n\t */\r\n\tpublic get itemContainer(): Container {\r\n\t\tif (!this._itemContainer) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet itemContainer = component.itemContainers.create();\r\n\t\t\titemContainer.parent = component;\r\n\t\t\t\r\n\t\t\tthis._itemContainer = itemContainer;\r\n\t\t\tthis.addSprite(itemContainer);\r\n\t\t\tthis._disposers.push(itemContainer);\r\n\r\n\t\t\t// Add click/tap event to toggle item\r\n\t\t\tif (itemContainer.togglable) {\r\n\t\t\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\t\t\tcomponent.toggleDataItem(<this>ev.target.dataItem);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Add focus event so that we can track which object is currently in focus\r\n\t\t\t// for keyboard toggling\r\n\t\t\tif (itemContainer.focusable) {\r\n\t\t\t\titemContainer.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t// We need this here in order to reset focused item when it is clicked\r\n\t\t\t\t\t// normally so that it is not toggled by ENTER afterwards\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = <this>ev.target.dataItem;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.itemContainers.removeValue(itemContainer);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tif (this.dataContext.uidAttr) {\r\n\t\t\t\titemContainer.readerControls = this.dataContext.uidAttr();\r\n\t\t\t\titemContainer.readerLabelledBy = this.dataContext.uidAttr();\r\n\t\t\t}\r\n\r\n\t\t\tlet sprite = <any>this.dataContext;\r\n\t\t\tif ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n\t\t\t\tconst visibilitychanged = function(ev: AMEvent<Sprite | DataItem, ISpriteEvents & IDataItemEvents>[\"visibilitychanged\"]) {\r\n\t\t\t\t\titemContainer.readerChecked = ev.visible;\r\n\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\titemContainer.isActive = !ev.visible;\r\n\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tif (this.component) {\r\n\t\t\t\t\t\tthis.component.dataItems.remove(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tif (sprite instanceof Sprite) {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"hidden\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = false;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = true;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"shown\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = true;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = false;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._itemContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Container]] that holds legend item's marker element.\r\n\t *\r\n\t * @return Marker\r\n\t */\r\n\tpublic get marker(): Container {\r\n\t\tif (!this._marker) {\r\n\t\t\tlet marker = this.component.markers.create();\r\n\t\t\tthis._marker = marker;\r\n\t\t\tmarker.parent = this.itemContainer;\r\n\t\t\tthis.addSprite(marker);\r\n\t\t\tthis._disposers.push(marker);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.markers.removeValue(marker);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._marker;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nexport class LegendSettings {\r\n\r\n\t/**\r\n\t * [valueText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic valueText: string;\r\n\r\n\t/**\r\n\t * [labelText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic labelText: string;\r\n\r\n\t/**\r\n\t * A text template for the value part of the legend item.\r\n\t */\r\n\tpublic itemValueText: string;\r\n\r\n\t/**\r\n\t * A text template for the label part of the legend item.\r\n\t */\r\n\tpublic itemLabelText: string;\r\n\r\n\t/**\r\n\t * Should marker be created for each legend item.\r\n\t */\r\n\tpublic createMarker: boolean = true;\r\n}\r\n\r\n/**\r\n * Represents types available for Legend position. Not all charts will pay attention to this, like MapChart. You'll need to use legend.align and legend.valign properties to position legend on MapChart.\r\n */\r\nexport type LegendPosition = \"left\" | \"right\" | \"top\" | \"bottom\" | \"absolute\";\r\n\r\n/**\r\n * Defines data fields for [[Legend]].\r\n */\r\nexport interface ILegendDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * A field name in the data item which holds name of the legend item.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A field name in data item which holds boolean value whether item should\r\n\t * be displayed in legend or not.\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Legend]].\r\n */\r\nexport interface ILegendProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Should legend use default marker?\r\n\t *\r\n\t * If set to `false`, the legend will try to mirror the look of the actual\r\n\t * item, like series.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseDefaultMarker?: boolean;\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t */\r\n\tposition?: LegendPosition;\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t */\r\n\tscrollable?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Legend]].\r\n */\r\nexport interface ILegendEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Legend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILegendAdapters extends IComponentAdapters, ILegendProperties { }\r\n\r\nexport interface ILegendItemEvents {\r\n\tpropertychanged: {\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t */\r\n\t\tproperty: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nexport class Legend extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of the data fields.\r\n\t */\r\n\tpublic _dataFields: ILegendDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILegendEvents;\r\n\r\n\t/**\r\n\t * Defines data item type.\r\n\t */\r\n\tpublic _dataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * List of legend Item containers. Legend item containers contain marker, title label and value label.\r\n\t */\r\n\tpublic itemContainers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item labels.\r\n\t */\r\n\tpublic labels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * List of legend item markers.\r\n\t */\r\n\tpublic markers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item value labels.\r\n\t */\r\n\tpublic valueLabels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Currently focused legend item (for toggling via keyboard)\r\n\t */\r\n\tpublic focusedItem: Optional<this[\"_dataItem\"]>;\r\n\r\n\r\n\tpublic scrollbar: Scrollbar;\r\n\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Legend\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", false);\r\n\t\tthis.setPropertyValue(\"scrollable\", false);\r\n\t\tthis.setPropertyValue(\"contentAlign\", \"center\");\r\n\r\n\t\t// Create a template container and list for legend items\r\n\t\tlet itemContainer: Container = new Container();\r\n\t\titemContainer.applyOnClones = true;\r\n\t\titemContainer.padding(8, 0, 8, 0);\r\n\t\titemContainer.margin(0, 10, 0, 10);\r\n\t\titemContainer.layout = \"horizontal\";\r\n\t\titemContainer.clickable = true;\r\n\t\titemContainer.focusable = true;\r\n\t\titemContainer.role = \"switch\";\r\n\t\titemContainer.togglable = true;\r\n\t\titemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\titemContainer.background.fillOpacity = 0; // creates hit area\r\n\r\n\t\t// Create container list using item template we just created\r\n\t\tthis.itemContainers = new ListTemplate<Container>(itemContainer);\r\n\t\tthis._disposers.push(new ListDisposer(this.itemContainers));\r\n\t\tthis._disposers.push(this.itemContainers.template);\r\n\r\n\t\t// Set up global keyboard events for toggling elements\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (keyboard.isKey(ev.event, \"enter\") && this.focusedItem) {\r\n\t\t\t\tconst focusedItem = this.focusedItem;\r\n\t\t\t\tconst target = focusedItem.itemContainer;\r\n\t\t\t\tif (target.togglable) {\r\n\t\t\t\t\tthis.toggleDataItem(focusedItem);\r\n\t\t\t\t}\r\n\t\t\t\telse if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\ttarget.dispatchImmediately(\"hit\", { event: ev });\r\n\r\n\t\t\t\t\t// We need this here because \"hit\" event resets `this.focusedItem`\r\n\t\t\t\t\t// And we need it here\r\n\t\t\t\t\tthis.focusedItem = focusedItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: Container = new Container();\r\n\t\tmarker.width = 23;\r\n\t\tmarker.height = 23;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.applyOnClones = true;\r\n\t\tmarker.setStateOnChildren = true;\r\n\t\tmarker.background.fillOpacity = 0;\r\n\t\tmarker.background.strokeOpacity = 0;\r\n\t\tmarker.propertyFields.fill = \"fill\";\r\n\t\tmarker.valign = \"middle\";\r\n\r\n\t\tlet disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n\r\n\t\tmarker.events.on(\"childadded\", (event) => {\r\n\t\t\tlet child = event.newValue;\r\n\t\t\tlet activeState = child.states.create(\"active\");\r\n\t\t\tactiveState.properties.stroke = disabledColor;\r\n\t\t\tactiveState.properties.fill = disabledColor;\r\n\t\t});\r\n\r\n\t\tthis.markers = new ListTemplate<Container>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\t// Create a legend background element\r\n\t\tlet rectangle: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\trectangle.width = percent(100);\r\n\t\trectangle.height = percent(100);\r\n\t\trectangle.applyOnClones = true;\r\n\t\trectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n\t\trectangle.strokeOpacity = 0;\r\n\r\n\t\t// Create a template container and list for item labels\r\n\t\tlet label: Label = new Label();\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.margin(0, 5, 0, 5);\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.applyOnClones = true;\r\n\t\tlabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tthis.labels = new ListTemplate<Label>(label);\r\n\t\tthis._disposers.push(new ListDisposer(this.labels));\r\n\t\tthis._disposers.push(this.labels.template);\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.fullWords = false;\r\n\r\n\t\t// Create a template container and list for item value labels\r\n\t\tlet valueLabel: Label = new Label();\r\n\t\tvalueLabel.margin(0, 5, 0, 0);\r\n\t\tvalueLabel.valign = \"middle\";\r\n\t\tvalueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n\t\tvalueLabel.align = \"right\";\r\n\t\tvalueLabel.textAlign = \"end\";\r\n\t\tvalueLabel.applyOnClones = true;\r\n\t\tvalueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tvalueLabel.interactionsEnabled = false;\r\n\r\n\t\tthis.valueLabels = new ListTemplate<Label>(valueLabel);\r\n\t\tthis._disposers.push(new ListDisposer(this.valueLabels));\r\n\t\tthis._disposers.push(this.valueLabels.template);\r\n\r\n\t\tthis.position = \"bottom\"; // don't use setPropertyValue here!\r\n\r\n\t\t// Create a state for disabled legend items\r\n\t\titemContainer.states.create(\"active\");\r\n\t\titemContainer.setStateOnChildren = true;\r\n\r\n\t\t// Apply accessibility settings\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.events.on(\"layoutvalidated\", this.handleScrollbar, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Legend\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LegendDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected validateDataElements() {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.scrollbar.start = 0;\r\n\t\t\tthis.scrollbar.end = 1;\r\n\t\t}\r\n\t\tsuper.validateDataElements();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t * @todo Description\r\n\t * @todo Figure out how to update appearance of legend item without losing focus\r\n\t * @todo Update legend marker appearance as apperance of related series changes\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\t// Get data item (legend item's) container\r\n\t\tlet container = dataItem.itemContainer;\r\n\r\n\t\tlet marker = dataItem.marker;\r\n\r\n\t\t$utils.used(dataItem.label);\r\n\t\tlet valueLabel = dataItem.valueLabel;\r\n\r\n\t\t// Set parent and update current state\r\n\t\tcontainer.readerChecked = dataItem.dataContext.visible;\r\n\r\n\t\t// Tell series its legend data item\r\n\t\tdataItem.dataContext.legendDataItem = dataItem;\r\n\r\n\t\tlet tempMaxWidth = dataItem.label.maxWidth;\r\n\t\tif(!(dataItem.label.width instanceof Percent)){\r\n\t\t\tdataItem.label.width = undefined;\t\r\n\t\t}\r\n\t\t\r\n\t\tif (tempMaxWidth > 0) {\r\n\t\t\tdataItem.label.maxWidth = tempMaxWidth;\r\n\t\t}\r\n\t\tif (valueLabel.align == \"right\") {\r\n\t\t\tvalueLabel.width = undefined;\r\n\t\t}\r\n\r\n\t\tlet legendSettings = dataItem.dataContext.legendSettings;\r\n\r\n\t\t// If we are not using default markers, create a unique legend marker based\r\n\t\t// on the data item type\r\n\t\tlet dataContext = dataItem.dataContext;\r\n\r\n\t\tif (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n\t\t\tif (!dataItem.childrenCreated) {\r\n\t\t\t\tdataContext.createLegendMarker(marker);\r\n\t\t\t\tdataItem.childrenCreated = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.markers.template.propertyFields.fill = undefined;\r\n\t\t}\r\n\r\n\t\tif (dataContext.updateLegendValue) {\r\n\t\t\tdataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n\t\t}\r\n\r\n\t\tif (dataContext.component && dataContext.component.updateLegendValue) {\r\n\t\t\tdataContext.component.updateLegendValue(dataContext);\r\n\t\t}\r\n\r\n\t\tif (valueLabel.invalid) {\r\n\t\t\tvalueLabel.validate();\r\n\t\t}\r\n\r\n\t\tif (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n\t\t\tvalueLabel.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet visible = dataItem.dataContext.visible;\r\n\r\n\t\tif (visible === undefined) {\r\n\t\t\tvisible = true;\r\n\t\t}\r\n\t\tvisible = $type.toBoolean(visible);\r\n\t\tdataItem.dataContext.visible = visible;\r\n\r\n\t\tcontainer.events.disableType(\"toggled\");\r\n\r\n\t\tcontainer.isActive = !visible;\r\n\t\tif (container.isActive) {\r\n\t\t\tcontainer.setState(\"active\", 0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontainer.setState(\"default\", 0);\r\n\t\t}\r\n\t\tcontainer.events.enableType(\"toggled\");\r\n\t}\r\n\r\n\r\n\tpublic afterDraw() {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\t\tlet maxLabelWidth = 0;\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (label.invalid) {\r\n\t\t\t\tlabel.maxWidth = undefined;\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n\t\t\t\tmaxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tlet maxValueLabelWidth = 0;\r\n\t\tthis.valueLabels.each((label) => {\r\n\t\t\tif (label.invalid) {\t\t\t\t\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n\t\t\t\tmaxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet maxMarkerWidth = 0;\r\n\t\tthis.markers.each((marker) => {\r\n\t\t\tif (marker.invalid) {\r\n\t\t\t\tmarker.validate();\r\n\t\t\t}\r\n\t\t\tif (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n\t\t\t\tmaxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet itemContainer = this.itemContainers.template;\r\n\t\tlet margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n\t\tlet maxAdjustedLabelWidth: number;\r\n\t\tlet trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tmaxAdjustedLabelWidth = maxLabelWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmaxWidth = maxWidth - margin;\r\n\t\t\tif (maxWidth > trueMaxWidth) {\r\n\t\t\t\tmaxWidth = trueMaxWidth;\r\n\t\t\t}\r\n\t\t\tmaxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n\t\t}\r\n\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n\t\t\t\tif(!(label.width instanceof Percent)){\r\n\t\t\t\t\tlabel.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n\t\t\t\t\tlabel.maxWidth = label.width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (this.valueLabels.template.align == \"right\") {\r\n\t\t\tthis.valueLabels.each((valueLabel) => {\r\n\t\t\t\tvalueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsuper.afterDraw();\r\n\t}\r\n\r\n\r\n\tprotected handleScrollbar() {\r\n\t\tlet scrollbar = this.scrollbar;\r\n\t\tif (this.scrollable && scrollbar) {\r\n\t\t\tscrollbar.height = this.measuredHeight;\r\n\t\t\tscrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n\r\n\t\t\tif (this.contentHeight > this.measuredHeight) {\r\n\t\t\t\tscrollbar.visible = true;\r\n\t\t\t\tscrollbar.thumb.height = scrollbar.height * this.measuredHeight / this.contentHeight;\r\n\t\t\t\tthis.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + + scrollbar.pixelMarginRight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateMasks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n\t * layout structure than other charts.\r\n\t *\r\n\t * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n\t * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @param value  Position\r\n\t */\r\n\tpublic set position(value: LegendPosition) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tif (value == \"left\" || value == \"right\") {\r\n\t\t\t\tthis.margin(10, 5, 10, 10);\r\n\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\tthis.contentAlign = \"none\";\r\n\t\t\t\tthis.valueLabels.template.align = \"right\";\r\n\r\n\t\t\t\tif (!$type.isNumber(this.maxColumns)) {\r\n\t\t\t\t\tthis.maxColumns = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.width = undefined;\r\n\t\t\t\tthis.maxWidth = 220;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.maxColumns = undefined;\r\n\t\t\t\tthis.width = percent(100);\r\n\t\t\t\tthis.valueLabels.template.align = \"left\";\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): LegendPosition {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should legend try to mirror the look of the related item when building\r\n\t * the marker for legend item?\r\n\t *\r\n\t * If set to `false` it will try to make the marker look like its related\r\n\t * item.\r\n\t *\r\n\t * E.g. if an item is for a Line Series, it will display a line of the\r\n\t * same thickness, color, and will use the same bullets if series have them.\r\n\t *\r\n\t * If set to `true`, all markers will be shown as squares, regardless of te\r\n\t * series type.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use default marker?\r\n\t */\r\n\tpublic set useDefaultMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default marker?\r\n\t */\r\n\tpublic get useDefaultMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"useDefaultMarker\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * Please note that `maxHeight` is automatically set for Legend when its\r\n\t * `position` is set to `\"left\"` or `\"right\"`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t * @param  value  Legend Scrollable?\r\n\t */\r\n\tpublic set scrollable(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"scrollable\", value, true)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tlet scrollbar = this.createChild(Scrollbar);\r\n\t\t\t\tthis.scrollbar = scrollbar;\r\n\t\t\t\tscrollbar.isMeasured = false;\r\n\t\t\t\tscrollbar.orientation = \"vertical\";\r\n\t\t\t\tscrollbar.endGrip.__disabled = true;\r\n\t\t\t\tscrollbar.startGrip.__disabled = true;\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t\tscrollbar.marginLeft = 5;\r\n\r\n\t\t\t\tthis._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\r\n\t\t\t\tthis._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t\tif (this.scrollbar) {\r\n\t\t\t\t\t\tthis.scrollbar.dispose();\r\n\t\t\t\t\t\tthis.scrollbar = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling of legend.\r\n\t *\r\n\t * @param  event  Event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]): void {\r\n\t\tlet shift = event.shift.y;\r\n\t\tlet scrollbar = this.scrollbar\r\n\t\tif (scrollbar) {\r\n\t\t\tlet ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n\t\t\tlet delta = scrollbar.end - scrollbar.start;\r\n\t\t\tif (shift > 0) {\r\n\t\t\t\tscrollbar.start = $math.max(0, scrollbar.start - ds);\r\n\t\t\t\tscrollbar.end = scrollbar.start + delta;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.end = $math.min(1, scrollbar.end - ds);\r\n\t\t\t\tscrollbar.start = scrollbar.end - delta;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMasks(): void {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.itemContainers.each((itemContainer) => {\r\n\t\t\t\titemContainer.dy = -this.scrollbar.thumb.pixelY * this.contentHeight / this.measuredHeight;\r\n\t\t\t\titemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: this.measuredWidth, height: this.measuredHeight }\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend Scrollable?\r\n\t */\r\n\tpublic get scrollable(): boolean {\r\n\t\treturn this.getPropertyValue(\"scrollable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item Legend item\r\n\t * @todo Maybe do it with togglable instead\r\n\t */\r\n\tpublic toggleDataItem(item: this[\"_dataItem\"]): void {\r\n\t\tlet dataContext = item.dataContext;\r\n\r\n\t\tif (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n\t\t\titem.color = item.colorOrig;\r\n\r\n\t\t\tdataContext.appeared = true;\r\n\t\t\titem.itemContainer.isActive = false;\r\n\r\n\t\t\tif (dataContext.hidden === true) {\r\n\t\t\t\tdataContext.hidden = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext.show) {\r\n\t\t\t\tdataContext.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\titem.itemContainer.isActive = true;\r\n\t\t\tdataContext.appeared = true;\r\n\r\n\t\t\tif (dataContext.hide) {\r\n\t\t\t\tdataContext.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n\t\t\titem.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Override preloader method so that legend does not accidentally show its\r\n\t * own preloader.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Always `undefined`\r\n\t */\r\n\tpublic get preloader(): Optional<Preloader> {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemPropertyChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemPropertyChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tdataItem.valueLabel.invalidate();\r\n\t\tdataItem.label.invalidate();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"bottom\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"right\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n\r\nexport interface IHeatRule {\r\n\ttarget: Sprite;\r\n\tproperty: string;\r\n\tmin: any;\r\n\tmax: any;\r\n\tdataField?: string;\r\n\tminValue?: number;\r\n\tmaxValue?: number;\r\n\tlogarithmic?: boolean;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _bullets: Dictionary<string, Sprite>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Series;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t */\r\n\tpublic get bullets(): Dictionary<string, Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new Dictionary<string, Sprite>();\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._bullets));\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\t//this._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.bullets.clear();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be hidden.\r\n\t */\r\n\thidden?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Should series be hidden in chart's legend?\r\n\t */\r\n\thiddenInLegend?: boolean;\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t */\r\n\tname?: string;\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t */\r\n\titemReaderText: string\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISeriesEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t */\r\n\tprotected _bullets: ListTemplate<Sprite>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t *\r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\r\n\t/**\r\n\t * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n\t */\r\n\tprotected _itemReaderTextChanged: boolean = false;\r\n\r\n\t/*\r\n\t\tpublic heatMapfillRule: (fill:Color, column: Sprite) => any = function(fill:Color, sprite: Sprite) {\r\n\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>sprite.dataItem;\r\n\r\n\t\t\tif (dataItem && dataItem.value) {\r\n\t\t\t\tlet series = dataItem.component;\r\n\t\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\t\treturn new Color($colors.interpolate(series.minColor.rgb, series.maxColor.rgb, percent));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t*/\r\n\r\n\tprotected _heatRules: List<IHeatRule>;\r\n\r\n\t/**\r\n\t * Most of the series use absolute values. However sometimes various\r\n\t * calculated percent values are need, e.g. item's percent representation\r\n\t * across all values in series, etc.\r\n\t *\r\n\t * It's a resource-intensive operation, so it is disabled by default.\r\n\t *\r\n\t * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n\t * or creating 100% stacks, this setting needs to be set to `true`.\r\n\t *\r\n\t * NOTE: `PieChart`, which relies on slice percentages, has this\r\n\t * automatically set to `true`.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic calculatePercent: boolean = false;\r\n\r\n\t/**\r\n\t * When `calculatePercent` is enabled and data item's percent value is\r\n\t * calculated, last item's real value is used instead of its working value.\r\n\t *\r\n\t * This is done for the animations when last item in series (e.g. slice in\r\n\t * a `PieSeries`) is hidden or shown. (if we would use real value, the\r\n\t * calculated percent would always be 100%).\r\n\t *\r\n\t * Sometimes there is a need (e.g. for drill-down Sunburst) to disable this\r\n\t * hack by setting `usePercentHack` to `false`.\r\n\t *\r\n\t * @since 4.9.13\r\n\t * @default true\r\n\t */\r\n\tpublic usePercentHack: boolean = true;\r\n\r\n\t/**\r\n\t * Specifies if series should be automatically disposed when removing from\r\n\t * chart's `series` list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * When chart/series' data is processed, all kinds of derivative values are\r\n\t * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n\t * time-consuming operation, especially prominent in data-heavy charts.\r\n\t *\r\n\t * If your chart does not need those values, and you have a lot of data,\r\n\t * setting this to `true` might give a dramatic increase in initial chart\r\n\t * load speed.\r\n\t *\r\n\t * Please note, regular column and line series usage scenarios do not\r\n\t * require derivative values. Those come into play only when you do advanced\r\n\t * functionality like coloring segments of charts in different colors\r\n\t * depending on change between open and close values, have stacked series, or\r\n\t * display any of the derived values, like percent, in tooltips or bullets.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic simplifiedProcessing: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Series) {\r\n\t\t\tthrow new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n\t\t}\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.shouldClone = false;\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\tthis._disposers.push(this.mainContainer);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tlet bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis._shouldBeReady.push(bulletsContainer);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.virtualParent = this;\r\n\t\tthis._disposers.push(bulletsContainer);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\t\tthis.tooltip.virtualParent = this;\r\n\t\tthis._disposers.push(this.tooltip);\r\n\r\n\t\tthis.hiddenState.transitionEasing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis._disposers.push(this.dataItem);\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * We need this here so that class names can be applied to bullets container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\tsuper.applyTheme();\r\n\t\tif (options.autoSetClassName && this.bulletsContainer) {\r\n\t\t\tthis.bulletsContainer.className = this.className + \"-bullets\";\r\n\t\t\tthis.bulletsContainer.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t *\r\n\t * @param bullet  Sprite\r\n\t */\r\n\tpublic positionBullet(bullet: Sprite): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t *\r\n\t * @param event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Sprite>[\"inserted\"]) {\r\n\t\tlet bullet: Sprite = event.newValue;\r\n\t\tbullet.isTemplate = true;\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tthis.events.once(\"datavalidated\", (ev) => {\r\n\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\tbullet.focusable = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * removes bullets\r\n\t *\r\n\t * @param event  List event\r\n\t */\r\n\tprotected removeBullet(event: IListEvents<Sprite>[\"removed\"]) {\r\n\t\tlet bullet: Sprite = event.oldValue;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n\t\t\tif (eachBullet) {\r\n\t\t\t\teachBullet.dispose();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string, startIndex: number): number {\r\n\t\t// find first\r\n\t\t/*\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tif ($object.hasKey(dataItem.values, key)) {\r\n\t\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});*/\r\n\r\n\t\t//if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n\t\t//startIndex++;\r\n\t\t//}\r\n\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getAbsoluteFirstValue(key: string): number {\r\n\t\tfor (let i = 0; i < this.dataItems.length; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.values[key].value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param dataItems [description]\r\n\t */\r\n\tprotected processValues(working: boolean) {\r\n\t\tif (!this.simplifiedProcessing) {\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tlet count: { [index: string]: number } = {};\r\n\t\t\tlet sum: { [index: string]: number } = {};\r\n\t\t\tlet absoluteSum: { [index: string]: number } = {};\r\n\t\t\tlet low: { [index: string]: number } = {};\r\n\t\t\tlet high: { [index: string]: number } = {};\r\n\t\t\tlet open: { [index: string]: number } = {};\r\n\t\t\tlet close: { [index: string]: number } = {};\r\n\t\t\tlet previous: { [index: string]: number } = {};\r\n\t\t\tlet first: { [index: string]: number } = {};\r\n\t\t\tlet absoluteFirst: { [index: string]: number } = {};\r\n\r\n\t\t\t//let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\t\tlet startIndex: number = $math.max(0, this.startIndex);\r\n\t\t\tstartIndex = $math.min(startIndex, this.dataItems.length);\r\n\r\n\t\t\tlet endIndex: number = $math.min(this.endIndex, this.dataItems.length);\r\n\r\n\t\t\tif (!$type.isNumber(startIndex)) {\r\n\t\t\t\tstartIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\t\tendIndex = this.dataItems.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t//if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t// count values\r\n\t\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t\t// sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t\t// absolute sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteSum[key])) {\r\n\t\t\t\t\t\t\tabsoluteSum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tabsoluteSum[key] += Math.abs(value);\r\n\r\n\t\t\t\t\t\t// open\r\n\t\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// close\r\n\t\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t\t// low\r\n\t\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// high\r\n\t\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\t\t\tfirst[key] = this.getFirstValue(key, startIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteFirst[key])) {\r\n\t\t\t\t\t\t\tabsoluteFirst[key] = this.getAbsoluteFirstValue(key);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// change\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t\t\t// change from start percent\r\n\t\t\t\t\t\t// will fail if first value is 0\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]), \"startChange\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]) / absoluteFirst[key] * 100, \"startChangePercent\");\r\n\r\n\t\t\t\t\t\t// previous change\r\n\t\t\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\t\t\tprevValue = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t\t\t// previous change percent\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.calculatePercent) {\r\n\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\tlet ksum: number = absoluteSum[key];\r\n\r\n\t\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tif (ksum > 0) {\r\n\t\t\t\t\t\t\t\tif (this.usePercentHack) {\r\n\t\t\t\t\t\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t\t\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t\t\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\t\t\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\t\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet percent = value / ksum * 100;\r\n\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 0, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t\t// so we do startIndex - 1\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t\t// change\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t\t// change percent\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, absoluteSum[key], \"absoluteSum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tthis.filters.clear();\r\n\t\t}\r\n\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tlet bulletsContainer = this.bulletsContainer;\r\n\t\tbulletsContainer.fill = this.fill;\r\n\t\tbulletsContainer.stroke = this.stroke;\r\n\t\tbulletsContainer.x = this.pixelX;\r\n\t\tbulletsContainer.y = this.pixelY;\r\n\r\n\t\tif (this.bulletsContainer.children.length > 0) {\r\n\t\t\tif (this._showBullets) {\r\n\r\n\t\t\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.children.each((bullet) => {\r\n\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateTooltipBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.topParent) {\r\n\t\t\tlet x = 0;\r\n\t\t\tlet y = 0;\r\n\t\t\tlet w = this.topParent.maxWidth;\r\n\t\t\tlet h = this.topParent.maxHeight;\r\n\t\t\tlet rect = { x: x, y: y, width: w, height: h };\r\n\r\n\t\t\tthis.tooltip.setBounds(rect);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Sprite): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets) {\r\n\t\t\tif (!this.isHidden) {\r\n\t\t\t\tthis.bulletsContainer.visible = true;\r\n\t\t\t}\r\n\t\t\tthis.bullets.each((bulletTemplate) => {\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Sprite = <Sprite>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n\t\t\t\t\tif (!bullet) {\r\n\r\n\t\t\t\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\t\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\t\t\t\tif (disabledField && dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = false;\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = false;\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = true;\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbullet.shouldClone = false;\r\n\t\t\t\t\t\tdataItem.addSprite(bullet);\r\n\r\n\t\t\t\t\t\tif (!this.visible || this.isHiding) {\r\n\t\t\t\t\t\t\tbullet.hide(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet readerText = this.itemReaderText;\r\n\r\n\t\t\t\t\t\tif (bullet instanceof Bullet) {\r\n\t\t\t\t\t\t\tif (!readerText) {\r\n\t\t\t\t\t\t\t\treaderText = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"over\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"out\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\t\t\t\t\tbullet.__disabled = false;\r\n\r\n\t\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bulletsContainer.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (!this.dataRangeInvalid) {\r\n\t\t\tthis.invalidateProcessedData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.shouldClone = false;\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t\taxisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param axis  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * IMPORTANT: This setting will work only when Series' base axis\r\n\t * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n\t * setting will be ignored, because it would be a huge overhead to measure\r\n\t * distance between each and every bullet.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of bullets that will be added to each and every items in the\r\n\t * series.\r\n\t *\r\n\t * You can push any object that is a descendant of a [[Sprite]] here. All\r\n\t * items added to this list will be copied and used as a bullet on all data\r\n\t * items, including their properties, events, etc.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n\t * @return List of bullets.\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Sprite>(new Bullet());\r\n\t\t\tthis._bullets.template.virtualParent = this;\r\n\t\t\tthis._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n\t\t\tthis._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be hidden in legend?\r\n\t *\r\n\t * @param value Hidden in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.feedLegend();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.getPropertyValue(\"hiddenInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value);\r\n\r\n\t\tlet legendDataItem = this.legendDataItem;\r\n\t\tif (legendDataItem) {\r\n\t\t\tlegendDataItem.component.invalidate();\r\n\t\t\tlegendDataItem.component.invalidateRawData();\r\n\t\t}\r\n\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t *\r\n\t * @param value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t\tthis._itemReaderTextChanged = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn readerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"itemReaderText\", readerText);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif ((dataItem && !dataItem.isDisposed())|| notRange) {\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tthis.calculatePercent = source.calculatePercent;\r\n\t\tthis.usePercentHack = source.usePercentHack;\r\n\t\tthis.simplifiedProcessing = source.simplifiedProcessing;\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t *\r\n\t * @param e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tif (this._chart && this._chart.modal) {\r\n\t\t\tthis._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n\t\t\tthis._chart.modal.closable = false;\r\n\t\t\tif (!options.suppressErrors) {\r\n\t\t\t\tthis._chart.modal.open();\r\n\t\t\t}\r\n\t\t\tthis._chart.disabled = true;\r\n\t\t}\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters() {\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\r\n\t\t// copyFrom of a list copies, does not clone\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tthis.bulletsContainer.filters.push(filter.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of heat rules to apply to series' elements based on the value\r\n\t * of the data item.\r\n\t *\r\n\t * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n\t * be applied to child objects of series, like columns, bullets, etc.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t * ```Javacript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t *```JSON\r\n\t *{\r\n\t *  // ...\r\n\t *  \"series\": [{\r\n\t *    \"type\": \"ColumnSeries\",\r\n\t *    \"heatRules\": [{\r\n\t *      \"target\": \"columns.template\",\r\n\t *      \"property\": \"fill\",\r\n\t *      \"min\": \"#F5DBCB\",\r\n\t *      \"max\": \"#ED7B84\",\r\n\t *      \"dataField\": \"valueY\"\r\n\t *    }]\r\n\t *  }]\r\n\t *}\r\n\t *```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n\t * @return  Heat rules\r\n\t */\r\n\r\n\tpublic get heatRules(): List<IHeatRule> {\r\n\t\tif (!this._heatRules) {\r\n\t\t\tthis._heatRules = new List<IHeatRule>();\r\n\t\t\tthis._heatRules.events.on(\"inserted\", (event) => {\r\n\t\t\t\tlet heatRule = event.newValue;\r\n\t\t\t\tlet target = heatRule.target;\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tlet dataField = heatRule.dataField;\r\n\r\n\t\t\t\t\tif (!$type.hasValue(dataField)) {\r\n\t\t\t\t\t\tdataField = \"value\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet seriesDataItem = this.dataItem;\r\n\t\t\t\t\tlet property = heatRule.property;\r\n\r\n\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// giveup here\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dataItems.template.events.on(\"workingvaluechanged\", (event) => {\r\n\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\tlet dataItem = event.target;\r\n\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t// givup here\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\ttarget.adapter.add(<any>property, (value, ruleTarget, property) => {\r\n\r\n\t\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\t\tlet min = heatRule.min;\r\n\t\t\t\t\t\tlet max = heatRule.max;\r\n\r\n\t\t\t\t\t\tif (ruleTarget instanceof Sprite) {\r\n\t\t\t\t\t\t\tlet anySprite = <any>ruleTarget;\r\n\t\t\t\t\t\t\tlet propertyField = anySprite.propertyFields[property];\r\n\t\t\t\t\t\t\tif (propertyField && ruleTarget.dataItem) {\r\n\t\t\t\t\t\t\t\tlet dataContext = <any>ruleTarget.dataItem.dataContext;\r\n\t\t\t\t\t\t\t\tif (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n\t\t\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>ruleTarget.dataItem;\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(minValue)) {\r\n\t\t\t\t\t\t\tminValue = seriesDataItem.values[dataField].low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\t\tmaxValue = seriesDataItem.values[dataField].high;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tlet fieldValues = dataItem.values[dataField];\r\n\t\t\t\t\t\t\tif (fieldValues) {\r\n\t\t\t\t\t\t\t\tlet workingValue = dataItem.getActualWorkingValue(dataField);\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet percent: number;\r\n\t\t\t\t\t\t\t\t\tif (heatRule.logarithmic) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (Math.log(workingValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (workingValue - minValue) / (maxValue - minValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(workingValue) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = 0.5;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// fixes problems if all values are the same\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(min)) {\r\n\t\t\t\t\t\t\t\t\t\treturn min + (max - min) * percent;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (min instanceof Color) {\r\n\t\t\t\t\t\t\t\t\t\treturn new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._heatRules;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tlet heatRules;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up bullets\r\n\t\t\tif ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n\t\t\t\tfor (let i = 0, len = config.bullets.length; i < len; i++) {\r\n\t\t\t\t\tlet bullets = config.bullets[i];\r\n\t\t\t\t\tif (!$type.hasValue(bullets.type)) {\r\n\t\t\t\t\t\tbullets.type = \"Bullet\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let's take heatRules out of the config, so that we can process\r\n\t\t\t// them later, when bullets are already there\r\n\t\t\tif ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n\t\t\t\theatRules = config.heatRules;\r\n\t\t\t\tdelete config.heatRules;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\t// Process heat rules again, when all other elements are ready\r\n\t\tif (heatRules) {\r\n\t\t\tfor (let i = 0, len = heatRules.length; i < len; i++) {\r\n\t\t\t\tlet rule = heatRules[i];\r\n\r\n\t\t\t\t// Resolve target\r\n\t\t\t\tlet target: any = this;\r\n\t\t\t\tif ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n\r\n\r\n\t\t\t\t\t// Check if we can find this element by id\r\n\t\t\t\t\tif (this.map.hasKey(rule.target)) {\r\n\t\t\t\t\t\ttarget = this.map.getKey(rule.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet parts = rule.target.split(\".\");\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tif (target instanceof List) {\r\n\t\t\t\t\t\t\t\tlet listitem = target.getIndex($type.toNumber(parts[x]));\r\n\t\t\t\t\t\t\t\tif (!listitem) {\r\n\t\t\t\t\t\t\t\t\ttarget = (<any>target)[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = listitem;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tconst maybeIndex = parts[x].match(/^(.*)\\[([0-9]+)\\]/);\r\n\t\t\t\t\t\t\t\tif (maybeIndex) {\r\n\t\t\t\t\t\t\t\t\tif (target[maybeIndex[1]] instanceof List) {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]].getIndex($type.toNumber(maybeIndex[2]));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]][$type.toNumber(maybeIndex[2])];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = target[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trule.target = target;\r\n\r\n\t\t\t\t// Resolve colors and percents\r\n\t\t\t\tif ($type.hasValue(rule.min)) {\r\n\t\t\t\t\trule.min = this.maybeColorOrPercent(rule.min);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(rule.max)) {\r\n\t\t\t\t\trule.max = this.maybeColorOrPercent(rule.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig({\r\n\t\t\t\theatRules: heatRules\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\t/*\r\n\t\tprotected getVisibility(): boolean {\r\n\t\t\tlet hidden = this.getPropertyValue(\"hidden\");\r\n\t\t\tif (hidden) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn super.getVisibility();\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"heatRules\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"heatRules\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n","/**\r\n * Serial chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { IListEvents, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { PatternSet } from \"../../core/utils/PatternSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SerialChartDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SerialChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SerialChart]].\r\n */\r\nexport interface ISerialChartDataFields extends IChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SerialChart]]\r\n */\r\nexport interface ISerialChartProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * A set of colors to be used for chart elements, like Series, Slices, etc.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * A set of patterns to use for fills, like Series, Slices, etc.\r\n\t *\r\n\t * @since 4.7.5\r\n\t */\r\n\tpatterns?: PatternSet;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[SerialChart]].\r\n */\r\nexport interface ISerialChartEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SerialChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISerialChartAdapters extends IChartAdapters, ISerialChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nexport class SerialChart extends Chart {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: ISerialChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISerialChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISerialChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISerialChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: Series;\r\n\r\n\t/**\r\n\t * Holds a list of [[Series]] displayed on the chart.\r\n\t */\r\n\tprotected _series: ListTemplate<this[\"_seriesType\"]>\r\n\r\n\t/**\r\n\t * Holds the reference to the container actual series are drawn in.\r\n\t */\r\n\tpublic readonly seriesContainer: Container;\r\n\r\n\t/**\r\n\t * Holds a reference to the container series' bullets are drawn in.\r\n\t */\r\n\tpublic readonly bulletsContainer: Container;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChart\";\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\r\n\t\tthis._usesData = false;\r\n\r\n\t\t// Create a container for series\r\n\t\tlet seriesContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tseriesContainer.shouldClone = false;\r\n\t\tseriesContainer.width = percent(100);\r\n\t\tseriesContainer.height = percent(100);\r\n\t\tseriesContainer.isMeasured = false;\r\n\t\tseriesContainer.layout = \"none\";\r\n\t\tseriesContainer.zIndex = 2;\r\n\t\tthis.seriesContainer = seriesContainer;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet bulletsContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.zIndex = 3;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colors.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.patterns) {\r\n\t\t\tthis.patterns.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Serial chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's series.\r\n\t *\r\n\t * @return Chart's series\r\n\t */\r\n\tpublic get series(): ListTemplate<this[\"_seriesType\"]> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new ListTemplate<this[\"_seriesType\"]>(this.createSeries());\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._series, false));\r\n\t\t\tthis._disposers.push(this._series.template);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\tprotected handleSeriesRemoved(event: IListEvents<Series>[\"removed\"]) {\r\n\t\tlet series = event.oldValue;\r\n\t\tthis.dataUsers.removeValue(series);\r\n\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\tdataUser.invalidateDataItems();\r\n\t\t})\r\n\r\n\t\tif (series.autoDispose) {\r\n\t\t\tseries.dispose();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tseries.parent = undefined;\r\n\t\t\tseries.bulletsContainer.parent = undefined;\r\n\t\t}\r\n\t\t//this.feedLegend();\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet dataItems = this.legend.dataItems;\r\n\t\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\t\t\t\tif (dataItem && dataItem.dataContext == series) {\r\n\t\t\t\t\tlegend.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = legend.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet di = legend.data[i];\r\n\t\t\t\tif (di && di == series) {\r\n\t\t\t\t\t$array.remove(legend.data, di);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<Series>[\"inserted\"]): void {\r\n\t\tlet series: Series = event.newValue;\r\n\t\tif (series.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tseries.chart = this;\r\n\t\tseries.parent = this.seriesContainer;\r\n\r\n\t\tseries.bulletsContainer.parent = this.bulletsContainer;\r\n\r\n\t\tthis._dataUsers.moveValue(series);\r\n\t\tseries.addDisposer(new Disposer(() => {\r\n\t\t\tthis.dataUsers.removeValue(series);\r\n\t\t}))\r\n\r\n\t\tthis.handleSeriesAdded2(series);\r\n\t\tthis.handleLegendSeriesAdded(series);\r\n\t}\r\n\r\n\tprotected handleLegendSeriesAdded(series:Series){\r\n\t\tif (!series.hiddenInLegend) {\r\n\t\t\tif (this.legend) {\r\n\t\t\t\tthis.legend.addData(series);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesAdded2(series: Series) {\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\tthis._disposers.push(\r\n\t\t\t\t// on exit only as data is usually passed after push\r\n\t\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\tif (!series.data || series.data.length == 0) {\r\n\t\t\t\t\t\tseries.data = this.data;\r\n\t\t\t\t\t\tif (series.showOnInit) {\r\n\t\t\t\t\t\t\tseries.reinit()\r\n\t\t\t\t\t\t\tseries.setPropertyValue(\"showOnInit\", false);\r\n\t\t\t\t\t\t\tseries.showOnInit = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(!series.isDisposed()) {\r\n\t\t\t\t\t\t\tseries.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\t\t\t\tif (series.data == this.data) {\r\n\t\t\t\t\t\t\t\t\t(<any>series)._data = [];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: Array<this[\"_seriesType\"]> = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\t\t\t\t\tlegendData.push(series);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for this chart type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new Series();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's color list.\r\n\t *\r\n\t * This list can be used by a number of serial items, like applying a new\r\n\t * color for each Series added. Or, applying a new color for each slice\r\n\t * of a Pie chart.\r\n\t *\r\n\t * Please see [[ColorSet]] for information on how you can set up to generate\r\n\t * unique colors.\r\n\t *\r\n\t * A theme you are using may override default pre-defined colors.\r\n\t *\r\n\t * @param value Color list\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color list\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * A [[PatternSet]] to use when creating patterned fills for slices.\r\n\t *\r\n\t * @since 4.7.5\r\n\t * @param value  Pattern set\r\n\t */\r\n\tpublic set patterns(value: PatternSet) {\r\n\t\tthis.setPropertyValue(\"patterns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern set\r\n\t */\r\n\tpublic get patterns(): PatternSet {\r\n\t\treturn this.getPropertyValue(\"patterns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[SerialChart]].\r\n\t *\r\n\t * @param source Source SerialChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.series.copyFrom(source.series);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n\t */\r\n\tpublic appear() {\r\n\t\tsuper.appear();\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.showOnInit && series.inited) {\r\n\t\t\t\tseries.appear();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n","/**\r\n * Axis break module\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { IWavedShape } from \"../../core/defs/IWavedShape\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t */\r\n\tbreakSize?: number;\r\n\r\n\t/**\r\n\t * Starting value.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * End value.\r\n\t */\r\n\tendValue?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines [[AxisBreak]] adapters.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBreakAdapters extends IContainerAdapters, IAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on axes.\r\n *\r\n * @see {@link IAxisBreakEvents} for a list of available events\r\n * @see {@link IAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBreak extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: Axis;\r\n\r\n\t/**\r\n\t * Reference to parent Axis.\r\n\t */\r\n\tprotected _axis = new MutableValueDisposer<this[\"_axisType\"]>();\r\n\r\n\t/**\r\n\t * A reference to starting line element.\r\n\t */\r\n\tprotected _startLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to ending line element.\r\n\t */\r\n\tprotected _endLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to fill shape.\r\n\t */\r\n\tprotected _fillShape: IWavedShape;\r\n\r\n\t/**\r\n\t * A list of axis data items which fall within this break.\r\n\t */\r\n\tpublic dataItems: List<AxisDataItem> = new List<AxisDataItem>();\r\n\r\n\t/**\r\n\t * Adjusted start value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedStartValue: number;\r\n\r\n\t/**\r\n\t * Adjusted end value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t */\r\n\tpublic adjustedEndValue: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisBreak\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.breakSize = 0.01;\r\n\t\tthis.marginLeft = -5;\r\n\t\tthis.marginRight = -5;\r\n\t\tthis.marginTop = -5;\r\n\t\tthis.marginBottom = -5;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create elements\r\n\t\t// (these won't be used actually, just for setting properties)\r\n\t\tlet fillShape = new WavedLine();\r\n\t\tfillShape.fill = interfaceColors.getFor(\"background\");\r\n\t\tfillShape.stroke = color();\r\n\t\tfillShape.fillOpacity = 0.9;\r\n\t\tfillShape.zIndex = 0;\r\n\t\tthis._fillShape = fillShape;\r\n\r\n\t\tlet startLine = new WavedLine();\r\n\t\tstartLine.fill = color();\r\n\t\tstartLine.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tstartLine.strokeOpacity = 0.3;\r\n\t\tstartLine.zIndex = 1;\r\n\t\tthis._startLine = startLine;\r\n\r\n\t\tlet endLine = new WavedLine();\r\n\t\tendLine.fill = color();\r\n\t\tendLine.stroke = color(\"#000000\");// interfaceColors.getFor(\"grid\");\r\n\t\tendLine.strokeOpacity = 0.3;\r\n\t\tendLine.zIndex = 2;\r\n\t\tthis._endLine = endLine;\r\n\r\n\t\tthis._disposers.push(this._axis);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the starting line of the break.\r\n\t *\r\n\t * @param sprite  Element\r\n\t */\r\n\tpublic set startLine(sprite: IWavedShape) {\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\t\tthis._startLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get startLine(): IWavedShape {\r\n\t\treturn this._startLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the end line of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set endLine(sprite: IWavedShape) {\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t\tthis._endLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get endLine(): IWavedShape {\r\n\t\treturn this._endLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for fill of the break.\r\n\t *\r\n\t * @param sprite Element\r\n\t */\r\n\tpublic set fillShape(sprite: IWavedShape) {\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tthis._fillShape = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get fillShape(): IWavedShape {\r\n\t\treturn this._fillShape;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a break element (e.g. lines, fill) to the break, which is\r\n\t * [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite Element to add\r\n\t */\r\n\tpublic addBreakSprite(sprite: IWavedShape) {\r\n\t\tsprite.parent = this;\r\n\t\tsprite.isMeasured = false;\r\n\t\tthis._disposers.push(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * An Axis this Break is associated with.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set axis(axis: this[\"_axisType\"]) {\r\n\t\tif (this._axis.get() !== axis) {\r\n\t\t\tthis._axis.set(axis, axis.renderer.gridContainer.events.on(\"transformed\", this.invalidate, this, false));\r\n\t\t\taxis.renderer.createBreakSprites(this);\r\n\r\n\t\t\t// this can't go to copyFrom, as axis is set later\r\n\t\t\tlet breakTemplate: AxisBreak = axis.axisBreaks.template;\r\n\r\n\t\t\tthis.startLine.copyFrom(breakTemplate.startLine);\r\n\t\t\tthis.endLine.copyFrom(breakTemplate.endLine);\r\n\t\t\tthis.fillShape.copyFrom(breakTemplate.fillShape);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get axis(): this[\"_axisType\"] {\r\n\t\treturn this._axis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of values it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t * @param value  Relative axis break\r\n\t */\r\n\tpublic set breakSize(value: number) {\r\n\t\tif (this.setPropertyValue(\"breakSize\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative axis break\r\n\t */\r\n\tpublic get breakSize(): number {\r\n\t\treturn this.getPropertyValue(\"breakSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's start.\r\n\t *\r\n\t * @return Start point\r\n\t */\r\n\tpublic get startPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.startPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's end.\r\n\t *\r\n\t * @return End point\r\n\t */\r\n\tpublic get endPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.endPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break starts.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break ends.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\t\trenderer.updateBreakElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A starting value for the break.\r\n\t *\r\n\t * @param value  Starting value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Starting value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\treturn this.getPropertyValue(\"startValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * An end value for the break.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.getPropertyValue(\"endValue\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBreak\"] = AxisBreak;\r\n","/**\r\n * Base class for all Axis\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { DataItem, IDataItemAdapters } from \"../../core/DataItem\";\r\n\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\n\r\n// Charts\r\nimport { Chart } from \"../Chart\";\r\n\r\n// Series\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\n\r\n// Elements\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Tooltip, PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { PointedRectangle } from \"../../core/elements/PointedRectangle\";\r\n\r\n// Types\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n// Utils\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class AxisDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Reference to a related [[Grid]] element.\r\n\t */\r\n\tprotected _grid: Grid;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisTick]] element.\r\n\t */\r\n\tprotected _tick: AxisTick;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisLabel]] element.\r\n\t */\r\n\tprotected _label: AxisLabel;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisFill]] element.\r\n\t */\r\n\tprotected _axisFill: AxisFill;\r\n\r\n\t/**\r\n\t * A mask for axis. We're using [[AxisFill]] since the mask, basically, has\r\n\t * the same shape and features.\r\n\t */\r\n\tprotected _mask: AxisFill;\r\n\r\n\t/**\r\n\t * Container which might be used to hold some extra items, like series\r\n\t * segments when data item is used for axis range.\r\n\t */\r\n\tprotected _contents: Container;\r\n\r\n\t/**\r\n\t * A text to be used as label for this data item.\r\n\t */\r\n\tprotected _text: string;\r\n\r\n\t/**\r\n\t * Holds a physical position of the grid line associated with this data item,\r\n\t * so that it can be used when measuring distance between points, and hiding\r\n\t * some of them so they don't overlap.\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * If the data item is within an existing [[AxisBreak]] this property will\r\n\t * hold a reference to that [[AxisBreak]].\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Axis;\r\n\r\n\t/**\r\n\t * Used to distinguish from real data points and those data items that are\r\n\t * used for ranges, like `series.axisRanges` or `axis.axisRanges`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isRange: boolean;\r\n\r\n\t/**\r\n\t * relative position of data item on axis\r\n\t */\r\n\tpublic position: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _bullet: Sprite;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * beginning than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `minLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t * axis.dataItems.template.minPosition = 0.2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis beginning.\r\n\t *     \"dataItems\": {\r\n\t *       \"minPosition\": 0.2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic minPosition?: number;\r\n\r\n\t/**\r\n\t * Allows hiding axis item (tick, label, grid) if it is closer to axis\r\n\t * end than this relative position (0-1).\r\n\t *\r\n\t * For axis labels it overrides `maxLabelPosition` if set.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Hide all ticks and labels closer than 20% to axis end.\r\n\t * axis.dataItems.template.maxPosition = 0.8;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     // Hide all ticks and labels closer than 20% to axis end.\r\n\t *     \"dataItems\": {\r\n\t *       \"maxPosition\": 0.8\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @since 4.5.11\r\n\t */\r\n\tpublic maxPosition?: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Actual index of the axis data item.\r\n\t * \r\n\t * @since 4.7.8\r\n\t */\r\n\tpublic itemIndex: number;\r\n\r\n\t/**\r\n\t * A [[Grid]] element associated with this data item.\r\n\t *\r\n\t * If there is no grid element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param grid  Grid element\r\n\t */\r\n\tpublic set grid(grid: Grid) {\r\n\t\tif (this._grid && this._grid != grid) {\r\n\t\t\t$array.remove(this.sprites, this._grid);\r\n\t\t\tthis._grid.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (grid) {\r\n\t\t\tif (grid.dataItem && grid.dataItem != this) {\r\n\t\t\t\t$array.remove(grid.dataItem.sprites, grid);\r\n\t\t\t\tgrid.dataItem.grid = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(grid);\r\n\t\t}\r\n\t\tthis._grid = grid;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grid element\r\n\t */\r\n\tpublic get grid(): Grid {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: Grid;\r\n\t\t\t\tlet grid: Grid;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.grid;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.grid.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tgrid = component.renderer.grid.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.grid.removeValue(grid);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.grid = grid;\r\n\t\t\t\tgrid.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(grid);\r\n\t\t\t\tgrid.axis = this.component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisTick]] element associated with this data item.\r\n\t *\r\n\t * If there is no tick element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param tick  Tick element\r\n\t */\r\n\tpublic set tick(tick: AxisTick) {\r\n\t\tif (this._tick && this._tick != tick) {\r\n\t\t\t$array.remove(this.sprites, this._tick);\r\n\t\t\tthis._tick.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (tick) {\r\n\t\t\tif (tick.dataItem && tick.dataItem != this) {\r\n\t\t\t\t$array.remove(tick.dataItem.sprites, tick);\r\n\t\t\t\ttick.dataItem.tick = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(tick);\r\n\t\t}\r\n\t\tthis._tick = tick;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tick element\r\n\t */\r\n\tpublic get tick(): AxisTick {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisTick;\r\n\t\t\t\tlet tick: AxisTick;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.tick;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.ticks.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttick = component.renderer.ticks.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.ticks.removeValue(tick);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tick = tick;\r\n\t\t\t\ttick.axis = this.component;\r\n\t\t\t\ttick.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(tick);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisLabel]] element associated with this data item.\r\n\t *\r\n\t * If there is no label element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set label(label: AxisLabel) {\r\n\t\tif (this._label && this._label != label) {\r\n\t\t\t$array.remove(this.sprites, this._label);\r\n\t\t\tthis._label.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (label) {\r\n\t\t\tif (label.dataItem && label.dataItem != this) {\r\n\t\t\t\t$array.remove(label.dataItem.sprites, label);\r\n\t\t\t\tlabel.dataItem.label = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(label);\r\n\t\t}\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): AxisLabel {\r\n\t\tif (!this._label) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisLabel;\r\n\t\t\t\tlet label: AxisLabel;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.label;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.labels.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel = component.renderer.labels.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.labels.removeValue(label);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposers.push(label);\r\n\t\t\t\tthis.label = label;\r\n\t\t\t\tlabel.shouldClone = false;\r\n\t\t\t\tlabel.axis = this.component;\r\n\t\t\t\tlabel.virtualParent = component;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisFill]] associated element with this data item.\r\n\t *\r\n\t * If there is no fill element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param label Label element\r\n\t */\r\n\tpublic set axisFill(axisFill: AxisFill) {\r\n\t\tif (this._axisFill && this._axisFill != axisFill) {\r\n\t\t\t$array.remove(this.sprites, this._axisFill);\r\n\t\t\tthis._axisFill.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.dataItem && axisFill.dataItem != this) {\r\n\t\t\t\t$array.remove(axisFill.dataItem.sprites, axisFill);\r\n\t\t\t\taxisFill.dataItem.axisFill = undefined;\r\n\t\t\t}\r\n\t\t\taxisFill.axis = this.component;\r\n\t\t\tthis.addSprite(axisFill);\r\n\t\t}\r\n\t\tthis._axisFill = axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get axisFill(): AxisFill {\r\n\t\tif (!this._axisFill) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\r\n\t\t\t\tlet template: AxisFill;\r\n\t\t\t\tlet axisFill: AxisFill;\r\n\r\n\t\t\t\tif (this.isRange) {\r\n\t\t\t\t\ttemplate = component.axisRanges.template.axisFill;\r\n\t\t\t\t\tif (!this.isTemplate && template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = template.clone();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttemplate = component.renderer.axisFills.template;\r\n\t\t\t\t\tif (template.disabled) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill = component.renderer.axisFills.create();\r\n\t\t\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\t\t\tcomponent.renderer.axisFills.removeValue(axisFill);\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.axisFill = axisFill;\r\n\t\t\t\taxisFill.shouldClone = false;\r\n\t\t\t\tthis._disposers.push(axisFill);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * Text to be used as data item's label.\r\n\t *\r\n\t * @param text Text label\r\n\t */\r\n\tpublic set text(text: string) {\r\n\t\tthis._text = text;\r\n\t\tif (this._label) { // do not use getter, it will create unwanted instances!\r\n\t\t\tthis._label.text = text;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Text label\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\t/**\r\n\t * Data item's mask.\r\n\t *\r\n\t * @return Mask\r\n\t */\r\n\tpublic get mask(): AxisFill {\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Container]] to place all visual elements, related to data item\r\n\t * in.\r\n\t *\r\n\t * If there is no Container, a new one is created.\r\n\t *\r\n\t * @return Contents container\r\n\t */\r\n\tpublic get contents(): Container {\r\n\t\tif (!this._contents) {\r\n\t\t\tlet contents = new Container();\r\n\t\t\tthis.addSprite(contents);\r\n\t\t\tcontents.isMeasured = false;\r\n\t\t\tthis._contents = contents;\r\n\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet mask: AxisFill = component.renderer.createFill(this.component);\r\n\t\t\t\tmask.disabled = false;\r\n\t\t\t\tmask.axis = component;\r\n\t\t\t\tthis.addSprite(mask);\r\n\t\t\t\tthis._mask = mask;\r\n\t\t\t\tcontents.mask = mask;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._contents;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisBreak]] this data item falls within.\r\n\t *\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic set axisBreak(axisBreak: this[\"_axisBreak\"]) {\r\n\t\tif (this._axisBreak) {\r\n\t\t\tthis._axisBreak.dataItems.removeValue(this);\r\n\t\t}\r\n\t\tif (axisBreak) {\r\n\t\t\taxisBreak.dataItems.push(this);\r\n\t\t}\r\n\t\tthis._axisBreak = axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis break\r\n\t */\r\n\tpublic get axisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn this._axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.validateDataElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends data item's elements to the parent [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendChildren() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.appendDataItem(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data item has particular property set.\r\n\t *\r\n\t * @param prop  Property name\r\n\t * @return Property set?\r\n\t */\r\n\tprotected hasProperty(prop: string): boolean {\r\n\t\treturn prop == \"component\" ? true : super.hasProperty(prop);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[AxisDataItem]].\r\n\t *\r\n\t * @param source Source AxisDataItem\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.text = source.text;\r\n\t\tif (source.bullet) {\r\n\t\t\tthis.bullet = source.bullet.clone();\r\n\t\t}\r\n\r\n\t\tthis.minPosition = source.minPosition;\r\n\t\tthis.maxPosition = source.maxPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t\tif (this._contents) {\r\n\t\t\tthis._contents.visible = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n\t * bullet in the middle of the cell, or specific value.\r\n\t *\r\n\t * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n\t * instead. It has a `location` property which can be used to indicate\r\n\t * precise relative location within cell/range.\r\n\t *\r\n\t * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n\t * into it.\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * let flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * \r\n\t * var flag = new am4plugins_bullets.FlagBullet();\r\n\t * flag.label.text = \"Hello\";\r\n\t *\r\n\t * range.bullet = flag;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"FlagBullet\",\r\n\t *         \"label\": {\r\n\t *           \"text\": \"Hello\"\r\n\t *         }\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.5.9\r\n\t * @param  value  Bullet\r\n\t */\r\n\tpublic set bullet(value: Sprite) {\r\n\t\tif (this._bullet && this._bullet != value) {\r\n\t\t\t$array.remove(this.sprites, this._bullet);\r\n\t\t\tthis._bullet.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tthis._bullet = value;\r\n\t\tif (value) {\r\n\t\t\tthis.addSprite(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bullet\r\n\t */\r\n\tpublic get bullet(): Sprite {\r\n\t\treturn this._bullet;\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[AxisDataItem]]\r\n * Includes both the [[DataItemAdapter]] definitions and properties\r\n * @see {@link DataItemAdapter}\r\n */\r\nexport interface IAxisDataItemAdapters extends IDataItemAdapters {\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport enum AxisItemLocation {\r\n\tStart = 0,\r\n\tMiddle = 0.5,\r\n\tEnd = 1\r\n}\r\n\r\n/**\r\n * Defines data fields for [[Axis]].\r\n */\r\nexport interface IAxisDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Axis]].\r\n */\r\nexport interface IAxisProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Axis start location.\r\n\t *\r\n\t * * 0 - None of the first cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the first cell is shown.\r\n\t * * 1 - Full first cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\r\n\t/**\r\n\t * Axis end location.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tendLocation?: number;\r\n\r\n\t/**\r\n\t * Indicates if cusor's tooltip should be shown on this Axis.\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\ttoggleZoomOutButton?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\r\n\tzoomable?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Axis]].\r\n */\r\nexport interface IAxisEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * Invoked when available axis lenght changes, e.g. after resizing the whole\r\n\t * chart.\r\n\t */\r\n\tlengthchanged: {}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Axis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisAdapters extends IComponentAdapters, IAxisProperties {\r\n\t/**\r\n\t * Applied to the tooltip text before it is shown.\r\n\t */\r\n\tgetTooltipText: string;\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nexport class Axis<T extends AxisRenderer = AxisRenderer> extends Component {\r\n\r\n\t/**\r\n\t * Defines list of data fields.\r\n\t */\r\n\tpublic _dataFields: IAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the [[DataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A list of Axis Ranges.\r\n\t */\r\n\tprotected _axisRanges: ListTemplate<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisEvents;\r\n\r\n\t/**\r\n\t * A [[Label]] instance that is used for Axis title label.\r\n\t */\r\n\tprotected _title: Label;\r\n\r\n\t/**\r\n\t * \"X\", \"Y\", etc.\r\n\t *\r\n\t * This is needed so that Axis knows which of the values from series' data\r\n\t * items it should use.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisLetter: string;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tprotected _chart: Chart;\r\n\r\n\t/**\r\n\t * A type for renderer used for this Axis.\r\n\t */\r\n\tpublic _renderer: T;\r\n\r\n\t/**\r\n\t * Number of Grid elements on the axis.\r\n\t */\r\n\tprotected _gridCount: number = 10;\r\n\r\n\t/**\r\n\t * A list of [[XYSeries]] that are using this Axis.\r\n\t */\r\n\tprotected _series: List<XYSeries> = new List<XYSeries>();\r\n\r\n\t/**\r\n\t * Holds the length of the Axis, so that we can check if it changed after\r\n\t * other changes and we need to update layouts.\r\n\t */\r\n\tprotected _prevLength: number;\r\n\r\n\t/**\r\n\t * A list of Axis Breaks associated with this Axis.\r\n\t */\r\n\tprotected _axisBreaks: SortedListTemplate<this[\"_axisBreak\"]>;\r\n\r\n\t/**\r\n\t * A reference to the Iterator for Axis' data items.\r\n\t */\r\n\tprotected _dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A name of the data field this Axis looks for its data in, e.g. \"category\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic axisFieldName: string;\r\n\r\n\t// we save these values so that cursur could use them if axis line is a fill\r\n\r\n\t/**\r\n\t * [currentItemStartPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemStartPoint: IPoint;\r\n\r\n\t/**\r\n\t * [currentItemEndPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic currentItemEndPoint: IPoint;\r\n\r\n\tprotected _tooltipPosition: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic relativePositionSprite?: Sprite;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem and its index as\r\n\t * parameters.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t *\r\n\t * For example, you can set it up to highlight only weekends on a\r\n\t * [[DateAxis]].\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"], index?: number): void {\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = dataItem.index;\r\n\t\t}\r\n\t\tif (index / 2 == Math.round(index / 2)) {\r\n\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\tdataItem.axisFill.opacity = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.axisFill.opacity = 1;\r\n\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Full length of the axis, in pixels.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic axisFullLength: number;\r\n\r\n\t/**\r\n\t * Ghost label is used to prevent chart shrinking/expanding when zooming or\r\n\t * when data is invalidated. You can set custom text on it so that it would\r\n\t * be bigger/smaller,\r\n\t */\r\n\tpublic ghostLabel: AxisLabel;\r\n\r\n\t/**\r\n\t * Specifies if axis should be automatically disposed when removing from\r\n\t * chart's axis list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _axisItemCount: number = 0;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tif (this.constructor === Axis) {\r\n\t\t\tthrow new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\r\n\t\t}\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.minWidth = 0.0001;\r\n\t\tthis.minHeight = 0.0001;\r\n\t\tthis.className = \"Axis\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", true);\r\n\t\tthis.toggleZoomOutButton = true;\r\n\t\tthis.zoomable = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create title\r\n\t\tthis.title = new Label();\r\n\t\tthis.title.shouldClone = false;\r\n\t\tthis._disposers.push(this.title);\r\n\t\tthis.setPropertyValue(\"startLocation\", 0);\r\n\t\tthis.setPropertyValue(\"endLocation\", 1);\r\n\r\n\t\t// Data item iterator\r\n\t\tthis._dataItemsIterator = new $iter.ListIterator<this[\"_dataItem\"]>(this.dataItems, () => this.dataItems.create());\r\n\t\tthis._dataItemsIterator.createNewItems = true;\r\n\r\n\t\t// Create tooltip\r\n\t\tlet tooltip: Tooltip = new Tooltip();\r\n\t\tthis._disposers.push(tooltip);\r\n\t\ttooltip.label.padding(5, 10, 5, 10);\r\n\t\ttooltip.background.pointerLength = 5;\r\n\t\ttooltip.fitPointerToBounds = true;\r\n\t\ttooltip.background.filters.clear();\r\n\r\n\t\t// Set virtual parentfor the tooltip so that it can properly inheirt\r\n\t\t// formatters from the axis.\r\n\t\ttooltip.virtualParent = this;\r\n\r\n\t\t// Create background element for the tooltip\r\n\t\tlet background: PointedRectangle = <PointedRectangle>tooltip.background;\r\n\t\tbackground.cornerRadius = 0;\r\n\t\tbackground.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tbackground.stroke = background.fill;\r\n\t\tbackground.strokeWidth = 1;\r\n\t\tbackground.fillOpacity = 1;\r\n\t\ttooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n\r\n\t\tthis.tooltip = tooltip;\r\n\r\n\t\t// Accessibility\r\n\t\tthis.readerHidden = true;\r\n\r\n\t\tthis.events.on(\"rangechangestarted\", () => {\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = true;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.events.on(\"rangechangeended\", () => {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.hideTooltipWhileZooming) {\r\n\t\t\t\t\tseries.tooltip.hide();\r\n\t\t\t\t\tseries.tooltip.preventShow = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (this.hideTooltipWhileZooming) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t\tthis.tooltip.preventShow = false;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new AxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tsuper.invalidateLayout();\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidateLayout();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates series of this axis.\r\n\t */\r\n\tpublic invalidateSeries(): void {\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Override to cancel super call for data element validation.\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataElements() {\r\n\t\tthis._axisItemCount = 0;\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tthis.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n\t\t\tthis.ghostLabel.validate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the number of grid items on the axis.\r\n\t */\r\n\tprotected updateGridCount() {\r\n\t\tif (this.renderer) {\r\n\t\t\tlet gridCount = this.axisLength / this.renderer.minGridDistance;\r\n\t\t\tif (gridCount != this._gridCount) {\r\n\t\t\t\tthis._gridCount = gridCount;\r\n\t\t\t\tthis.clearCache();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\r\n\t\tthis.axisFullLength = this.axisLength / (this.end - this.start);\r\n\r\n\t\tsuper.validateLayout();\r\n\t\tthis.updateGridCount();\r\n\t\tlet renderer = this.renderer;\r\n\t\tif (renderer) {\r\n\t\t\trenderer.updateAxisLine();\r\n\t\t\trenderer.updateTooltip();\r\n\t\t\trenderer.updateBaseGridElement();\r\n\t\t}\r\n\r\n\t\tif (this._prevLength != this.axisLength) {\r\n\t\t\tthis.dispatchImmediately(\"lengthchanged\");\r\n\t\t\tthis._prevLength = this.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes Axis' renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a data item to the Axis.\r\n\t *\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic appendDataItem(dataItem: this[\"_dataItem\"]) {\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tif (tick) {\r\n\t\t\tif (tick.above) {\r\n\t\t\t\ttick.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttick.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.label) {\r\n\t\t\tdataItem.label.parent = renderer;\r\n\t\t}\r\n\r\n\t\tlet axisFill = dataItem.axisFill;\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.above) {\r\n\t\t\t\taxisFill.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\taxisFill.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet grid = dataItem.grid;\r\n\t\tif (grid) {\r\n\t\t\tif (grid.above) {\r\n\t\t\t\tgrid.parent = renderer.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgrid.parent = renderer.gridContainer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\tdataItem.bullet.parent = renderer.bulletsContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws Axis' related items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis.validateLayout();\r\n\r\n\t\tthis.renderer.updateGridContainer();\r\n\t}\r\n\r\n\t/**\r\n\t * Redars Axis ranges.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateAxisRanges(): void {\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\tthis.appendDataItem(axisRange);\r\n\t\t\tthis.validateDataElement(axisRange);\r\n\t\t\tif (axisRange.grid) {\r\n\t\t\t\taxisRange.grid.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.tick) {\r\n\t\t\t\taxisRange.tick.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.axisFill) {\r\n\t\t\t\taxisRange.axisFill.validate();\r\n\t\t\t}\r\n\t\t\tif (axisRange.label) {\r\n\t\t\t\taxisRange.label.validate();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis breaks, so they are redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\t$iter.each(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\taxisBreak.invalidate();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Associates an Axis break with this Axis, after it is inserted into\r\n\t * `axisBreaks`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event\r\n\t */\r\n\tpublic processBreak(event: IListEvents<this[\"_axisBreak\"]>[\"inserted\"]) {\r\n\t\tlet axisBreak: this[\"_axisBreak\"] = event.newValue;\r\n\t\taxisBreak.parent = this.renderer.breakContainer;\r\n\t\taxisBreak.axis = this;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a [[XYSeries]] element with this Axis.\r\n\t *\r\n\t * Returns a [[Disposer]] for all events, added to Series for watching\r\n\t * changes in Axis, and vice versa.\r\n\t * @ignore\r\n\t * @param series  Series\r\n\t * @return Event disposer\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\tthis.series.moveValue(series);\r\n\r\n\t\treturn new MultiDisposer([\r\n\t\t\tnew Disposer(() => {\r\n\t\t\t\tthis.series.removeValue(series);\r\n\t\t\t}),\r\n\r\n\t\t\tthis.events.on(\"lengthchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"lengthchanged\", series.createMask, series, false),\r\n\t\t\tthis.events.on(\"startchanged\", series.invalidate, series, false),\r\n\t\t\tthis.events.on(\"endchanged\", series.invalidate, series, false),\r\n\t\t\t//axis.events.on(\"validated\", chart.handleCursorPositionChange, chart, false)\t\t\t\r\n\r\n\t\t\t// TODO should these be disposed of ?\r\n\t\t\t//series.events.on(\"datavalidated\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"visibilitychanged\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"hidden\", this.processSeriesDataItems, this)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisRenderer]] to be used to render this Axis.\r\n\t *\r\n\t * Please note that most of the settings, related to Axis' appearance are set\r\n\t * via its renderer. Not directly on the Axis.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n\t * @param renderer  Renderer\r\n\t */\r\n\tpublic set renderer(renderer: this[\"_renderer\"]) {\r\n\t\tif (renderer != this._renderer) {\r\n\t\t\tthis._renderer = renderer;\r\n\t\t\trenderer.chart = this.chart;\r\n\t\t\trenderer.axis = this;\r\n\t\t\trenderer.parent = this;\r\n\t\t\tthis.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n\t\t\tthis.initRenderer();\r\n\r\n\t\t\tthis._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\r\n\r\n\t\t\tlet ghostLabel = this.renderer.labels.create();\r\n\t\t\tthis._disposers.push(ghostLabel);\r\n\t\t\tghostLabel.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n\t\t\tghostLabel.text = \"L\";\r\n\t\t\tghostLabel.parent = this.renderer;\r\n\t\t\tghostLabel.shouldClone = false;\r\n\t\t\tghostLabel.fillOpacity = 0;\r\n\t\t\tghostLabel.opacity = 0;\r\n\t\t\tghostLabel.strokeOpacity = 0;\r\n\t\t\tghostLabel.interactionsEnabled = false;\r\n\t\t\tghostLabel.validate();\r\n\r\n\t\t\tthis.ghostLabel = ghostLabel;\r\n\r\n\t\t\tthis.events.on(\"beforedatavalidated\", () => {\r\n\t\t\t\tghostLabel.text = \"L\";\r\n\t\t\t}, undefined, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Renderer\r\n\t */\r\n\tpublic get renderer(): this[\"_renderer\"] {\r\n\t\treturn this._renderer;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to angle. (for circular axes)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\treturn this.renderer.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\treturn this.renderer.pointToPosition(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position to coordinate.\r\n\t *\r\n\t * @since 4.7.15\r\n\t * @param position (0-1)\r\n\t * @return coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\treturn this.renderer.positionToCoordinate(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start  [description]\r\n\t * @param end    [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: any, end: any): string {\r\n\t\treturn this.renderer.getPositionRangePath(start, end);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic anyToPosition(value: any): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Pisition\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: any): IOrientationPoint {\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition [description]\r\n\t * @param endPosition   [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.getPositionRangePath(startPosition, endPosition);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Actual axis length in pixels.\r\n\t *\r\n\t * @return Axis length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tif (this.renderer) {\r\n\t\t\treturn this.renderer.axisLength;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if axis should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\r\n\t\t\tif (value && this.renderer) {\r\n\t\t\t\tthis.renderer.updateTooltip();\r\n\t\t\t}\r\n\t\t\telse if (this.tooltip) {\r\n\t\t\t\tthis.tooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n\t * and vice versa: when axis is zoomed out completely, zoom out button is\r\n\t * hidden.\r\n\t *\r\n\t * Setting this to `false` will disable this behavior. Zooming in our out\r\n\t * this axis will not reveal or hide zoom out button.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.6.2\r\n\t * @param  value  Toggle zoom out button?\r\n\t */\r\n\tpublic set toggleZoomOutButton(value: boolean) {\r\n\t\tthis.setPropertyValue(\"toggleZoomOutButton\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Toggle zoom out button?\r\n\t */\r\n\tpublic get toggleZoomOutButton(): boolean {\r\n\t\treturn this.getPropertyValue(\"toggleZoomOutButton\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number): void {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis._tooltipPosition = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @param local or global position\r\n\t */\r\n\tpublic showTooltipAtPosition(position: number, local?: boolean) {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\r\n\t\tif (!tooltip || this.dataItems.length <= 0) {\r\n\t\t\tthis._tooltipPosition = undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!local) {\r\n\t\t\t\tposition = this.toAxisPosition(position);\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(position) || position < this.start || position > this.end) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t\tthis._tooltipPosition = undefined;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet renderer = this.renderer;\r\n\r\n\t\t\t//@todo: think of how to solve this better\r\n\t\t\tif (!tooltip.parent) {\r\n\t\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t\t}\r\n\r\n\t\t\tlet tooltipLocation = renderer.tooltipLocation;\r\n\r\n\t\t\tlet startPosition: number = this.getCellStartPosition(position);\r\n\t\t\tlet endPosition: number = this.getCellEndPosition(position);\r\n\r\n\t\t\tif (this.tooltipPosition == \"fixed\") {\r\n\t\t\t\tposition = startPosition + (endPosition - startPosition) * tooltipLocation;\r\n\t\t\t}\r\n\r\n\t\t\tposition = $math.fitToRange(position, this.start, this.end);\r\n\r\n\t\t\tif (this._tooltipPosition != position) {\r\n\t\t\t\tthis._tooltipPosition = position;\r\n\r\n\t\t\t\tlet tooltipLocation2 = renderer.tooltipLocation2;\r\n\r\n\t\t\t\tlet startPoint: IPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\r\n\t\t\t\tlet endPoint: IPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\r\n\r\n\t\t\t\t// save values so cursor could use them\r\n\t\t\t\tthis.currentItemStartPoint = startPoint;\r\n\t\t\t\tthis.currentItemEndPoint = endPoint;\r\n\r\n\t\t\t\tif (renderer.fullWidthTooltip) {\r\n\t\t\t\t\ttooltip.width = endPoint.x - startPoint.x;\r\n\t\t\t\t\ttooltip.height = endPoint.y - startPoint.y;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet point: IPoint = renderer.positionToPoint(position, tooltipLocation2);\r\n\t\t\t\tlet globalPoint: IPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n\t\t\t\ttooltip.text = this.getTooltipText(position);\r\n\r\n\t\t\t\tif (tooltip.text) {\r\n\t\t\t\t\ttooltip.delayedPointTo(globalPoint);\r\n\t\t\t\t\ttooltip.show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.cursorTooltipEnabled || this.tooltip.disabled) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) to Axis position with zoom level and\r\n\t * inversed taken into account.\r\n\t *\r\n\t * @param position Global position (0-1)\r\n\t * @return Position within Axis (0-1)\r\n\t */\r\n\tpublic toAxisPosition(position: number): number {\r\n\r\n\t\tposition = this.renderer.toAxisPosition(position);\r\n\r\n\t\tif (position == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tposition = position * (this.end - this.start);\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = this.start + position;\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts position on the axis with zoom level and\r\n\t * inversed taken into account to global position.\r\n\t *\r\n\t * @param position Axis position (0-1)\r\n\t * @return Global position (0-1)\r\n\t */\r\n\tpublic toGlobalPosition(position: number): number {\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = position - this.start;\r\n\t\t}\r\n\r\n\t\treturn position / (this.end - this.start);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to be used for cursor's Axis tooltip.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position coordinate (px)\r\n\t * @return Label text\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n\t * place.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointerOrientation  Pointer (stem) orientation\r\n\t * @param boundingRectangle   A rectangle for tooltip to fit within\r\n\t */\r\n\tpublic updateTooltip(pointerOrientation: PointerOrientation, boundingRectangle: IRectangle): void {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.fixDoc = false;\r\n\t\t\ttooltip.pointerOrientation = pointerOrientation;\r\n\t\t\ttooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [roundPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position  Relative position\r\n\t * @param location  Location on axis\r\n\t * @return Rounded position\r\n\t */\r\n\tpublic roundPosition(position: number, location: AxisItemLocation, axisLocation?: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellStartPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellEndPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis ranges for this Axis.\r\n\t *\r\n\t * @return Axis ranges\r\n\t */\r\n\tpublic get axisRanges(): ListTemplate<this[\"_dataItem\"]> {\r\n\t\tif (!this._axisRanges) {\r\n\t\t\tlet dataItem: AxisDataItem = this.createDataItem();\r\n\t\t\tdataItem.isRange = true;\r\n\t\t\tdataItem.axisFill = this.renderer.axisFills.template.clone();\r\n\t\t\tdataItem.grid = this.renderer.grid.template.clone();\r\n\t\t\tdataItem.tick = this.renderer.ticks.template.clone();\r\n\t\t\tdataItem.label = this.renderer.labels.template.clone();\r\n\r\n\t\t\tdataItem.isTemplate = true;\r\n\t\t\tdataItem.component = this;\r\n\t\t\tdataItem.axisFill.disabled = false;\r\n\t\t\tdataItem.tick.disabled = false;\r\n\t\t\tdataItem.grid.disabled = false;\r\n\t\t\tdataItem.label.disabled = false;\r\n\r\n\t\t\tthis._axisRanges = new ListTemplate<this[\"_dataItem\"]>(dataItem);\r\n\t\t\tthis._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisRanges));\r\n\t\t\tthis._disposers.push(this._axisRanges.template);\r\n\t\t}\r\n\t\treturn this._axisRanges;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates an axis range after it has been added to the axis range list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<this[\"_dataItem\"]>[\"inserted\"]) {\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\taxisRange.component = this;\r\n\t\taxisRange.isRange = true;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis breaks on this Axis.\r\n\t *\r\n\t * @return Axis breaks.\r\n\t */\r\n\tpublic get axisBreaks(): SortedListTemplate<this[\"_axisBreak\"]> {\r\n\t\tif (!this._axisBreaks) {\r\n\t\t\tthis._axisBreaks = new SortedListTemplate<this[\"_axisBreak\"]>(this.createAxisBreak(), (a, b) => {\r\n\t\t\t\treturn $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n\t\t\t});\r\n\r\n\t\t\tthis._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisBreaks));\r\n\t\t\tthis._disposers.push(this._axisBreaks.template);\r\n\t\t}\r\n\t\treturn this._axisBreaks;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new axis break.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new AxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Series currently associated with this Axis.\r\n\t *\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic postProcessSeriesDataItems(series?: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic postProcessSeriesDataItem(dataItem: XYSeriesDataItem): void {\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\t/**\r\n\t * Updates Axis based on all Series that might influence it.\r\n\t *\r\n\t * Called by Series after Series data is validated.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisBySeries(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides unused data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideUnusedDataItems(): void {\r\n\t\t// hide all unused\r\n\t\tlet dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]> = this._dataItemsIterator;\r\n\r\n\t\tdataItemsIterator.createNewItems = false;\r\n\r\n\t\t$iter.each(dataItemsIterator.iterator(), (dataItem) => {\r\n\t\t\tthis.validateDataElement(dataItem); // solves shrinking\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t});\r\n\r\n\t\tdataItemsIterator.clear();\r\n\t\tdataItemsIterator.createNewItems = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Series' data item that corresponds to specific position on Axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series    Series\r\n\t * @param position  Position (0-1)\r\n\t * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n\t * @return Data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle that corresponds to specific position on axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       ???\r\n\t * @param location  Location\r\n\t * @param stackKey  ???\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem [description]\r\n\t * @param key      [description]\r\n\t * @param location [description]\r\n\t * @param stackKey [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point coordinates\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic seriesDataChangeUpdate(series: XYSeries): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes axis breaks that fall between `min` and `max` (???)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param min  Start value\r\n\t * @param max  End value\r\n\t * @return Spread o\r\n\t */\r\n\tprotected adjustDifference(min: number, max: number): number {\r\n\t\tlet difference: number = max - min;\r\n\t\tif ($type.isNumber(difference)) {\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\t$iter.eachContinue(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t// breaks are sorted, we don't need go further anymore\r\n\t\t\t\t\t\tif (startValue > max) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (endValue >= min) {\r\n\t\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tlet intersection: IRange = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n\r\n\t\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\t\tdifference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn difference;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if specific value falls within a break.\r\n\t *\r\n\t * Returns [[AxisBreak]] the value falls into.\r\n\t *\r\n\t * @param value  Value to check\r\n\t * @return Axis break\r\n\t */\r\n\tprotected isInBreak(value: number): this[\"_axisBreak\"] {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\treturn $iter.find(this._axisBreaks.iterator(), (axisBreak) =>\r\n\t\t\t\tvalue >= axisBreak.adjustedStartValue &&\r\n\t\t\t\tvalue <= axisBreak.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixAxisBreaks description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected fixAxisBreaks(): void {\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks: SortedListTemplate<this[\"_axisBreak\"]> = this._axisBreaks;\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t// first make sure that startValue is <= end value\r\n\t\t\t\t// This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n\t\t\t\t// TODO very inefficient\r\n\t\t\t\t$array.each($iter.toArray(axisBreaks.iterator()), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n\t\t\t\t\tlet endValue: number = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\r\n\t\t\t\t\tthis._axisBreaks.update(axisBreak);\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tlet firstAxisBreak: this[\"_axisBreak\"] = axisBreaks.first;\r\n\t\t\t\tlet previousEndValue: number = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n\r\n\t\t\t\t// process breaks\r\n\t\t\t\t// TODO does this need to call axisBreaks.update ?\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t// breaks can't overlap\r\n\t\t\t\t\t// if break starts before previous break ends\r\n\t\t\t\t\tif (startValue < previousEndValue) {\r\n\t\t\t\t\t\tstartValue = previousEndValue;\r\n\r\n\t\t\t\t\t\tif (endValue < previousEndValue) {\r\n\t\t\t\t\t\t\tendValue = previousEndValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n\t *\r\n\t * Yes, also for category axis, this helps to avoid jumping of categories\r\n\t * while scrolling and does not do a lot of extra work as we use\r\n\t * protected `_startIndex` and `_endIndex` when working with items.\r\n\t *\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * [startIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [endIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set endIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return [description]\r\n\t */\r\n\tpublic get endIndex(): number {\r\n\t\treturn this.dataItems.length;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a formatted label based on position.\r\n\t *\r\n\t * Individual axis types should override this method to generate a label\r\n\t * that is relevant to axis type.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\treturn Math.round(position * 100) + \"%x\";\r\n\t}\r\n\r\n\t/**\r\n\t * A Chart this Axis belongs to.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a data item for a Series range.\r\n\t *\r\n\t * @param series  Target Series\r\n\t * @return Range data item\r\n\t */\r\n\tpublic createSeriesRange(series: XYSeries): this[\"_dataItem\"] {\r\n\t\tlet range = this.axisRanges.create();\r\n\t\trange.component = this;\r\n\t\trange.axisFill = this.renderer.axisFills.template.clone();\r\n\t\trange.axisFill.disabled = false;\r\n\t\trange.axisFill.fillOpacity = 0;\r\n\r\n\t\trange.grid = this.renderer.grid.template.clone();\r\n\t\trange.grid.disabled = true;\r\n\r\n\t\trange.tick = this.renderer.ticks.template.clone();\r\n\t\trange.tick.disabled = true;\r\n\r\n\t\trange.label = this.renderer.labels.template.clone();\r\n\t\trange.label.disabled = true;\r\n\r\n\t\trange.addDisposer(new Disposer(() => {\r\n\t\t\tseries.axisRanges.removeValue(range);\r\n\t\t}))\r\n\r\n\t\tseries.axisRanges.push(range);\r\n\t\treturn range;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.copyFrom(source.renderer);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (source.renderer) {\r\n\t\t\t\tthis.renderer = source.renderer.clone();\r\n\t\t\t\tthis._disposers.push(this.renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (source.title) {\r\n\t\t\tif (!this.title) {\r\n\t\t\t\tthis.title = source.title.clone();\r\n\t\t\t\tthis.title.parent = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.title.copyFrom(source.title);\r\n\t\t\t}\r\n\t\t\tthis._disposers.push(this.title);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t */\r\n\tprotected resetIterators(): void {\r\n\t\tthis._dataItemsIterator.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\r\n\t\t\t\t\t// If `series` is set, we know it's a series range\r\n\t\t\t\t\tif ($type.hasValue(range[\"series\"])) {\r\n\t\t\t\t\t\tif ($type.isString(range[\"series\"])) {\r\n\t\t\t\t\t\t\tif (this.map.hasKey(range[\"series\"])) {\r\n\t\t\t\t\t\t\t\t//range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n\t\t\t\t\t\t\t\tdelete (range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i].config = range;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Ordering function used in JSON setup.\r\n\t *\r\n\t * @param a  Item A\r\n\t * @param b  Item B\r\n\t * @return Order\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// last\r\n\t\telse if (a == \"title\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"title\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t// first\r\n\t\telse if (a == \"component\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"component\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - Full first cell is shown.\r\n\t * * 0.5 - Half of first cell is shown.\r\n\t * * 1 - None of the first cell is visible. (you probably don't want that)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.gridContainer.disabled = value;\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Label]] element which serves as a title to the axis.\r\n\t *\r\n\t * When axis is created it aleready has an element, so you can just modify\r\n\t * it.\r\n\t *\r\n\t * Or you can replace it with your own instance of `Label`.\r\n\t * \r\n\t * @param  value  Title label\r\n\t */\r\n\tpublic set title(value: Label) {\r\n\t\tif (this._title && this._title != value) {\r\n\t\t\tthis._title.dispose();\r\n\t\t}\r\n\t\tif (value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tvalue.parent = this;\r\n\t\t\tvalue.shouldClone = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title label\r\n\t */\r\n\tpublic get title(): Label {\r\n\t\treturn this._title;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if axis' tooltip should be hidden while axis range is animating\r\n\t * (zooming)\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the axis be zoomed with scrollbar/cursor?\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.28\r\n\t * @param  value  Zoomable?\r\n\t */\r\n\tpublic set zoomable(value: boolean) {\r\n\t\tthis.setPropertyValue(\"zoomable\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoomable?\r\n\t */\r\n\tpublic get zoomable(): boolean {\r\n\t\treturn this.getPropertyValue(\"zoomable\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable axis tooltips.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Axis && target.tooltip) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.cursorTooltipEnabled = false;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLine]].\r\n */\r\nexport interface IAxisLineProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisLine]].\r\n */\r\nexport interface IAxisLineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLineAdapters extends ISpriteAdapters, IAxisLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLine extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLine\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.fill = color();\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\t//this.element.moveTo({ x: 0, y: 0 });\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { Axis, AxisItemLocation, AxisDataItem } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisFill]].\r\n */\r\nexport interface IAxisFillProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Start position. (0-1)\r\n\t */\r\n\tstartPosition?: number;\r\n\r\n\t/**\r\n\t * End position. (0-1)\r\n\t */\r\n\tendPosition?: number;\r\n\r\n\t/**\r\n\t * Location within the axis.\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisFill]].\r\n */\r\nexport interface IAxisFillEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisFill]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisFillAdapters extends ISpriteAdapters, IAxisFillProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * AxisFill is a base class used to defines fill shapes for various\r\n * type-specific Axes.\r\n *\r\n * Axis fills are used to add fills to specific ranges of those axes.\r\n *\r\n * @see {@link IAxisFillEvents} for a list of available events\r\n * @see {@link IAxisFillAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisFill extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisFillProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisFillAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisFillEvents;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * An SVG path, used to draw fill shape.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic fillPath: string;\r\n\r\n\t/**\r\n\t * [_dataItem description]\r\n\t *\r\n\t * Not sure what this is doing here?\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Axis\r\n\t */\r\n\tconstructor(axis: Axis) {\r\n\t\tsuper();\r\n\t\tthis.axis = axis;\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.className = \"AxisFill\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.location = 0;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.fillOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tif (this.__disabled || this.disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.axis && $type.isNumber(this.startPosition) && $type.isNumber(this.endPosition)) {\r\n\t\t\tthis.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);\r\n\t\t\tthis.path = this.fillPath;\r\n\t\t\tif (this.isMeasured) {\r\n\t\t\t\tthis.measure();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An actual starting position of the fill.\r\n\t *\r\n\t * @param value  Starting position\r\n\t */\r\n\tpublic set startPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"startPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn this.getPropertyValue(\"startPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * An actual end position of the fill.\r\n\t *\r\n\t * @param value End position\r\n\t */\r\n\tpublic set endPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"endPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn this.getPropertyValue(\"endPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the fill. (0-1)\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setPath(value: string): boolean {\r\n\t\tif (this.setPropertyValue(\"path\", value)) {\r\n\t\t\tthis.element.attr({ \"d\": value });\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFill\"] = AxisFill;\r\n","/**\r\n * A module defining functionality for axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteEvents, ISpriteAdapters } from \"../../core/Sprite\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grid]].\r\n */\r\nexport interface IGridProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Location of the grid item within cell. (0-1)\r\n\t */\r\n\tlocation?: AxisItemLocation;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grid]].\r\n */\r\nexport interface IGridEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters  for [[Grid]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGridAdapters extends ISpriteAdapters, IGridProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Displays an axis grid line.\r\n *\r\n * @see {@link IGridEvents} for a list of available events\r\n * @see {@link IGridAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements\r\n * @important\r\n */\r\nexport class Grid extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGridProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGridAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGridEvents;\r\n\r\n\t/**\r\n\t * An axis data item that corresponds to the this grid element.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Grid\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.above = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.fill = color(); // \"none\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to place grid line on.\r\n\t *\r\n\t * * 0 - start\r\n\t * * 0.5 - middle\r\n\t * * 1 - end\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grid\"] = Grid;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable grid on smaller charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Grid) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelProperties extends ILabelProperties {\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the label on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabel]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelAdapters extends ILabelAdapters, IAxisLabelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLabelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLabelEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabel\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.location = 0.5;\r\n\t\t//this.nonScaling = true; // not good for perf\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if label should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean):boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n","/**\r\n * Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Tick]].\r\n */\r\nexport interface ITickProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Length of the tick (px).\r\n\t */\r\n\tlength?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tick]].\r\n */\r\nexport interface ITickEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITickAdapters extends ISpriteAdapters, ITickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Tick extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITickEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Tick\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.length = 6;\r\n\t\tthis.strokeOpacity = 0.2;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Length of the tick in pixels.\r\n\t *\r\n\t * @param value  Length (px)\r\n\t */\r\n\tpublic set length(value: number) {\r\n\t\tthis.setPropertyValue(\"length\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get length(): number {\r\n\t\tif (this.disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.getPropertyValue(\"length\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tick\"] = Tick;\r\n","/**\r\n * Axis Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisTick]].\r\n */\r\nexport interface IAxisTickProperties extends ITickProperties {\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the tick on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Normally fill goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tabove?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisTick]].\r\n */\r\nexport interface IAxisTickEvents extends ITickEvents {\r\n\r\n}\r\n\r\n/**\r\n * Defines adapter for [[AxisTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisTickAdapters extends ITickAdapters, IAxisTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nexport class AxisTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisTickEvents;\r\n\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referece to Axis element this tick is placed on.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisTick\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.above = false;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\tthis.length = 5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the tick. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if tick should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Normally tick goes below series. Set this to `true` to go above.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.9\r\n\t * @param  value  Draw above series?\r\n\t */\r\n\tpublic set above(value: boolean) {\r\n\t\tthis.setPropertyValue(\"above\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw above series?\r\n\t */\r\n\tpublic get above(): boolean {\r\n\t\treturn this.getPropertyValue(\"above\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n","/**\r\n * Module, defining base Axis Renderer.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Chart } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t */\r\n\tminGridDistance?: number;\r\n\r\n\t/**\r\n\t * Draw axis labels inside axis.\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Draw axis on opposite side of the plot area?\r\n\t */\r\n\topposite?: boolean;\r\n\r\n\t/**\r\n\t * Inverse the order of the scale for the Axis.\r\n\t */\r\n\tinversed?: boolean;\r\n\r\n\t/**\r\n\t * Location of the cell start. (0-1)\r\n\t */\r\n\tcellStartLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the cell end. (0-1)\r\n\t */\r\n\tcellEndLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the axis tooltip. (0-1)\r\n\t */\r\n\ttooltipLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the tooltip relative secondary axis cell. (0-1)\r\n\t */\r\n\ttooltipLocation2?: number;\t\r\n\r\n\t/**\r\n\t * Resize axis tooltip to the full width of the cell.\r\n\t */\r\n\tfullWidthTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Labels with position less than this will be hidden.\r\n\t */\r\n\tminLabelPosition?: number;\r\n\r\n\t/**\r\n\t * Labels with position bigger than this will be hidden.\r\n\t */\r\n\tmaxLabelPosition?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererAdapters extends IContainerAdapters, IAxisRendererProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRenderer extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererEvents;\r\n\r\n\t/**\r\n\t * A related Axis.\r\n\t */\r\n\tprotected _axis: Axis;\r\n\r\n\t/**\r\n\t * A line object of the related axis.\r\n\t */\r\n\tpublic line: AxisLine;\r\n\r\n\t/**\r\n\t * Base grid element. ([[Sprite]])\r\n\t *\r\n\t * For value axes base grid is at value 0.\r\n\t *\r\n\t * For category/date axis it is added at the end of the last item/date.\r\n\t *\r\n\t */\r\n\tpublic baseGrid: Sprite;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[Grid]] elements.\r\n\t */\r\n\tpublic gridContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the axis bullets.\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[AxisBreak]] elements.\r\n\t */\r\n\tpublic breakContainer: Container;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<Chart>();\r\n\r\n\t/**\r\n\t * Defines type of the grid elements.\r\n\t */\r\n\tpublic _gridType: Grid;\r\n\r\n\t/**\r\n\t * Defines type for the fill elements.\r\n\t */\r\n\tpublic _fillType: AxisFill;\r\n\r\n\t/**\r\n\t * Defines type for tick elements.\r\n\t */\r\n\tpublic _tickType: AxisTick;\r\n\r\n\t/**\r\n\t * Defines type for the label elements.\r\n\t */\r\n\tpublic _labelType: AxisLabel;\r\n\r\n\t/**\r\n\t * A list of grid elements.\r\n\t */\r\n\tprotected _grid: ListTemplate<this[\"_gridType\"]>;\r\n\r\n\t/**\r\n\t * A list of tick elements.\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tickType\"]>;\r\n\r\n\t/**\r\n\t * A list of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_labelType\"]>;\r\n\r\n\t/**\r\n\t * A list of fill elements.\r\n\t */\r\n\tprotected _axisFills: ListTemplate<this[\"_fillType\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRenderer\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.minGridDistance = 50;\r\n\t\tthis.inside = false;\r\n\t\tthis.inversed = false;\r\n\t\tthis.tooltipLocation = 0.5;\r\n\t\tthis.fullWidthTooltip = false;\r\n\t\tthis.cellStartLocation = 0;\r\n\t\tthis.cellEndLocation = 1;\r\n\r\n\t\tthis.minLabelPosition = 0;\r\n\t\tthis.maxLabelPosition = 1;\r\n\t\tthis.shouldClone = false;\r\n\r\n\t\tlet gridContainer = this.createChild(Container);\r\n\t\tgridContainer.shouldClone = false;\r\n\t\tgridContainer.layout = \"none\";\r\n\t\t//\tgridContainer.isMeasured = false;\r\n\t\tgridContainer.virtualParent = this;\r\n\t\tgridContainer.width = percent(100);\r\n\t\tgridContainer.height = percent(100);\r\n\r\n\t\tthis.gridContainer = gridContainer;\r\n\t\t// not good without this\r\n\t\tgridContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.invalidateAxisItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tlet breakContainer = this.createChild(Container);\r\n\t\tbreakContainer.shouldClone = false;\r\n\t\tbreakContainer.isMeasured = false;\r\n\t\tbreakContainer.layout = \"none\";\r\n\t\tbreakContainer.width = percent(100);\r\n\t\tbreakContainer.height = percent(100);\r\n\t\tthis.breakContainer = breakContainer;\r\n\r\n\t\tlet bulletsContainer = this.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.line = this.createChild(AxisLine);\r\n\t\tthis.line.shouldClone = false;\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tlet baseGrid: Grid = this.createChild(Grid);\r\n\t\tbaseGrid.shouldClone = false;\r\n\t\tthis.baseGrid = baseGrid;\r\n\r\n\t\t// Make elements disposable\r\n\t\tlet disposers = this._disposers;\r\n\t\tdisposers.push(baseGrid);\r\n\t\tdisposers.push(this.line);\r\n\t\tdisposers.push(gridContainer);\r\n\t\tdisposers.push(breakContainer);\r\n\t\tdisposers.push(bulletsContainer);\r\n\t\tdisposers.push(this._chart);\r\n\r\n\t\tthis.ticks.template.disabled = true;\r\n\t\tthis.axisFills.template.disabled = true;\r\n\t\tthis.axisFills.template.interactionsEnabled = false;\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @param axis Axis\r\n\t */\r\n\tset axis(axis: Axis) {\r\n\t\tthis.setAxis(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Axis of a renderer\r\n\t * @return axis Axis\r\n\t */\r\n\tget axis(): Axis {\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tthis._axis = axis;\r\n\t\tthis.baseGrid.parent = axis;\r\n\t\tthis.line.parent = axis;\r\n\t\tthis.gridContainer.bind(\"opacity\", axis);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tthis.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n\t\tthis.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n\t\tthis.labels.template.inside = this.inside;\r\n\t\tthis.ticks.template.inside = this.inside;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-positions an element to new coordinates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item   A target element\r\n\t * @param point  New coordinates\r\n\t */\r\n\tpublic positionItem(item: Sprite, point: IPoint): void {\r\n\t\tif (item) {\r\n\t\t\titem.moveTo(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?:number): IPoint {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to angle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review / units)\r\n\t * @param position  Position (0-1)\r\n\t * @return Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate;\r\n\t}\r\n\r\n\tpublic updateGridContainer() {\r\n\r\n\t}\r\n\r\n\r\n\tprotected getHeight(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelHeight;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelHeight || 0;\r\n\t}\r\n\r\n\tprotected getWidth(): number {\r\n\t\tlet gridContainer = this.gridContainer;\r\n\t\tif(gridContainer.parent){\r\n\t\t\treturn gridContainer.parent.pixelWidth;\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelWidth || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = axis.end - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + axis.start;\r\n\t\t}\r\n\r\n\t\treturn $math.round(position, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis data items, effectively causing them re-evaluated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic invalidateAxisItems(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\taxis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fill         Fill element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateFillElement(fill: AxisFill, position: number, endPosition: number): void {\r\n\t\tfill.startPosition = position;\r\n\t\tfill.endPosition = endPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tthis.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n\t\tthis.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n\t\tthis.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n\t\tthis.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t *\r\n\t * Use it to control density of the grid/labels on the axis.element.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n\t * @param value  Min distance (px)\r\n\t */\r\n\tpublic set minGridDistance(value: number) {\r\n\t\tif (this.setPropertyValue(\"minGridDistance\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min distance (px)\r\n\t */\r\n\tpublic get minGridDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minGridDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart.set(value, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles visibility of an element, based on its current position and\r\n\t * min/max position settings.\r\n\t *\r\n\t * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite       An element to toggle\r\n\t * @param position     Elements current position\r\n\t * @param minPosition  Min position setting\r\n\t * @param maxPosition  Max position setting\r\n\t */\r\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tlet dataItem = sprite.dataItem;\r\n\t\tif(dataItem && dataItem instanceof AxisDataItem){\r\n\t\t\tif($type.isNumber(dataItem.minPosition)){\r\n\t\t\t\tminPosition = dataItem.minPosition;\r\n\t\t\t}\r\n\t\t\tif($type.isNumber(dataItem.maxPosition)){\r\n\t\t\t\tmaxPosition = dataItem.maxPosition;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t\tlet updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\r\n\t\tlet updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\r\n\r\n\t\tif (!sprite.disabled) {\r\n\t\t\tif (position < updatedStart || position > updatedEnd) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Fill elements.\r\n\t *\r\n\t * Those are fill elements that cover the space between every second set\r\n\t * of grid lines, and can be configured to create striped charts.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable them, set\r\n\t * template to true.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.axisFills.template.disabled = false;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"axisFills\": {\r\n\t *         \"disabled\": false\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n\t * @return Fill elements\r\n\t */\r\n\tpublic get axisFills(): ListTemplate<this[\"_fillType\"]> {\r\n\t\tif (!this._axisFills) {\r\n\t\t\tlet fill = this.createFill(this.axis);\r\n\t\t\tthis._axisFills = new ListTemplate<AxisFill>(fill);\r\n\t\t\tfill.applyOnClones = true;\r\n\t\t\tfill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisFills));\r\n\t\t\tthis._disposers.push(this._axisFills.template);\r\n\t\t}\r\n\t\treturn this._axisFills;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new fill element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Fill element\r\n\t */\r\n\tpublic createFill(axis: Axis): this[\"_fillType\"] {\r\n\t\treturn new AxisFill(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Grid elements.\r\n\t *\r\n\t * @return Grid elements\r\n\t */\r\n\tpublic get grid(): ListTemplate<this[\"_gridType\"]> {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet grid = this.createGrid();\r\n\t\t\tthis._grid = new ListTemplate<Grid>(grid);\r\n\t\t\tgrid.applyOnClones = true;\r\n\t\t\tgrid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._grid));\r\n\t\t\tthis._disposers.push(this._grid.template);\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new grid element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Grid element\r\n\t */\r\n\tpublic createGrid(): this[\"_gridType\"] {\r\n\t\treturn new Grid();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Tick elements.\r\n\t *\r\n\t * Please note that these are disabled by default. To enable ticks, you'll\r\n\t * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.renderer.ticks.template.disabled = false;\r\n\t * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"renderer\": {\r\n\t *       \"ticks\": {\r\n\t *         \"disabled\": false,\r\n\t *         \"strokeOpacity\": 0.5\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Tick elements\r\n\t */\r\n\tpublic get ticks(): ListTemplate<this[\"_tickType\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick: AxisTick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\ttick.isMeasured = false;\r\n\t\t\ttick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._ticks = new ListTemplate<AxisTick>(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t\tthis._disposers.push(this._ticks.template);\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new tick element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Tick element\r\n\t */\r\n\tpublic createTick(): this[\"_tickType\"] {\r\n\t\treturn new AxisTick();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Label elements.\r\n\t *\r\n\t * @return Label elements\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_labelType\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tthis._labels = new ListTemplate<AxisLabel>(label);\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tlabel.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t\tthis._disposers.push(this._labels.template);\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new label element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Label element\r\n\t */\r\n\tpublic createLabel(): this[\"_labelType\"] {\r\n\t\treturn new AxisLabel();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n\t *\r\n\t * Does not work with all renderers, like AxisRendererRadial.\r\n\t *\r\n\t * @param value  Labels inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\r\n\t\tif (this.setPropertyValue(\"inside\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.height = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis should be drawn on the opposite side of the plot\r\n\t * area than it would normally be drawn based on chart's settings.\r\n\t *\r\n\t * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n\t * [[AxisRenderer Circular].\r\n\t *\r\n\t * @param value  Draw axis on opposite side?\r\n\t */\r\n\tpublic set opposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"opposite\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draw axis on opposite side?\r\n\t */\r\n\tpublic get opposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"opposite\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n\t * (between two grid lines)\r\n\t *\r\n\t * NOTE: this setting is ignored on circular axis types.\r\n\t *\r\n\t * @param value Full width tooltip?\r\n\t */\r\n\tpublic set fullWidthTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width tooltip?\r\n\t */\r\n\tpublic get fullWidthTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthTooltip\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within secondary axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation2(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation2\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation2(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation2\");\r\n\t}\t\r\n\r\n\t/**\r\n\t * Location for the cell start.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellStartLocation` identifies where, within available space, the actual\r\n\t * cell starts.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell start (0-1)\r\n\t */\r\n\tpublic set cellStartLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellStartLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell start (0-1)\r\n\t */\r\n\tpublic get cellStartLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellStartLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location for the cell end.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellEndLocation` identifies where, within available space, the actual\r\n\t * cell ends.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value Cell end (0-1)\r\n\t */\r\n\tpublic set cellEndLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"cellEndLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cell end (0-1)\r\n\t */\r\n\tpublic get cellEndLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellEndLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the scale of the axis should be flipped.\r\n\t *\r\n\t * @param value Flip axis?\r\n\t */\r\n\tpublic set inversed(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inversed\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Flip axis?\r\n\t */\r\n\tpublic get inversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"inversed\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the start of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near start of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Min label position (0-1)\r\n\t */\r\n\tpublic set minLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"minLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min label position (0-1)\r\n\t */\r\n\tpublic get minLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"minLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the and of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near end of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param value  Max label position (0-1)\r\n\t */\r\n\tpublic set maxLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max label position (0-1)\r\n\t */\r\n\tpublic get maxLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"maxLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all settings and related items from another object of the same\r\n\t * type.\r\n\t *\r\n\t * @param source  Source object\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.grid.template.copyFrom(source.grid.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.axisFills.template.copyFrom(source.axisFills.template);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.baseGrid.copyFrom(source.baseGrid);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n","/**\r\n * Axis Bullet module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerAdapters, IContainerEvents, IContainerProperties } from \"../../core/Container\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw inside plot area (`true`) or outside it (`false`).\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBullet]].\r\n */\r\nexport interface IAxisBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapter for [[AxisBullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBulletAdapters extends IContainerAdapters, IAxisBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a positioned bullet (element) on an Axis.\r\n *\r\n * ```TypeScript\r\n * let range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * let flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JavaScript\r\n * var range = dateAxis.axisRanges.create();\r\n * range.date = new Date(2018, 0, 5);\r\n * \r\n * var flag = new am4plugins_bullets.FlagBullet();\r\n * flag.label.text = \"Hello\";\r\n *\r\n * range.bullet = flag;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"xAxes\": [{\r\n *     \"type\": \"DateAxis\",\r\n *     // ...\r\n *     \"axisRanges\": [{\r\n *       \"date\": new Date(2018, 0, 5),\r\n *       \"bullet: {\r\n *         \"type\": \"FlagBullet\",\r\n *         \"label\": {\r\n *           \"text\": \"Hello\"\r\n *         }\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.9\r\n * @see {@link IAxisBulletEvents} for a list of available events\r\n * @see {@link IAxisBulletAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisBulletEvents;\r\n\r\n\t/**\r\n\t * Data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisBullet\";\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position within cell/range.\r\n\t *\r\n\t * Value range is from from `0` (beginning) to `1` (end).\r\n\t *\r\n\t * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n\t * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n\t * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n\t * \r\n\t * ```TypeScript\r\n\t * let range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * let bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * let flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var range = dateAxis.axisRanges.create();\r\n\t * range.date = new Date(2018, 0, 5);\r\n\t * range.endDate = new Date(2018, 0, 6);\r\n\t * \r\n\t * var bullet = new am4charts.AxisBullet();\r\n\t * bullet.location = 1;\r\n\t * \r\n\t * var flag = bullet.createChild(am4plugins_bullets.FlagBullet);\r\n\t * flag.label.text = \"Hello\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     // ...\r\n\t *     \"axisRanges\": [{\r\n\t *       \"date\": new Date(2018, 0, 5),\r\n\t *       \"endDate\": new Date(2018, 0, 6),\r\n\t *       \"bullet: {\r\n\t *         \"type\": \"AxisBullet\",\r\n\t *         \"location\": 1,\r\n\t *         \"children\": [{\r\n\t *           \"type\": \"FlagBullet\",\r\n\t *           \"label\": {\r\n\t *             \"text\": \"Hello\"\r\n\t *           }\r\n\t *         }]\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0.5\r\n\t * @param  value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBullet\"] = AxisBullet;","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { HorizontalCenter } from \"../../core/defs/HorizontalCenter\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererYAdapters extends IAxisRendererAdapters, IAxisRendererYProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for vertical axis.\r\n *\r\n * @see {@link IAxisRendererYEvents} for a list of available events\r\n * @see {@link IAxisRendererYAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererYProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererYAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererYEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererY\";\r\n\t\tthis.minGridDistance = 40;\r\n\t\tthis.opposite = false;\r\n\t\tthis.height = percent(100);\r\n\t\tthis.labels.template.verticalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"horizontal\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.y = axis.pixelY;\r\n\t\t\tgridContainer.height = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet inversedPosition = 1 - value;\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet y = axis.pixelY;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\ty = $utils.spritePointToSprite({ x: 0, y: this.pixelY }, this.parent, relativePositionSprite).y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tlet relativeY = y / relativePositionSprite.innerHeight;\r\n\t\t\t\tlet relativeHeight = axis.axisLength / relativePositionSprite.innerHeight;\r\n\r\n\t\t\t\treturn 1 - (inversedPosition - relativeY) / relativeHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.valign = \"middle\";\r\n\r\n\t\t\tif (!(axis.height instanceof Percent)) {\r\n\t\t\t\taxis.height = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\ttitle.rotation = 90;\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.rotation = -90;\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet bigNum: number = 2000;\r\n\t\t\tlet bbx: number = 0;\r\n\t\t\tlet bby: number = 0;\r\n\t\t\tlet bbw: number = bigNum;\r\n\t\t\tlet bbh: number = this.axisLength;\r\n\r\n\t\t\t// right\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\telse {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.axis.updateTooltip(\"horizontal\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;\r\n\t}\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.y, point.x);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param coordinate  Coordinate (px)\r\n\t * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number, coordinate2?:number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = (1 - axis.start) - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + (1 - axis.end);\r\n\t\t}\r\n\t\treturn $math.round(position, 5);\r\n\t}\t\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet y1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet y2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet h: number = Math.abs(y2 - y1);\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet y: number = Math.min(y1, y2);\r\n\t\tlet x: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//\tpoint.y = $utils.spritePointToSprite({ x: 0, y: point.y }, this, this.gridContainer).y;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.getWidth(), y: 0 });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\ttry {\r\n\t\t\t$utils.used(this.axis.title.measuredWidth);\r\n\t\t} catch {\r\n\t\t\t// void\r\n\t\t}\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tif (!this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength, y: 0 });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.axisLength });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet h: number = this.axisLength;\r\n\t\tlet y: number = axis.basePoint.y;\r\n\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tif (y < - 0.2 || y > h + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet x = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;\r\n\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet horizontalCenter: HorizontalCenter;\r\n\t\tlet deltaX = 0;\r\n\t\tlet maxWidth = this.gridContainer.maxWidth;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\tif (label.align == \"left\") {\r\n\t\t\t\t\tdeltaX = -maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = -maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = 0 + deltaX;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\tif (label.align == \"right\") {\r\n\t\t\t\t\tdeltaX = maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.align == \"center\") {\r\n\t\t\t\t\tdeltaX = maxWidth / 2;\r\n\t\t\t\t\thorizontalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = this.measuredWidth + deltaX;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.horizontalCenter = horizontalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak) {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet x1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet x2: number = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;\r\n\r\n\t\tstartPoint.y = $math.fitToRange(startPoint.y, -1, this.axisLength + 1);\r\n\t\tendPoint.y = $math.fitToRange(endPoint.y, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet w = Math.abs(x2 - x1);\r\n\r\n\t\tstartLine.x = x1;\r\n\t\tstartLine.height = 0;\r\n\t\tstartLine.width = w;\r\n\r\n\t\tendLine.x = x1;\r\n\t\tendLine.height = 0;\r\n\t\tendLine.width = w;\r\n\r\n\t\tfillShape.width = w;\r\n\t\tfillShape.height = Math.abs(endPoint.y - startPoint.y);\r\n\t\tfillShape.x = x1;\r\n\t\tfillShape.y = endPoint.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(true, false, true, false);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position on the axis to a coordinate in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (!axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.x = $utils.spritePointToSprite({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererY\"] = AxisRendererY;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Value break starts on.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * Value break ends on.\r\n\t */\r\n\tendValue?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ValueAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisBreakAdapters extends IAxisBreakAdapters, IValueAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: ValueAxis;\r\n\r\n\t/**\r\n\t * [adjustedStep description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedStep: number;\r\n\r\n\t/**\r\n\t * [adjustedMin description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMin: number;\r\n\r\n\t/**\r\n\t * [adjustedMax description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMax: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedStartValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;\r\n","/**\r\n * Value Axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisDataItem, IAxisProperties, IAxisDataFields, IAxisAdapters, IAxisEvents } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { IDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ValueAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ValueAxisDataItem extends AxisDataItem {\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ValueAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.endValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A data point's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values[\"value\"].value;\r\n\t}\r\n\r\n\t/**\r\n\t * Data point's numeric end value.\r\n\t *\r\n\t * @param value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tthis.setValue(\"endValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.values[\"endValue\"].value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n */\r\nexport interface IMinMaxStep {\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n}\r\n\r\n/**\r\n * Defines data fields for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisDataFields extends IAxisDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisProperties extends IAxisProperties {\r\n\tstrictMinMax?: boolean;\r\n\tlogarithmic?: boolean;\r\n\tmaxPrecision?: number;\r\n\tadjustLabelPrecision?: boolean;\r\n\textraTooltipPrecision?: number;\r\n\textraMin?: number;\r\n\textraMax?: number;\r\n\tkeepSelection?: boolean;\r\n\tincludeRangesInMinMax?: boolean;\r\n\tsyncWithAxis?: ValueAxis;\r\n\ttreatZeroAs?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisEvents extends IAxisEvents {\r\n\r\n\t/**\r\n\t * Invoked when selection/zoom on axis occurs and start/end coordinates\r\n\t * change.\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * Invoked when start/end coordinates of the axis change.\r\n\t */\r\n\textremeschanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[ValueAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisAdapters extends IAxisAdapters, IValueAxisProperties {\r\n\t/**\r\n\t * Applied to the base value of the axis\r\n\t */\r\n\tbaseValue: number,\r\n\r\n\t/**\r\n\t * Applied to the min value of the axis\r\n\t */\r\n\tmin: number\r\n\r\n\t/**\r\n\t * Applied to the max value of the axis\r\n\t */\r\n\tmax: number\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a value axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JSON\r\n * \"yAxes\": [{\r\n *   \"type\": \"ValueAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Monthly Sales\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IValueAxisEvents} for a list of available Events\r\n * @see {@link IValueAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxis<T extends AxisRenderer = AxisRenderer> extends Axis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IValueAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: ValueAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: ValueAxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisEvents;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tpublic chart: XYChart;\r\n\r\n\t/**\r\n\t * A list of Series that are using this Axis.\r\n\t */\r\n\tpublic series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * Minimum value for the axis scale.\r\n\t */\r\n\tprotected _min: number;\r\n\r\n\t/**\r\n\t * Maximum value for the axis scale.\r\n\t */\r\n\tprotected _max: number;\r\n\r\n\t/**\r\n\t * User-defined min value for axis.\r\n\t */\r\n\tprotected _minDefined: number;\r\n\r\n\t/**\r\n\t * User-defined max value for axis.\r\n\t */\r\n\tprotected _maxDefined: number;\r\n\r\n\t/**\r\n\t * [_minAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _minAdjusted: number;\r\n\r\n\t/**\r\n\t * [_maxAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _maxAdjusted: number;\r\n\r\n\t/**\r\n\t * Min real value. (lowest value of all data points)\r\n\t */\r\n\tprotected _minReal: number;\r\n\r\n\t/**\r\n\t * Max real value. (highest value of all data points)\r\n\t */\r\n\tprotected _maxReal: number;\r\n\r\n\t/**\r\n\t * Min value within current zoom.\r\n\t */\r\n\tprotected _minZoomed: number;\r\n\r\n\t/**\r\n\t * Max value within current zoom.\r\n\t */\r\n\tprotected _maxZoomed: number\r\n\r\n\t/**\r\n\t * [_step description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _step: number;\r\n\r\n\t/**\r\n\t * [_stepDecimalPlaces description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _stepDecimalPlaces: number = 0;\r\n\tprotected _prevStepDecimalPlaces: number = 0;\r\n\tprotected _adjustLabelPrecision: boolean = true;\r\n\r\n\t/**\r\n\t * [_difference description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _difference: number;\r\n\r\n\t/**\r\n\t * Base value for the axis.\r\n\t */\r\n\tprotected _baseValue: number = 0;\r\n\r\n\t/**\r\n\t * [_previousValue description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousValue: number;\r\n\r\n\t/**\r\n\t * [_previousPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _previousPoint: IPoint;\r\n\r\n\t/**\r\n\t * Adjusted start in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedStart: number = 0;\r\n\r\n\t/**\r\n\t * Adjusted end in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _adjustedEnd: number = 1;\r\n\r\n\tprotected _finalMin: number;\r\n\tprotected _finalMax: number;\r\n\r\n\tprotected _extremesChanged: boolean = false;\r\n\r\n\tprotected _deltaMinMax: number = 1;\r\n\r\n\tprotected _dsc: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem as parameter.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet value = dataItem.value;\r\n\t\tlet axis = dataItem.component;\r\n\t\tif (!dataItem.axisFill.disabled) {\r\n\t\t\t// rounding in left to solve floating point number\r\n\t\t\tif ($math.round(value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {\r\n\t\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * As calculating totals is expensive operation and not often needed, we\r\n\t * don't do it by default.\r\n\t *\r\n\t * In case you use `totalPercent` or `total` in your charts, this must be set\r\n\t * to `true`.\r\n\t *\r\n\t * @default false\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.\r\n\t */\r\n\tpublic calculateTotals: boolean = false;\r\n\r\n\r\n\tprotected _minMaxAnimation: Animation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxis\";\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"value\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.setPropertyValue(\"maxZoomFactor\", 1000);\r\n\t\tthis.setPropertyValue(\"extraMin\", 0);\r\n\t\tthis.setPropertyValue(\"extraMax\", 0);\r\n\t\tthis.setPropertyValue(\"strictMinMax\", false);\r\n\t\tthis.setPropertyValue(\"maxPrecision\", Number.MAX_VALUE);\r\n\t\tthis.setPropertyValue(\"adjustLabelPrecision\", true);\r\n\t\tthis.setPropertyValue(\"extraTooltipPrecision\", 0);\r\n\t\tthis.keepSelection = false;\r\n\t\tthis.includeRangesInMinMax = false;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ValueAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new ValueAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\t\tthis.clearCache();\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis._start = 0;\r\n\t\t\t\tthis._end = 1;\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._start != 0) {\r\n\t\t\t\tthis.dispatchImmediately(\"startchanged\");\r\n\t\t\t}\r\n\t\t\tif (this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"endchanged\");\r\n\r\n\t\t\t}\r\n\t\t\tif (this._start != 0 || this._end != 1) {\r\n\t\t\t\tthis.dispatchImmediately(\"startendchanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._maxZoomed = this._maxDefined;\r\n\t\tthis._minZoomed = this._minDefined;\r\n\r\n\t\tthis._maxAdjusted = this._maxDefined;\r\n\t\tthis._minAdjusted = this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data items of the related Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\t\t// @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu\r\n\t\tif (this.calculateTotals) {\r\n\t\t\tlet series: XYSeries = this.series.getIndex(0);\r\n\t\t\tlet startIndex: number = series.startIndex;\r\n\r\n\t\t\tif (series.dataItems.length > 0) {\r\n\r\n\t\t\t\tif (startIndex > 0) {\r\n\t\t\t\t\tstartIndex--;\r\n\t\t\t\t}\r\n\t\t\t\tlet endIndex: number = series.endIndex;\r\n\t\t\t\tif (endIndex < series.dataItems.length) {\r\n\t\t\t\t\tendIndex++;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\tfor (let i: number = startIndex; i < endIndex; ++i) {\r\n\t\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\t\tconst total: { [index: string]: number } = {};\r\n\t\t\t\t\tconst sum: { [index: string]: number } = {};\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(total[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] = Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\ttotal[key] += Math.abs(value);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] = value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tsum[key] += value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tif (!series.excludeFromTotal) {\r\n\t\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, total[key], \"total\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 100 * value / total[key], \"totalPercent\");\r\n\t\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates the whole axis. Causes it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif (this.axisLength <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (!$type.isNumber(this._minAdjusted)) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = null;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\tthis.calculateZoom();\r\n\r\n\t\tthis.validateAxisElements();\r\n\r\n\t\tthis.validateAxisRanges();\r\n\r\n\t\tthis.validateBreaks();\r\n\r\n\t\tthis.hideUnusedDataItems();\r\n\r\n\t\tthis.renderer.invalidateLayout();\r\n\t\t// hide too close\r\n\t\t//this.hideTooCloseDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates all positions, related to axis as per current zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic calculateZoom(): void {\r\n\t\tif ($type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n\t\t\tlet min: number = this.positionToValue(this.start);\r\n\t\t\tlet max: number = this.positionToValue(this.end);\r\n\r\n\t\t\tlet differece: number = this.adjustDifference(min, max);\r\n\t\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\r\n\t\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n\t\t\tthis._stepDecimalPlaces = stepDecimalPlaces;\r\n\r\n\t\t\tmin = $math.round(min, stepDecimalPlaces);\r\n\t\t\tmax = $math.round(max, stepDecimalPlaces);\r\n\r\n\t\t\tminMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\t\t\tlet step = minMaxStep.step;\r\n\r\n\t\t\tif (this.syncWithAxis) {\r\n\t\t\t\tlet calculated = this.getCache(min + \"-\" + max);\r\n\t\t\t\tif ($type.isNumber(calculated)) {\r\n\t\t\t\t\tstep = calculated;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = minMaxStep.min;\r\n\t\t\t\tmax = minMaxStep.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._minZoomed != min || this._maxZoomed != max || this._step != step || this._dsc) {\r\n\t\t\t\tthis._dsc = false;\r\n\t\t\t\tthis._minZoomed = min;\r\n\t\t\t\tthis._maxZoomed = max;\r\n\r\n\t\t\t\tthis._step = step;\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected fixSmallStep(step: number): number {\r\n\t\tif (1 + step == 1) {\r\n\t\t\tstep *= 2;\r\n\t\t\treturn this.fixSmallStep(step);\r\n\t\t}\r\n\t\treturn step;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic validateAxisElements(): void {\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\t\t\t// first regular items\r\n\t\t\tlet value: number = this.minZoomed - this._step * 2;\r\n\r\n\t\t\tif (!this.logarithmic) {\r\n\t\t\t\tvalue = Math.floor(value / this._step) * this._step;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = Math.floor(this.minZoomed / this._step) * this._step;\r\n\t\t\t\t\tif (value == 0) {\r\n\t\t\t\t\t\tvalue = this.minZoomed;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet maxZoomed = this._maxZoomed + this._step;\r\n\r\n\t\t\tthis.resetIterators();\r\n\r\n\t\t\tlet dataItemsIterator = this._dataItemsIterator;\r\n\r\n\t\t\tif (this._step == 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._step = this.fixSmallStep(this._step);\r\n\r\n\t\t\tlet i: number = 0;\r\n\r\n\t\t\tconst precisionChanged = this._prevStepDecimalPlaces != this._stepDecimalPlaces;\r\n\t\t\tthis._prevStepDecimalPlaces = this._stepDecimalPlaces;\r\n\r\n\t\t\twhile (value <= maxZoomed) {\r\n\t\t\t\tlet axisBreak: ValueAxisBreak = <ValueAxisBreak>this.isInBreak(value);\r\n\r\n\t\t\t\tif (!axisBreak) {\r\n\r\n\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === value);\r\n\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\tdataItem.axisBreak = undefined;\r\n\r\n\t\t\t\t\tif (dataItem.value != value || precisionChanged) {\r\n\t\t\t\t\t\tdataItem.value = value;\r\n\t\t\t\t\t\tdataItem.text = this.formatLabel(value);\r\n\r\n\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (dataItem.value >= this.min && dataItem.value <= this.max) {\r\n\t\t\t\t\t\t\tif (dataItem.label) {\r\n\t\t\t\t\t\t\t\tif ((this.axisLetter == \"Y\" && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (this.axisLetter == \"X\" && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t\t\t\t\t\tthis.ghostLabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\r\n\t\t\t\tlet oldValue = value;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(this._step)) * Math.LOG10E));\r\n\r\n\t\t\t\tif (stepPower < 1) {\r\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n\t\t\t\t\tdecCount = Math.min(13, decCount);\r\n\t\t\t\t\t// round value to avoid floating point issues\r\n\t\t\t\t\tvalue = $math.round(value, decCount);\r\n\t\t\t\t\t// ceil causes problems: https://codepen.io/team/amcharts/pen/XWMjZwy?editors=1010\r\n\t\t\t\t\tif (oldValue == value) {\r\n\t\t\t\t\t\tvalue = maxZoomed;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// breaks later\r\n\t\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\t// only add grid if gap is bigger then minGridDistance\r\n\t\t\t\t\t\tif ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer.minGridDistance) {\r\n\t\t\t\t\t\t\tlet breakValue: number = axisBreak.adjustedMin;\r\n\r\n\t\t\t\t\t\t\twhile (breakValue <= axisBreak.adjustedMax) {\r\n\t\t\t\t\t\t\t\tif (breakValue >= axisBreak.adjustedStartValue && breakValue <= axisBreak.adjustedEndValue) {\r\n\t\t\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === breakValue);\r\n\t\t\t\t\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tdataItem.axisBreak = axisBreak;\r\n\t\t\t\t\t\t\t\t\tif (dataItem.value != breakValue) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.value = breakValue;\r\n\t\t\t\t\t\t\t\t\t\tdataItem.text = this.formatLabel(breakValue);\r\n\t\t\t\t\t\t\t\t\t\tif (dataItem.label && dataItem.label.invalid) {\r\n\t\t\t\t\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreakValue += axisBreak.adjustedStep;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\t//dataItem.__disabled = false;\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tlet value: number = dataItem.value;\r\n\t\tlet endValue: number = dataItem.endValue;\r\n\r\n\t\tlet position: number = this.valueToPosition(value);\r\n\t\tdataItem.position = position;\r\n\r\n\t\tlet endPosition: number = position;\r\n\t\tlet fillEndPosition: number = this.valueToPosition(value + this._step);\r\n\r\n\t\tif ($type.isNumber(endValue)) {\r\n\t\t\tendPosition = this.valueToPosition(endValue);\r\n\t\t\tfillEndPosition = endPosition;\r\n\t\t}\r\n\r\n\t\t// this point is needed to calculate distance to satisfy minGridDistance\r\n\t\tdataItem.point = renderer.positionToPoint(position);\r\n\r\n\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\tif (tick && !tick.disabled) {\r\n\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet grid: Grid = dataItem.grid;\r\n\t\tif (grid && !grid.disabled) {\r\n\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet label: AxisLabel = dataItem.label;\r\n\t\tif (label && !label.disabled) {\r\n\t\t\trenderer.updateLabelElement(label, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\tif (fill && !fill.disabled) {\r\n\t\t\trenderer.updateFillElement(fill, position, fillEndPosition);\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tthis.fillRule(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\tif (mask) {\r\n\t\t\trenderer.updateFillElement(mask, position, fillEndPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[NumberFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number): string {\r\n\t\tif (this.adjustLabelPrecision && value != 0) {\r\n\t\t\treturn this.numberFormatter.format(value, undefined, this._stepDecimalPlaces);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.numberFormatter.format(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\tlet baseValue: number = this.baseValue;\r\n\t\tlet position: number = this.valueToPosition(baseValue);\r\n\t\tlet basePoint: IPoint = this.renderer.positionToPoint(position);\r\n\r\n\t\treturn basePoint;\r\n\t}\r\n\r\n\t/**\r\n\t * A base value.\r\n\t *\r\n\t * This is a threshold value that will divide \"positive\" and \"negative\"\r\n\t * value ranges.\r\n\t *\r\n\t * Other scale-related functionality also depend on base value. E.g. stacks,\r\n\t * value-dependent coloring, etc.\r\n\t *\r\n\t * @param value Base value\r\n\t */\r\n\tpublic set baseValue(value: number) {\r\n\t\tthis._baseValue = value;\r\n\t\tthis.invalidateLayout();\r\n\t\tthis.invalidateSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * @return base value\r\n\t */\r\n\tpublic get baseValue(): number {\r\n\r\n\t\tlet baseValue = this._baseValue;\r\n\t\tif (this.logarithmic) {\r\n\t\t\tbaseValue = this.min;\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn baseValue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"baseValue\", baseValue);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis\r\n\t *\r\n\t * An alias to `valueToPosition()`.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Position\r\n\t */\r\n\tpublic anyToPosition(value: number): number {\r\n\t\treturn this.valueToPosition(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation point (x, y, angle) on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic valueToPoint(value: number): IOrientationPoint {\r\n\t\tlet position = this.valueToPosition(value);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation (x, y, angle) point on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: number): IOrientationPoint {\r\n\t\treturn this.valueToPoint(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t// todo: think if possible to take previous value and do not go through all previous breaks\r\n\t\t\tlet min: number = this.min;\r\n\t\t\tlet max: number = this.max;\r\n\r\n\t\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\t\t\t\tlet difference: number = this._difference;\r\n\r\n\t\t\t\tlet axisBreaks = this._axisBreaks;\r\n\t\t\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\r\n\t\t\t\t\t\t\tif (value < startValue) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: startValue, end: endValue }, { start: min, end: max })) { // todo: check this once and set some flag in axisBreak\r\n\t\t\t\t\t\t\t\tstartValue = Math.max(startValue, min);\r\n\t\t\t\t\t\t\t\tendValue = Math.min(endValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\t// value to the right of break end\r\n\t\t\t\t\t\t\t\tif (value > endValue) {\r\n\t\t\t\t\t\t\t\t\tmin += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value to the left of break start\r\n\t\t\t\t\t\t\t\telse if (value < startValue) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvalue = startValue + (value - startValue) * breakSize;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tposition = (value - min) / difference;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\t\t\tif (value <= treatZeroAs) {\r\n\t\t\t\t\t\t\tvalue = treatZeroAs;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tposition = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//position = $math.round(position, 10);\r\n\r\n\t\t\t\treturn position;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.\r\n\t */\r\n\tpublic invalidateLabels() {\r\n\t\tsuper.invalidateLabels();\r\n\t\tif (this.dataItems) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.value = undefined;\r\n\t\t\t})\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an relative position to a corresponding value within\r\n\t * axis' scale.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet min: number = this.min;\r\n\t\tlet max: number = this.max;\r\n\r\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet difference: number = max - min; //no need to adjust!\r\n\r\n\t\t\tlet value: number = null;\r\n\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\tif (axisBreaks) {\r\n\t\t\t\t// in case we have some axis breaks\r\n\t\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet breakStartPosition: number = axisBreak.startPosition;\r\n\t\t\t\t\t\tlet breakEndPosition: number = axisBreak.endPosition;\r\n\r\n\t\t\t\t\t\tlet breakStartValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet breakEndValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(breakStartValue) && $type.isNumber(breakEndValue)) {\r\n\r\n\t\t\t\t\t\t\tif (breakStartValue > max) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {\r\n\r\n\t\t\t\t\t\t\t\tbreakStartValue = $math.max(breakStartValue, min);\r\n\t\t\t\t\t\t\t\tbreakEndValue = $math.min(breakEndValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\tdifference -= (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\r\n\t\t\t\t\t\t\t\t// position to the right of break end\r\n\t\t\t\t\t\t\t\tif (position > breakEndPosition) {\r\n\t\t\t\t\t\t\t\t\tmin += (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// position to the left of break start\r\n\t\t\t\t\t\t\t\telse if (position < breakStartPosition) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tlet breakPosition: number = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n\t\t\t\t\t\t\t\t\tvalue = breakStartValue + breakPosition * (breakEndValue - breakStartValue);\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(value)) {\r\n\t\t\t\tif (this.logarithmic) {\r\n\t\t\t\t\tvalue = Math.pow(Math.E, (position * ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E)) + Math.log(this.min) * Math.LOG10E) / Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = position * difference + min;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an X coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param x  X (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic xToValue(x: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: x, y: 0 }));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Y coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param y  Y (px)\r\n\t * @return Value\r\n\t */\r\n\tpublic yToValue(y: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: 0, y: y }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param point  Coorinates (px)\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\tif (this.renderer instanceof AxisRendererY) {\r\n\t\t\treturn 1 - this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected animateMinMax(min: number, max: number): Animation {\r\n\t\treturn this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates smallest and biggest value for the axis scale.\r\n\t * @ignore\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic getMinMax() {\r\n\r\n\t\tthis.updateGridCount();\r\n\r\n\t\tlet min: number = Number.POSITIVE_INFINITY;\r\n\t\tlet max: number = Number.NEGATIVE_INFINITY;\r\n\r\n\t\t// only if min and max are not set from outside, we go through min and max influencers\r\n\t\tif (!$type.isNumber(this._minDefined) || !$type.isNumber(this._maxDefined)) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (!series.ignoreMinMax) {\r\n\t\t\t\t\t// check min\r\n\t\t\t\t\tlet seriesMin: number = series.min(this);\r\n\t\t\t\t\tif ($type.isNumber(seriesMin) && (seriesMin < min)) {\r\n\t\t\t\t\t\tmin = seriesMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// check max\r\n\t\t\t\t\tlet seriesMax: number = series.max(this);\r\n\r\n\t\t\t\t\tif ($type.isNumber(seriesMax) && (seriesMax > max)) {\r\n\t\t\t\t\t\tmax = seriesMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.includeRangesInMinMax) {\r\n\t\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\r\n\t\t\t\t\t\tif (minValue < min || !$type.isNumber(min)) {\r\n\t\t\t\t\t\t\tmin = minValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (maxValue > max || !$type.isNumber(max)) {\r\n\t\t\t\t\t\t\tmax = maxValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.logarithmic) {\r\n\t\t\tlet treatZeroAs = this.treatZeroAs;\r\n\t\t\tif ($type.isNumber(treatZeroAs)) {\r\n\t\t\t\tif (min <= 0) {\r\n\t\t\t\t\tmin = treatZeroAs;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\tthis.raiseCriticalError(new Error(\"Logarithmic value axis can not have values <= 0.\"), true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (min == 0 && max == 0) {\r\n\t\t\tmax = 0.9;\r\n\t\t\tmin = -0.9;\r\n\t\t}\r\n\r\n\t\t// if defined from outside\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._minReal = min;\r\n\t\tthis._maxReal = max;\r\n\r\n\t\tif (min == Number.POSITIVE_INFINITY) {\r\n\t\t\tmin = undefined;\r\n\t\t}\r\n\t\tif (max == Number.NEGATIVE_INFINITY) {\r\n\t\t\tmax = undefined;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(min, max); // previously it was max-min, but not worked well\r\n\r\n\r\n\t\tmin = this.fixMin(min);\r\n\t\tmax = this.fixMax(max);\r\n\r\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\r\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\r\n\t\t\tif (max - min != 0) {\r\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// the number by which we need to raise 10 to get difference\r\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\r\n\r\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t\t\t// reduce this number by 10 times\r\n\t\t\t\tpower = power / 10;\r\n\r\n\t\t\t\tthis._deltaMinMax = power;\r\n\t\t\t}\r\n\t\t\tmin -= this._deltaMinMax;\r\n\t\t\tmax += this._deltaMinMax;\r\n\t\t}\r\n\r\n\t\tmin -= (max - min) * this.extraMin;\r\n\t\tmax += (max - min) * this.extraMax;\r\n\r\n\t\tlet strict = this.strictMinMax;\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tstrict = true;\r\n\t\t}\r\n\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, strict);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\tdif = max - min;  //new\r\n\r\n\t\t// do it for the second time (importat!)\r\n\t\tminMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\t// return min max if strict\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\t\tmin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = this._minReal;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\t\tmax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmax = this._maxReal;\r\n\t\t\t}\r\n\r\n\t\t\tif (max - min <= 0.00000001) {\r\n\t\t\t\tmin -= this._deltaMinMax;\r\n\t\t\t\tmax += this._deltaMinMax;\r\n\t\t\t}\r\n\r\n\t\t\tmin -= (max - min) * this.extraMin;\r\n\t\t\tmax += (max - min) * this.extraMax;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmin = this._adapterO.apply(\"min\", min);\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tmax = this._adapterO.apply(\"max\", max);\r\n\t\t}\r\n\r\n\t\tthis._step = minMaxStep.step;\r\n\r\n\t\tif (!$type.isNumber(min) && !$type.isNumber(max)) {\r\n\t\t\tthis.start = 0;\r\n\t\t\tthis.end = 1;\r\n\r\n\t\t\tthis.renderer.labels.each((label) => {\r\n\t\t\t\tlabel.dataItem.text = \"\";\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// checking isNumber is good when all series are hidden\r\n\t\tif ((this._minAdjusted != min || this._maxAdjusted != max) && $type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet animation = this._minMaxAnimation;\r\n\r\n\t\t\tif (this._extremesChanged && $type.isNumber(this._minAdjusted) && $type.isNumber(this._maxAdjusted) && this.inited) {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tanimation = this.animateMinMax(min, max);\r\n\r\n\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\tanimation.events.on(\"animationprogress\", this.validateDataItems, this);\r\n\r\n\t\t\t\t\t\tanimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\t\t//this.validateDataItems();\r\n\t\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\t\tseries.validate();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis._minMaxAnimation = animation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\t\tseries.invalidate();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._minAdjusted = min;\r\n\t\t\t\t\tthis._maxAdjusted = max;\r\n\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tthis.invalidateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._extremesChanged = false;\r\n\t\tthis._difference = this.adjustDifference(min, max);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the minimum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMin(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the maximum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMax(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts actual min and max scale values so that the axis starts and ends\r\n\t * at \"nice\" values, unless `strictMinMax` is set.\r\n\t *\r\n\t * The `difference` can be something else than `max - min`, because of the\r\n\t * axis breaks.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param min        [description]\r\n\t * @param max        [description]\r\n\t * @param difference [description]\r\n\t * @param gridCount  [description]\r\n\t * @param strictMode [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number, difference: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\r\n\r\n\t\t// will fail if 0\r\n\t\tif (gridCount <= 1) {\r\n\t\t\tgridCount = 1;\r\n\t\t}\r\n\r\n\t\tgridCount = Math.round(gridCount);\r\n\r\n\t\tlet initialMin: number = min;\r\n\t\tlet initialMax: number = max;\r\n\r\n\t\t// in case min and max is the same, use max\r\n\t\tif (difference === 0) {\r\n\t\t\tdifference = Math.abs(max);\r\n\t\t}\r\n\r\n\t\t// the number by which we need to raise 10 to get difference\r\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\r\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t// reduce this number by 10 times\r\n\t\tpower = power / 10;\r\n\r\n\t\tlet extra: number = power;\r\n\t\tif (strictMode) {\r\n\t\t\textra = 0;\r\n\t\t}\r\n\r\n\t\tif (!this.logarithmic) {\r\n\r\n\t\t\t// round down min\r\n\t\t\tif (strictMode) {\r\n\t\t\t\tmin = Math.floor(min / power) * power;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.ceil(max / power) * power;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\r\n\t\t\t}\r\n\r\n\t\t\t// don't let min go below 0 if real min is >= 0\r\n\t\t\tif (min < 0 && initialMin >= 0) {\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\t// don't let max go above 0 if real max is <= 0\r\n\t\t\tif (max > 0 && initialMax <= 0) {\r\n\t\t\t\tmax = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\r\n\t\t\t\tmin = this.baseValue;\r\n\t\t\t}\r\n\r\n\t\t\t// @todo: think of a better way or to restrict zooming when no series are selected\r\n\t\t\tif (min == Infinity) {\r\n\t\t\t\tmin = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (max == -Infinity) {\r\n\t\t\t\tmax = 10;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tif (this._minDefined > 0) {\r\n\t\t\t\t\tmin = this._minDefined;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmin = min;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._maxDefined > 0) {\r\n\t\t\t\t\tmax = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\r\n\t\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\r\n\t\t\t}\r\n\t\t}\r\n\t\t// repeat diff, exponent and power again with rounded values\r\n\t\t//difference = this.adjustDifference(min, max);\r\n\t\t/*\r\n\r\n\t\t\t\tif(min > initialMin){\r\n\t\t\t\t\tmin = initialMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(max < initialMax){\r\n\t\t\t\t\tmax = initialMax;\r\n\t\t\t\t}\r\n\t\t*/\r\n\r\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\t\tpower = Math.pow(10, Math.floor(exponent));\r\n\t\tpower = power / 10;\r\n\r\n\t\t// approximate difference between two grid lines\r\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\r\n\r\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n\r\n\t\t// TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution\r\n\t\t// the step should divide by  2, 5, and 10.\r\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\r\n\r\n\r\n\t\tif (stepDivisor > 5) {\r\n\t\t\tstepDivisor = 10;\r\n\t\t}\r\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\r\n\t\t\tstepDivisor = 5;\r\n\t\t}\r\n\r\n\t\t// now get real step\r\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n\r\n\t\tif (this.maxPrecision < Number.MAX_VALUE && step != $math.ceil(step, this.maxPrecision)) {\r\n\t\t\tstep = $math.ceil(step, this.maxPrecision);\r\n\t\t}\r\n\r\n\t\tlet decCount: number = 0;\r\n\t\t// in case numbers are smaller than 1\r\n\t\tif (stepPower < 1) {\r\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n\t\t\t// round step\r\n\t\t\tstep = $math.round(step, decCount);\r\n\t\t}\r\n\t\tif (!this.logarithmic) {\r\n\t\t\t// final min and max\r\n\t\t\tlet minCount = Math.floor(min / step);\r\n\r\n\t\t\tmin = $math.round(step * minCount, decCount);\r\n\r\n\t\t\tlet maxCount: number;\r\n\r\n\t\t\tif (!strictMode) {\r\n\t\t\t\tmaxCount = Math.ceil(max / step);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmaxCount = Math.floor(max / step);\r\n\t\t\t}\r\n\r\n\t\t\tif (maxCount == minCount) {\r\n\t\t\t\tmaxCount++;\r\n\t\t\t}\r\n\r\n\t\t\tmax = $math.round(step * maxCount, decCount);\r\n\r\n\t\t\tif (max < initialMax) {\r\n\t\t\t\tmax = max + step;\r\n\t\t\t}\r\n\r\n\t\t\tif (min > initialMin) {\r\n\t\t\t\tmin = min - step;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * A minimum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Min value\r\n\t */\r\n\tpublic set min(value: number | undefined) {\r\n\t\tif (this._minDefined != value) {\r\n\t\t\tthis._minDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min value\r\n\t */\r\n\tpublic get min(): number | undefined {\r\n\t\tlet min = this._minAdjusted;\r\n\t\tif (!$type.isNumber(min)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\t\treturn min;\r\n\t}\r\n\r\n\t/**\r\n\t * Min value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Min value\r\n\t */\r\n\tpublic get minDefined(): number {\r\n\t\treturn this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Max value as defined by user's code, not auto-calculated.\r\n\t *\r\n\t * @readonly\r\n\t * @return Man value\r\n\t */\r\n\tpublic get maxDefined(): number {\r\n\t\treturn this._maxDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting minimum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 50 to 200 because\r\n\t * we asked to expand minimum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMin(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMin\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get extraMin(): number {\r\n\t\treturn this.getPropertyValue(\"extraMin\");\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting maximum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 100 to 250 because\r\n\t * we asked to expand maximum value by 50% (0.5).\r\n\t *\r\n\t * NOTE: this setting is not compatible with `strictMinMax`.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMax(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMax\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min multiplier\r\n\t */\r\n\tpublic get extraMax(): number {\r\n\t\treturn this.getPropertyValue(\"extraMax\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Current calculated delta in values between two adjacent grid lines (step).\r\n\t *\r\n\t * This is a read-only value and cannot be used to set actual step.\r\n\t *\r\n\t * @readonly\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels\r\n\t * @return [description]\r\n\t */\r\n\tpublic get step(): number {\r\n\t\treturn this._step;\r\n\t}\r\n\r\n\t/**\r\n\t * A maximum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param value  Max value\r\n\t */\r\n\tpublic set max(value: number | undefined) {\r\n\t\tif (this._maxDefined != value) {\r\n\t\t\tthis._maxDefined = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max value\r\n\t */\r\n\tpublic get max(): number | undefined {\r\n\t\tlet max = this._maxAdjusted;\r\n\t\tif (!$type.isNumber(max)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * By default the axis will adjust precision of all numbers to match number\r\n\t * of decimals in all its labels, e.g.: `1.0`, `1.5`, `2.0`.\r\n\t *\r\n\t * To disable set `adjustLabelPrecision` to `false`, to use whatever other\r\n\t * precision or number format settings are set.\r\n\t *\r\n\t * IMPORTANT: This setting will be ignored if your number format uses\r\n\t * modifiers, e.g. `\"#a\"`.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.14\r\n\t * @param  value  Adjust precision\r\n\t */\r\n\tpublic set adjustLabelPrecision(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"adjustLabelPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Adjust precision\r\n\t */\r\n\tpublic get adjustLabelPrecision(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustLabelPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Used for the Series to register itself as the user of this Axis.\r\n\t *\r\n\t * This will also decorate both the Series and Axis with event handlers, used\r\n\t * to redraw on Axis position/zoom change.\r\n\t *\r\n\t * A disposer for those events is returned, so that they can be disposed\r\n\t * together with Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param series  Series\r\n\t * @return Disposer for events\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\treturn new MultiDisposer([\r\n\t\t\tsuper.registerSeries(series),\r\n\r\n\t\t\tseries.events.on(\"extremeschanged\", this.handleExtremesChange, this, false),\r\n\t\t\tseries.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false),\r\n\t\t\tthis.events.on(\"extremeschanged\", series.invalidate, series, false)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * Perform tasks after Axis zoom.\r\n\t */\r\n\tprotected handleSelectionExtremesChange(): void {\r\n\r\n\t\tlet selectionMin: number;\r\n\t\tlet selectionMax: number;\r\n\r\n\t\tlet allHidden: boolean = true;\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.ignoreMinMax && !series.isHidden && !series.outOfRange) {\r\n\r\n\t\t\t\tif (series.visible && !series.isHiding) {\r\n\t\t\t\t\tallHidden = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet seriesSelectionMin: number = series.selectionMin(this);\r\n\t\t\t\tlet seriesSelectionMax: number = series.selectionMax(this);\r\n\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMin)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMin) || (seriesSelectionMin < selectionMin)) {\r\n\t\t\t\t\t\tselectionMin = seriesSelectionMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// check max\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMax)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMax) || (seriesSelectionMax > selectionMax)) {\r\n\t\t\t\t\t\tselectionMax = seriesSelectionMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.includeRangesInMinMax) {\r\n\t\t\tthis.axisRanges.each((range) => {\r\n\t\t\t\tif (!range.ignoreMinMax) {\r\n\t\t\t\t\tlet minValue = $math.min(range.value, range.endValue);\r\n\t\t\t\t\tlet maxValue = $math.max(range.value, range.endValue);\r\n\r\n\t\t\t\t\tif (minValue < selectionMin) {\r\n\t\t\t\t\t\tselectionMin = minValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (maxValue > selectionMax) {\r\n\t\t\t\t\t\tselectionMax = maxValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// this is not good, as if date axis is initially zoomed, selection of y axis is reset to 0, 1 at the end of this method\r\n\t\t//$iter.each(this.series.iterator(), (series) => {\r\n\t\t//\tif (!series.appeared) {\r\n\t\t//\t\tallHidden = true;\r\n\t\t//\t}\r\n\t\t//})\r\n\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMin = this.min;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMin = this._minReal;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMax = this.max;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.strictMinMax) {\r\n\t\t\tselectionMax = this._maxReal;\r\n\t\t}\r\n\r\n\t\tif (selectionMin == selectionMax) {\r\n\r\n\t\t\tselectionMin -= this._deltaMinMax;\r\n\t\t\tselectionMax += this._deltaMinMax;\r\n\r\n\t\t\tlet minMaxStep2 = this.adjustMinMax(selectionMin, selectionMax, 0, this._gridCount, this.strictMinMax);\r\n\t\t\tselectionMin = minMaxStep2.min;\r\n\t\t\tselectionMax = minMaxStep2.max;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tselectionMin -= (selectionMax - selectionMin) * this.extraMin;\r\n\t\tselectionMax += (selectionMax - selectionMin) * this.extraMax;\r\n\r\n\t\tselectionMin = $math.fitToRange(selectionMin, this.min, this.max);\r\n\t\tselectionMax = $math.fitToRange(selectionMax, this.min, this.max);\r\n\r\n\t\t// do it for the second time !important\r\n\t\tdif = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tminMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);\r\n\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tselectionMin = $math.max(selectionMin, this._minDefined);\r\n\t\t\tselectionMax = $math.min(selectionMax, this._maxDefined);\r\n\t\t}\r\n\t\tlet step = minMaxStep.step;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tminMaxStep = this.syncAxes(selectionMin, selectionMax, step)\r\n\t\t\tselectionMin = minMaxStep.min;\r\n\t\t\tselectionMax = minMaxStep.max;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t\tstep = minMaxStep.step;\r\n\r\n\t\t// needed because of grouping\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\r\n\t\tlet start: number = this.valueToPosition(selectionMin);\r\n\t\tlet end: number = this.valueToPosition(selectionMax);\r\n\r\n\t\t// in case all series are hidden or hiding, full zoomout\r\n\t\tif (allHidden && !this.syncWithAxis) {\r\n\t\t\tstart = 0;\r\n\t\t\tend = 1;\r\n\t\t}\r\n\r\n\t\tlet declination = 0;\r\n\t\tif (this.syncWithAxis) {\r\n\t\t\tdeclination = 5;\r\n\t\t\tthis.setCache(selectionMin + \"-\" + selectionMax, step);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._step != step || this._minZoomed != selectionMin || this._maxZoomed != selectionMax) {\r\n\t\t\t\tthis._dsc = true;\r\n\t\t\t}\r\n\t\t\tthis._step = step;\r\n\t\t\tthis._minZoomed = selectionMin;\r\n\t\t\tthis._maxZoomed = selectionMax;\r\n\t\t}\r\n\r\n\r\n\t\tif (!this.keepSelection) {\r\n\t\t\tthis.zoom({ start: start, end: end }, false, false, declination);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether to blindly use exact `min` and `max` values set by user\r\n\t * when generating Axis scale.\r\n\t *\r\n\t * If not set, the Axis might slightly adjust those values to accomodate a\r\n\t * better looking grid.\r\n\t *\r\n\t * NOTE: if `min` and `max` are not set, setting `strictMinMax` to `true`\r\n\t * will result in fixing the scale of the axis to actual lowest and highest\r\n\t * values in the series within currently selected scope.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use exact values?\r\n\t */\r\n\tpublic set strictMinMax(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"strictMinMax\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use exact values?\r\n\t */\r\n\tpublic get strictMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"strictMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this axis should use a logarithmic scale.\r\n\t *\r\n\t * Please note that logarithmic axis can **only** accommodate values bigger\r\n\t * than zero.\r\n\t *\r\n\t * Having zero or negative values will result in error and failure of the\r\n\t * whole chart.\r\n\t *\r\n\t * @param value Logarithmic scale?\r\n\t */\r\n\tpublic set logarithmic(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"logarithmic\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Logarithmic scale?\r\n\t */\r\n\tpublic get logarithmic(): boolean {\r\n\t\treturn this.getPropertyValue(\"logarithmic\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if a current selection (zoom) should be kept across data updates.\r\n\t *\r\n\t * If your axis is zoomed while chart's data is updated, the axis will try\r\n\t * to retain the same start and end values.\r\n\t *\r\n\t * You can also use this to initially pre-zoom axis:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.keepSelection = true;\r\n\t * axis.start = 0.5;\r\n\t * axis.end = 0.7;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"keepSelection\": true,\r\n\t *     \"start\": 0.5,\r\n\t *     \"end\": 0.7\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will start the chart zoomed from the middle of the actual scope\r\n\t * to 70%.\r\n\t *\r\n\t * @since 4.1.1\r\n\t * @default false\r\n\t * @param  value  Preseve zoom after data update?\r\n\t */\r\n\tpublic set keepSelection(value: boolean) {\r\n\t\tthis.setPropertyValue(\"keepSelection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Preseve zoom after data update?\r\n\t */\r\n\tpublic get keepSelection(): boolean {\r\n\t\treturn this.getPropertyValue(\"keepSelection\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, values of axis ranges will be included when calculating\r\n\t * range of values / scale of the [[ValueAxis]].\r\n\t *\r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Include ranges?\r\n\t */\r\n\tpublic set includeRangesInMinMax(value: boolean) {\r\n\t\tthis.setPropertyValue(\"includeRangesInMinMax\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Include ranges?\r\n\t */\r\n\tpublic get includeRangesInMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"includeRangesInMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of decimals to allow when placing grid lines and labels\r\n\t * on axis.\r\n\t *\r\n\t * Set it to `0` (zero) to force integer-only axis labels.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return max precision\r\n\t */\r\n\tpublic get maxPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"maxPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * This setting allows using bigger precision for numbers displayed in axis\r\n\t * tooltip.\r\n\t *\r\n\t * Please note that this setting indicates additional decimal places to\r\n\t * automatically-calculated axis number precision.\r\n\t *\r\n\t * So if your axis displays numbers like 0.1, 0.2, etc. (one decimal place),\r\n\t * and you set `extraTooltipPrecision = 1`, tooltips will display numbers\r\n\t * like 0.12, 0.25, etc. (two decimal places).\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.8.3\r\n\t * @param  value  Extra decimals\r\n\t */\r\n\tpublic set extraTooltipPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraTooltipPrecision\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Extra decimals\r\n\t */\r\n\tpublic get extraTooltipPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"extraTooltipPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates axis data items when series extremes change\r\n\t */\r\n\tprotected handleExtremesChange() {\r\n\t\tthis._extremesChanged = true;\r\n\t\tthis.getMinMax();\r\n\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tlet mw = 0;\r\n\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tif (dataItem.label && dataItem.label.pixelWidth > mw) {\r\n\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  ?\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionX(dataItem, key, location, stackKey, range)).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the X coordinate for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  ?\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueX\";\r\n\t\t}\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Y coordinate for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\treturn this.renderer.positionToPoint(this.getPositionY(dataItem, key, location, stackKey, range)).y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @param  stackKey  Stack ID\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start     [description]\r\n\t * @param end       [description]\r\n\t * @param location  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: number, end: number, location?: number): string {\r\n\t\tlet startPosition: number = this.valueToPosition(start);\r\n\t\tlet endPosition: number = this.valueToPosition(end);\r\n\r\n\t\treturn this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a axis tooltip, based on specific position within\r\n\t * axis.\r\n\t *\r\n\t * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (numeric value)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet value: number = $math.round(this.positionToValue(position), this._stepDecimalPlaces + this.extraTooltipPrecision);\r\n\t\tlet valueStr = this.tooltip.numberFormatter.format(value);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn valueStr;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", valueStr);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axis to specific values.\r\n\t *\r\n\t * @param startValue      Start value\r\n\t * @param endValue        End value\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToValues(startValue: number, endValue: number, skipRangeEvent?: boolean, instantly?: boolean): void {\r\n\t\tlet start: number = (startValue - this.min) / (this.max - this.min);\r\n\t\tlet end: number = (endValue - this.min) / (this.max - this.min);\r\n\r\n\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t}\r\n\r\n\t/**\r\n\t * A smallest value in axis scale within current zoom.\r\n\t *\r\n\t * @return Min zoom value\r\n\t */\r\n\tpublic get minZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.max(this.min, this._minZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._minZoomed\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A biggest value in axis scale within current zoom.\r\n\t * @return [description]\r\n\t */\r\n\tpublic get maxZoomed(): number {\r\n\t\tif (!this.syncWithAxis) {\r\n\t\t\treturn $math.min(this.max, this._maxZoomed);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._maxZoomed;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positioning of Axis breaks after something changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic fixAxisBreaks(): void {\r\n\r\n\t\tsuper.fixAxisBreaks();\r\n\t\tlet axisBreaks = this._axisBreaks;\r\n\t\tif (axisBreaks && axisBreaks.length > 0) {\r\n\t\t\t// process breaks\r\n\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t// break difference\r\n\t\t\t\tlet axisBreakDif: number = endValue - startValue;\r\n\t\t\t\tlet axisBreakGridCount: number = Math.ceil(axisBreakDif * axisBreak.breakSize) * this._gridCount / (this.max - this.min);\r\n\r\n\t\t\t\t// calculate min, max and step for axis break\r\n\t\t\t\tlet breakMinMaxStep = this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount, true);\r\n\r\n\t\t\t\taxisBreak.adjustedStep = breakMinMaxStep.step;\r\n\t\t\t\taxisBreak.adjustedMin = breakMinMaxStep.min;\r\n\t\t\t\taxisBreak.adjustedMax = breakMinMaxStep.max;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\tlet value: number = this.positionToValue(position);\r\n\t\treturn this.numberFormatter.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific value\r\n\t *\r\n\t * @param value Value\r\n\t */\r\n\tpublic showTooltipAt(value: number) {\r\n\t\tthis.showTooltipAtPosition(this.valueToPosition(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.min = source.min;\r\n\t\tthis.max = source.max;\r\n\t\tthis.calculateTotals = source.calculateTotals;\r\n\t\tthis._baseValue = source.baseValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Enables syncing of grid with another axis.\r\n\t *\r\n\t * To enable, set to a reference of the other `ValueAxis`. This axis will try\r\n\t * to maintain its scale in such way that its grid matches target axis grid.\r\n\t *\r\n\t * IMPORTANT #1: At this stage it's an experimental feature. Use it at your\r\n\t * own risk, as it may not work in 100% of the scenarios.\r\n\t *\r\n\t * IMPORTANT #2: `syncWithAxis` is not compatible with `strictMinMax` and\r\n\t * `sequencedInterpolation` settings.\r\n\t * \r\n\t * IMPORTANT #3: `syncWithAxis` is not compatible with scrollbars. Make sure\r\n\t * you do not add a scrollbar in the same direction as synced axes. For\r\n\t * example, if you have vertical synced axes, do not add `scrollbarY` on\r\n\t * your chart. It will create anomalies when used.\r\n\t *\r\n\t * IMPORTANT #4: `syncWithAxis` is not compatible with `XYCursor` if it has\r\n\t * its `behavior` set to either `zoomY` or `zoomXY`.\r\n\t *\r\n\t * @since 4.8.1\r\n\t * @param  axis  Target axis\r\n\t */\r\n\tpublic set syncWithAxis(axis: ValueAxis) {\r\n\t\tif (this.setPropertyValue(\"syncWithAxis\", axis, true)) {\r\n\t\t\tif (axis) {\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"extremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis._disposers.push(axis.events.on(\"startendchanged\", this.handleSelectionExtremesChange, this, false));\r\n\t\t\t\tthis.events.on(\"shown\", this.handleSelectionExtremesChange, this, false);\r\n\t\t\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\t\t\tthis.clearCache();\r\n\t\t\t\t\tthis._disposers.push(registry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t}))\r\n\t\t\t\t}, this, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target axis\r\n\t */\r\n\tpublic get syncWithAxis(): ValueAxis {\r\n\t\treturn this.getPropertyValue(\"syncWithAxis\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set, zero values will be treated as this value.\r\n\t *\r\n\t * It is useful if you need to use data with zero-values on a logarithmic\r\n\t * axis scale.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Zero replacement value\r\n\t */\r\n\tpublic set treatZeroAs(value: number) {\r\n\t\tthis.setPropertyValue(\"treatZeroAs\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zero replacement value\r\n\t */\r\n\tpublic get treatZeroAs(): number {\r\n\t\treturn this.getPropertyValue(\"treatZeroAs\");\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs with a target axis.\r\n\t *\r\n\t * @param  min  Min\r\n\t * @param  max  Max\r\n\t * @param  step Step\r\n\t */\r\n\tprotected syncAxes(min: number, max: number, step: number) {\r\n\t\tlet axis = this.syncWithAxis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tif (!$type.isNumber(min)) {\r\n\t\t\t\tmin = this.min;\r\n\t\t\t}\r\n\t\t\tif (!$type.isNumber(max)) {\r\n\t\t\t\tmax = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(step)) {\r\n\t\t\t\tstep = this._step;\r\n\t\t\t}\r\n\r\n\t\t\tlet count: number = Math.round((axis.maxZoomed - axis.minZoomed) / axis.step);\r\n\t\t\tlet currentCount = Math.round((max - min) / step);\r\n\r\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n\t\t\t\tlet synced = false;\r\n\t\t\t\tlet c = 0\r\n\t\t\t\tlet diff = (max - min) * 0.01;\r\n\t\t\t\tlet omin = min;\r\n\t\t\t\tlet omax = max;\r\n\t\t\t\tlet ostep = step;\r\n\r\n\t\t\t\twhile (synced != true) {\r\n\t\t\t\t\tsynced = this.checkSync(omin, omax, ostep, count);\r\n\t\t\t\t\tc++;\r\n\t\t\t\t\tif (c > 1000) {\r\n\t\t\t\t\t\tsynced = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!synced) {\r\n\t\t\t\t\t\t//omin = min - diff * c;\r\n\r\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\r\n\t\t\t\t\t\t\tomin = min - diff * c;\r\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\r\n\t\t\t\t\t\t\t\tomin = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tomax = max + diff * c;\r\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\r\n\t\t\t\t\t\t\t\tomax = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet minMaxStep = this.adjustMinMax(omin, omax, omax - omin, this._gridCount, true);\r\n\t\t\t\t\t\tomin = minMaxStep.min;\r\n\t\t\t\t\t\tomax = minMaxStep.max;\r\n\t\t\t\t\t\tostep = minMaxStep.step;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmin = omin;\r\n\t\t\t\t\t\tmax = omax;\r\n\t\t\t\t\t\tstep = ostep;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if axis needs to be resunced with some other axis.\r\n\t */\r\n\tprotected checkSync(min: number, max: number, step: number, count: number): boolean {\r\n\t\tlet currentCount = (max - min) / step;\r\n\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.syncWithAxis) && $type.isString(config.syncWithAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.syncWithAxis)) {\r\n\t\t\t\t\tconfig.syncWithAxis = this.map.getKey(config.syncWithAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[ValueAxis] No axis with id \\\"\" + config.syncWithAxis + \"\\\" found for `syncWithAxis`\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxis\"] = ValueAxis;\r\nregistry.registeredClasses[\"ValueAxisDataItem\"] = ValueAxisDataItem;\r\n","/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { ValueAxisBreak, IValueAxisBreakProperties, IValueAxisBreakAdapters, IValueAxisBreakEvents } from \"./ValueAxisBreak\";\r\nimport { DateAxis } from \"./DateAxis\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[DateAxisBreak]].\r\n */\r\nexport interface IDateAxisBreakProperties extends IValueAxisBreakProperties {\r\n\r\n\t/**\r\n\t * A `Date` break starts on.\r\n\t */\r\n\tstartDate?: Date;\r\n\r\n\t/**\r\n\t * A `Date` break ends on.\r\n\t */\r\n\tendDate?: Date;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[DateAxisBreak]]\r\n */\r\nexport interface IDateAxisBreakEvents extends IValueAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[DateAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDateAxisBreakAdapters extends IValueAxisBreakAdapters, IDateAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class DateAxisBreak extends ValueAxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IDateAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDateAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDateAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: DateAxis;\r\n\r\n\t/**\r\n\t * [gridInterval description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic gridInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * [gridDate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic gridDate: Date;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DateAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting date for the break.\r\n\t *\r\n\t * @param value Start date\r\n\t */\r\n\tpublic set startDate(value: Date) {\r\n\t\tif (this.setPropertyValue(\"startDate\", value)) {\r\n\t\t\tthis.startValue = value.getTime();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start date\r\n\t */\r\n\tpublic get startDate(): Date {\r\n\t\treturn this.getPropertyValue(\"startDate\");\r\n\t}\r\n\r\n\t/**\r\n\t * Ending date for the break.\r\n\t *\r\n\t * @param value End date\r\n\t */\r\n\tpublic set endDate(value: Date) {\r\n\t\tif (this.setPropertyValue(\"endDate\", value)) {\r\n\t\t\tthis.endValue = value.getTime();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End date\r\n\t */\r\n\tpublic get endDate(): Date {\r\n\t\treturn this.getPropertyValue(\"endDate\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;\r\n","/**\r\n * DateAxis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxis, ValueAxisDataItem, IValueAxisProperties, IValueAxisDataFields, IValueAxisAdapters, IValueAxisEvents } from \"./ValueAxis\";\r\nimport { AxisItemLocation } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { LineSeriesDataItem } from \"../series/LineSeries\";\r\nimport { TimeUnit } from \"../../core/defs/TimeUnit\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { IMinMaxStep } from \"./ValueAxis\";\r\nimport { DateAxisBreak } from \"./DateAxisBreak\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\nimport { DateFormatter } from \"../../core/formatters/DateFormatter\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data item for [[DateAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class DateAxisDataItem extends ValueAxisDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: DateAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DateAxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.values.date = {};\r\n\t\tthis.values.endDate = {};\r\n\t}\r\n\r\n\t/**\r\n\t * Date position of the data item.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set date(date: Date) {\r\n\t\tthis.setDate(\"date\", date);\r\n\t\tthis.value = date.getTime();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get date(): Date {\r\n\t\treturn this.dates[\"date\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * End date for data item.\r\n\t *\r\n\t * @param date End date\r\n\t */\r\n\tpublic set endDate(date: Date) {\r\n\t\tthis.setDate(\"endDate\", date);\r\n\t\tthis.endValue = date.getTime();\r\n\t}\r\n\r\n\t/**\r\n\t * @return End date\r\n\t */\r\n\tpublic get endDate(): Date {\r\n\t\treturn this.dates[\"endDate\"];\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[DateAxis]].\r\n */\r\nexport interface IDateAxisDataFields extends IValueAxisDataFields {\r\n\r\n\t/**\r\n\t * Date.\r\n\t */\r\n\tdate?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[DateAxis]].\r\n */\r\nexport interface IDateAxisProperties extends IValueAxisProperties {\r\n\r\n\t/**\r\n\t * If enabled, axis will automatically collapse empty (without data points)\r\n\t * periods of time, i.e. weekends.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tskipEmptyPeriods?: boolean;\r\n\r\n\t/**\r\n\t * Use `periodChangeDateFormats` to apply different formats to the first\r\n\t * label in bigger time unit.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Use different format for period beginning?\r\n\t */\r\n\tmarkUnitChange?: boolean;\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tsnapTooltip?: boolean;\r\n\r\n\t/**\r\n\t * A special date format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t */\r\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\r\n\r\n\t/**\r\n\t * Indicates if data should be aggregated to composide data items if there\r\n\t * are more data items in selected range than `groupCount`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tgroupData?: boolean;\r\n\r\n\t/**\r\n\t * Indicates threshold of data items in selected range at which to start\r\n\t * aggregating data items if `groupData = true`.\r\n\t * \r\n\t * @default 200\r\n\t * @since 4.7.0\r\n\t */\r\n\tgroupCount?: number;\r\n\r\n\t/**\r\n\t * Disables automatic selection of data grouping intervals and always uses\r\n\t * `groupInterval` if set. Works only if `groupData = true`.\r\n\t * \r\n\t * @since 4.9.24\r\n\t */\r\n\tgroupInterval?: ITimeInterval;\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data by applying specific offset\r\n\t * in minutes.\r\n\t *\r\n\t * IMPORTANT: do not set `timezoneOffset` on both `DateAxis` and `dateFormatter`. It\r\n\t * will skew your results by applying offset twice.\r\n\t *\r\n\t * @since 4.8.5\r\n\t */\r\n\ttimezoneOffset?: number;\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data to specific named timezone,\r\n\t * e.g. `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`, etc.\r\n\t *\r\n\t * IMPORTANT: do not set `timezone` on both `DateAxis` and `dateFormatter`. It\r\n\t * will skew your results by applying timezone twice.\r\n\t * \r\n\t * @since 4.10.1\r\n\t */\r\n\ttimezone?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[DateAxis]].\r\n */\r\nexport interface IDateAxisEvents extends IValueAxisEvents {\r\n\t/**\r\n\t * Invoked when data grouping is on and grouping period is changed. You can find our the period via dateAxis.currentDataSetId property.\r\n\t */\r\n\tgroupperiodchanged: IDateAxisEvents;\r\n}\r\n\r\n/**\r\n * Defines adapters for [[DateAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDateAxisAdapters extends IValueAxisAdapters, IDateAxisProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a date/time-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DateAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IDateAxisEvents} for a list of available Events\r\n * @see {@link IDateAxisAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/} got `DateAxis` documention\r\n * @important\r\n */\r\nexport class DateAxis<T extends AxisRenderer = AxisRenderer> extends ValueAxis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IDateAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IDateAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDateAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDateAxisEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: DateAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: DateAxisBreak;\r\n\r\n\tprotected _gapBreaks: boolean = false;\r\n\r\n\t/**\r\n\t * A list of date/time intervals for Date axis.\r\n\t *\r\n\t * This define various granularities available for the axis. For example\r\n\t * if you have an axis spanning an hour, and space for 6 grid lines / labels\r\n\t * the axis will choose the granularity of 10 minutes, displaying a label\r\n\t * every 10 minutes.\r\n\t *\r\n\t * Default intervals:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *  { timeUnit: \"millisecond\", count: 1 },\r\n\t *  { timeUnit: \"millisecond\", count: 5 },\r\n\t *  { timeUnit: \"millisecond\", count: 10 },\r\n\t *  { timeUnit: \"millisecond\", count: 50 },\r\n\t *  { timeUnit: \"millisecond\", count: 100 },\r\n\t *  { timeUnit: \"millisecond\", count: 500 },\r\n\t *  { timeUnit: \"second\", count: 1 },\r\n\t *  { timeUnit: \"second\", count: 5 },\r\n\t *  { timeUnit: \"second\", count: 10 },\r\n\t *  { timeUnit: \"second\", count: 30 },\r\n\t *  { timeUnit: \"minute\", count: 1 },\r\n\t *  { timeUnit: \"minute\", count: 5 },\r\n\t *  { timeUnit: \"minute\", count: 10 },\r\n\t *  { timeUnit: \"minute\", count: 30 },\r\n\t *  { timeUnit: \"hour\", count: 1 },\r\n\t *  { timeUnit: \"hour\", count: 3 },\r\n\t *  { timeUnit: \"hour\", count: 6 },\r\n\t *  { timeUnit: \"hour\", count: 12 },\r\n\t *  { timeUnit: \"day\", count: 1 },\r\n\t *  { timeUnit: \"day\", count: 2 },\r\n\t *  { timeUnit: \"day\", count: 3 },\r\n\t *  { timeUnit: \"day\", count: 4 },\r\n\t *  { timeUnit: \"day\", count: 5 },\r\n\t *  { timeUnit: \"week\", count: 1 },\r\n\t *  { timeUnit: \"month\", count: 1 },\r\n\t *  { timeUnit: \"month\", count: 2 },\r\n\t *  { timeUnit: \"month\", count: 3 },\r\n\t *  { timeUnit: \"month\", count: 6 },\r\n\t *  { timeUnit: \"year\", count: 1 },\r\n\t *  { timeUnit: \"year\", count: 2 },\r\n\t *  { timeUnit: \"year\", count: 5 },\r\n\t *  { timeUnit: \"year\", count: 10 },\r\n\t *  { timeUnit: \"year\", count: 50 },\r\n\t *  { timeUnit: \"year\", count: 100 }\r\n\t * ]\r\n\t * ```\r\n\t */\r\n\tpublic gridIntervals: List<ITimeInterval> = new List<ITimeInterval>();\r\n\r\n\t/**\r\n\t * If data aggregation is enabled by setting Axis' `groupData = true`, the\r\n\t * chart will try to aggregate data items into grouped data items.\r\n\t *\r\n\t * If there are more data items in selected period than `groupCount`, it will\r\n\t * group data items into bigger period.\r\n\t *\r\n\t * For example seconds might be grouped into 10-second aggregate data items.\r\n\t *\r\n\t * This setting indicates what group intervals can the chart group to.\r\n\t *\r\n\t * Default intervals:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { timeUnit: \"millisecond\", count: 1},\r\n\t *   { timeUnit: \"millisecond\", count: 10 },\r\n\t *   { timeUnit: \"millisecond\", count: 100 },\r\n\t *   { timeUnit: \"second\", count: 1 },\r\n\t *   { timeUnit: \"second\", count: 10 },\r\n\t *   { timeUnit: \"minute\", count: 1 },\r\n\t *   { timeUnit: \"minute\", count: 10 },\r\n\t *   { timeUnit: \"hour\", count: 1 },\r\n\t *   { timeUnit: \"day\", count: 1 },\r\n\t *   { timeUnit: \"week\", count: 1 },\r\n\t *   { timeUnit: \"month\", count: 1 },\r\n\t *   { timeUnit: \"year\", count: 1 }\r\n\t * ]\r\n\t * ```\r\n\t * `groupData = true` does not work in combination with `skipEmptyPeriods = true`.\r\n\t * \r\n\t * @since 4.7.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t */\r\n\tpublic groupIntervals: List<ITimeInterval> = new List<ITimeInterval>();\r\n\r\n\t/**\r\n\t * A collection of date formats to use when formatting different time units\r\n\t * on Date/time axis.\r\n\t *\r\n\t * Actual defaults will depend on the language locale set for the chart.\r\n\t *\r\n\t * To override format for a specific time unit, say days, you need to set\r\n\t * the appropriate key to a format string. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.dateFormats.setKey(\"day\", \"MMMM d, yyyy\");\r\n\t * ```\r\n\t * ```JSON\r\n\t * \"xAxes\": [{\r\n\t *   \"type\": \"DateAxis\",\r\n\t *   \"dateFormats\": {\r\n\t *     \"day\": \"MMMM d, yyyy\"\r\n\t *   }\r\n\t * }]\r\n\t * ```\r\n\t *\r\n\t * @see {@link DateFormatter}\r\n\t */\r\n\tpublic dateFormats: Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions> = new Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions>();\r\n\r\n\t/**\r\n\t * These formats are applied to labels that are first in a larger unit.\r\n\t *\r\n\t * For example, if we have a DateAxis with days on it, the first day of month\r\n\t * indicates a break in month - a start of the bigger period.\r\n\t *\r\n\t * For those labels, `periodChangeDateFormats` are applied instead of\r\n\t * `dateFormats`.\r\n\t *\r\n\t * This allows us implement convenient structures, like instead of:\r\n\t *\r\n\t * `Jan 1 - Jan 2 - Jan 3 - ...`\r\n\t *\r\n\t * We can have:\r\n\t *\r\n\t * `Jan - 1 - 2 - 3 - ...`\r\n\t *\r\n\t * This can be disabled by setting `markUnitChange = false`.\r\n\t */\r\n\tpublic periodChangeDateFormats: Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions> = new Dictionary<TimeUnit, string | Intl.DateTimeFormatOptions>();\r\n\r\n\t/**\r\n\t * At which intervals grid elements are displayed.\r\n\t */\r\n\tprotected _gridInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * [_intervalDuration description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _intervalDuration: number;\r\n\r\n\t/**\r\n\t * [_gridDate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _gridDate: Date;\r\n\r\n\t/**\r\n\t * [_nextGridUnit description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _nextGridUnit: TimeUnit;\r\n\r\n\t/**\r\n\t * User-defined granularity of data.\r\n\t */\r\n\tprotected _baseInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * This is base interval of the main data set.\r\n\t */\r\n\tprotected _mainBaseInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * This is base interval of the currently selected data set.\r\n\t */\r\n\tprotected _groupInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * Actual interval (granularity) derived from the actual data.\r\n\t */\r\n\tprotected _baseIntervalReal: ITimeInterval = { timeUnit: \"day\", count: 1 };\r\n\r\n\t/**\r\n\t */\r\n\tprotected _prevSeriesTime: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * [_minDifference description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _minDifference: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * A function which applies fills to axis cells.\r\n\t *\r\n\t * Default function fills every second fill. You can set this to a function\r\n\t * that follows some other logic.\r\n\t *\r\n\t * Function should accept a [[DateAxisDataItem]] and modify its `axisFill`\r\n\t * property accordingly.\r\n\t */\r\n\tpublic fillRule(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet value = dataItem.value;\r\n\t\tlet axis = dataItem.component;\r\n\t\tlet gridInterval = axis._gridInterval;\r\n\t\tlet gridDuration = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n\r\n\t\tif (Math.round((value - axis.min) / gridDuration) / 2 == Math.round(Math.round((value - axis.min) / gridDuration) / 2)) {\r\n\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _firstWeekDay: number = 1;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _df: DateFormatter;\r\n\r\n\t/**\r\n\t * A collection of start timestamps to use as axis' min timestamp for\r\n\t * particular data item item periods.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @readonly\r\n\t */\r\n\tpublic groupMin: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * A collection of start timestamps to use as axis' max timestamp for\r\n\t * particular data item item periods.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @readonly\r\n\t */\r\n\tpublic groupMax: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * Date of the last shown axis tooltip.\r\n\t *\r\n\t * @since 4.9.7\r\n\t * @readonly\r\n\t */\r\n\tpublic tooltipDate: Date;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"DateAxis\";\r\n\r\n\t\tthis.setPropertyValue(\"markUnitChange\", true);\r\n\t\tthis.snapTooltip = true;\r\n\t\tthis.tooltipPosition = \"pointer\";\r\n\r\n\t\tthis.setPropertyValue(\"groupData\", false);\r\n\t\tthis.groupCount = 200;\r\n\r\n\t\tthis.events.on(\"parentset\", this.getDFFormatter, this, false);\r\n\r\n\t\t// Translatable defaults are applied in `applyInternalDefaults()`\r\n\t\t// ...\r\n\r\n\t\t// Define default intervals\r\n\t\tthis.gridIntervals.pushAll([\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t]);\r\n\r\n\t\tthis.groupIntervals.pushAll([\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t]);\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"date\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Set default date formats\r\n\t\tif (!this.dateFormats.hasKey(\"millisecond\")) {\r\n\t\t\tthis.dateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"second\")) {\r\n\t\t\tthis.dateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"minute\")) {\r\n\t\t\tthis.dateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"hour\")) {\r\n\t\t\tthis.dateFormats.setKey(\"hour\", this.language.translate(\"_date_hour\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"day\")) {\r\n\t\t\tthis.dateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"week\")) {\r\n\t\t\tthis.dateFormats.setKey(\"week\", this.language.translate(\"_date_day\"));\t // not a mistake\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"month\")) {\r\n\t\t\tthis.dateFormats.setKey(\"month\", this.language.translate(\"_date_month\"));\r\n\t\t}\r\n\t\tif (!this.dateFormats.hasKey(\"year\")) {\r\n\t\t\tthis.dateFormats.setKey(\"year\", this.language.translate(\"_date_year\"));\r\n\t\t}\r\n\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"millisecond\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"millisecond\", this.language.translate(\"_date_millisecond\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"second\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"second\", this.language.translate(\"_date_second\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"minute\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"minute\", this.language.translate(\"_date_minute\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"hour\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"hour\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"day\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"day\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"week\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"week\", this.language.translate(\"_date_day\"));\r\n\t\t}\r\n\t\tif (!this.periodChangeDateFormats.hasKey(\"month\")) {\r\n\t\t\tthis.periodChangeDateFormats.setKey(\"month\", this.language.translate(\"_date_month\") + \" \" + this.language.translate(\"_date_year\"));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new DateAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new DateAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis' data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\t\t// allows to keep selection of the same size\r\n\t\tlet start: number = this.start;\r\n\t\tlet end: number = this.end;\r\n\t\tlet baseDuration = this.baseDuration;\r\n\t\tlet periodCount: number = (this.max - this.min) / baseDuration;\r\n\r\n\t\tthis._firstWeekDay = this.getFirstWeekDay();\r\n\t\tthis.getDFFormatter();\r\n\r\n\t\tsuper.validateDataItems();\r\n\r\n\t\tlet mainBaseDuration = $time.getDuration(this.mainBaseInterval.timeUnit, this.mainBaseInterval.count)\r\n\r\n\t\tthis.maxZoomFactor = Math.max(1, (this.max - this.min) / mainBaseDuration);\r\n\r\n\t\tthis._deltaMinMax = this.baseDuration / 2;\r\n\r\n\t\t// allows to keep selection of the same size\r\n\t\tlet newPeriodCount: number = (this.max - this.min) / baseDuration;\r\n\t\tstart = start + (end - start) * (1 - periodCount / newPeriodCount);\r\n\t\tthis.zoom({ start: start, end: end }, false, true); // added instantlyto solve zoomout problem when we have axes gaps. @todo: check how this affects maxZoomFactor\r\n\t}\r\n\r\n\t/**\r\n\t * Handles process after zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Does nothing?\r\n\t */\r\n\tpublic handleSelectionExtremesChange(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates all positions, related to axis as per current zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic calculateZoom(): void {\r\n\t\tsuper.calculateZoom();\r\n\r\n\t\tlet difference = this.adjustDifference(this._minZoomed, this._maxZoomed);\r\n\t\tlet dataSetChanged = false;\r\n\r\n\t\t// if data has to be grouped, choose interval and set dataset\r\n\t\tif (this.groupData && $type.hasValue(difference)) {\r\n\t\t\tlet mainBaseInterval = this.mainBaseInterval;\r\n\r\n\t\t\tlet modifiedDifference = difference + (this.startLocation + (1 - this.endLocation)) * this.baseDuration;\r\n\t\t\tlet groupInterval: ITimeInterval;\r\n\t\t\tif (this.groupInterval) {\r\n\t\t\t\tgroupInterval = { ...this.groupInterval }\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgroupInterval = this.chooseInterval(0, modifiedDifference, this.groupCount, this.groupIntervals);\r\n\t\t\t\tif ($time.getDuration(groupInterval.timeUnit, groupInterval.count) < $time.getDuration(mainBaseInterval.timeUnit, mainBaseInterval.count)) {\r\n\t\t\t\t\tgroupInterval = { ...mainBaseInterval };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._groupInterval = groupInterval;\r\n\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\r\n\t\t\tif (this._currentDataSetId != newId) {\r\n\t\t\t\tthis._currentDataSetId = newId;\r\n\t\t\t\tthis.dispatch(\"groupperiodchanged\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\t\tif (series.setDataSet(this._currentDataSetId)) {\r\n\t\t\t\t\t\tdataSetChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet gridInterval: ITimeInterval = this.chooseInterval(0, difference, this._gridCount);\r\n\r\n\t\tif ($time.getDuration(gridInterval.timeUnit, gridInterval.count) < this.baseDuration) {\r\n\t\t\tgridInterval = { ...this.baseInterval };\r\n\t\t}\r\n\r\n\t\tthis._gridInterval = gridInterval;\r\n\t\tthis._nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t// the following is needed to avoid grid flickering while scrolling\r\n\t\tthis._intervalDuration = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n\t\tthis._gridDate = $time.round(\r\n\t\t\tnew Date(this.minZoomed - $time.getDuration(gridInterval.timeUnit, gridInterval.count)),\r\n\t\t\tgridInterval.timeUnit,\r\n\t\t\tgridInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tnew Date(this.min),\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\t// tell series start/end\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\tlet field = <keyof XYSeriesDataItem>series.getAxisField(this);\r\n\r\n\t\t\t\tlet minZoomed = $time.round(\r\n\t\t\t\t\tnew Date(this._minZoomed + this.baseDuration * 0.05),\r\n\t\t\t\t\tthis.baseInterval.timeUnit, this.baseInterval.count,\r\n\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t).getTime();\r\n\t\t\t\tlet minZoomedStr = minZoomed.toString();\r\n\t\t\t\tlet startDataItem = series.dataItemsByAxis.getKey(this.uid).getKey(minZoomedStr + series.currentDataSetId);\r\n\r\n\t\t\t\tlet startIndex: number = 0;\r\n\t\t\t\tif (this.start != 0) {\r\n\t\t\t\t\tif (startDataItem) {\r\n\t\t\t\t\t\tstartDataItem = this.findFirst(startDataItem, minZoomed, field);\r\n\t\t\t\t\t\tstartIndex = startDataItem.index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstartIndex = series.dataItems.findClosestIndex(this._minZoomed, (x) => <number>x[field], \"left\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 1 millisecond is removed so that if only first item is selected, it would not count in the second.\r\n\t\t\t\tlet baseInterval = this.baseInterval;\r\n\t\t\t\tlet maxZoomed = $time.add(\r\n\t\t\t\t\t$time.round(\r\n\t\t\t\t\t\tnew Date(this._maxZoomed),\r\n\t\t\t\t\t\tbaseInterval.timeUnit,\r\n\t\t\t\t\t\tbaseInterval.count,\r\n\t\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t),\r\n\t\t\t\t\tbaseInterval.timeUnit,\r\n\t\t\t\t\tbaseInterval.count,\r\n\t\t\t\t\tthis._df.utc\r\n\t\t\t\t).getTime();\r\n\r\n\t\t\t\tlet maxZoomedStr = maxZoomed.toString();\r\n\t\t\t\tlet endDataItem = series.dataItemsByAxis.getKey(this.uid).getKey(maxZoomedStr + series.currentDataSetId);\r\n\t\t\t\tlet endIndex: number = series.dataItems.length;\r\n\t\t\t\tif (this.end != 1) {\r\n\t\t\t\t\tif (endDataItem) {\r\n\t\t\t\t\t\tendIndex = endDataItem.index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmaxZoomed -= 1;\r\n\t\t\t\t\t\tendIndex = series.dataItems.findClosestIndex(maxZoomed, (x) => <number>x[field], \"right\");\r\n\t\t\t\t\t\t// not good - if end is in the gap, indexes go like 5,4,3,4,2,1\r\n\t\t\t\t\t\t//if (endIndex < series.dataItems.length) {\r\n\t\t\t\t\t\tendIndex++;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.max(this) < minZoomed) {\r\n\t\t\t\t\tseries.startIndex = series.dataItems.length;\r\n\t\t\t\t\tseries.endIndex = series.dataItems.length;\r\n\t\t\t\t\tseries.outOfRange = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.min(this) > maxZoomed) {\r\n\t\t\t\t\tseries.startIndex = 0;\r\n\t\t\t\t\tseries.endIndex = 0;\r\n\t\t\t\t\tseries.outOfRange = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.outOfRange = false;\r\n\t\t\t\t\tseries.startIndex = startIndex;\r\n\t\t\t\t\tseries.endIndex = endIndex;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\tconsole.log(series.name, startIndex, endIndex);\r\n\r\n\t\t\t\tif (!dataSetChanged && series.dataRangeInvalid) {\r\n\t\t\t\t\tseries.validateDataRange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected findFirst(dataItem: XYSeriesDataItem, time: number, key: string): XYSeriesDataItem {\r\n\t\tlet index = dataItem.index;\r\n\r\n\t\tif (index > 0) {\r\n\t\t\tlet series = dataItem.component;\r\n\t\t\tlet previousDataItem = series.dataItems.getIndex(index - 1);\r\n\r\n\t\t\tlet previousDate = (<any>previousDataItem)[key];\r\n\r\n\t\t\tif (!previousDate || previousDate.getTime() < time) {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.findFirst(previousDataItem, time, key);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn dataItem;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\t\tif (!$type.isNumber(this.baseInterval.count)) {\r\n\t\t\tthis.baseInterval.count = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get minDifference(): number {\r\n\t\tlet minDifference = Number.MAX_VALUE;\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (minDifference > this._minDifference[series.uid]) {\r\n\t\t\t\tminDifference = this._minDifference[series.uid];\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (minDifference == Number.MAX_VALUE || minDifference == 0) {\r\n\t\t\tminDifference = $time.getDuration(\"day\");\r\n\t\t}\r\n\r\n\t\treturn minDifference;\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic seriesDataChangeUpdate(series: XYSeries): void {\r\n\t\tthis._minDifference[series.uid] = Number.MAX_VALUE;\r\n\t}\r\n\r\n\t/**\r\n\t * [postProcessSeriesDataItems description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic postProcessSeriesDataItems(series?: XYSeries): void {\r\n\t\tthis._firstWeekDay = this.getFirstWeekDay();\r\n\t\tif (series) {\r\n\t\t\tthis.seriesGroupUpdate(series);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tthis.seriesGroupUpdate(series);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.addEmptyUnitsBreaks();\r\n\t}\r\n\r\n\tprotected seriesGroupUpdate(series: XYSeries) {\r\n\t\tif (JSON.stringify(series._baseInterval[this.uid]) != JSON.stringify(this.mainBaseInterval)) {\r\n\r\n\t\t\tseries._baseInterval[this.uid] = this.mainBaseInterval;\r\n\r\n\t\t\tseries.mainDataSet.each((dataItem) => {\r\n\t\t\t\tthis.postProcessSeriesDataItem(dataItem);\r\n\t\t\t});\r\n\r\n\t\t\tif (this.groupData) {\r\n\t\t\t\tthis.groupSeriesData(series);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates series group data.\r\n\t * \r\n\t * @param  series  Series\r\n\t * @ignore\r\n\t */\r\n\tpublic groupSeriesData(series: XYSeries): void {\r\n\t\tif (series.baseAxis == this && series.dataItems.length > 0 && !series.dataGrouped) {\r\n\r\n\t\t\tseries.bulletsContainer.removeChildren();\r\n\r\n\t\t\t// make array of intervals which will be used;\r\n\t\t\tlet intervals: ITimeInterval[] = [];\r\n\t\t\tlet mainBaseInterval = this.mainBaseInterval;\r\n\t\t\tlet mainIntervalDuration = $time.getDuration(mainBaseInterval.timeUnit, mainBaseInterval.count);\r\n\r\n\t\t\tthis.groupIntervals.each((interval) => {\r\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit, interval.count);\r\n\t\t\t\tif ((intervalDuration > mainIntervalDuration && intervalDuration < (this.max - this.min)) || this.groupInterval) {\r\n\t\t\t\t\tintervals.push(interval);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (series._dataSets) {\r\n\t\t\t\tseries._dataSets.each((key, dataItems) => {\r\n\t\t\t\t\tdataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.dispose();\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdataItems.clear();\r\n\t\t\t\t})\r\n\t\t\t\tseries._dataSets.clear();\r\n\t\t\t}\r\n\r\n\t\t\tseries.dataGrouped = true;\r\n\r\n\t\t\t$array.each(intervals, (interval) => {\r\n\r\n\t\t\t\t//let mainBaseInterval = this._mainBaseInterval;\r\n\t\t\t\tlet key = \"date\" + this.axisLetter;\r\n\r\n\t\t\t\t// create data set\r\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\r\n\t\t\t\t// todo: check where this clone goes\r\n\t\t\t\tlet dataSet = new OrderedListTemplate(series.mainDataSet.template.clone());\r\n\r\n\t\t\t\tseries.dataSets.setKey(dataSetId, dataSet);\r\n\r\n\t\t\t\tlet dataItems = series.mainDataSet;\r\n\t\t\t\tlet previousTime: number = Number.NEGATIVE_INFINITY;\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet newDataItem: XYSeriesDataItem;\r\n\r\n\t\t\t\tlet dataFields: string[] = [];\r\n\r\n\t\t\t\t$object.each(series.dataFields, (dfkey, df) => {\r\n\t\t\t\t\tlet dfk = <string>dfkey;\r\n\t\t\t\t\tif (dfk != key && dfk.indexOf(\"Show\") == -1) {\r\n\t\t\t\t\t\tdataFields.push(dfk);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlet roundedDate: Date;\r\n\t\t\t\tdataItems.each((dataItem) => {\r\n\t\t\t\t\tlet date = dataItem.getDate(key);\r\n\t\t\t\t\tif (date) {\r\n\t\t\t\t\t\tlet time = date.getTime();\r\n\t\t\t\t\t\troundedDate = $time.round(\r\n\t\t\t\t\t\t\tnew Date(time),\r\n\t\t\t\t\t\t\tinterval.timeUnit,\r\n\t\t\t\t\t\t\tinterval.count,\r\n\t\t\t\t\t\t\tthis._df.firstDayOfWeek,\r\n\t\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tlet currentTime = roundedDate.getTime();\r\n\t\t\t\t\t\t// changed period\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (previousTime < currentTime) {\r\n\r\n\t\t\t\t\t\t\tif (newDataItem && series._adapterO) {\r\n\t\t\t\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\t\t\t\tnewDataItem.values[vkey].value = series._adapterO.apply(\"groupDataItem\", {\r\n\t\t\t\t\t\t\t\t\t\tdataItem: newDataItem,\r\n\t\t\t\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\t\t\t\tvalue: newDataItem.values[vkey].value\r\n\t\t\t\t\t\t\t\t\t}).value;\r\n\r\n\t\t\t\t\t\t\t\t\tnewDataItem.values[vkey].workingValue = newDataItem.values[vkey].value\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tnewDataItem = dataSet.create();\r\n\r\n\t\t\t\t\t\t\tnewDataItem.dataContext = {};\r\n\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"dateX\", series.dataItems.template.locations.dateX, 0);\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"openDateX\", series.dataItems.template.locations.openDateX, 0);\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"dateY\", series.dataItems.template.locations.dateY, 0);\r\n\t\t\t\t\t\t\tnewDataItem.setWorkingLocation(\"openDateY\", series.dataItems.template.locations.openDateY, 0);\r\n\r\n\t\t\t\t\t\t\tnewDataItem.component = series;\r\n\t\t\t\t\t\t\t// other Dates?\r\n\t\t\t\t\t\t\tnewDataItem.setDate(key, roundedDate);\r\n\t\t\t\t\t\t\tnewDataItem._index = i;\r\n\t\t\t\t\t\t\ti++;\r\n\r\n\t\t\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\t\t\t//let groupFieldName = vkey + \"Group\";\r\n\t\t\t\t\t\t\t\tlet dvalues = dataItem.values[vkey];\r\n\t\t\t\t\t\t\t\tif (dvalues) {\r\n\t\t\t\t\t\t\t\t\tlet value = dvalues.value;\r\n\r\n\t\t\t\t\t\t\t\t\tif (series._adapterO) {\r\n\t\t\t\t\t\t\t\t\t\tvalue = series._adapterO.apply(\"groupValue\", {\r\n\t\t\t\t\t\t\t\t\t\t\tdataItem: dataItem,\r\n\t\t\t\t\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t\t\t\t}).value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tlet values = newDataItem.values[vkey];\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tvalues.value = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.workingValue = value;\r\n\r\n\t\t\t\t\t\t\t\t\t\tvalues.open = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.close = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.low = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.high = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.sum = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.average = value;\r\n\t\t\t\t\t\t\t\t\t\tvalues.count = 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tvalues.count = 0;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\tthis.postProcessSeriesDataItem(newDataItem, interval);\r\n\r\n\t\t\t\t\t\t\t$object.each(series.propertyFields, (key, fieldValue) => {\r\n\t\t\t\t\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\t\t\t\t\tlet value: any = (<any>dataItem.properties)[key];\r\n\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\t\t\t\t\tnewDataItem.hasProperties = true;\r\n\t\t\t\t\t\t\t\t\tnewDataItem.setProperty(f, value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tnewDataItem.groupDataItems = [dataItem];\r\n\t\t\t\t\t\t\tpreviousTime = currentTime;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (newDataItem) {\r\n\t\t\t\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\t\t\t\tlet groupFieldName = (<any>series.groupFields)[vkey];\r\n\t\t\t\t\t\t\t\t\tlet dvalues = dataItem.values[vkey];\r\n\t\t\t\t\t\t\t\t\tif (dvalues) {\r\n\t\t\t\t\t\t\t\t\t\tlet value = dvalues.value;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (series._adapterO) {\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = series._adapterO.apply(\"groupValue\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataItem: dataItem,\r\n\t\t\t\t\t\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t\t\t\t\t}).value;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet values = newDataItem.values[vkey];\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (!$type.isNumber(values.open)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.open = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tvalues.close = value;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (values.low > value || !$type.isNumber(values.low)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.low = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (values.high < value || !$type.isNumber(values.high)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.high = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif ($type.isNumber(values.sum)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.sum += value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.sum = value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tvalues.count++;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tvalues.average = values.sum / values.count;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ($type.isNumber(values[groupFieldName])) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.value = values[groupFieldName];\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.workingValue = values.value;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t$utils.copyProperties(dataItem.properties, newDataItem.properties);\r\n\r\n\t\t\t\t\t\t\t\t$object.each(series.propertyFields, (key, fieldValue) => {\r\n\t\t\t\t\t\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\t\t\t\t\t\tlet value: any = (<any>dataItem.properties)[key];\r\n\t\t\t\t\t\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\t\t\t\t\t\tnewDataItem.hasProperties = true;\r\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setProperty(f, value);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tnewDataItem.groupDataItems.push(dataItem);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (newDataItem) {\r\n\t\t\t\t\t\t$utils.copyProperties(dataItem.dataContext, newDataItem.dataContext);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (newDataItem && series._adapterO) {\r\n\r\n\t\t\t\t\t$array.each(dataFields, (vkey) => {\r\n\t\t\t\t\t\tnewDataItem.values[vkey].value = series._adapterO.apply(\"groupDataItem\", {\r\n\t\t\t\t\t\t\tdataItem: newDataItem,\r\n\t\t\t\t\t\t\tinterval: interval,\r\n\t\t\t\t\t\t\tdataField: <any>vkey,\r\n\t\t\t\t\t\t\tdate: roundedDate,\r\n\t\t\t\t\t\t\tvalue: newDataItem.values[vkey].value\r\n\t\t\t\t\t\t}).value;\r\n\r\n\t\t\t\t\t\tnewDataItem.values[vkey].workingValue = newDataItem.values[vkey].value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.calculateZoom();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected getDFFormatter() {\r\n\t\tthis._df = this.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * [postProcessSeriesDataItem description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic postProcessSeriesDataItem(dataItem: XYSeriesDataItem, interval?: ITimeInterval): void {\r\n\t\t// we need to do this for all series data items not only added recently, as baseInterval might change\r\n\t\tlet intervalID = \"\";\r\n\t\tif (interval) {\r\n\t\t\tintervalID = interval.timeUnit + interval.count;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinterval = this.mainBaseInterval;\r\n\t\t}\r\n\r\n\t\tlet series: XYSeries = dataItem.component;\r\n\t\tlet dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n\r\n\t\t$object.each(dataItem.dates, (key) => {\r\n\t\t\tlet date: Date = dataItem.getDate(key);\r\n\t\t\tlet time = date.getTime();\r\n\r\n\t\t\tlet startDate: Date = $time.round(\r\n\t\t\t\tnew Date(time),\r\n\t\t\t\tinterval.timeUnit,\r\n\t\t\t\tinterval.count,\r\n\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\tthis._df.utc,\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\tthis._df.timezone\r\n\t\t\t);\r\n\t\t\tlet startTime = startDate.getTime();\r\n\t\t\tlet endDate: Date = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc);\r\n\r\n\t\t\tdataItem.setCalculatedValue(key, startTime, \"open\");\r\n\t\t\tdataItem.setCalculatedValue(key, endDate.getTime(), \"close\");\r\n\t\t\tdataItemsByAxis.setKey(startTime + intervalID, dataItem);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Collapses empty stretches of date/time scale by creating [[AxisBreak]]\r\n\t * elements for them.\r\n\t *\r\n\t * Can be used to automatically remove strethes without data, like weekends.\r\n\t *\r\n\t * No, need to call this manually. It will automatically be done if\r\n\t * `skipEmptyPeriods = true`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected addEmptyUnitsBreaks(): void {\r\n\r\n\t\tif (this.skipEmptyPeriods && $type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n\t\t\tlet timeUnit: TimeUnit = this.baseInterval.timeUnit;\r\n\t\t\tlet count: number = this.baseInterval.count;\r\n\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\tthis._axisBreaks.clear(); // TODO: what about breaks added by user?\r\n\t\t\t}\r\n\r\n\t\t\tlet date: Date = $time.round(\r\n\t\t\t\tnew Date(this.min),\r\n\t\t\t\ttimeUnit,\r\n\t\t\t\tcount,\r\n\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\tthis._df.utc,\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\tthis._df.timezone\r\n\t\t\t);\r\n\t\t\tlet axisBreak: DateAxisBreak;\r\n\r\n\t\t\twhile (date.getTime() < this.max - this.baseDuration) {\r\n\t\t\t\t$time.add(date, timeUnit, count, this._df.utc);\r\n\r\n\t\t\t\tlet startTime: number = date.getTime();\r\n\t\t\t\tlet startTimeStr: string = startTime.toString();\r\n\r\n\t\t\t\tlet hasData = $iter.contains(this.series.iterator(), (series) => {\r\n\t\t\t\t\treturn !!series.dataItemsByAxis.getKey(this.uid).getKey(startTimeStr + series.currentDataSetId);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// open break if not yet opened\r\n\t\t\t\tif (!hasData) {\r\n\t\t\t\t\tif (!axisBreak) {\r\n\t\t\t\t\t\taxisBreak = <DateAxisBreak>this.axisBreaks.create();\r\n\t\t\t\t\t\taxisBreak.startDate = new Date(startTime);\r\n\t\t\t\t\t\tthis._gapBreaks = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// close if already opened\r\n\t\t\t\t\tif (axisBreak) {\r\n\t\t\t\t\t\t// close at end time minus one millisecond\r\n\t\t\t\t\t\taxisBreak.endDate = new Date(startTime - 1);\r\n\t\t\t\t\t\taxisBreak = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positioning of Axis breaks after something changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic fixAxisBreaks(): void {\r\n\t\tsuper.fixAxisBreaks();\r\n\t\tlet axisBreaks = this._axisBreaks;\r\n\t\tif (axisBreaks) {\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t// process breaks\r\n\t\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\t\tlet breakGridCount: number = Math.ceil(this._gridCount * (Math.min(this.end, axisBreak.endPosition) - Math.max(this.start, axisBreak.startPosition)) / (this.end - this.start));\r\n\t\t\t\t\taxisBreak.gridInterval = this.chooseInterval(0, axisBreak.adjustedEndValue - axisBreak.adjustedStartValue, breakGridCount);\r\n\t\t\t\t\tlet gridDate = $time.round(\r\n\t\t\t\t\t\tnew Date(axisBreak.adjustedStartValue),\r\n\t\t\t\t\t\taxisBreak.gridInterval.timeUnit,\r\n\t\t\t\t\t\taxisBreak.gridInterval.count,\r\n\t\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (gridDate.getTime() > axisBreak.startDate.getTime()) {\r\n\t\t\t\t\t\t$time.add(gridDate, axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, this._df.utc);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taxisBreak.gridDate = gridDate;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected getFirstWeekDay(): number {\r\n\t\tif (this._df) {\r\n\t\t\treturn this._df.firstDayOfWeek;\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t/**\r\n\t * [getGridDate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param date           [description]\r\n\t * @param intervalCount  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getGridDate(date: Date, intervalCount: number): Date {\r\n\t\tlet timeUnit: TimeUnit = this._gridInterval.timeUnit;\r\n\t\tlet realIntervalCount: number = this._gridInterval.count;\r\n\t\t// round date\r\n\t\t$time.round(\r\n\t\t\tdate,\r\n\t\t\ttimeUnit,\r\n\t\t\t1,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tlet prevTimestamp: number = date.getTime();\r\n\r\n\t\tlet newDate: Date = $time.copy(date);\r\n\t\t// modify date by adding intervalcount\r\n\t\tlet timestamp: number = $time.add(newDate, timeUnit, intervalCount, this._df.utc).getTime();\r\n\r\n\t\t// if it's axis break, get first rounded date which is not in a break\r\n\t\tlet axisBreak: DateAxisBreak = <DateAxisBreak>this.isInBreak(timestamp);\r\n\t\tif (axisBreak && axisBreak.endDate) {\r\n\t\t\tnewDate = new Date(axisBreak.endDate.getTime());\r\n\t\t\t$time.round(\r\n\t\t\t\tnewDate,\r\n\t\t\t\ttimeUnit,\r\n\t\t\t\trealIntervalCount,\r\n\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\tthis._df.utc,\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\tthis._df.timezone\r\n\t\t\t);\r\n\t\t\tif (newDate.getTime() < axisBreak.endDate.getTime()) {\r\n\t\t\t\t$time.add(newDate, timeUnit, realIntervalCount, this._df.utc);\r\n\t\t\t}\r\n\t\t\ttimestamp = newDate.getTime();\r\n\t\t}\r\n\r\n\t\t// get duration between grid lines with break duration removed\r\n\t\tlet durationBreaksRemoved: number = this.adjustDifference(prevTimestamp, timestamp);\r\n\t\t// calculate how many time units fit to this duration\r\n\t\tlet countBreaksRemoved: number = Math.round(durationBreaksRemoved / $time.getDuration(timeUnit));\r\n\r\n\t\t// if less units fit, add one and repeat\r\n\t\tif (countBreaksRemoved < realIntervalCount) {\r\n\t\t\treturn this.getGridDate(date, intervalCount + realIntervalCount);\r\n\t\t}\r\n\r\n\t\treturn newDate;\r\n\t}\r\n\r\n\t/**\r\n\t * [getBreaklessDate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param axisBreak  [description]\r\n\t * @param timeUnit   [description]\r\n\t * @param count      [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getBreaklessDate(axisBreak: DateAxisBreak, timeUnit: TimeUnit, count: number): Date {\r\n\t\tlet date = new Date(axisBreak.endValue);\r\n\t\t$time.round(\r\n\t\t\tdate,\r\n\t\t\ttimeUnit,\r\n\t\t\tcount,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\t\t$time.add(date, timeUnit, count, this._df.utc);\r\n\r\n\t\tlet timestamp = date.getTime();\r\n\r\n\t\taxisBreak = <DateAxisBreak>this.isInBreak(timestamp);\r\n\t\tif (axisBreak) {\r\n\t\t\treturn this.getBreaklessDate(axisBreak, timeUnit, count);\r\n\t\t}\r\n\t\treturn date;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates all Axis elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validateAxisElements(): void {\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\r\n\t\t\tthis.calculateZoom();\r\n\r\n\t\t\t// first regular items\r\n\t\t\tlet timestamp = this._gridDate.getTime();\r\n\t\t\tlet timeUnit = this._gridInterval.timeUnit;\r\n\t\t\tlet intervalCount = this._gridInterval.count;\r\n\t\t\tlet prevGridDate = $time.copy(this._gridDate);\r\n\r\n\t\t\tlet dataItemsIterator = this._dataItemsIterator;\r\n\t\t\tthis.resetIterators();\r\n\r\n\t\t\twhile (timestamp <= this._maxZoomed) {\r\n\t\t\t\tlet date = this.getGridDate($time.copy(prevGridDate), intervalCount);\r\n\t\t\t\ttimestamp = date.getTime();\r\n\r\n\t\t\t\tlet endDate = $time.copy(date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n\t\t\t\tendDate = $time.add(endDate, timeUnit, intervalCount, this._df.utc);\r\n\r\n\t\t\t\tlet format = this.dateFormats.getKey(timeUnit);\r\n\r\n\t\t\t\tif (this.markUnitChange && prevGridDate) {\r\n\t\t\t\t\tif ($time.checkChange(date, prevGridDate, this._nextGridUnit, this._df.utc)) {\r\n\t\t\t\t\t\tif (timeUnit !== \"year\") {\r\n\t\t\t\t\t\t\tformat = this.periodChangeDateFormats.getKey(timeUnit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet text = this._df.format(date, format);\r\n\r\n\t\t\t\tlet dataItem = dataItemsIterator.find((x) => x.text === text);\r\n\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.appendDataItem(dataItem);\r\n\r\n\t\t\t\tdataItem.axisBreak = undefined;\r\n\t\t\t\tdataItem.date = date;\r\n\t\t\t\tdataItem.endDate = endDate;\r\n\r\n\t\t\t\tdataItem.text = text;\r\n\r\n\t\t\t\tthis.validateDataElement(dataItem);\r\n\r\n\t\t\t\tprevGridDate = date;\r\n\t\t\t}\r\n\r\n\t\t\t// breaks later\r\n\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\tif (this._axisBreaks) {\r\n\t\t\t\t$iter.each(this._axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\tlet timeUnit: TimeUnit = axisBreak.gridInterval.timeUnit;\r\n\t\t\t\t\t\tlet intervalCount: number = axisBreak.gridInterval.count;\r\n\r\n\t\t\t\t\t\t// only add grid if gap is bigger then minGridDistance\r\n\t\t\t\t\t\tif ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer.minGridDistance * 4) {\r\n\t\t\t\t\t\t\tlet timestamp: number = axisBreak.gridDate.getTime();\r\n\r\n\t\t\t\t\t\t\tlet prevGridDate;\r\n\t\t\t\t\t\t\tlet count: number = 0;\r\n\t\t\t\t\t\t\twhile (timestamp <= axisBreak.adjustedMax) {\r\n\t\t\t\t\t\t\t\tlet date: Date = $time.copy(axisBreak.gridDate);\r\n\t\t\t\t\t\t\t\ttimestamp = $time.add(date, timeUnit, intervalCount * count, this._df.utc).getTime();\r\n\t\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t\t\tif (timestamp > axisBreak.adjustedStartValue && timestamp < axisBreak.adjustedEndValue) {\r\n\t\t\t\t\t\t\t\t\tlet endDate = $time.copy(date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length\r\n\t\t\t\t\t\t\t\t\tendDate = $time.add(endDate, timeUnit, intervalCount, this._df.utc);\r\n\r\n\t\t\t\t\t\t\t\t\tlet format = this.dateFormats.getKey(timeUnit);\r\n\r\n\t\t\t\t\t\t\t\t\tif (this.markUnitChange && prevGridDate) {\r\n\t\t\t\t\t\t\t\t\t\tif ($time.checkChange(date, prevGridDate, this._nextGridUnit, this._df.utc)) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (timeUnit !== \"year\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\tformat = this.periodChangeDateFormats.getKey(timeUnit);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tlet text: string = this._df.format(date, format);\r\n\r\n\t\t\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.text === text);\r\n\t\t\t\t\t\t\t\t\tif (dataItem.__disabled) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\t\t\tdataItem.axisBreak = axisBreak;\r\n\t\t\t\t\t\t\t\t\taxisBreak.dataItems.moveValue(dataItem);\r\n\r\n\t\t\t\t\t\t\t\t\tdataItem.date = date;\r\n\t\t\t\t\t\t\t\t\tdataItem.endDate = endDate;\r\n\t\t\t\t\t\t\t\t\tdataItem.text = text;\r\n\t\t\t\t\t\t\t\t\tprevGridDate = date;\r\n\t\t\t\t\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\tlet timestamp = dataItem.value;\r\n\t\t\tlet endTimestamp = dataItem.endValue;\r\n\r\n\t\t\tif (!$type.isNumber(endTimestamp)) {\r\n\t\t\t\tendTimestamp = timestamp;\r\n\t\t\t}\r\n\r\n\t\t\tlet position: number = this.valueToPosition(timestamp);\r\n\t\t\tlet endPosition: number = this.valueToPosition(endTimestamp);\r\n\t\t\tlet fillEndPosition = endPosition;\r\n\r\n\t\t\tif (!dataItem.isRange && this._gridInterval.count > this.baseInterval.count) {\r\n\t\t\t\tendPosition = position + (endPosition - position) / (this._gridInterval.count / this.baseInterval.count);\r\n\t\t\t}\r\n\r\n\t\t\tdataItem.position = position;\r\n\r\n\t\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\t\tif (tick && !tick.disabled) {\r\n\t\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tlet grid: Grid = dataItem.grid;\r\n\t\t\tif (grid && !grid.disabled) {\r\n\t\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\t\tif (fill && !fill.disabled) {\r\n\t\t\t\trenderer.updateFillElement(fill, position, fillEndPosition);\r\n\t\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\t\tthis.fillRule(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\t\tif (mask) {\r\n\t\t\t\trenderer.updateFillElement(mask, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.bullet) {\r\n\t\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t\t}\r\n\r\n\t\t\tlet label: AxisLabel = dataItem.label;\r\n\t\t\tif (label && !label.disabled) {\r\n\t\t\t\tlet location = label.location;\r\n\r\n\r\n\r\n\t\t\t\tif (location == 0) {\r\n\t\t\t\t\tif (this._gridInterval.count == 1 && this._gridInterval.timeUnit != \"week\" && !dataItem.isRange) {\r\n\t\t\t\t\t\tlocation = 0.5;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlocation = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\trenderer.updateLabelElement(label, position, endPosition, location);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A duration in milliseconds of the `baseInterval`.\r\n\t *\r\n\t * @return Duration (ms)\r\n\t */\r\n\tpublic get baseDuration(): number {\r\n\t\treturn $time.getDuration(this.baseInterval.timeUnit, this.baseInterval.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts min/max values.\r\n\t *\r\n\t * @ignore Exclude from docs.\r\n\t * @todo Description (review)\r\n\t * @param min  Min timestamp\r\n\t * @param max  Max timestamp\r\n\t * @return Adjusted min/max step\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number): IMinMaxStep {\r\n\t\treturn { min: min, max: max, step: this.baseDuration };\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the minimum timestamp as per cell start location.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMin(value: number) {\r\n\t\t// like this because months are not equal\r\n\t\tlet interval = this.baseInterval;\r\n\r\n\t\tlet startTime = $time.round(\r\n\t\t\tnew Date(value),\r\n\t\t\tinterval.timeUnit,\r\n\t\t\tinterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t).getTime();\r\n\t\tlet endTime = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n\r\n\t\treturn startTime + (endTime - startTime) * this.startLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the maximum timestamp as per cell start location.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Adjusted value\r\n\t */\r\n\tprotected fixMax(value: number) {\r\n\t\t// like this because months are not equal\r\n\t\tlet interval = this.baseInterval;\r\n\r\n\t\tlet startTime = $time.round(\r\n\t\t\tnew Date(value),\r\n\t\t\tinterval.timeUnit,\r\n\t\t\tinterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t).getTime();\r\n\t\tlet endTime = $time.add(new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();\r\n\r\n\t\treturn startTime + (endTime - startTime) * this.endLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * [chooseInterval description]\r\n\t *\r\n\t * @ignore Exclude from docs.\r\n\t * @todo Description\r\n\t * @param index      [description]\r\n\t * @param duration   [description]\r\n\t * @param gridCount  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic chooseInterval(index: number, duration: number, gridCount: number, intervals?: List<ITimeInterval>): ITimeInterval {\r\n\t\tif (!intervals) {\r\n\t\t\tintervals = this.gridIntervals;\r\n\t\t}\r\n\r\n\t\tlet gridInterval: ITimeInterval = intervals.getIndex(index);\r\n\r\n\t\tlet intervalDuration: number = $time.getDuration(gridInterval.timeUnit, gridInterval.count);\r\n\r\n\t\tlet lastIndex: number = intervals.length - 1;\r\n\t\tif (index >= lastIndex) {\r\n\t\t\treturn { ...intervals.getIndex(lastIndex) };\r\n\t\t}\r\n\r\n\t\tlet count: number = Math.ceil(duration / intervalDuration);\r\n\r\n\t\tif (duration < intervalDuration && index > 0) {\r\n\t\t\treturn { ...intervals.getIndex(index - 1) };\r\n\t\t}\r\n\t\tif (count <= gridCount) {\r\n\t\t\treturn { ...intervals.getIndex(index) };\r\n\t\t} else {\r\n\t\t\tif (index + 1 < intervals.length) {\r\n\t\t\t\treturn this.chooseInterval(index + 1, duration, gridCount, intervals);\r\n\t\t\t} else {\r\n\t\t\t\treturn { ...intervals.getIndex(index) };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[DateFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number): string {\r\n\t\treturn this._df.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a Date to an asbolute pixel position within Axis.\r\n\t *\r\n\t * @param date  Date\r\n\t * @return Position (px)\r\n\t */\r\n\tpublic dateToPosition(date: Date): number {\r\n\t\treturn this.valueToPosition(date.getTime());\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric timestamp or a `Date` to a relative position on axis.\r\n\t *\r\n\t * @param date  Date or a timestamp\r\n\t * @return Relative position\r\n\t */\r\n\tpublic anyToPosition(date: Date | number): number {\r\n\t\tif (date instanceof Date) {\r\n\t\t\treturn this.dateToPosition(date);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.valueToPosition(date);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts date to orientation point (x, y, angle) on axis\r\n\t *\r\n\t * @param date Date\r\n\t * @return IOrientationPoint\r\n\t */\r\n\tpublic dateToPoint(date: Date): IOrientationPoint {\r\n\t\tlet position = this.dateToPosition(date);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation (x, y, angle) point on axis\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic anyToPoint(date: Date | number): IOrientationPoint {\r\n\t\tif (date instanceof Date) {\r\n\t\t\treturn this.dateToPoint(date);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.valueToPoint(date);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts pixel position within Axis to a corresponding Date.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Date\r\n\t */\r\n\tpublic positionToDate(position: number): Date {\r\n\t\treturn new Date(this.positionToValue(position));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = this.getTimeByLocation(dataItem, key, location);\r\n\t\t//let stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item's value.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Data field to get value from\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = this.getTimeByLocation(dataItem, key, location);\r\n\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Data field to get value from\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack ID\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet value: number = this.getTimeByLocation(dataItem, key, location);\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\tlet position = this.valueToPosition(value + stack);\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * [getTimeByLocation description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  [description]\r\n\t * @param key       [description]\r\n\t * @param location  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getTimeByLocation(dataItem: XYSeriesDataItem, key: string, location: number): number {\r\n\r\n\t\tif (!$type.hasValue(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = dataItem.workingLocations[key];\r\n\r\n\t\t\tif (!$type.isNumber(location)) {\r\n\t\t\t\tlocation = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet startTime: number = dataItem.values[key][\"open\"];\r\n\t\tlet endTime: number = dataItem.values[key][\"close\"];\r\n\r\n\t\tlet workingValue = dataItem.values[key].workingValue;\r\n\t\tlet value = dataItem.values[key].value;\r\n\r\n\t\tlet difference = value - workingValue;\r\n\t\tstartTime -= difference;\r\n\t\tendTime -= difference;\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\t\t\treturn startTime + (endTime - startTime) * location;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes a related series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\t\tlet series = dataItem.component;\r\n\t\tlet time: number;\r\n\r\n\t\tlet date: Date = (<any>dataItem)[\"date\" + axisLetter];\r\n\r\n\t\tif ($type.isNumber(this.timezoneOffset)) {\r\n\t\t\tdate.setTime(date.getTime() + (date.getTimezoneOffset() - this.timezoneOffset) * 60000)\r\n\t\t\tdataItem.setValue(\"date\" + axisLetter, date.getTime(), 0);\r\n\t\t}\r\n\t\telse if ($type.hasValue(this.timezone)) {\r\n\t\t\tdate = $time.setTimezone(date, this.timezone);\r\n\t\t\tdataItem.setValue(\"date\" + axisLetter, date.getTime(), 0);\r\n\t\t\t(<any>dataItem)[\"date\" + axisLetter] = date;\r\n\t\t}\r\n\r\n\t\tif (date) {\r\n\t\t\ttime = date.getTime();\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet openDate: Date = (<any>dataItem)[\"openDate\" + axisLetter];\r\n\t\tlet prevSeriesTime: number = this._prevSeriesTime[series.uid];\r\n\r\n\r\n\t\tlet openTime: number;\r\n\t\tif (openDate) {\r\n\t\t\topenTime = openDate.getTime();\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(openTime)) {\r\n\t\t\tlet difference = Math.abs(time - openTime);\r\n\r\n\t\t\tif (this._minDifference[series.uid] > difference) {\r\n\t\t\t\tthis._minDifference[series.uid] = difference;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet differece: number = time - prevSeriesTime;\r\n\r\n\t\tif (differece > 0) {\r\n\t\t\tif (this._minDifference[series.uid] > differece) {\r\n\t\t\t\tthis._minDifference[series.uid] = differece;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._prevSeriesTime[series.uid] = time;\r\n\r\n\t\tif (series._baseInterval[this.uid]) {\r\n\t\t\tthis.postProcessSeriesDataItem(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [updateAxisBySeries description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic updateAxisBySeries() {\r\n\t\tsuper.updateAxisBySeries();\r\n\r\n\t\tlet baseInterval: ITimeInterval = this.chooseInterval(0, this.minDifference, 1);\r\n\r\n\t\t// handle short months\r\n\r\n\t\tif (this.minDifference >= $time.getDuration(\"day\", 27) && baseInterval.timeUnit == \"week\") {\r\n\t\t\tbaseInterval.timeUnit = \"month\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\t\tif (baseInterval.timeUnit == \"month\") {\r\n\t\t\tif (this.minDifference >= $time.getDuration(\"day\", 29 * 2) && baseInterval.count == 1) {\r\n\t\t\t\tbaseInterval.count = 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.minDifference >= $time.getDuration(\"day\", 29 * 3) && baseInterval.count == 2) {\r\n\t\t\t\tbaseInterval.count = 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.minDifference >= $time.getDuration(\"day\", 29 * 6) && baseInterval.count == 5) {\r\n\t\t\t\tbaseInterval.count = 6;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// handle daylight saving\r\n\t\tif (this.minDifference >= $time.getDuration(\"hour\", 23) && baseInterval.timeUnit == \"hour\") {\r\n\t\t\tbaseInterval.timeUnit = \"day\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\r\n\t\tif (this.minDifference >= $time.getDuration(\"week\", 1) - $time.getDuration(\"hour\", 1) && baseInterval.timeUnit == \"day\") {\r\n\t\t\tbaseInterval.timeUnit = \"week\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\r\n\t\tif (this.minDifference >= $time.getDuration(\"year\", 1) - $time.getDuration(\"day\", 1.01) && baseInterval.timeUnit == \"month\") {\r\n\t\t\tbaseInterval.timeUnit = \"year\";\r\n\t\t\tbaseInterval.count = 1;\r\n\t\t}\r\n\r\n\t\tthis._baseIntervalReal = baseInterval;\r\n\t\tthis._mainBaseInterval = baseInterval;\r\n\r\n\t\t// no need to invalidate\r\n\t}\r\n\r\n\t/**\r\n\t * A base interval (granularity) of data.\r\n\t *\r\n\t * Used to indicate what are the base units of your data.\r\n\t *\r\n\t * For example, if you have a data set that has a data point every 5 minutes,\r\n\t * you may want to set this to `{ timeUnit: \"minute\", count: 5 }`.\r\n\t *\r\n\t * If not set, the Axis will try to determine the setting by its own, looking\r\n\t * at actual data.\r\n\t *\r\n\t * For best results, try to follow these values for `count`:\r\n\t *\r\n\t * When unit is \"month\", use 12 / count = round number\r\n\t * When unit is \"hour\", use 24 / count = round number\r\n\t * When unit is \"second\" and \"minute\", use 60 / count = round number\r\n\t *\r\n\t * @param timeInterval base interval\r\n\t */\r\n\tpublic set baseInterval(timeInterval: ITimeInterval) {\r\n\t\tif (JSON.stringify(this._baseInterval) != JSON.stringify(timeInterval)) {\r\n\t\t\tthis._baseInterval = timeInterval;\r\n\t\t\tthis._mainBaseInterval = timeInterval;\r\n\t\t\tif (!$type.isNumber(timeInterval.count)) {\r\n\t\t\t\ttimeInterval.count = 1;\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.postProcessSeriesDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Base interval\r\n\t */\r\n\tpublic get baseInterval(): ITimeInterval {\r\n\t\tif (this._groupInterval) {\r\n\t\t\treturn this._groupInterval;\r\n\t\t}\r\n\t\telse if (this._baseInterval) {\r\n\t\t\treturn this._baseInterval;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._baseIntervalReal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates granularity of the data of source (unaggregated) data.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @return Granularity of the main data set\r\n\t */\r\n\tpublic get mainBaseInterval(): ITimeInterval {\r\n\t\tif (this._baseInterval) {\r\n\t\t\treturn this._baseInterval;\r\n\t\t}\r\n\t\telse if (this._mainBaseInterval) {\r\n\t\t\treturn this._mainBaseInterval;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._baseIntervalReal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If enabled, axis will automatically collapse empty (without data points)\r\n\t * periods of time, i.e. weekends.\r\n\t *\r\n\t * An \"empty\" period is considered a stretch of time in the length of current\r\n\t * `baseInterval` without a single data point in it.\r\n\t *\r\n\t * For each such empty period, axis will automatically create an\r\n\t * [[AxisBreak]]. By default they will be invisible. You can still configure\r\n\t * them by accessing `axis.breaks.template`.\r\n\t *\r\n\t * [More info about breaks](https://www.amcharts.com/docs/v4/concepts/axes/#Breaks).\r\n\t *\r\n\t * Important notes:\r\n\t * * If you set this property to `true`, you can not add your custom axis breaks to this axis anymore.\r\n\t * * Using this feature affects performance. Use only if you need it.\r\n\t * * Setting this to `true` will reset appearance of breaks. If you want to modify appearance, do it *after* you set `skipEmptyPeriods`.\r\n\t * * Some axis label overlapping might happen.\r\n\t * * This setting is not compatible with `groupData = true`.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Remove empty stretches of time?\r\n\t */\r\n\tpublic set skipEmptyPeriods(value: boolean) {\r\n\r\n\t\tif (value) {\r\n\t\t\tlet breakTemplate = this.axisBreaks.template;\r\n\t\t\tbreakTemplate.startLine.disabled = true;\r\n\t\t\tbreakTemplate.endLine.disabled = true;\r\n\t\t\tbreakTemplate.fillShape.disabled = true;\r\n\t\t\tbreakTemplate.breakSize = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._gapBreaks) {\r\n\t\t\t\tthis.axisBreaks.clear();\r\n\t\t\t\tthis._gapBreaks = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.setPropertyValue(\"skipEmptyPeriods\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.postProcessSeriesDataItems();\r\n\t\t\tthis.invalidateSeries();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Remove empty stretches of time?\r\n\t */\r\n\tpublic get skipEmptyPeriods(): boolean {\r\n\t\treturn this.getPropertyValue(\"skipEmptyPeriods\");\r\n\t}\r\n\r\n\t/**\r\n\t * A special date format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t *\r\n\t * @param value  Date format\r\n\t */\r\n\tpublic set tooltipDateFormat(value: string | Intl.DateTimeFormatOptions) {\r\n\t\tthis.setPropertyValue(\"tooltipDateFormat\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get tooltipDateFormat(): string | Intl.DateTimeFormatOptions {\r\n\t\treturn this.getPropertyValue(\"tooltipDateFormat\");\r\n\t}\r\n\r\n\t/**\r\n\t * Use `periodChangeDateFormats` to apply different formats to the first\r\n\t * label in bigger time unit.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Use different format for period beginning?\r\n\t */\r\n\tpublic set markUnitChange(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"markUnitChange\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use different format for period beginning?\r\n\t */\r\n\tpublic get markUnitChange(): boolean {\r\n\t\treturn this.getPropertyValue(\"markUnitChange\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a tooltip, based on specific relative position\r\n\t * within axis.\r\n\t *\r\n\t * The label will be formatted as per [[DateFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position\r\n\t * @return Label (formatted date)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet text: string;\r\n\t\tlet date = this.positionToDate(position);\r\n\t\tdate = $time.round(\r\n\t\t\tdate,\r\n\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\tthis.baseInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tnew Date(this.min),\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tthis.tooltipDate = date;\r\n\r\n\t\tif ($type.hasValue(this.tooltipDateFormat)) {\r\n\t\t\ttext = this._df.format(date, this.tooltipDateFormat, [\"day\", \"month\", \"week\", \"year\"].indexOf(this.baseInterval.timeUnit) == -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet dateFormat = this.dateFormats.getKey(this.baseInterval.timeUnit);\r\n\t\t\tif (dateFormat) {\r\n\t\t\t\ttext = this._df.format(date, dateFormat);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttext = this.getPositionLabel(position);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn text;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", text);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Takes an absolute position within axis and adjust it to a specific position within base interval. (cell)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position Source position\r\n\t * @param location  Location in the cell\r\n\t * @return Adjusted position\r\n\t */\r\n\tpublic roundPosition(position: number, location?: AxisItemLocation, axisLocation?: number): number {\r\n\t\tlet baseInterval = this.baseInterval;\r\n\t\tlet timeUnit = baseInterval.timeUnit;\r\n\t\tlet count = baseInterval.count;\r\n\r\n\t\tlet date: Date = this.positionToDate(position);\r\n\r\n\t\t$time.round(\r\n\t\t\tdate,\r\n\t\t\ttimeUnit,\r\n\t\t\tcount,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tif (location > 0) {\r\n\t\t\t$time.add(date, timeUnit, location * count, this._df.utc);\r\n\t\t}\r\n\r\n\t\tif (axisLocation > 0 && axisLocation < 1) {\r\n\t\t\tdate.setTime(date.getTime() + this.baseDuration * axisLocation);\r\n\t\t}\r\n\r\n\t\tif (this.isInBreak(date.getTime())) {\r\n\t\t\twhile (date.getTime() < this.max) {\r\n\t\t\t\t$time.add(date, timeUnit, count, this._df.utc);\r\n\t\t\t\tif (!this.isInBreak(date.getTime())) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.dateToPosition(date);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an relative position of the start of the cell (period), that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Relative position\r\n\t * @return Cell start relative position\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an relative position of the end of the cell (period), that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Relative position\r\n\t * @return Cell end relative position\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 1);\r\n\t\t//return this.dateToPosition($time.add(this.positionToDate(this.roundPosition(position, 1)), this.baseInterval.timeUnit, this.baseInterval.count));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Series data item that corresponds to the specific pixel position\r\n\t * of the Axis.\r\n\t *\r\n\t * If `findNearest` (third parameter) is set to `true`, the method will try\r\n\t * to locate nearest available data item if none is found directly under\r\n\t * `position`.\r\n\t *\r\n\t * @param series       Series\r\n\t * @param position     Position (px)\r\n\t * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n\t * @return Data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\r\n\t\tlet value: number = this.positionToValue(position);\r\n\r\n\t\tlet location = 0.5;\r\n\t\tif (this.axisLetter == \"Y\") {\r\n\t\t\tlocation = series.dataItems.template.locations.dateY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocation = series.dataItems.template.locations.dateX;\r\n\t\t}\r\n\r\n\t\tlet deltaValue = value - location * this.baseDuration;\r\n\r\n\t\tlet date: Date = $time.round(\r\n\t\t\tnew Date(value),\r\n\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\tthis.baseInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\t\tlet nextDate: Date = $time.round(\r\n\t\t\tnew Date(value + this.baseDuration),\r\n\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\tthis.baseInterval.count,\r\n\t\t\tthis._firstWeekDay,\r\n\t\t\tthis._df.utc,\r\n\t\t\tundefined,\r\n\t\t\tthis._df.timezoneMinutes,\r\n\t\t\tthis._df.timezone\r\n\t\t);\r\n\r\n\t\tif (nextDate.getTime() > date.getTime()) {\r\n\t\t\tif (Math.abs(nextDate.getTime() - deltaValue) < Math.abs(deltaValue - date.getTime())) {\r\n\t\t\t\tdate = nextDate;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);\r\n\r\n\t\tlet dataItem = dataItemsByAxis.getKey(date.getTime() + series.currentDataSetId);\r\n\r\n\t\t// todo:  alternatively we can find closiest here\r\n\t\tif (!dataItem && findNearest) {\r\n\r\n\t\t\tlet key: \"dateX\" | \"dateY\";\r\n\r\n\t\t\tif (this.axisLetter == \"Y\") {\r\n\t\t\t\tkey = \"dateY\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tkey = \"dateX\";\r\n\t\t\t}\r\n\r\n\t\t\tdataItem = series.dataItems.getIndex(series.dataItems.findClosestIndex(date.getTime(), (x) => {\r\n\t\t\t\tif (x[key]) {\r\n\t\t\t\t\treturn <number>x[key].getTime();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn -Infinity;\r\n\t\t\t\t}\r\n\t\t\t}, \"any\"));\r\n\t\t}\r\n\r\n\t\treturn dataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a formatted date based on position in axis scale.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\t// @todo Better format recognition\r\n\t\tlet date = this.positionToDate(position);\r\n\t\treturn this._df.format(date, this.getCurrentLabelFormat());\r\n\t}\r\n\r\n\t/**\r\n\t * Returns label date format based on currently used time units\r\n\t *\r\n\t * @return Format\r\n\t */\r\n\tprotected getCurrentLabelFormat(): string | Intl.DateTimeFormatOptions {\r\n\t\treturn this.dateFormats.getKey(this._gridInterval ? this._gridInterval.timeUnit : \"day\");\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes an Axis renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\t\tsuper.initRenderer();\r\n\t\tlet renderer = this.renderer;\r\n\t\tif (renderer) {\r\n\t\t\t// Set defaults\r\n\t\t\trenderer.ticks.template.location = 0;\r\n\t\t\trenderer.grid.template.location = 0;\r\n\t\t\trenderer.labels.template.location = 0;\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected animateMinMax(min: number, max: number): Animation {\r\n\t\tlet animation = this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t\tanimation.events.on(\"animationprogress\", () => {\r\n\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t})\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates axis data items when series extremes change\r\n\t */\r\n\tprotected handleExtremesChange() {\r\n\t\tsuper.handleExtremesChange();\r\n\r\n\t\tif (this.groupData) {\r\n\t\t\tlet id = this.baseInterval.timeUnit + this.baseInterval.count;\r\n\t\t\tthis.groupMin[id] = this._finalMin;\r\n\t\t\tthis.groupMax[id] = this._finalMax;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Zooms axis to specific Dates.\r\n\t *\r\n\t * @param startDate       Start date\r\n\t * @param endValue        End date\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToDates(startDate: Date, endDate: Date, skipRangeEvent?: boolean, instantly?: boolean, adjust?: boolean): void {\r\n\t\tstartDate = this._df.parse(startDate);\r\n\t\tendDate = this._df.parse(endDate);\r\n\t\tthis.zoomToValues(startDate.getTime(), endDate.getTime(), skipRangeEvent, instantly, adjust);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axis to specific values.\r\n\t *\r\n\t * @param startValue      Start value\r\n\t * @param endValue        End value\r\n\t * @param skipRangeEvent  Do not invoke events\r\n\t * @param instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToValues(startValue: number, endValue: number, skipRangeEvent?: boolean, instantly?: boolean, adjust?: boolean): void {\r\n\t\tif (!this.groupData) {\r\n\t\t\t//let start: number = (startValue - this.min) / (this.max - this.min);\r\n\t\t\t//let end: number = (endValue - this.min) / (this.max - this.min);\r\n\r\n\t\t\tlet start = this.valueToPosition(startValue);\r\n\t\t\tlet end = this.valueToPosition(endValue);\r\n\r\n\t\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet difference = this.adjustDifference(startValue, endValue);\r\n\t\t\tlet isEnd = false;\r\n\t\t\tif (endValue == this.max) {\r\n\t\t\t\tisEnd = true;\r\n\t\t\t}\r\n\t\t\tlet isStart = false;\r\n\t\t\tif (startValue == this.min) {\r\n\t\t\t\tisStart = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(difference)) {\r\n\t\t\t\tlet mainBaseInterval = this.mainBaseInterval;\r\n\t\t\t\tlet groupInterval = this.chooseInterval(0, difference, this.groupCount, this.groupIntervals);\r\n\r\n\t\t\t\tif ((groupInterval.timeUnit == mainBaseInterval.timeUnit && groupInterval.count < mainBaseInterval.count) || $time.getDuration(groupInterval.timeUnit, 1) < $time.getDuration(mainBaseInterval.timeUnit, 1)) {\r\n\t\t\t\t\tgroupInterval = { ...mainBaseInterval };\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet id = groupInterval.timeUnit + groupInterval.count;\r\n\t\t\t\tlet min = this.groupMin[id];\r\n\t\t\t\tlet max = this.groupMax[id];\r\n\r\n\t\t\t\tif (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n\t\t\t\t\tmin = Number.POSITIVE_INFINITY;\r\n\t\t\t\t\tmax = Number.NEGATIVE_INFINITY;\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tlet seriesMin = series.min(this);\r\n\t\t\t\t\t\tlet seriesMax = series.max(this);\r\n\r\n\t\t\t\t\t\tif (series._dataSets) {\r\n\t\t\t\t\t\t\tlet ds = series._dataSets.getKey(groupInterval.timeUnit + groupInterval.count);\r\n\r\n\t\t\t\t\t\t\tif (ds) {\r\n\t\t\t\t\t\t\t\tlet mindi = ds.getIndex(0);\r\n\t\t\t\t\t\t\t\tlet maxdi = ds.getIndex(ds.length - 1);\r\n\r\n\t\t\t\t\t\t\t\tif (mindi) {\r\n\t\t\t\t\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMin = mindi.dateX.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (series.yAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMin = mindi.dateY.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (maxdi) {\r\n\t\t\t\t\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMax = maxdi.dateX.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (series.yAxis == this) {\r\n\t\t\t\t\t\t\t\t\t\tseriesMax = maxdi.dateY.getTime();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tseriesMax = $time.round(\r\n\t\t\t\t\t\t\t$time.add(new Date(seriesMax), groupInterval.timeUnit, 1, this._df.utc),\r\n\t\t\t\t\t\t\tgroupInterval.timeUnit,\r\n\t\t\t\t\t\t\t1,\r\n\t\t\t\t\t\t\tthis._df.firstDayOfWeek,\r\n\t\t\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t\t\t).getTime();\r\n\r\n\t\t\t\t\t\tif (seriesMin < min) {\r\n\t\t\t\t\t\t\tmin = seriesMin;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (seriesMax > max) {\r\n\t\t\t\t\t\t\tmax = seriesMax;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.groupMin[id] = min;\r\n\t\t\t\t\tthis.groupMax[id] = max;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstartValue = $math.fitToRange(startValue, min, max);\r\n\t\t\t\tendValue = $math.fitToRange(endValue, min, max);\r\n\r\n\t\t\t\tif (adjust) {\r\n\t\t\t\t\tif (isEnd) {\r\n\t\t\t\t\t\tstartValue = endValue - difference;\r\n\t\t\t\t\t\tstartValue = $math.fitToRange(startValue, min, max);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isStart) {\r\n\t\t\t\t\t\tendValue = startValue + difference;\r\n\t\t\t\t\t\tendValue = $math.fitToRange(endValue, min, max);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet start: number = (startValue - min) / (max - min);\r\n\t\t\t\tlet end: number = (endValue - min) / (max - min);\r\n\r\n\t\t\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `baseInterval` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"baseInterval\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.dateFormats = source.dateFormats;\r\n\t\tthis.periodChangeDateFormats = source.periodChangeDateFormats;\r\n\t\tthis.groupIntervals.clear();\r\n\t\tsource.groupIntervals.each((interval) => {\r\n\t\t\tthis.groupIntervals.push({ ...interval });\r\n\t\t})\r\n\r\n\t\tthis.gridIntervals.clear();\r\n\t\tsource.gridIntervals.each((interval) => {\r\n\t\t\tthis.gridIntervals.push({ ...interval });\r\n\t\t})\r\n\r\n\t\tif (source._baseInterval) {\r\n\t\t\tthis.baseInterval = source._baseInterval;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n\t *\r\n\t * @param position Position (0-1)\r\n\t * @param local or global position\r\n\t */\r\n\tpublic showTooltipAtPosition(position: number, local?: boolean) {\r\n\r\n\t\tif (!local) {\r\n\t\t\tposition = this.toAxisPosition(position);\r\n\t\t}\r\n\r\n\t\tif (this.snapTooltip) {\r\n\t\t\t// rounding is not good, pen/aac4e7f66f019d36b2447f050c600c13 (no last tootltip shown)\r\n\t\t\tlet actualDate = this.positionToDate(position) //$time.round(this.positionToDate(position), this.baseInterval.timeUnit, 1, this.getFirstWeekDay(), this.dateFormatter.utc, undefined, this._df.timezoneMinutes, this._df.timezone);\r\n\r\n\t\t\tlet actualTime = actualDate.getTime();\r\n\t\t\tlet closestDate: Date;\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\t\tlet dataItem = this.getSeriesDataItem(series, position, true);\r\n\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tlet date: Date;\r\n\t\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\t\tdate = dataItem.dateX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (series.yAxis == this) {\r\n\t\t\t\t\t\t\tdate = dataItem.dateY;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!closestDate) {\r\n\t\t\t\t\t\t\tclosestDate = date;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (Math.abs(closestDate.getTime() - actualTime) > Math.abs(date.getTime() - actualTime)) {\r\n\t\t\t\t\t\t\t\tclosestDate = date;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (closestDate) {\r\n\t\t\t\tlet closestTime = closestDate.getTime();\r\n\t\t\t\tclosestDate = $time.round(\r\n\t\t\t\t\tnew Date(closestTime),\r\n\t\t\t\t\tthis.baseInterval.timeUnit,\r\n\t\t\t\t\tthis.baseInterval.count,\r\n\t\t\t\t\tthis._firstWeekDay,\r\n\t\t\t\t\tthis._df.utc,\r\n\t\t\t\t\tundefined,\r\n\t\t\t\t\tthis._df.timezoneMinutes,\r\n\t\t\t\t\tthis._df.timezone\r\n\t\t\t\t);\r\n\t\t\t\tclosestTime = closestDate.getTime();\r\n\r\n\t\t\t\tlet tooltipLocation = this.renderer.tooltipLocation;\r\n\t\t\t\tif (tooltipLocation == 0) {\r\n\t\t\t\t\ttooltipLocation = 0.0001;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tclosestDate = new Date(closestDate.getTime() + this.baseDuration * tooltipLocation);\r\n\t\t\t\tposition = this.dateToPosition(closestDate);\r\n\r\n\t\t\t\tif (this.chart.cursor && this.chart.cursor.snapToSeries) {\r\n\t\t\t\t\t//void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\r\n\t\t\t\t\t\tlet dataItem = series.dataItemsByAxis.getKey(this.uid).getKey(closestTime + series.currentDataSetId);\r\n\t\t\t\t\t\tlet point = series.showTooltipAtDataItem(dataItem);\r\n\t\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\t\tthis.chart._seriesPoints.push({ series: series, point: point });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// check, otherwise column tooltip will be hidden\r\n\t\t\t\t\t\t\tif (series.tooltipText || series.tooltipHTML) {\r\n\t\t\t\t\t\t\t\tseries.hideTooltip();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//this.chart.sortSeriesTooltips(seriesPoints);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.showTooltipAtPosition(position, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Should snap?\r\n\t */\r\n\tpublic set snapTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should snap?\r\n\t */\r\n\tpublic get snapTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapTooltip\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if data should be aggregated to composide data items if there\r\n\t * are more data items in selected range than `groupCount`.\r\n\t *\r\n\t * Grouping will occur automatically, based on current selection range, and\r\n\t * will change dynamically when user zooms in/out the chart.\r\n\t *\r\n\t * NOTE: This works only if [[DateAxis]] is base axis of an [[XYSeries]].\r\n\t *\r\n\t * The related [[XYSeries]] also needs to be set up to take advantage of, by\r\n\t * setting its [`groupFields`](https://www.amcharts.com/docs/v4/reference/xyseries/#groupFields_property).\r\n\t *\r\n\t * The group intervals to aggregate data to is defined by `groupIntervals`\r\n\t * property.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t * \r\n\t * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t * \r\n\t * let series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t * \r\n\t * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t * \r\n\t * var series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     \"groupData\": true\r\n\t *   }],\r\n\t *   \"yAxes\": [{\r\n\t *     \"type\": \"ValueAxis\"\r\n\t *   }],\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"LineSeries\",\r\n\t *     \"dataFields\": {\r\n\t *       \"dateX\": \"date\",\r\n\t *       \"valueY\": \"value\"\r\n\t *     },\r\n\t *     \"groupFields\": {\r\n\t *       \"valueY\": \"average\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default false\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t * @since 4.7.0\r\n\t * @param  value  Group data points?\r\n\t */\r\n\tpublic set groupData(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"groupData\", value)) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.setDataSet(\"\");\r\n\r\n\t\t\t\tif (value && !series.dataGrouped && series.inited) {\r\n\t\t\t\t\tseries._baseInterval[this.uid] = this.mainBaseInterval;\r\n\t\t\t\t\tthis.groupSeriesData(series);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis._currentDataSetId = \"\"\r\n\t\t\tthis._groupInterval = undefined;\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.invalidateSeries();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Group data points?\r\n\t */\r\n\tpublic get groupData(): boolean {\r\n\t\treturn this.getPropertyValue(\"groupData\");\r\n\t}\r\n\r\n\t/**\r\n\t * Disables automatic selection of data grouping intervals and always uses\r\n\t * `groupInterval` if set. Works only if `groupData = true`.\r\n\t * \r\n\t * @since 4.9.24\r\n\t * @param  value  Interval\r\n\t */\r\n\tpublic set groupInterval(value: ITimeInterval) {\r\n\t\tif (this.setPropertyValue(\"groupInterval\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.invalidateSeries();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Interval\r\n\t */\r\n\tpublic get groupInterval(): ITimeInterval {\r\n\t\treturn this.getPropertyValue(\"groupInterval\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates threshold of data items in selected range at which to start\r\n\t * aggregating data items if `groupData = true`.\r\n\t * \r\n\t * @default 200\r\n\t * @since 4.7.0\r\n\t * @param  value  Number of data items\r\n\t */\r\n\tpublic set groupCount(value: number) {\r\n\t\tthis.setPropertyValue(\"groupCount\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number of data items\r\n\t */\r\n\tpublic get groupCount(): number {\r\n\t\treturn this.getPropertyValue(\"groupCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data by applying specific offset\r\n\t * in minutes.\r\n\t *\r\n\t * IMPORTANT: do not set `timezoneOffset` on both `DateAxis` and `dateFormatter`. It\r\n\t * will skew your results by applying offset twice.\r\n\t * \r\n\t * @since 4.8.5\r\n\t * @param  value Time zone offset in minutes\r\n\t */\r\n\tpublic set timezoneOffset(value: number) {\r\n\t\tthis.setPropertyValue(\"timezoneOffset\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @todo Timezone offset in minutes\r\n\t */\r\n\tpublic get timezoneOffset(): number {\r\n\t\treturn this.getPropertyValue(\"timezoneOffset\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set will recalculate all timestamps in data to specific named timezone,\r\n\t * e.g. `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`, etc.\r\n\t *\r\n\t * IMPORTANT: it is no longer recommended to use this setting. Please \r\n\t * set`timezone` on `dateFormatter`.\r\n\t *\r\n\t * @deprecated\r\n\t * @since 4.10.1\r\n\t * @param  value Time zone\r\n\t */\r\n\tpublic set timezone(value: string) {\r\n\t\tthis.setPropertyValue(\"timezone\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Timezone\r\n\t */\r\n\tpublic get timezone(): string {\r\n\t\treturn this.getPropertyValue(\"timezone\");\r\n\t}\r\n\r\n\t/**\r\n\t * Current grid interval.\r\n\t *\r\n\t * @return Grid interval\r\n\t */\r\n\tpublic get gridInterval(): ITimeInterval {\r\n\t\treturn this._gridInterval;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeGap(dataItem: LineSeriesDataItem, previous: LineSeriesDataItem): boolean {\r\n\t\tlet series = dataItem.component;\r\n\t\tif (dataItem && previous) {\r\n\t\t\tif (!series.connect && $type.isNumber(series.autoGapCount)) {\r\n\t\t\t\tif (series.baseAxis == this) {\r\n\t\t\t\t\tlet date = dataItem.dates[\"date\" + this.axisLetter];\r\n\t\t\t\t\tlet prevDate = previous.dates[\"date\" + this.axisLetter];\r\n\r\n\t\t\t\t\tif (date && prevDate) {\r\n\t\t\t\t\t\tlet time = date.getTime();\r\n\t\t\t\t\t\tlet prevTime = prevDate.getTime();\r\n\r\n\t\t\t\t\t\tif (time - prevTime > series.autoGapCount * this.baseDuration) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return base value\r\n\t */\r\n\tpublic get baseValue(): number {\r\n\t\treturn this.min;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxis\"] = DateAxis;\r\nregistry.registeredClasses[\"DateAxisDataItem\"] = DateAxisDataItem;\r\n","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Grid } from \"./Grid\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { VerticalCenter } from \"../../core/defs/VerticalCenter\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererX]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererXAdapters extends IAxisRendererAdapters, IAxisRendererXProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for horizontal axis.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererXProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererXAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererXEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisRendererX\";\r\n\r\n\t\tthis.minGridDistance = 120;\r\n\r\n\t\tthis.opposite = false;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.width = percent(100);\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"vertical\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGridContainer() {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet gridContainer = this.gridContainer;\r\n\t\t\tgridContainer.x = axis.pixelX;\r\n\t\t\tgridContainer.width = axis.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\t// can not do this in init, as axis is set later\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tif (!(axis.width instanceof Percent)) {\r\n\t\t\t\taxis.width = percent(100);\r\n\t\t\t}\r\n\r\n\t\t\t// @todo Is thi sneeded?\r\n\t\t\t$utils.used(this.line);\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.rotation = 0;\r\n\t\t\ttitle.align = \"center\";\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t\tthis.toBack();\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet bigNum: number = 1000;\r\n\t\t\tlet bbx: number = this.line.pixelX;\r\n\t\t\tlet bby: number = this.line.pixelY;\r\n\t\t\tlet bbw: number = this.axisLength;\r\n\r\n\t\t\tlet bbh: number = bigNum;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\telse {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.axis.updateTooltip(\"vertical\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet deltaY = 0;\r\n\t\tlet verticalCenter: VerticalCenter;\r\n\t\tlet maxHeight = this.gridContainer.maxHeight;\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\tif (label.valign == \"bottom\") {\r\n\t\t\t\t\tdeltaY = maxHeight;\r\n\t\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y = deltaY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tverticalCenter = \"bottom\";\r\n\t\t\t\tif (label.valign == \"top\") {\r\n\t\t\t\t\tdeltaY = -maxHeight;\r\n\t\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t\t}\r\n\t\t\t\tif (label.valign == \"middle\") {\r\n\t\t\t\t\tdeltaY = -maxHeight / 2;\r\n\t\t\t\t\tverticalCenter = \"middle\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalCenter = \"top\";\r\n\t\t\t}\r\n\r\n\t\t\tpoint.y += deltaY;\r\n\t\t}\r\n\r\n\t\tif (label.rotation == 0) {\r\n\t\t\t// Apply fuzzy logic to verticalCenter only if labels are not rotated\r\n\t\t\tlabel.verticalCenter = verticalCenter;\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.x, point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet x1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet x2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet w: number = Math.abs(x2 - x1);\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet x: number = Math.min(x1, x2);\r\n\t\tlet y: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet y1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet y2: number = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;\r\n\r\n\t\tstartPoint.x = $math.fitToRange(startPoint.x, -1, this.axisLength + 1);\r\n\t\tendPoint.x = $math.fitToRange(endPoint.x, -1, this.axisLength + 1);\r\n\r\n\t\tif (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.axisLength)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tstartLine.y = y1;\r\n\t\tstartLine.width = 0;\r\n\t\tstartLine.height = y2;\r\n\r\n\t\tendLine.y = y1;\r\n\t\tendLine.width = 0;\r\n\t\tendLine.height = y2;\r\n\r\n\t\tfillShape.height = y2;\r\n\t\tfillShape.width = Math.abs(endPoint.x - startPoint.x);\r\n\t\tfillShape.y = y1;\r\n\t\tfillShape.x = startPoint.x;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\t//point.x = $utils.spritePointToSprite({x:point.x, y:0}, this, this.gridContainer).x;\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.getHeight() });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tif (this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: tickLength });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.axisLength, y: 0 });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet w: number = this.axisLength;\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tlet x: number = axis.basePoint.x;\r\n\t\tif (x < -0.2 || x > w + 0.2) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet y = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak): void {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(false, true, false, true);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic toAxisPosition(value: number): number {\r\n\t\tlet inversedPosition = value;\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\tlet relativePositionSprite = axis.relativePositionSprite;\r\n\r\n\t\t\tlet x = axis.pixelX;\r\n\t\t\tif (relativePositionSprite) {\r\n\t\t\t\tx = $utils.spritePointToSprite({ x: this.pixelX, y: 0 }, this.parent, relativePositionSprite).x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trelativePositionSprite = axis.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif(relativePositionSprite){\r\n\t\t\t\tlet relativeX = x / relativePositionSprite.innerWidth;\r\n\t\t\t\tlet relativeWidth = axis.axisLength / relativePositionSprite.innerWidth;\r\n\r\n\t\t\t\treturn (inversedPosition - relativeX) / relativeWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tpoint.y = $utils.spritePointToSprite({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX\"] = AxisRendererX;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Put labels inside plot area.\r\n * Disable first and last labels.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.inside = true;\r\n\t\t\tstate.properties.maxLabelPosition = 0.9;\r\n\t\t\tstate.properties.minLabelPosition = 0.1;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable labels altogather on very small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof AxisRendererX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});","/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Category break starts on.\r\n\t */\r\n\tstartCategory?: string;\r\n\r\n\t/**\r\n\t * Category break ends on.\r\n\t */\r\n\tendCategory?: string;\r\n\r\n\t/**\r\n\t * Location where break starts within cell (0-1).\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\t/**\r\n\t * Location where break ends within cell (0-1).\r\n\t */\r\n\tendLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CategoryAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisBreakAdapters extends IAxisBreakAdapters, ICategoryAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\r\nexport class CategoryAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICategoryAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICategoryAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: CategoryAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxisBreak\";\r\n\t\tthis.properties.startLocation = 0.5;\r\n\t\tthis.properties.endLocation = 0.5;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A category break starts on.\r\n\t *\r\n\t * @param value Start category\r\n\t */\r\n\tpublic set startCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"startCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start category\r\n\t */\r\n\tpublic get startCategory(): string {\r\n\t\treturn this.getPropertyValue(\"startCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * A category break ends on.\r\n\t *\r\n\t * @param value  End category\r\n\t */\r\n\tpublic set endCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"endCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End category\r\n\t */\r\n\tpublic get endCategory(): string {\r\n\t\treturn this.getPropertyValue(\"endCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * An index of start category.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"startCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"startValue\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An index of end category or a end value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"endCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"endValue\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within starting category break should begin.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break start location\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"startLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break start location\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within ending category break should end.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break end location\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"endLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break end location\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;\r\n","/**\r\n * Category axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisItemLocation, AxisDataItem, IAxisProperties, IAxisDataFields, IAxisAdapters, IAxisEvents, IAxisDataItemAdapters } from \"./Axis\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisRendererX } from \"./AxisRendererX\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { ColumnSeries } from \"../series/ColumnSeries\";\r\nimport { CategoryAxisBreak } from \"./CategoryAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CategoryAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CategoryAxisDataItem extends AxisDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: CategoryAxis;\r\n\r\n\tpublic seriesDataItems: { [index: string]: XYSeriesDataItem[] } = {};\r\n\r\n\tpublic deltaAnimation: Animation;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisDataItemAdapters;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxisDataItem\";\r\n\t\tthis.text = \"{category}\";\r\n\r\n\t\tthis.locations.category = 0;\r\n\t\tthis.locations.endCategory = 1;\r\n\r\n\t\tthis.deltaPosition = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Category.\r\n\t *\r\n\t * @param value  Category\r\n\t */\r\n\tpublic set category(value: string) {\r\n\t\tlet oldCategory = this.properties.category;\r\n\t\tthis.setProperty(\"category\", value);\r\n\t\tif ($type.hasValue(oldCategory) && oldCategory != value) {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.validateDataElement(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get category(): string {\r\n\t\tif (this._adapterO) {\r\n\t\t\tif (this._adapterO.isEnabled(\"category\")) {\r\n\t\t\t\treturn this._adapterO.apply(\"category\", this.properties.category);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.properties.category;\r\n\t}\r\n\r\n\t/**\r\n\t * End category.\r\n\t *\r\n\t * Used for items that span several categories, like [[CategoryAxisBreak]].\r\n\t *\r\n\t * @param value  End category\r\n\t */\r\n\tpublic set endCategory(value: string) {\r\n\t\tthis.setProperty(\"endCategory\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End category\r\n\t */\r\n\tpublic get endCategory(): string {\r\n\t\treturn this.properties.endCategory;\r\n\t}\r\n\r\n\tpublic set deltaPosition(value: number) {\r\n\t\tif (value != this.properties.deltaCoordinate) {\r\n\t\t\tthis.setProperty(\"deltaCoordinate\", value);\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t\tthis.component.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get deltaPosition(): number {\r\n\t\treturn this.properties.deltaCoordinate;\r\n\t}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[DataItem]]\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisDataItemAdapters extends IAxisDataItemAdapters {\r\n\tcategory: string;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CategoryAxis]].\r\n */\r\nexport interface ICategoryAxisDataFields extends IAxisDataFields {\r\n\r\n\t/**\r\n\t * A field that holds category information.\r\n\t */\r\n\tcategory?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[CategoryAxis]].\r\n */\r\nexport interface ICategoryAxisProperties extends IAxisProperties {\r\n\tsortBySeries?: ColumnSeries;\r\n}\r\n\r\n/**\r\n * Defines events for [[CategoryAxis]].\r\n */\r\nexport interface ICategoryAxisEvents extends IAxisEvents { }\r\n\r\n/**\r\n * Defines adapter for [[CategoryAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisAdapters extends IAxisAdapters, ICategoryAxisProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a category-based axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Clients\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"CategoryAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Clients\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link ICategoryAxisEvents} for a list of available Events\r\n * @see {@link ICategoryAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CategoryAxis<T extends AxisRenderer = AxisRenderer> extends Axis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: ICategoryAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICategoryAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICategoryAxisEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: CategoryAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t */\r\n\tpublic _axisBreak: CategoryAxisBreak;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t */\r\n\tpublic chart: SerialChart;\r\n\r\n\t/**\r\n\t * Frequency of the labels on axis.\r\n\t */\r\n\tprotected _frequency: number;\r\n\r\n\t/**\r\n\t * A collection that holds Axis' data items sorted by each category.\r\n\t */\r\n\tpublic dataItemsByCategory: Dictionary<string, this[\"_dataItem\"]> = new Dictionary<string, this[\"_dataItem\"]>();\r\n\r\n\t/**\r\n\t * last data item is used for the closing grid\r\n\t */\r\n\tprotected _lastDataItem: CategoryAxisDataItem;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxis\";\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"category\";\r\n\r\n\t\tthis._lastDataItem = this.createDataItem();\r\n\t\tthis._lastDataItem.component = this;\r\n\t\tthis._disposers.push(this._lastDataItem);\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tlet dataItemsByCategory = this.dataItemsByCategory;\r\n\t\tthis.addDisposer(this.mainDataSet.events.on(\"removed\", function(event) {\r\n\t\t\tdataItemsByCategory.removeKey(event.oldValue.category);\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new CategoryAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new CategoryAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes a related series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\t\tsuper.processSeriesDataItem(dataItem, axisLetter);\r\n\t\tlet category: string = (<any>dataItem)[\"category\" + this.axisLetter];\r\n\t\tif ($type.hasValue(category)) {\r\n\t\t\tlet categoryAxisDataItem: this[\"_dataItem\"] = this.dataItemsByCategory.getKey(category);\r\n\t\t\tif (categoryAxisDataItem) {\r\n\t\t\t\tlet seriesId = dataItem.component.uid;\r\n\t\t\t\tlet seriesDataItems = categoryAxisDataItem.seriesDataItems[seriesId];\r\n\t\t\t\tif (!seriesDataItems) {\r\n\t\t\t\t\tseriesDataItems = [];\r\n\t\t\t\t\tcategoryAxisDataItem.seriesDataItems[seriesId] = seriesDataItems;\r\n\t\t\t\t}\r\n\t\t\t\tseriesDataItems.push(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.component.dataItems.remove(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the data range.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validateDataRange(): void {\r\n\r\n\t\tsuper.validateDataRange();\r\n\r\n\t\t$iter.each(this._series.iterator(), (series) => {\r\n\t\t\tif ((series.xAxis instanceof CategoryAxis) && (series.yAxis instanceof CategoryAxis)) {\r\n\t\t\t\tseries.invalidateDataRange();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet startIndex = this.positionToIndex(this.start);\r\n\t\t\t\tlet endIndex = this.positionToIndex(this.end);\r\n\r\n\t\t\t\tif (endIndex >= this.dataItems.length) {\r\n\t\t\t\t\tendIndex--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet seriesId = series.uid;\r\n\t\t\t\tlet minIndex: number;\r\n\t\t\t\tlet maxIndex: number;\r\n\r\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\r\n\t\t\t\t\tlet axisDataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (axisDataItem) {\r\n\t\t\t\t\t\tlet seriesDataItems = axisDataItem.seriesDataItems[seriesId];\r\n\r\n\t\t\t\t\t\tif (seriesDataItems) {\r\n\t\t\t\t\t\t\tfor (let i = 0; i < seriesDataItems.length; i++) {\r\n\t\t\t\t\t\t\t\tlet seriesDataItem = seriesDataItems[i];\r\n\t\t\t\t\t\t\t\tif (seriesDataItem) {\r\n\t\t\t\t\t\t\t\t\tlet index = seriesDataItem.index;\r\n\t\t\t\t\t\t\t\t\tif (!$type.isNumber(minIndex) || index < minIndex) {\r\n\t\t\t\t\t\t\t\t\t\tminIndex = index;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!$type.isNumber(maxIndex) || index > maxIndex) {\r\n\t\t\t\t\t\t\t\t\t\tmaxIndex = index;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.isNumber(minIndex)) {\r\n\t\t\t\t\tseries.startIndex = minIndex;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.start = this.start;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(maxIndex)) {\r\n\t\t\t\t\tseries.endIndex = maxIndex + 1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.end = this.end;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// range might not change, but axis breaks might.\r\n\t\t\t\tif (this._axisBreaks && this._axisBreaks.length > 0) {\r\n\t\t\t\t\tseries.invalidateDataRange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the whole axis. Causes it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tlet dataCount: number = this.dataItems.length;\r\n\r\n\t\tlet startIndex = $math.fitToRange(Math.floor(this.start * dataCount - 1), 0, dataCount);\r\n\t\tlet endIndex = $math.fitToRange(Math.ceil(this.end * dataCount), 0, dataCount);\r\n\r\n\t\tif (this.renderer.invalid) {\r\n\t\t\tthis.renderer.validate();\r\n\t\t}\r\n\r\n\t\t// find frequency at which we'll show items\r\n\t\tlet maxCount: number = this.renderer.axisLength / Math.max(this.renderer.minGridDistance, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\tlet frequency: number = Math.min(this.dataItems.length, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\tthis._startIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\tthis._endIndex = Math.ceil(this.end * dataCount);\r\n\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\tif (this._startIndex == this._endIndex) {\r\n\t\t\tthis._endIndex++;\r\n\t\t}\r\n\r\n\t\tthis._frequency = frequency;\r\n\r\n\t\tif (this.axisLength <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.maxZoomFactor = this.dataItems.length;\r\n\t\tif (this.dataItems.length <= 0) {\r\n\t\t\tthis.maxZoomFactor = 1;\r\n\t\t}\r\n\r\n\t\tthis.resetIterators();\r\n\r\n\t\t// it's important to use protected variables here, as getters will return 0 - length\r\n\t\t// TODO use iterator instead\r\n\t\t// @ todo: not solved cat axis item fading\r\n\t\tstartIndex = $math.max(0, this._startIndex - this._frequency);\r\n\t\tendIndex = $math.min(this.dataItems.length, this._endIndex + this._frequency);\r\n\r\n\t\tlet itemIndex = 0;\r\n\r\n\t\tfor (let i = 0; i < startIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\r\n\t\tfor (let i = endIndex, len = this.dataItems.length; i < len; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tif (i < this.dataItems.length) {\r\n\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(i);\r\n\t\t\t\tif (i / this._frequency == Math.round(i / this._frequency)) {\r\n\t\t\t\t\tlet axisBreak: CategoryAxisBreak = this.isInBreak(i);\r\n\t\t\t\t\tif (!axisBreak) {\r\n\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\tthis.validateDataElement(dataItem, itemIndex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titemIndex++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//previously we disabled all before, but this is better for cpu\r\n\t\t\t\t\t//this.validateDataElement(dataItem, itemIndex); // helps to solve shrinking // not good - creates all items\r\n\t\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.appendDataItem(this._lastDataItem);\r\n\t\tthis.validateDataElement(this._lastDataItem, itemIndex + 1, this.dataItems.length);\r\n\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\taxisBreaks.each((axisBreak) => {\r\n\t\t\t\tlet adjustedStartValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet adjustedEndValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\tif ($math.intersect({ start: adjustedStartValue, end: adjustedEndValue }, { start: this._startIndex, end: this._endIndex })) {\r\n\r\n\t\t\t\t\tfor (let b = adjustedStartValue; b <= adjustedEndValue; b++) {\r\n\t\t\t\t\t\tlet dataItem = this.dataItems.getIndex(b);\r\n\t\t\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet frequency: number = $math.fitToRange(Math.ceil(this._frequency / axisBreak.breakSize), 1, adjustedEndValue - adjustedStartValue);\r\n\t\t\t\t\tlet itemIndex = 0;\r\n\t\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t\t// TODO use iterator instead\r\n\t\t\t\t\t\tfor (let b = adjustedStartValue; b <= adjustedEndValue; b = b + frequency) {\r\n\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(b);\r\n\t\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\tthis.validateDataElement(dataItem, itemIndex);\r\n\t\t\t\t\t\t\titemIndex++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.validateBreaks();\r\n\t\tthis.validateAxisRanges();\r\n\r\n\t\tthis.ghostLabel.invalidate(); // solves font issue\r\n\t\tthis.renderer.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem   [description]\r\n\t * @param itemIndex  [description]\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"], itemIndex?: number, index?: number): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tdataItem.itemIndex = this._axisItemCount;\r\n\t\tthis._axisItemCount++;\r\n\r\n\t\t//dataItem.__disabled = false;\r\n\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = this.categoryToIndex(dataItem.category);\r\n\t\t}\r\n\r\n\t\tlet endIndex = this.categoryToIndex(dataItem.endCategory);\r\n\r\n\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\tendIndex = index;\r\n\t\t}\r\n\r\n\t\tlet position: number = this.indexToPosition(index, dataItem.locations.category);\r\n\t\tlet endPosition: number = this.indexToPosition(endIndex, dataItem.locations.endCategory);\r\n\r\n\t\tdataItem.position = position;\r\n\r\n\t\tlet fillEndIndex: number;\r\n\t\tlet fillPosition: number;\r\n\t\tlet fillEndPosition: number;\r\n\r\n\t\tif (dataItem.isRange) {\r\n\t\t\tfillEndIndex = endIndex;\r\n\t\t\tfillPosition = this.indexToPosition(index, dataItem.locations.category);\r\n\t\t\tfillEndPosition = this.indexToPosition(fillEndIndex, dataItem.locations.endCategory);\r\n\t\t}\r\n\r\n\t\tdataItem.point = renderer.positionToPoint(position);\r\n\r\n\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\tif (tick && !tick.disabled) {\r\n\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet grid: Grid = dataItem.grid;\r\n\t\tif (grid && !grid.disabled) {\r\n\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet label: AxisLabel = dataItem.label;\r\n\t\tif (label && !label.disabled) {\r\n\t\t\t// theorethically this might result problems if category text changes, the range text won't change. But otherwise range.label.text = \"custom text\" won't work, which is not intuitive.\r\n\t\t\tif (!dataItem.isRange || label.text == undefined) {\r\n\t\t\t\tdataItem.text = dataItem.text;\r\n\t\t\t}\r\n\r\n\t\t\trenderer.updateLabelElement(label, position, endPosition);\r\n\r\n\t\t\tif ((renderer instanceof AxisRendererY && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (renderer instanceof AxisRendererX && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {\r\n\t\t\t\tif (dataItem.label.html) {\r\n\t\t\t\t\tthis.ghostLabel.html = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.ghostLabel.text = dataItem.label.currentText;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\tif (fill && !fill.disabled) {\r\n\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tfillEndIndex = index + this._frequency;\r\n\t\t\t\tfillPosition = this.indexToPosition(index, fill.location);\r\n\t\t\t\tfillEndPosition = this.indexToPosition(fillEndIndex, fill.location);\r\n\t\t\t}\r\n\r\n\t\t\trenderer.updateFillElement(fill, fillPosition, fillEndPosition);\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tthis.fillRule(dataItem, itemIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem.bullet) {\r\n\t\t\trenderer.updateBullet(dataItem.bullet, position, endPosition);\r\n\t\t}\r\n\r\n\r\n\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\tif (mask) {\r\n\t\t\trenderer.updateFillElement(mask, fillPosition, fillEndPosition);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tthis.dataItemsByCategory.clear();\r\n\t\tsuper.disposeData();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes the axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  The raw data that corresponds to this data item\r\n\t */\r\n\tpublic processDataItem(dataItem: this[\"_dataItem\"], dataContext: Object): void {\r\n\t\tif (dataItem) {\r\n\t\t\t// creat a collection for fast access\r\n\t\t\tsuper.processDataItem(dataItem, dataContext);\r\n\t\t\t// check if such category already exists\r\n\t\t\t//let existingDataItem: CategoryAxisDataItem = this.dataItemsByCategory.getKey(dataItem.category);\r\n\t\t\t//if (existingDataItem && existingDataItem != dataItem) {\r\n\t\t\t//\tthis.dataItems.remove(existingDataItem);\r\n\t\t\t//}\r\n\r\n\t\t\tif ($type.hasValue(dataItem.category)) {\r\n\t\t\t\tthis.dataItemsByCategory.setKey(dataItem.category, dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected getDataItem(dataContext?: any): this[\"_dataItem\"] {\r\n\t\tlet category: string = <string>(dataContext[this.dataFields.category]);\r\n\t\tif ($type.hasValue(category)) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItemsByCategory.getKey(category);\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.dataItems.create();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a category index to an actual screen coordinate on the axis.\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t *\r\n\t * @param index     Index\r\n\t * @param location  Location (0-1)\r\n\t * @return Position (px)\r\n\t */\r\n\tpublic indexToPosition(index: number, location?: AxisItemLocation | number): number {\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = 0.5;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet difference: number = this.adjustDifference(startIndex, endIndex);\r\n\r\n\t\tlet startLocation = this.startLocation;\r\n\t\tlet endLocation = this.endLocation;\r\n\r\n\t\tdifference -= startLocation;\r\n\t\tdifference -= (1 - endLocation);\r\n\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\tlet breakStartIndex: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet breakEndIndex: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\tif (index < startIndex || !$type.isNumber(breakStartIndex) || !$type.isNumber(breakEndIndex)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.intersect({ start: breakStartIndex, end: breakEndIndex }, { start: startIndex, end: endIndex })) {\r\n\t\t\t\t\tbreakStartIndex = Math.max(startIndex, breakStartIndex);\r\n\t\t\t\t\tbreakEndIndex = Math.min(endIndex, breakEndIndex);\r\n\r\n\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t// value to the right of break end\r\n\t\t\t\t\tif (index > breakEndIndex) {\r\n\t\t\t\t\t\tstartIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// value to the left of break start\r\n\t\t\t\t\telse if (index < breakStartIndex) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// value within break\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = breakStartIndex + (index - breakStartIndex) * breakSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet deltaPosition = 0;\r\n\t\tlet dataItem = this.dataItems.getIndex(index);\r\n\t\tif (dataItem) {\r\n\t\t\tdeltaPosition = dataItem.deltaPosition;\r\n\t\t}\r\n\r\n\t\treturn $math.round(deltaPosition + (index + location - startLocation - startIndex) / difference, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a string category name to relative position on axis.\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t *\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Position\r\n\t */\r\n\tpublic categoryToPosition(category: string, location?: AxisItemLocation): number {\r\n\t\tlet index: number = this.categoryToIndex(category);\r\n\t\treturn this.indexToPosition(index, location);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a string category name to a orientation point (x, y, angle) on axis\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Orientation point\r\n\t */\r\n\tpublic categoryToPoint(category: string, location?: AxisItemLocation): IOrientationPoint {\r\n\t\tlet position = this.categoryToPosition(category, location);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a string category name to a orientation point (x, y, angle) on axis\r\n\t *\r\n\t * `location` identifies relative location within category. 0 - beginning,\r\n\t * 0.5 - middle, 1 - end, and anything inbetween.\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Orientation point\r\n\t */\r\n\tanyToPoint(category: string, location?: AxisItemLocation): IOrientationPoint {\r\n\t\treturn this.categoryToPoint(category, location);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a string category name to relative position on axis.\r\n\t *\r\n\t * An alias to `categoryToPosition()`.\r\n\t *\r\n\t * @param category  Category name\r\n\t * @param location  Location (0-1)\r\n\t * @return Relative position\r\n\t */\r\n\tpublic anyToPosition(category: string, location?: AxisItemLocation): number {\r\n\t\treturn this.categoryToPosition(category, location);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts named category to an index of data item it corresponds to.\r\n\t *\r\n\t * @param category  Category\r\n\t * @return Data item index\r\n\t */\r\n\tpublic categoryToIndex(category: string): number {\r\n\t\tif ($type.hasValue(category)) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItemsByCategory.getKey(category);\r\n\t\t\tif (dataItem) {\r\n\t\t\t\treturn dataItem.index;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific named ctaegories.\r\n\t *\r\n\t * @param startCategory  Start category\r\n\t * @param endCategory    End category\r\n\t */\r\n\tpublic zoomToCategories(startCategory: string, endCategory: string): void {\r\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param start         [description]\r\n\t * @param end           [description]\r\n\t * @param startLocation [description]\r\n\t * @param endLocation   [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: string, end: string, startLocation?: AxisItemLocation, endLocation?: AxisItemLocation): string {\r\n\t\tlet startPos: number = this.categoryToPosition(start, startLocation);\r\n\t\tlet endPos: number = this.categoryToPosition(end, endLocation);\r\n\t\treturn this.getPositionRangePath(startPos, endPos); // Base class (Axis) gets range shape from AxisRenderer\r\n\t}\r\n\r\n\t/**\r\n\t * Takes an absolute position (px) within axis and adjust it to a specific\r\n\t * `location` within category it corresponds to.\r\n\t *\r\n\t * @param position  Source position (px)\r\n\t * @param location  Location within category (0-1)\r\n\t * @return Adjusted position (px)\r\n\t */\r\n\tpublic roundPosition(position: number, location?: AxisItemLocation): number {\r\n\t\tlet index: number = this.positionToIndex(position);\r\n\t\treturn this.indexToPosition(index, location);\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and returns first series data item with specific category\r\n\t * @param series    Target series\r\n\t * @param category  Category\r\n\t * @return XYSeriesDataItem data item\r\n\t */\r\n\tpublic getFirstSeriesDataItem(series: XYSeries, category: string): XYSeriesDataItem {\r\n\r\n\t\tfor (let i = 0; i < series.dataItems.length; i++) {\r\n\t\t\tlet dataItem = series.dataItems.getIndex(i);\r\n\t\t\tif (series.xAxis == this) {\r\n\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (series.yAxis == this) {\r\n\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and returns last series data item with specific category.\r\n\t * @param series    Target series\r\n\t * @param category  Category\r\n\t * @return XYSeriesDataItem data item\r\n\t */\r\n\tpublic getLastSeriesDataItem(series: XYSeries, category: string): XYSeriesDataItem {\r\n\r\n\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem = series.dataItems.getIndex(i);\r\n\t\t\tif (series.xAxis == this) {\r\n\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (series.yAxis == this) {\r\n\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\treturn dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// todo: optimize\r\n\tpublic getSeriesDataItemByCategory(category: string, series: XYSeries): XYSeriesDataItem {\r\n\t\tlet seriesDataItem: XYSeriesDataItem;\r\n\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\tif (series.xAxis == this) {\r\n\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\tseriesDataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (series.yAxis == this) {\r\n\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\tseriesDataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn seriesDataItem;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a data item from Series that corresponds to a specific absolute\r\n\t * position on the Axis.\r\n\t *\r\n\t * @param series    Target series\r\n\t * @param position  Position (px)\r\n\t * @return XYSeriesDataItem data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number, findNearest?: boolean): XYSeriesDataItem {\r\n\r\n\t\tif ($type.isNumber(position)) {\r\n\r\n\t\t\tlet index = this.positionToIndex(position);\r\n\r\n\t\t\tif (index >= this.dataItems.length) {\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataItem = this.dataItems.getIndex(index);\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet category = dataItem.category;\r\n\t\t\t\tlet sdi: XYSeriesDataItem;\r\n\r\n\t\t\t\tlet seriesDataItem = series.dataItems.getIndex(index);\r\n\t\t\t\tif (seriesDataItem) {\r\n\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\tif (seriesDataItem.categoryX == category) {\r\n\t\t\t\t\t\t\treturn seriesDataItem;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (series.yAxis == this) {\r\n\t\t\t\t\t\tif (seriesDataItem.categoryY == category) {\r\n\t\t\t\t\t\t\treturn seriesDataItem;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\tif (series.xAxis == this) {\r\n\t\t\t\t\t\tif (dataItem.categoryX == category) {\r\n\t\t\t\t\t\t\tif (!sdi) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (Math.abs(index - sdi.index) > Math.abs(index - dataItem.index)) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (series.yAxis == this) {\r\n\t\t\t\t\t\tif (dataItem.categoryY == category) {\r\n\t\t\t\t\t\t\tif (!sdi) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (Math.abs(index - sdi.index) > Math.abs(index - dataItem.index)) {\r\n\t\t\t\t\t\t\t\tsdi = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t//@todo\r\n\t\t\t\tif (findNearest) {\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn sdi;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the X coordinate for series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Category\r\n\t * @param location  Location (0-1)\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position = this.getPositionX(dataItem, key, location, stackKey, range);\r\n\r\n\t\tif ($type.isNaN(position)) {\r\n\t\t\treturn this.basePoint.x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.positionToPoint(position).x;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Category\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionX(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position;\r\n\t\tif ($type.hasValue(key)) {\r\n\t\t\tposition = this.categoryToPosition(dataItem.categories[key], location);\r\n\t\t}\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Y coordinate for series' data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Category\r\n\t * @param location  Location (0-1)\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\r\n\t\tlet position = this.getPositionY(dataItem, key, location, stackKey, range);\r\n\r\n\t\tif ($type.isNaN(position)) {\r\n\t\t\treturn this.basePoint.y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.positionToPoint(position).y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative position on axis for series' data item.\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param  dataItem  Data item\r\n\t * @param  key       Category\r\n\t * @param  location  Location (0-1)\r\n\t * @return           Relative position\r\n\t */\r\n\tpublic getPositionY(dataItem: XYSeriesDataItem, key?: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position;\r\n\t\tif ($type.hasValue(key)) {\r\n\t\t\tposition = this.categoryToPosition(dataItem.categories[key], location);\r\n\t\t}\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param dataItem  Data item\r\n\t * @param key       Category\r\n\t * @param location  Location (0-1)\r\n\t * @param stackKey  Stack key (?)\r\n\t * @param range Range to fit in\r\n\t * @return Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string, range?: IRange): number {\r\n\t\tlet position = this.categoryToPosition(dataItem.categories[key], location);\r\n\r\n\t\tif (range) {\r\n\t\t\tposition = $math.fitToRange(position, range.start, range.end);\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an absolute pixel coordinate of the start of the cell (category),\r\n\t * that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Position (px)\r\n\t * @return Cell start position (px)\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an absolute pixel coordinate of the end of the cell (category),\r\n\t * that specific position value falls into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param position  Position (px)\r\n\t * @return Cell end position (px)\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn this.roundPosition(position, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a category tooltip, based on specific position\r\n\t * within axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (category)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(this.positionToIndex(position));\r\n\r\n\t\tif (dataItem) {\r\n\t\t\tthis.tooltipDataItem = dataItem;\r\n\t\t\tthis.tooltip.dataItem = dataItem;\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treturn this.tooltipText;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._adapterO) {\r\n\t\t\t\treturn dataItem.category;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._adapterO.apply(\"getTooltipText\", dataItem.category);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an index of the category that corresponds to specific pixel\r\n\t * position within axis.\r\n\t *\r\n\t * @param position  Position (px)\r\n\t * @return Category index\r\n\t */\r\n\tpublic positionToIndex(position: number): number {\r\n\t\tposition = $math.round(position, 10);\r\n\t\tif (position < 0) {\r\n\t\t\tposition = 0;\r\n\t\t}\r\n\r\n\t\tif (position > 1) {\r\n\t\t\tposition = 1;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\t\tlet difference: number = endIndex - startIndex - this.startLocation - (1 - this.endLocation);\r\n\r\n\t\tposition += 1 / difference * this.startLocation;\r\n\t\tlet index: number = null;\r\n\r\n\t\tif (this._axisBreaks) {\r\n\t\t\tlet axisBreaks = this._axisBreaks;\r\n\r\n\t\t\t// in case we have some axis breaks\r\n\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\tlet breakStartPosition: number = axisBreak.startPosition;\r\n\t\t\t\tlet breakEndPosition: number = axisBreak.endPosition;\r\n\r\n\t\t\t\tlet breakStartIndex: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet breakEndIndex: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\tbreakStartIndex = $math.max(breakStartIndex, startIndex);\r\n\t\t\t\tbreakEndIndex = $math.min(breakEndIndex, endIndex);\r\n\r\n\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\tdifference -= (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n\r\n\t\t\t\t// position to the right of break end\r\n\t\t\t\tif (position > breakEndPosition) {\r\n\t\t\t\t\tstartIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);\r\n\t\t\t\t}\r\n\t\t\t\t// position to the left of break start\r\n\t\t\t\telse if (position < breakStartPosition) {\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// value within break\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n\t\t\t\t\tindex = breakStartIndex + Math.round(breakPosition * (breakEndIndex - breakStartIndex));\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = Math.floor(position * difference + startIndex);\r\n\t\t}\r\n\t\tif (index >= this.dataItems.length) {\r\n\t\t\tindex = this.dataItems.length - 1;\r\n\t\t}\r\n\t\t// not good, when panning out of bounds, each time one less item gets selected\r\n\t\t//if (index >= endIndex) {\r\n\t\t//\tindex--;\r\n\t\t//}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns category based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * This is a synonim of `getPositionLabel()` implemented here for consistentcy.\r\n\t *\r\n\t * @since 4.3.8\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic positionToCategory(position: number): string {\r\n\t\treturn this.getPositionLabel(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns category based on position.\r\n\t *\r\n\t * Please note that `position` represents position within axis which may be\r\n\t * zoomed and not correspond to Cursor's `position`.\r\n\t *\r\n\t * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n\t * @param position  Relative position on axis (0-1)\r\n\t * @return Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(this.positionToIndex(position));\r\n\t\tif (dataItem) {\r\n\t\t\treturn dataItem.category;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\t// This makes base grid to be drawn at the end of the axis and adds extra\r\n\t\t// grid which we need to nicely close the chart.\r\n\t\treturn this.renderer.positionToPoint(1);\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes Axis' renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\t\tsuper.initRenderer();\r\n\r\n\t\tlet renderer = this.renderer;\r\n\t\trenderer.baseGrid.disabled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Current frequency of labels of the axis.\r\n\t *\r\n\t * Normally it would be 1, but when labels start to be hidden due\r\n\t * to `minGridDistance` this read-only property will increase.\r\n\t *\r\n\t * @readonly\r\n\t * @since 4.2.0\r\n\t * @return Label frequency\r\n\t */\r\n\tpublic get frequency(): number {\r\n\t\treturn this._frequency;\r\n\t}\r\n\r\n\t/**\r\n\t * If set to a reference of [[ColumnSeries]] the categories will be sorted\r\n\t * by actual values.\r\n\t *\r\n\t * The categories are ordered in descending order (from highest values to\r\n\t * lowest). To reverse the order, use axis renderer's `inversed` setting.\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * categoryAxis.sortBySeries = series;\r\n\t * categoryAxis.renderer.inversed = true;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * categoryAxis.sortBySeries = series;\r\n\t * categoryAxis.renderer.inversed = true;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     // ...\r\n\t *     \"sortBySeries\": \"s1\",\r\n\t *     \"renderer\": {\r\n\t *       // ...\r\n\t *       \"inversed\": true\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.8.7\r\n\t * @param  value  Sort categories?\r\n\t */\r\n\tpublic set sortBySeries(value: ColumnSeries) {\r\n\t\tthis.setPropertyValue(\"sortBySeries\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sort categories?\r\n\t */\r\n\tpublic get sortBySeries(): ColumnSeries {\r\n\t\treturn this.getPropertyValue(\"sortBySeries\");\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\tif ($type.hasValue(config.sortBySeries) && $type.isString(config.sortBySeries)) {\r\n\t\t\t\tif (this.map.hasKey(config.sortBySeries)) {\r\n\t\t\t\t\tconfig.sortBySeries = this.map.getKey(config.sortBySeries);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.addDelayedMap(\"sortBySeries\", config.sortBySeries);\r\n\t\t\t\t\tdelete config.sortBySeries;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxis\"] = CategoryAxis;\r\nregistry.registeredClasses[\"CategoryAxisDataItem\"] = CategoryAxisDataItem;\r\n","/**\r\n * XY series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"./Series\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { XYCursor } from \"../cursors/XYCursor\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * [_minX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minX: number;\r\n\r\n\t/**\r\n\t * [_maxX description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxX: number;\r\n\r\n\t/**\r\n\t * [_minY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _minY: number;\r\n\r\n\t/**\r\n\t * [_maxY description]\r\n\t *\r\n\t * @todo Descripion\r\n\t */\r\n\tprotected _maxY: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic _component!: XYSeries;\r\n\r\n\t/**\r\n\t * References to any aggregate data items this data item is part of.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupDataItems: this[];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"XYSeriesDataItem\";\r\n\r\n\t\tthis.values.customValue = {};\r\n\r\n\t\tthis.values.valueX = { stack: 0 };\r\n\t\tthis.values.valueY = { stack: 0 };\r\n\t\tthis.values.openValueX = {};\r\n\t\tthis.values.openValueY = {};\r\n\r\n\t\tthis.values.dateX = {};\r\n\t\tthis.values.dateY = {};\r\n\t\tthis.values.openDateX = {};\r\n\t\tthis.values.openDateY = {};\r\n\r\n\t\tthis.setLocation(\"dateX\", 0.5, 0);\r\n\t\tthis.setLocation(\"dateY\", 0.5, 0);\r\n\r\n\t\tthis.setLocation(\"categoryX\", 0.5, 0);\r\n\t\tthis.setLocation(\"categoryY\", 0.5, 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's custom numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set customValue(value: number) {\r\n\t\tthis.setValue(\"customValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get customValue(): number {\r\n\t\treturn this.values.customValue.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set valueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get valueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateX(date: Date) {\r\n\t\tthis.setDate(\"dateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateX(): Date {\r\n\t\treturn this.getDate(\"dateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set dateY(date: Date) {\r\n\t\tthis.setDate(\"dateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get dateY(): Date {\r\n\t\treturn this.getDate(\"dateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryX(category: string) {\r\n\t\tthis.setCategory(\"categoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryX(): string {\r\n\t\treturn this.categories.categoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set categoryY(category: string) {\r\n\t\tthis.setCategory(\"categoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get categoryY(): string {\r\n\t\treturn this.categories.categoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on X value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueX(value: number) {\r\n\t\tthis.setValue(\"openValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueX(): number {\r\n\t\treturn this.values.openValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open numeric value on Y value axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set openValueY(value: number) {\r\n\t\tthis.setValue(\"openValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get openValueY(): number {\r\n\t\treturn this.values.openValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on X date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateX(date: Date) {\r\n\t\tthis.setDate(\"openDateX\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateX(): Date {\r\n\t\treturn this.getDate(\"openDateX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open date value on Y date-based axis.\r\n\t *\r\n\t * @param date  Date\r\n\t */\r\n\tpublic set openDateY(date: Date) {\r\n\t\tthis.setDate(\"openDateY\", date);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date\r\n\t */\r\n\tpublic get openDateY(): Date {\r\n\t\treturn this.getDate(\"openDateY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on X category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryX(category: string) {\r\n\t\tthis.setCategory(\"openCategoryX\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryX(): string {\r\n\t\treturn this.categories.openCategoryX;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's open category on Y category axis.\r\n\t *\r\n\t * @param category  Category\r\n\t */\r\n\tpublic set openCategoryY(category: string) {\r\n\t\tthis.setCategory(\"openCategoryY\", category);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get openCategoryY(): string {\r\n\t\treturn this.categories.openCategoryY;\r\n\t}\r\n\r\n\t/**\r\n\t * Return smallest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMin(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) {  // dumped because of non smooth zooming\r\n\t\tlet min: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value < min || !$type.isNumber(min)) {\r\n\t\t\t\tmin = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn min;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Return biggest value out of all item's value fields.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields      Fields to check in\r\n\t * @param working     Include working (temporary) values\r\n\t * @param stackValue  If item is in a stack, the value item starts as\r\n\t * @return Value\r\n\t */\r\n\tpublic getMax(fields: string[], working?: boolean, stackValue?: number): number {\r\n\t\t//if (this.visible) { // dumped because of non smooth zooming\r\n\t\tlet max: number;\r\n\r\n\t\tif (!$type.isNumber(stackValue)) {\r\n\t\t\tstackValue = 0;\r\n\t\t}\r\n\r\n\t\t$array.each(fields, (field) => {\r\n\t\t\tlet value: number;\r\n\r\n\t\t\tif (working) {\r\n\t\t\t\tvalue = this.getWorkingValue(field);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.getValue(field);\r\n\t\t\t}\r\n\r\n\t\t\tvalue += stackValue;\r\n\r\n\t\t\tif (value > max || !$type.isNumber(max)) {\r\n\t\t\t\tmax = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn max;\r\n\t\t//}\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Defines property set for a [[XYSeries]] tooltip event that contains information about dataItem\r\n */\r\nexport type XYSeriesTooltipEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t */\r\n\tdataItem: XYSeriesDataItem;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for horizontal axis.\r\n\t */\r\n\tvalueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for vertical axis.\r\n\t */\r\n\tvalueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for horizontal axis.\r\n\t */\r\n\tcategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category for vertical axis.\r\n\t */\r\n\tcategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for horizontal axis.\r\n\t */\r\n\tdateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds date for vertical axis.\r\n\t */\r\n\tdateY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for horizontal\r\n\t * axis.\r\n\t */\r\n\topenValueX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open numeric value for vertical\r\n\t * axis.\r\n\t */\r\n\topenValueY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for horizontal axis.\r\n\t */\r\n\topenCategoryX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open category for vertical axis.\r\n\t */\r\n\topenCategoryY?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for horizontal axis.\r\n\t */\r\n\topenDateX?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds open date for vertical axis.\r\n\t */\r\n\topenDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis value for the\r\n\t * item.\r\n\t */\r\n\tvalueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis open value for\r\n\t * the item.\r\n\t */\r\n\topenValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value for some custom data.\r\n\t */\r\n\tcustomValue?: string;\r\n}\r\n\r\n\r\n/**\r\n * Defines types of the aggregate value.\r\n *\r\n * @since 4.7.0\r\n */\r\nexport type GroupField = \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\";\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueX` data field.\r\n\t *\r\n\t * @default \"close\"\r\n\t */\r\n\tvalueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `valueY` data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tvalueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `customValue` value data field.\r\n\t * \r\n\t * @default \"close\"\r\n\t */\r\n\tcustomValue?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueX` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `openValueY` data field.\r\n\t * \r\n\t * @default \"open\"\r\n\t */\r\n\topenValueY?: GroupField;\r\n}\r\n\r\n/**\r\n * Defines properties for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tstacked?: boolean;\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tsnapTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tcursorTooltipEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tcursorHoverEnabled?: boolean;\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\texcludeFromTotal?: boolean;\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming)\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @default true\r\n\t */\r\n\thideTooltipWhileZooming?: boolean;\r\n\r\n\t/**\r\n\t * Should series bullets be masked?\r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * [boolean description]\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @default true\r\n\t */\r\n\tstackToNegative?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYSeries]].\r\n */\r\nexport interface IXYSeriesEvents extends ISeriesEvents {\r\n\t/**\r\n\t * Invoked when series tooltip was shown on some particular data item\r\n\t */\r\n\ttooltipshownat: XYSeriesTooltipEvent;\r\n}\r\n\r\n/**\r\n * Defines adapters for [[XYSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYSeriesAdapters extends ISeriesAdapters, IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Applied to a source value that is being used to calculate aggregate values\r\n\t * for a grouped data item.\r\n\t * \r\n\t * applied only if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.35\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupValue: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n\t/**\r\n\t * Applied to a calculated aggregate data item and its values, so that\r\n\t * specific logic can be applied to calculation of derivative values.\r\n\t *\r\n\t * User's code needs to modify specific value in `values` object, most\r\n\t * probably `close` as it's the default grouping field.\r\n\t * \r\n\t * Applied only * if `groupData = true` is set on the related `DateAxis`.\r\n\t *\r\n\t * @since 4.9.36\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-custom-functions-for-data-item-grouping/} for more information\r\n\t */\r\n\tgroupDataItem: {\r\n\t\tdataItem: XYSeriesDataItem,\r\n\t\tinterval: ITimeInterval,\r\n\t\tdataField: IXYSeriesDataFields,\r\n\t\tdate: Date,\r\n\t\tvalue: number\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class XYSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: IXYSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Indicates which of the series' `dataFields` to calculate aggregate values\r\n\t * for.\r\n\t *\r\n\t * Available data fields for all [[XYSeries]] are:\r\n\t * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n\t *\r\n\t * [[CandlestickSeries]] adds:\r\n\t * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n\t *\r\n\t * Available options:\r\n\t * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n\t *\r\n\t * Defaults are as follows:\r\n\t * * `valueX`: `\"close\"`\r\n\t * * `valueY`: `\"close\"`\r\n\t * * `openValueX`: `\"open\"`\r\n\t * * `openValueY`: `\"open\"`\r\n\t * * `lowValueX`: `\"low\"`\r\n\t * * `lowValueY`: `\"low\"`\r\n\t * * `highValueX`: `\"high\"`\r\n\t * * `highValueY`: `\"high\"`\r\n\t *\r\n\t * Is required only if data being plotted on a `DateAxis` and\r\n\t * its `groupData` is set to `true`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * let series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n\t * dateAxis.groupData = true;\r\n\t *\r\n\t * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n\t *\r\n\t * var series = chart.series.push(new am4charts.LineSeries());\r\n\t * series.dataFields.dateX = \"date\";\r\n\t * series.dataFields.valueY = \"value\";\r\n\t * series.groupFields.valueY = \"average\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"xAxes\": [{\r\n\t *     \"type\": \"DateAxis\",\r\n\t *     \"groupData\": true\r\n\t *   }],\r\n\t *   \"yAxes\": [{\r\n\t *     \"type\": \"ValueAxis\"\r\n\t *   }],\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"LineSeries\",\r\n\t *     \"dataFields\": {\r\n\t *       \"dateX\": \"date\",\r\n\t *       \"valueY\": \"value\"\r\n\t *     },\r\n\t *     \"groupFields\": {\r\n\t *       \"valueY\": \"average\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above setup will ensure, that if there are many data items within\r\n\t * selected range, they will be grouped into aggregated data points, using\r\n\t * average value of all the values.\r\n\t *\r\n\t * For example if we have 2 years worth of daily data (~700 data items), when\r\n\t * fully zoomed out, the chart would show ~100 data items instead: one for\r\n\t * each week in those two years.\r\n\t *\r\n\t * Grouping will occur automatically, based on current selection range, and\r\n\t * will change dynamically when user zooms in/out the chart.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic groupFields: this[\"_groupFields\"] = {};\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IXYSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t */\r\n\tprotected _xAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t */\r\n\tprotected _yAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: XYChart;\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t */\r\n\tprotected _baseAxis: Axis;\r\n\r\n\t/**\r\n\t * Total data item count.\r\n\t */\r\n\tprotected _count: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * Data item count in current selection.\r\n\t */\r\n\tprotected _scount: Dictionary<string, number>;\r\n\r\n\t/**\r\n\t * [_xField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xField: string;\r\n\r\n\t/**\r\n\t * [_yField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yField: string;\r\n\r\n\t/**\r\n\t * [_xOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xOpenField: string;\r\n\r\n\t/**\r\n\t * [_yOpenField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yOpenField: string;\r\n\r\n\t/**\r\n\t * [_tooltipXField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipXField: string;\r\n\r\n\t/**\r\n\t * [_tooltipYField description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tooltipYField: string;\r\n\r\n\t/**\r\n\t * [_xValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _xValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * [_yValueFields description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _yValueFields: Array<string> = [];\r\n\r\n\t/**\r\n\t * Series which is stacked on top of this series, if any.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic stackedSeries: XYSeries;\r\n\r\n\t/**\r\n\t * Dataitem of previously shown tooltip, used to avoid multiple\r\n\t * tooltipshownat dispatches.\r\n\t */\r\n\tprotected _prevTooltipDataItem: XYSeriesDataItem;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _baseInterval: { [index: string]: ITimeInterval } = {};\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataGrouped = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic usesShowFields: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _dataSetChanged: boolean = false;\r\n\r\n\r\n\tprotected _maxxX: number = 100000;\r\n\tprotected _maxxY: number = 100000;\r\n\r\n\tprotected _propertiesChanged: boolean = false;\r\n\r\n\t/**\r\n\t * If this series was used to create a series for scrollbar, this is a reference to it.\r\n\t */\r\n\tpublic scrollbarSeries: this;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic outOfRange: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYSeries\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\r\n\t\tthis.groupFields.valueX = \"close\";\r\n\t\tthis.groupFields.valueY = \"close\";\r\n\t\tthis.groupFields.customValue = \"close\";\r\n\r\n\t\tthis.groupFields.openValueX = \"open\";\r\n\t\tthis.groupFields.openValueY = \"open\";\r\n\r\n\t\tthis.cursorTooltipEnabled = true;\r\n\r\n\t\tthis.cursorHoverEnabled = true;\r\n\t\tthis.excludeFromTotal = false;\r\n\r\n\t\tthis.mainContainer.mask = new Sprite();\r\n\t\tthis.mainContainer.mask.setElement(this.paper.add(\"path\"));\r\n\r\n\t\tthis.stacked = false;\r\n\t\tthis.snapTooltip = false;\r\n\r\n\t\tthis._showBullets = false;\r\n\r\n\t\tthis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\tthis.properties.stackToNegative = true;\r\n\r\n\t\tthis.hideTooltipWhileZooming = true;\r\n\t\tthis.setPropertyValue(\"maskBullets\", true);\r\n\r\n\t\tthis.tooltip.events.on(\"hidden\", () => {\r\n\t\t\tthis.returnBulletDefaultState();\r\n\t\t}, undefined, false)\r\n\r\n\t\tthis._disposers.push(this._xAxis);\r\n\t\tthis._disposers.push(this._yAxis);\r\n\r\n\t\tthis.observe(visualProperties, () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis._propertiesChanged = true;\r\n\t\t\t\tif (this.legendDataItem) {\r\n\t\t\t\t\tthis.legendDataItem.childrenCreated = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.chart && this.chart.legend) {\r\n\t\t\t\t\tthis.chart.legend.invalidateDataItems();\r\n\t\t\t\t}\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"X/Y Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new XYSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic resetExtremes() {\r\n\t\tthis._tmin.clear();\r\n\t\tthis._tmax.clear();\r\n\r\n\t\tthis._smin.clear();\r\n\t\tthis._smax.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataChangeUpdate() {\r\n\t\tthis.dataGrouped = false;\r\n\t\tthis._baseInterval = {};\r\n\t\tthis._currentDataSetId = \"\";\r\n\r\n\t\tthis.resetExtremes();\r\n\r\n\t\tif (this.xAxis) {\r\n\t\t\tthis.xAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\r\n\t\tif (this.yAxis) {\r\n\t\t\tthis.yAxis.seriesDataChangeUpdate(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series' data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis._baseInterval = {};\r\n\t\tlet dataFields = this.dataFields;\r\n\t\tif (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n\t\t\tthis.usesShowFields = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.usesShowFields = false;\r\n\t\t}\r\n\r\n\t\tthis.defineFields();\r\n\r\n\t\tif (this.data.length > 0) {\r\n\t\t\tthis.dataChangeUpdate();\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.updateItemReaderText();\r\n\t\tif (this.chart) {\r\n\t\t\tif (!$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._xField]) || !$type.hasValue(this.dataFields[<keyof this[\"_dataFields\"]>this._yField])) {\r\n\t\t\t\tthrow Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 4.7.21 solves 51540\r\n\t\tif (this.inited && this.isHidden) {\r\n\t\t\tthis.hide(0);\r\n\t\t}\r\n\r\n\t\tthis.dataGrouped = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data item.\r\n\t *\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  Raw data\r\n\t * @param index        Index of the data item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\ttry {\r\n\t\t\tsuper.processDataItem(dataItem, dataContext);\r\n\r\n\t\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\r\n\t\t\tthis.setInitialWorkingValues(dataItem);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tif (this._chart) {\r\n\t\t\t\tthis._chart.raiseCriticalError(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * When validating raw data, instead of processing data item, we update it\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item\r\n\t */\r\n\tprotected updateDataItem(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.updateDataItem(dataItem);\r\n\r\n\t\t//dataItem.events.disable();\r\n\t\tthis.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n\t\tthis.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n\t\t//dataItem.events.enable();\t\t\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Inits data item's working values.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @param index     Data item's index\r\n\t */\r\n\r\n\tprotected setInitialWorkingValues(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis) {\r\n\t\t\tlet dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n\t\t\tif (dataItemsX) {\r\n\t\t\t\tdataItemsX.clear();\r\n\t\t\t}\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(xAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (yAxis) {\r\n\t\t\tlet dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n\t\t\tif (dataItemsY) {\r\n\t\t\t\tdataItemsY.clear();\r\n\t\t\t}\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis.clearCatAxis(yAxis);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected clearCatAxis(axis: CategoryAxis) {\r\n\t\tlet uid = this.uid;\r\n\t\taxis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.seriesDataItems[uid]) {\r\n\t\t\t\tdataItem.seriesDataItems[uid] = [];\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tlet xAxisFieldName: string = xAxis.axisFieldName;\r\n\t\t\tlet xField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(xAxisFieldName + \"X\");\r\n\t\t\tlet xOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(xAxisFieldName) + \"X\");\r\n\r\n\t\t\tlet yAxisFieldName: string = yAxis.axisFieldName;\r\n\t\t\tlet yField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(yAxisFieldName + \"Y\");\r\n\t\t\tlet yOpenField: $type.Keyof<this[\"_dataFields\"]> = <$type.Keyof<this[\"_dataFields\"]>>(\"open\" + $utils.capitalize(yAxisFieldName) + \"Y\");\r\n\r\n\t\t\tthis._xField = xField;\r\n\t\t\tthis._yField = yField;\r\n\r\n\t\t\tif (this.dataFields[xOpenField]) {\r\n\t\t\t\tthis._xOpenField = xOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataFields[yOpenField]) {\r\n\t\t\t\tthis._yOpenField = yOpenField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == xAxis) {\r\n\t\t\t\tthis._xOpenField = xField;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stacked && this.baseAxis == yAxis) {\r\n\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t}\r\n\r\n\t\t\tif ((xAxis instanceof CategoryAxis) && (yAxis instanceof CategoryAxis)) {\r\n\t\t\t\tif (!this._yOpenField) {\r\n\t\t\t\t\tthis._yOpenField = yField;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._xValueFields = [];\r\n\t\t\tthis._yValueFields = [];\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xOpenField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yOpenField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [axis description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param axis    Axis\r\n\t * @param fields  Fields (?)\r\n\t * @param field   Field\r\n\t */\r\n\tprotected addValueField<Key extends keyof this[\"_dataFields\"]>(axis: Axis, fields: Array<Key>, field: Key): void {\r\n\t\tif (axis instanceof ValueAxis) {\r\n\t\t\tif ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n\t\t\t\tfields.push(field);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets category field from the category axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setCategoryAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: CategoryAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.category;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets date field from the date axis.\r\n\t *\r\n\t * User might set field for category axis only, but not for series. In such\r\n\t * case, we take field value from axis and set it for series.\r\n\t *\r\n\t * @param field  Field\r\n\t * @param axis   Axis\r\n\t */\r\n\tprotected setDateAxisField<Key extends keyof this[\"_dataFields\"]>(field: Key, axis: DateAxis): void {\r\n\t\tif (!$type.hasValue(this.dataFields[field])) {\r\n\t\t\tthis.dataFields[field] = <any>axis.dataFields.date;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs after-draw tasks, e.g. creates masks.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\tthis.createMask();\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\t\t// this mask from which we cut out ranges. does not work well if ranges overlap.\r\n\t\tif (this.mainContainer.mask) {\r\n\t\t\tlet path: string = this.getMaskPath();\r\n\r\n\t\t\t// @todo: this approach won't work well on circluar or other non x/y axes\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (range) => {\r\n\t\t\t\tif (range.axisFill.fillPath) {\r\n\t\t\t\t\trange.axisFill.validate();\r\n\t\t\t\t\tpath += range.axisFill.fillPath;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.mainContainer.mask.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to use as series mask.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\treturn $path.rectToPath({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.xAxis.axisLength,\r\n\t\t\t\theight: this.yAxis.axisLength\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns axis data field to use.\r\n\t *\r\n\t * @param axis  Axis\r\n\t * @return Field name\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\tif (axis == this.xAxis) {\r\n\t\t\treturn this.xField;\r\n\t\t}\r\n\t\tif (axis == this.yAxis) {\r\n\t\t\treturn this.yField;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\r\n\t\t\tthis._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\r\n\t\t}\r\n\r\n\t\t// this helps date axis to check which baseInterval we should use\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.updateAxisBySeries();\r\n\t\t\tyAxis.updateAxisBySeries();\r\n\t\t}\r\n\r\n\t\tsuper.validateDataItems();\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\txAxis.postProcessSeriesDataItems(this);\r\n\t\t\tyAxis.postProcessSeriesDataItems(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data range.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataRange() {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.dataRangeInvalid) {\r\n\t\t\t\txAxis.validateDataRange();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.dataRangeInvalid) {\r\n\t\t\t\tyAxis.validateDataRange();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (xAxis.invalid) {\r\n\t\t\t\txAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis.invalid) {\r\n\t\t\t\tyAxis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tthis.y = yAxis.pixelY;\r\n\t\t\tthis.x = xAxis.pixelX;\r\n\r\n\r\n\t\t\tthis._showBullets = true;\r\n\t\t\tlet minBulletDistance: number = this.minBulletDistance;\r\n\t\t\tif ($type.isNumber(minBulletDistance)) {\r\n\t\t\t\tif (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n\t\t\t\t\tthis._showBullets = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.updateTooltip();\r\n\r\n\t\tif ((xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped) || (yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tlet chart = this.chart;\r\n\t\tlet maskBullets = this.maskBullets;\r\n\t\tif (chart && maskBullets) {\r\n\t\t\tif (chart.className == \"XYChart\") {\r\n\t\t\t\tif (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\r\n\t\t\t\t\tif (this.yAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\r\n\t\t\t\t\tif (this.xAxis) {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set xAxis(axis: Axis) {\r\n\t\tthis.setXAxis(axis);\r\n\t}\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._xAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._xAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._xAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get xAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._xAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.xAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no X axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.xAxis = axis;\r\n\t\t\t}\r\n\t\t\treturn this._xAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y axis the series is attached to.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set yAxis(axis: Axis) {\r\n\t\tthis.setYAxis(axis);\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tlet oldAxis = this._yAxis.get();\r\n\t\tif (oldAxis != axis) {\r\n\t\t\tif (oldAxis) {\r\n\t\t\t\tthis.dataItemsByAxis.removeKey(oldAxis.uid);\r\n\t\t\t\t// TODO why is this here ?\r\n\t\t\t\tthis._yAxis.dispose();\r\n\t\t\t\t// temp @todo: why it is not disposed?\r\n\t\t\t\toldAxis.series.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._yAxis.set(axis, axis.registerSeries(this));\r\n\r\n\t\t\tif (axis.chart instanceof XYChart) {\r\n\t\t\t\taxis.chart.handleYAxisSet(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataItemsByAxis.setKey(axis.uid, new Dictionary<string, this[\"_dataItem\"]>());\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get yAxis(): Axis {\r\n\t\tif (this.chart) {\r\n\t\t\tif (!this._yAxis.get()) {\r\n\t\t\t\tconst axis = this.chart.yAxes.getIndex(0);\r\n\r\n\t\t\t\tif (!axis) {\r\n\t\t\t\t\tthrow Error(\"There are no Y axes on chart.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.yAxis = axis;\r\n\t\t\t}\r\n\r\n\t\t\treturn this._yAxis.get();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The main (base) axis.\r\n\t *\r\n\t * This is the axis that series fills will go to, or grow animations will\r\n\t * happen from.\r\n\t *\r\n\t * @param value  Axis\r\n\t */\r\n\tpublic set baseAxis(value: Axis) {\r\n\t\tif (this._baseAxis != value) {\r\n\t\t\tthis._baseAxis = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get baseAxis(): Axis {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this._baseAxis && xAxis && yAxis) {\r\n\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = yAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._baseAxis) {\r\n\t\t\t\tthis._baseAxis = xAxis;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._baseAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number, skipRaw?: boolean): void {\r\n\t\tsuper.addData(rawDataItem, removeCount, skipRaw);\r\n\t\tconst scrollbarSeries = this.scrollbarSeries;\r\n\t\tif (scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.addData(rawDataItem, removeCount, true);\r\n\t\t\tthis.scrollbarSeries._parseDataFrom = this._parseDataFrom;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected setData(value: any[]) {\r\n\t\tsuper.setData(value);\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.setData(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the chart use particular data set.\r\n\t *\r\n\t * If `id` is not provided or there is no such data set, main data will be\r\n\t * used.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t * @param  id  Data set id\r\n\t */\r\n\tpublic setDataSet(id: string): boolean {\r\n\t\tlet changed = super.setDataSet(id);\r\n\r\n\t\tif (changed) {\r\n\r\n\t\t\tthis._dataSetChanged = true;\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tthis.resetExtremes();\r\n\r\n\t\t\tif (dataItems && dataItems.length > 0) {\r\n\r\n\t\t\t\tlet xAxis = this.xAxis;\r\n\t\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\t\tthis._prevStartIndex = undefined;\r\n\t\t\t\tthis._prevEndIndex = undefined;\r\n\t\t\t\tthis._startIndex = undefined;\r\n\t\t\t\tthis._endIndex = undefined;\r\n\r\n\t\t\t\tif (!this.appeared) {\r\n\t\t\t\t\tthis.processValues(false); // this will slow down!\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\r\n\t\t\t\t\tthis._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n\t\t\t\t\tthis._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n\t\t\t\t\tthis.dispatch(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Processes values after data items' were added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItems  Data items\r\n\t */\r\n\tpublic processValues(working: boolean): void {\r\n\t\tsuper.processValues(working);\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet dataItems = this.dataItems;\r\n\r\n\t\tlet minX = Infinity;\r\n\t\tlet maxX = - Infinity;\r\n\r\n\t\tlet minY = Infinity;\r\n\t\tlet maxY = - Infinity;\r\n\r\n\t\tlet startIndex = this.startIndex;\r\n\t\tlet endIndex = this.endIndex;\r\n\r\n\t\tlet workingStartIndex = startIndex;\r\n\t\tlet workingEndIndex = endIndex;\r\n\r\n\t\tif (!working) {\r\n\t\t\tstartIndex = 0;\r\n\t\t\tendIndex = this.dataItems.length;\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\tif (this.stacked) {\r\n\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// this is mainly for value axis to calculate total and perecent.total of each series category\r\n\t\txAxis.processSeriesDataItems();\r\n\t\tyAxis.processSeriesDataItems();\r\n\r\n\t\tlet xAxisId: string = xAxis.uid;\r\n\t\tlet yAxisId: string = yAxis.uid;\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!working) {\r\n\t\t\tif (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\r\n\t\t\t\tlet stackedSeries = this.stackedSeries;\r\n\t\t\t\tif (stackedSeries) {\r\n\t\t\t\t\tif (stackedSeries.isDisposed()) {\r\n\t\t\t\t\t\tthis.stackedSeries = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstackedSeries.processValues(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n\t\t\tminX = Infinity;\r\n\t\t\tmaxX = - Infinity;\r\n\r\n\t\t\tminY = Infinity;\r\n\t\t\tmaxY = - Infinity;\r\n\r\n\t\t\tfor (let i = workingStartIndex; i < workingEndIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\tthis.getStackValue(dataItem, working);\r\n\r\n\t\t\t\tlet stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\tlet stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n\r\n\t\t\t\tminX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n\r\n\t\t\t\tminY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n\r\n\t\t\t\tmaxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n\t\t\t\tmaxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n\r\n\t\t\t\t// if it's stacked, pay attention to stack value\r\n\t\t\t\tif (this.stacked) {\r\n\t\t\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\t\t\tif (stackY < minY) {\r\n\t\t\t\t\t\t\tminY = stackY\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackY > maxY) {\r\n\t\t\t\t\t\t\tmaxY = stackY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\t\t\tif (stackX < minX) {\r\n\t\t\t\t\t\t\tminX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stackX > maxX) {\r\n\t\t\t\t\t\t\tmaxX = stackX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n\t\t\tthis._smin.setKey(xAxisId, undefined);\r\n\t\t\tthis._smax.setKey(xAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n\t\t\tthis._smin.setKey(yAxisId, undefined);\r\n\t\t\tthis._smax.setKey(yAxisId, undefined);\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n\t\t\tthis._smin.setKey(xAxisId, minX);\r\n\t\t\tthis._smax.setKey(xAxisId, maxX);\r\n\t\t\tthis._smin.setKey(yAxisId, minY);\r\n\t\t\tthis._smax.setKey(yAxisId, maxY);\r\n\r\n\t\t\tif (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n\t\t\t\t/// new, helps to handle issues with change percent\r\n\t\t\t\tlet changed = false;\r\n\r\n\t\t\t\tif (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(yAxisId);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && minY < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(yAxisId, minY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(yAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && maxY > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(yAxisId, maxY);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\r\n\t\t\t\t\tlet tmin = this._tmin.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && minX < tmin) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmin.setKey(xAxisId, minX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmax = this._tmax.getKey(xAxisId);\r\n\t\t\t\t\tif (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && maxX > tmax) || (this.stackedSeries && !this.isHidden)) {\r\n\t\t\t\t\t\tthis._tmax.setKey(xAxisId, maxX);\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.start == 0 && this.end == 1) {\r\n\t\t\t\t\t// yes, its ok. otherwise min/max won't be updated when zooming out\r\n\t\t\t\t\tthis._dataSetChanged = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!working && this.stacked) {\r\n\t\t\tthis.processValues(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number) {\r\n\t\tsuper.hideTooltip(duration);\r\n\t\tthis.returnBulletDefaultState();\r\n\t\tthis._prevTooltipDataItem = undefined;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific position.\r\n\t *\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): IPoint {\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"];\r\n\r\n\t\tif (this.visible && !this.isHiding && !this.isShowing) {\r\n\r\n\t\t\tlet xAxis: Axis = this._xAxis.get();\r\n\t\t\tlet yAxis: Axis = this._yAxis.get();\r\n\r\n\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n\t\t\t}\r\n\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\tdataItem = <this[\"_dataItem\"]>yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n\t\t\t}\r\n\r\n\t\t\tlet point = this.showTooltipAtDataItem(dataItem);\r\n\r\n\t\t\tif (point) {\r\n\t\t\t\treturn point;\r\n\t\t\t}\r\n\r\n\t\t\t// so that if tooltip is shown on columns or bullets for it not to be hidden\r\n\t\t\tif (!this.tooltipText && !this.tooltipHTML) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.hideTooltip();\r\n\t}\r\n\r\n\tprotected getAdjustedXLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationX?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\tprotected getAdjustedYLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationY?: number) {\r\n\t\treturn dataItem.locations[field];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows series tooltip at specific dataItem.\r\n\t *\r\n\t * @param dataItem\r\n\t */\r\n\tpublic showTooltipAtDataItem(dataItem: this[\"_dataItem\"]): IPoint {\r\n\r\n\t\tlet cursor = <XYCursor>this.chart.cursor;\r\n\t\tif (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n\t\t\tthis.hideTooltip();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.returnBulletDefaultState(dataItem);\r\n\t\tif (dataItem && dataItem.visible) {\r\n\r\n\t\t\tthis.updateLegendValue(dataItem);\r\n\t\t\tif (this.cursorTooltipEnabled) {\r\n\t\t\t\tthis.tooltipDataItem = dataItem;\r\n\r\n\t\t\t\t// todo: add tooltipXField and tooltipYField.\r\n\t\t\t\tlet tooltipXField = this.tooltipXField;\r\n\t\t\t\tlet tooltipYField = this.tooltipYField;\r\n\r\n\t\t\t\tif ($type.hasValue((<any>dataItem)[tooltipXField]) && $type.hasValue((<any>dataItem)[tooltipYField])) {\r\n\r\n\t\t\t\t\tlet tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n\r\n\t\t\t\t\tif (tooltipPoint) {\r\n\r\n\t\t\t\t\t\tif (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\r\n\t\t\t\t\t\t\t// void\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.tooltipX = tooltipPoint.x;\r\n\t\t\t\t\t\t\tthis.tooltipY = tooltipPoint.y;\r\n\r\n\t\t\t\t\t\t\tif (this._prevTooltipDataItem != dataItem) {\r\n\r\n\t\t\t\t\t\t\t\tthis.dispatchImmediately(\"tooltipshownat\", {\r\n\t\t\t\t\t\t\t\t\ttype: \"tooltipshownat\",\r\n\t\t\t\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tthis._prevTooltipDataItem = dataItem;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.cursorHoverEnabled) {\r\n\t\t\t\t\t\t\t\tfor (let sprite of dataItem.sprites) {\r\n\t\t\t\t\t\t\t\t\tif (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tif (!sprite.interactions.isRealHover) {\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.dispatchImmediately(\"over\");\r\n\t\t\t\t\t\t\t\t\t\t\tsprite.interactions.isRealHover = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tsprite.isHover = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (this.showTooltip()) {\r\n\t\t\t\t\t\t\t\treturn $utils.spritePointToSvg({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.updateLegendValue(dataItem, true);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Returns default state to bullets when tooltip is shown at some other data\r\n\t * item or hidden\r\n\t */\r\n\tprotected returnBulletDefaultState(dataItem?: XYSeriesDataItem) {\r\n\t\tif (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n\t\t\tfor (let sprite of this._prevTooltipDataItem.sprites) {\r\n\t\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\t\tconst fireEvent = sprite.interactions.isRealHover;\r\n\t\t\t\t\tsprite.isHover = false;\r\n\t\t\t\t\tif (fireEvent) {\r\n\t\t\t\t\t\tsprite.dispatchImmediately(\"out\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._prevTooltipDataItem = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Bullet): boolean {\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bulletTemplate.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bulletTemplate.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tif ((this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (bulletTemplate.disabled) {\r\n\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\tif (dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tif (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\r\n\t\t\tthis.showTooltipAtDataItem(<this[\"_dataItem\"]>this.tooltipDataItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet) {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: XYSeriesDataItem = <XYSeriesDataItem>bullet.dataItem;\r\n\r\n\t\t// use series xField/yField if bullet doesn't have fields set\r\n\t\tlet xField: string = bullet.xField;\r\n\t\tif (!$type.hasValue(xField)) {\r\n\t\t\txField = this.xField;\r\n\t\t}\r\n\r\n\t\tlet yField: string = bullet.yField;\r\n\t\tif (!$type.hasValue(yField)) {\r\n\t\t\tyField = this.yField;\r\n\t\t}\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif ((xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet bulletLocationX: number = this.getBulletLocationX(bullet, xField);\r\n\t\t\tlet bulletLocationY: number = this.getBulletLocationY(bullet, yField);\r\n\r\n\t\t\tlet point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n\t\t\tif (point) {\r\n\t\t\t\tlet xOpenField = this.xOpenField;\r\n\t\t\t\tlet yOpenField = this.yOpenField;\r\n\r\n\t\t\t\tlet positionX: number;\r\n\t\t\t\tlet positionY: number;\r\n\r\n\r\n\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = xAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = xAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\t\t\t\t\tif (xAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\t\t\tbulletLocationX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(xField);\r\n\r\n\t\t\t\t\tif (!xOpenField) {\r\n\t\t\t\t\t\topenValue = xAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(xOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueX\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (xAxis instanceof CategoryAxis) {\r\n\r\n\t\t\t\t\tlet rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\r\n\t\t\t\t\tlet leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\r\n\r\n\t\t\t\t\tpositionX = xAxis.categoryToPosition((<any>dataItem)[xField], rightLocation);\r\n\t\t\t\t\tlet openPositionX: number;\r\n\r\n\r\n\t\t\t\t\tif (xOpenField) {\r\n\t\t\t\t\t\topenPositionX = xAxis.categoryToPosition((<any>dataItem)[xOpenField], leftLocation);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openPositionX)) {\r\n\t\t\t\t\t\topenPositionX = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(openValue)) {\r\n\t\t\t\t\t\topenValue = closeValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tif (openValue == closeValue) {\r\n\t\t\t\t\t\tlet baseInterval = yAxis.baseInterval;\r\n\t\t\t\t\t\tlet dateFormatter = yAxis.dateFormatter;\r\n\t\t\t\t\t\topenValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n\t\t\t\t\t\tcloseValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet middleValue: number;\r\n\r\n\t\t\t\t\tif (yAxis == this.baseAxis) {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tmiddleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\t\t\tbulletLocationY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet openValue: number;\r\n\t\t\t\t\tlet closeValue: number = dataItem.getWorkingValue(yField);\r\n\r\n\t\t\t\t\tif (!yOpenField) {\r\n\t\t\t\t\t\topenValue = yAxis.baseValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\topenValue = dataItem.getWorkingValue(yOpenField);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet stack: number = dataItem.getValue(\"valueY\", \"stack\");\r\n\t\t\t\t\topenValue += stack;\r\n\t\t\t\t\tcloseValue += stack;\r\n\r\n\t\t\t\t\tlet middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.valueToPosition(middleValue);\r\n\t\t\t\t}\r\n\t\t\t\telse if (yAxis instanceof CategoryAxis) {\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], bulletLocationY);\r\n\r\n\t\t\t\t\tlet topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\r\n\t\t\t\t\tlet bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\r\n\r\n\t\t\t\t\tpositionY = yAxis.categoryToPosition((<any>dataItem)[yField], topLocation);\r\n\t\t\t\t\tlet openPositionY: number;\r\n\r\n\t\t\t\t\tif (yOpenField) {\r\n\t\t\t\t\t\topenPositionY = yAxis.categoryToPosition((<any>dataItem)[yOpenField], bottomLocation);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.isNumber(openPositionY)) {\r\n\t\t\t\t\t\topenPositionY = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpositionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbullet.visible = true;\r\n\t\t\t\tthis.positionBulletReal(bullet, positionX, positionY);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbullet.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet: Sprite, positionX: number, positionY: number) {\r\n\t\tbullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n\t\tbullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n\t}\r\n\r\n\t/**\r\n\t * returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationX(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationX;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bullet x location\r\n\t * @ignore\r\n\t */\r\n\tprotected getBulletLocationY(bullet: Bullet, field: string): number {\r\n\t\tlet bulletLocation: number = bullet.locationY;\r\n\t\tlet dataItem = bullet.dataItem;\r\n\t\tif (!$type.isNumber(bulletLocation)) {\r\n\t\t\tbulletLocation = dataItem.workingLocations[field];\r\n\t\t}\r\n\t\treturn bulletLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * This method must be called if you update Series' data fields that might\r\n\t * affect stacking of the series.\r\n\t *\r\n\t * Since individual `dataField` changes are not being monitored, you need\r\n\t * todo it manually for changes to take affect.\r\n\t *\r\n\t * @since 4.7.21\r\n\t */\r\n\tpublic updateStacking(): void {\r\n\t\tthis.invalidateDataItems();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.series.each((series) => {\r\n\t\t\t\tif (series.baseAxis == this.baseAxis) {\r\n\t\t\t\t\tseries.stackedSeries = undefined;\r\n\t\t\t\t\tseries.invalidateDataItems();\r\n\t\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Can items from this series be included into stacks?\r\n\t * \r\n\t * Note: proper stacking is only possible if series have the same number\r\n\t * of data items. To ensure this, don't set data directly on series\r\n\t * but do this on chart instead.\r\n\t *\r\n\t * @default false\r\n\t * @param stacked  Can be stacked?\r\n\t */\r\n\tpublic set stacked(stacked: boolean) {\r\n\t\tif (this.setPropertyValue(\"stacked\", stacked, true)) {\r\n\t\t\tthis.updateStacking();\r\n\r\n\t\t\tlet xAxis = this.xAxis;\r\n\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\tif (!stacked) {\r\n\t\t\t\tlet field: string;\r\n\r\n\t\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.xField;\r\n\t\t\t\t}\r\n\t\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tfield = this.yField;\r\n\t\t\t\t}\r\n\t\t\t\tif (field) {\r\n\t\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Can be stacked?\r\n\t */\r\n\tpublic get stacked(): boolean {\r\n\t\treturn this.getPropertyValue(\"stacked\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should the nearest tooltip be shown if no data item is found on the\r\n\t * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Should snap?\r\n\t */\r\n\tpublic set snapTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should snap?\r\n\t */\r\n\tpublic get snapTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapTooltip\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tif(this.isHidden){\r\n\t\t\tif (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.yAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.yAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t\tif (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\r\n\t\t\t\tthis._tmin.setKey(this.xAxis.uid, undefined);\r\n\t\t\t\tthis._tmax.setKey(this.xAxis.uid, undefined);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fields: string[];\r\n\t\tif (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t}\r\n\r\n\t\tif (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t}\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\t\tlet delay: number = 0;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t\tdelay = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tanim = dataItem.show(realDuration, delay, fields);\r\n\t\t});\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.show(0, 0, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\r\n\t\tif (this.hidden) {\r\n\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\tthis.hidden = false;\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[];\r\n\t\tlet value: number;\r\n\t\tlet xAxis: Axis = this.xAxis;\r\n\r\n\t\tif (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\r\n\t\t\tfields = this._xValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = xAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = xAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet yAxis: Axis = this.yAxis;\r\n\t\tif (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\r\n\t\t\tfields = this._yValueFields;\r\n\t\t\t// animate to zero if 0 is within zoomMin/zoomMax\r\n\t\t\tif (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n\t\t\t\tvalue = yAxis.baseValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = yAxis.min;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//if ($type.hasValue(fields)) {\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif (!options.animationsEnabled) {\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet anim: Animation;\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tlet realDuration = interpolationDuration;\r\n\r\n\t\t\tif (i < this.startIndex - 10 || i > this.endIndex + 10) {\r\n\t\t\t\trealDuration = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (realDuration == 0) {\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this.sequencedInterpolation && realDuration > 0) {\r\n\t\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t\t}\r\n\t\t\t\tanim = dataItem.hide(realDuration, delay, value, fields);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// other data sets\r\n\t\tthis.dataSets.each((key, dataSet) => {\r\n\t\t\tif (dataSet != this.dataItems) {\r\n\t\t\t\tdataSet.each((dataItem) => {\r\n\t\t\t\t\tdataItem.events.disable();\r\n\t\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\t\tdataItem.events.enable();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this.mainDataSet != this.dataItems) {\r\n\t\t\tthis.mainDataSet.each((dataItem) => {\r\n\t\t\t\tdataItem.events.disable();\r\n\t\t\t\tdataItem.hide(0, 0, value, fields);\r\n\t\t\t\tdataItem.events.enable();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet animation = super.hide(interpolationDuration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\tif (anim && !anim.isFinished()) {\r\n\t\t\tanimation = anim;\r\n\t\t}\r\n\r\n\t\t// helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n\t\tthis.validateDataElements();\r\n\t\t//}\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tsuper.handleDataItemWorkingValueChange(dataItem, name);\r\n\r\n\t\t// to calculate stack values\r\n\t\tlet axisSeries: List<XYSeries> = <List<XYSeries>>this.baseAxis.series;\r\n\r\n\t\t$iter.each(axisSeries.iterator(), (series) => {\r\n\t\t\tif (series.stacked || series.stackedSeries) {\r\n\t\t\t\tseries.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * [getStackValue description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic getStackValue(dataItem: this[\"_dataItem\"], working?: boolean): void {\r\n\t\t// todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n\t\t// if this series is not stacked or new stack begins, return.\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (!this.stacked || !xAxis || !yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n\t\t\tlet chart: XYChart = this.chart;\r\n\t\t\tlet index: number = chart.series.indexOf(this);\r\n\r\n\t\t\tlet field: string;\r\n\r\n\t\t\tif (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.xField;\r\n\t\t\t}\r\n\t\t\tif (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\tfield = this.yField;\r\n\t\t\t}\r\n\r\n\t\t\tif (!field) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n\t\t\tdataItem.setCalculatedValue(field, 0, \"stack\");\r\n\r\n\t\t\t$iter.eachContinue(chart.series.range(0, index).backwards().iterator(), (prevSeries) => {\r\n\t\t\t\t// stacking is only possible if both axes are the same\r\n\t\t\t\tif (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == this.className) {\r\n\t\t\t\t\t// saving value\r\n\t\t\t\t\tprevSeries.stackedSeries = this;\r\n\r\n\t\t\t\t\tlet prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n\r\n\t\t\t\t\tif (prevDataItem && prevDataItem.hasValue(this._xValueFields) && prevDataItem.hasValue(this._yValueFields)) {\r\n\r\n\t\t\t\t\t\tlet value = dataItem.getValue(field);\r\n\t\t\t\t\t\tlet prevValue: number;\r\n\t\t\t\t\t\tlet prevRealValue = prevDataItem.getValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\r\n\t\t\t\t\t\tif (working) {\r\n\t\t\t\t\t\t\tprevValue = prevDataItem.getWorkingValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tprevValue = prevDataItem.getValue(field) + prevDataItem.getValue(field, \"stack\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.stackToNegative) {\r\n\t\t\t\t\t\t\tif ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(!prevSeries.stacked){\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdataItem.setCalculatedValue(field, prevValue, \"stack\");\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (!prevSeries.stacked) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This setting indicates how negative values are treated in stacked stacked\r\n\t * series.\r\n\t *\r\n\t * If set to `true` (default), negative values will stack on the base line.\r\n\t *\r\n\t * If set to `false`, negative value will stack in relation to the previous\r\n\t * value in the stack.\r\n\t *\r\n\t * @since 4.9.34\r\n\t * @param  value  Stack to base line\r\n\t */\r\n\tpublic set stackToNegative(value: boolean) {\r\n\t\tthis.setPropertyValue(\"stackToNegative\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Stack to base line\r\n\t */\r\n\tpublic get stackToNegative(): boolean {\r\n\t\treturn this.getPropertyValue(\"stackToNegative\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * [xOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xOpenField(): string {\r\n\t\treturn this._xOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [yOpenField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yOpenField(): string {\r\n\t\treturn this._yOpenField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipXField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipXField(value: string) {\r\n\t\tthis._tooltipXField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipXField(): string {\r\n\t\tif (this._tooltipXField) {\r\n\t\t\treturn this._tooltipXField;\r\n\t\t}\r\n\t\treturn this._xField;\r\n\t}\r\n\r\n\t/**\r\n\t * [tooltipYField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set tooltipYField(value: string) {\r\n\t\tthis._tooltipYField = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get tooltipYField(): string {\r\n\t\tif (this._tooltipYField) {\r\n\t\t\treturn this._tooltipYField;\r\n\t\t}\r\n\t\treturn this._yField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic min(axis: ValueAxis): number {\r\n\t\treturn this._tmin.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic max(axis: ValueAxis): number {\r\n\t\treturn this._tmax.getKey(axis.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns lowest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMin(axis: ValueAxis): number {\r\n\t\tlet value = this._smin.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.min(axis);\r\n\t\t//}\t\t\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns highest value in the series for the specific axis within current\r\n\t * selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t * @return value\r\n\t */\r\n\tpublic selectionMax(axis: ValueAxis): number {\r\n\t\tlet value = this._smax.getKey(axis.uid);\r\n\t\t// not good, because bad if there are no items with values in selection\r\n\t\t//if (!$type.isNumber(value)) {\r\n\t\t//value = this.max(axis);\r\n\t\t//}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up base axes\r\n\t\t\tif ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.baseAxis)) {\r\n\t\t\t\t\tconfig.baseAxis = this.map.getKey(config.baseAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n\t\t\t\t\tdelete config.baseAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.xAxis)) {\r\n\t\t\t\t\tconfig.xAxis = this.map.getKey(config.xAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.yAxis)) {\r\n\t\t\t\t\tconfig.yAxis = this.map.getKey(config.yAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n\t\t\t\t\tdelete config.yAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\t\t\t\t\tif (!$type.hasValue(range.type)) {\r\n\t\t\t\t\t\trange.type = \"AxisDataItem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.axis);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\r\n\t\t\t\t\t\trange.component = this.map.getKey(range.component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Parse date fields based on the series fields\r\n\t\t\tif (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n\t\t\t\tthis.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: XYSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string): IPoint {\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\tlet x: number = this.xAxis.getX(dataItem, xKey, locationX);\r\n\t\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY);\r\n\r\n\t\t\tx = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\t\ty = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\t\treturn { x: x, y: y };\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates item reader text based on the type and set up of axis.\r\n\t */\r\n\tprotected updateItemReaderText(): void {\r\n\r\n\t\t// We do not want to overwrite this if `itemReaderText` was changed by\r\n\t\t// user code.\r\n\t\tif (this._itemReaderTextChanged) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet text = \"\"\r\n\t\t$object.each(this.dataFields, (key, val) => {\r\n\t\t\ttext += \"{\" + key + \"} \";\r\n\t\t});\r\n\t\tthis.itemReaderText = text;\r\n\t\tthis._itemReaderTextChanged = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should display a tooltip for chart's cursor.\r\n\t *\r\n\t * If set to `true` (default), the tooltips set for all series item's\r\n\t * elements like columns and bullets will be automatically shown\r\n\t * when [[XYCursor]] passes over category/date, even if its not hovered\r\n\t * directly over the item.\r\n\t *\r\n\t * Set this to `false` to disable such behavior and display item-specific\r\n\t * tooltips only when hovered directly over them\r\n\t *\r\n\t * @default true\r\n\t * @param value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorTooltipEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series should apply hover state on bullets/columns/etc when\r\n\t * cursor is over the data item.\r\n\t *\r\n\t * If set to `true` (default) and chart cursor is enabled on th chart,\r\n\t * hovering over date/category will trigger hover states on related Series\r\n\t * items like bullets and columns.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.2\r\n\t * @param  value  Hover enabled?\r\n\t */\r\n\tpublic set cursorHoverEnabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"cursorHoverEnabled\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hover enabled?\r\n\t */\r\n\tpublic get cursorHoverEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"cursorHoverEnabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' values should be excluded when calculating totals.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.4.9\r\n\t * @param  value  Exclude from totals?\r\n\t */\r\n\tpublic set excludeFromTotal(value: boolean) {\r\n\t\tthis.setPropertyValue(\"excludeFromTotal\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from totals?\r\n\t */\r\n\tpublic get excludeFromTotal(): boolean {\r\n\t\treturn this.getPropertyValue(\"excludeFromTotal\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if series' tooltip should be hidden while series axis range is\r\n\t * animating (zooming).\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.16\r\n\t * @param  value  Hide tooltip while zooming?\r\n\t */\r\n\tpublic set hideTooltipWhileZooming(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide tooltip while zooming?\r\n\t */\r\n\tpublic get hideTooltipWhileZooming(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if series' bullets should be masked.\r\n\t * \r\n\t * @default true\r\n\t * @since 4.7.17\r\n\t * @param  value  Mask bullets?\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tthis.setPropertyValue(\"maskBullets\", value)\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.bulletsContainer;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.parent = chart.axisBulletsContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mask bullets?\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.groupFields = $utils.copyProperties(source.groupFields, {});\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tif (this.scrollbarSeries) {\r\n\t\t\tthis.scrollbarSeries.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\r\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n","/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { XYSeries } from \"../series/XYSeries\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[XYChartScrollbar]].\r\n */\r\nexport interface IXYChartScrollbarProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[XYChartScrollbar]].\r\n */\r\nexport interface IXYChartScrollbarEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYChartScrollbar]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYChartScrollbarAdapters extends IScrollbarAdapters, IXYChartScrollbarProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class XYChartScrollbar extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYChartScrollbarProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYChartScrollbarAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYChartScrollbarEvents;\r\n\r\n\t/**\r\n\t * An [[XYSeries]] used to draw a graph on the Scrollbar.\r\n\t */\r\n\tprotected _series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * A chart element Scrollbar is for.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<XYChart>();\r\n\r\n\t/**\r\n\t * A chart instance that shows mini-chart within Scrollbar.\r\n\t */\r\n\tprotected _scrollbarChart: XYChart;\r\n\r\n\t/**\r\n\t * [_unselectedOverlay description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _unselectedOverlay: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChartScrollbar\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\r\n\t\tlet scrollbarChart: XYChart = this.createChild(XYChart);\r\n\t\tscrollbarChart.shouldClone = false;\r\n\t\tscrollbarChart.margin(0, 0, 0, 0);\r\n\t\tscrollbarChart.padding(0, 0, 0, 0);\r\n\t\tscrollbarChart.interactionsEnabled = false;\r\n\r\n\t\tthis._scrollbarChart = scrollbarChart;\r\n\t\tif (!$utils.isIE()) {\r\n\t\t\tlet filter = new DesaturateFilter();\r\n\t\t\tfilter.filterUnits = \"userSpaceOnUse\";\r\n\t\t\tscrollbarChart.plotContainer.filters.push(filter);\r\n\t\t}\r\n\t\tthis._disposers.push(this._scrollbarChart);\r\n\r\n\t\tthis.minHeight = 60;\r\n\t\tthis.minWidth = 60;\r\n\r\n\t\tlet unselectedOverlay: Sprite = this.createChild(Sprite);\r\n\t\tunselectedOverlay.shouldClone = false;\r\n\t\tunselectedOverlay.setElement(this.paper.add(\"path\"));\r\n\t\tunselectedOverlay.fill = interfaceColors.getFor(\"background\");\r\n\t\tunselectedOverlay.fillOpacity = 0.8;\r\n\t\tunselectedOverlay.interactionsEnabled = false;\r\n\t\tunselectedOverlay.isMeasured = false;\r\n\t\tunselectedOverlay.toBack();\r\n\t\tthis._unselectedOverlay = unselectedOverlay;\r\n\t\tthis._disposers.push(this._unselectedOverlay);\r\n\r\n\t\tscrollbarChart.toBack();\r\n\r\n\t\tthis.background.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tlet thumbBackground = this.thumb.background;\r\n\t\tthumbBackground.cornerRadius(0, 0, 0, 0);\r\n\t\tthumbBackground.fillOpacity = 0;\r\n\t\tthumbBackground.fill = interfaceColors.getFor(\"background\");\r\n\r\n\t\tlet hoverState = thumbBackground.states.getKey(\"hover\");\r\n\t\tif (hoverState) {\r\n\t\t\thoverState.properties.fillOpacity = 0.2;\r\n\t\t}\r\n\r\n\t\tlet downState = thumbBackground.states.getKey(\"down\");\r\n\t\tif (downState) {\r\n\t\t\tdownState.properties.fillOpacity = 0.4;\r\n\t\t}\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of series that are used to draw graph(s) on the scrollbar.\r\n\t *\r\n\t * @readonly\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t\tthis._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\r\n\t\t\tthis._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new series when they are pushed into a `series` list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handleSeriesAdded(event: IListEvents<XYSeries>[\"inserted\"]) {\r\n\t\tlet sourceSeries: XYSeries = event.newValue;\r\n\t\tif (!sourceSeries.xAxis || !sourceSeries.yAxis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet scrollbarChart: XYChart = this.scrollbarChart;\r\n\t\tscrollbarChart.zoomOutButton.disabled = true;\r\n\r\n\t\tthis.chart = sourceSeries.chart;\r\n\r\n\t\tscrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;\r\n\r\n\t\t// Ensure that scrollbar chart shares the same locale as parent chart\r\n\t\tscrollbarChart.language.locale = this.chart.language.locale;\r\n\r\n\t\tlet addXAxis: boolean = true;\r\n\t\tlet addYAxis: boolean = true;\r\n\r\n\t\t// check if we haven't added clone of x or y axis before\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series != sourceSeries) {\r\n\t\t\t\tif (series.xAxis == sourceSeries.xAxis && this.scrollbarChart.xAxes.length > 0) {\r\n\t\t\t\t\taddXAxis = false;\r\n\t\t\t\t}\r\n\t\t\t\tif (series.yAxis == sourceSeries.yAxis && this.scrollbarChart.yAxes.length > 0) {\r\n\t\t\t\t\taddYAxis = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsourceSeries.events.on(\"beforedisposed\", () => {\r\n\t\t\tthis.series.removeValue(sourceSeries)\r\n\t\t})\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet series: XYSeries = <XYSeries>sourceSeries.clone();\r\n\r\n\t\tif(options.onlyShowOnViewport || options.queue){\r\n\t\t\tthis.addDisposer(this.chart.events.on(\"removedfromqueue\", function(){\r\n\t\t\t\tscrollbarChart.invalidateData();\r\n\t\t\t}))\r\n\t\t}\r\n\r\n\t\tif($utils.isIE()){\r\n\t\t\tseries.stroke = color(\"#aaaaaa\");\r\n\t\t\tseries.fill = series.stroke;\r\n\t\t\tseries.propertyFields.fill = undefined;\r\n\t\t\tseries.propertyFields.stroke = undefined;\r\n\t\t}\r\n\t\tsourceSeries.scrollbarSeries = series;\r\n\r\n\t\tif (addXAxis) {\r\n\r\n\t\t\tlet xAxis = sourceSeries.xAxis.clone();\r\n\t\t\tscrollbarChart.xAxes.moveValue(xAxis);\r\n\t\t\txAxis.title.disabled = true;\r\n\t\t\txAxis.rangeChangeDuration = 0;\r\n\t\t\t//xAxis.id = sourceSeries.uid;\r\n\t\t\tlet renderer = xAxis.renderer;\r\n\t\t\trenderer.ticks.template.disabled = true;\r\n\t\t\trenderer.inside = true;\r\n\t\t\trenderer.labels.template.inside = true;\r\n\t\t\trenderer.line.strokeOpacity = 0;\r\n\t\t\trenderer.minLabelPosition = 0.02;\r\n\t\t\trenderer.maxLabelPosition = 0.98;\r\n\t\t\trenderer.line.disabled = true;\r\n\t\t\trenderer.axisFills.template.disabled = true;\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t\trenderer.grid.template.strokeOpacity = 0.05;\r\n\t\t\trenderer.minWidth = undefined;\r\n\t\t\trenderer.minHeight = undefined;\r\n\t\t\trenderer.padding(0, 0, 0, 0);\r\n\t\t\trenderer.chart = scrollbarChart;\r\n\t\t\trenderer.margin(0, 0, 0, 0);\r\n\r\n\t\t\txAxis.width = percent(100);\r\n\r\n\t\t\tlet labelsTemplate = renderer.labels.template;\r\n\t\t\tlabelsTemplate.fillOpacity = 0.5;\r\n\t\t\txAxis.maxZoomCount = undefined;\r\n\t\t\txAxis.minZoomCount = undefined;\r\n\r\n\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\tlet vAxis = <DateAxis>xAxis;\r\n\t\t\t\tlet sourceAxis = <DateAxis>sourceSeries.xAxis;\r\n\t\t\t\tvAxis.groupCount = sourceAxis.groupCount * 5;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false))\r\n\t\t\t}\r\n\t\t\telse if (xAxis instanceof ValueAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>xAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.min;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.max;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false))\r\n\t\t\t}\r\n\r\n\r\n\t\t\tseries.xAxis = xAxis;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scrollbarChart.xAxes.each((xAxis) => {\r\n\t\t\t\tif (xAxis.clonedFrom == sourceSeries.xAxis) {\r\n\t\t\t\t\tseries.xAxis = xAxis;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (addYAxis) {\r\n\t\t\tlet yAxis: Axis = <Axis>sourceSeries.yAxis.clone();\r\n\t\t\tscrollbarChart.yAxes.moveValue(yAxis);\r\n\t\t\tyAxis.title.disabled = true;\r\n\t\t\tyAxis.rangeChangeDuration = 0;\r\n\r\n\t\t\tlet renderer = yAxis.renderer;\r\n\t\t\trenderer.ticks.template.disabled = true;\r\n\t\t\trenderer.inside = true;\r\n\t\t\trenderer.labels.template.inside = true;\r\n\t\t\trenderer.line.strokeOpacity = 0;\r\n\t\t\trenderer.minLabelPosition = 0.02;\r\n\t\t\trenderer.maxLabelPosition = 0.98;\r\n\t\t\trenderer.line.disabled = true;\r\n\t\t\trenderer.axisFills.template.disabled = true;\r\n\t\t\trenderer.grid.template.stroke = interfaceColors.getFor(\"background\");\r\n\t\t\trenderer.baseGrid.disabled = true;\r\n\t\t\trenderer.grid.template.strokeOpacity = 0.05;\r\n\t\t\trenderer.minWidth = undefined;\r\n\t\t\trenderer.minHeight = undefined;\r\n\t\t\trenderer.chart = scrollbarChart;\r\n\t\t\trenderer.padding(0, 0, 0, 0);\r\n\t\t\trenderer.margin(0, 0, 0, 0);\r\n\t\t\tyAxis.height = percent(100);\r\n\r\n\t\t\tlet labelsTemplate = renderer.labels.template;\r\n\t\t\tlabelsTemplate.fillOpacity = 0.5;\r\n\r\n\t\t\tseries.yAxis = yAxis;\r\n\r\n\t\t\tyAxis.maxZoomCount = undefined;\r\n\t\t\tyAxis.minZoomCount = undefined;\r\n\r\n\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>yAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\tlet sourceAxis = <DateAxis>sourceSeries.yAxis;\r\n\t\t\t\tyAxis.groupCount = sourceAxis.groupCount * 5;\r\n\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\t\t\telse if (yAxis instanceof ValueAxis) {\r\n\t\t\t\tlet vAxis = <ValueAxis>yAxis;\r\n\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\tvAxis.max = undefined;\r\n\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\tvAxis.min = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\tvAxis.max = undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposers.push(vAxis.clonedFrom.events.on(\"extremeschanged\", () => {\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.minDefined)) {\r\n\t\t\t\t\t\tvAxis.min = vAxis.clonedFrom.minDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(vAxis.clonedFrom.maxDefined)) {\r\n\t\t\t\t\t\tvAxis.max = vAxis.clonedFrom.maxDefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.scrollbarChart.yAxes.each((yAxis) => {\r\n\t\t\t\tif (yAxis.clonedFrom == sourceSeries.yAxis) {\r\n\t\t\t\t\tseries.yAxis = yAxis;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tseries.rangeChangeDuration = 0;\r\n\t\tseries.interpolationDuration = 0;\r\n\t\tseries.defaultState.transitionDuration = 0;\r\n\t\tseries.showOnInit = false;\r\n\r\n\t\tthis._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\r\n\r\n\t\t// data might be set drectly on series\r\n\t\tthis._disposers.push(sourceSeries.events.on(\"datavalidated\", () => {\r\n\t\t\tif (series.data != sourceSeries.data) { // data setter doesn't check this\r\n\t\t\t\tseries.data = sourceSeries.data;\r\n\t\t\t}\r\n\t\t}, undefined, false));\r\n\t\tseries.defaultState.properties.visible = true;\r\n\r\n\t\tscrollbarChart.series.push(series);\r\n\r\n\t\tthis.updateByOrientation();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateByOrientation() {\r\n\t\tif (this._scrollbarChart) {\r\n\t\t\t$iter.each(this._scrollbarChart.xAxes.iterator(), (xAxis) => {\r\n\t\t\t\tlet renderer = xAxis.renderer;\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\trenderer.grid.template.disabled = true;\r\n\t\t\t\t\trenderer.labels.template.disabled = true;\r\n\t\t\t\t\trenderer.minGridDistance = 10;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.grid.template.disabled = false;\r\n\t\t\t\t\trenderer.labels.template.disabled = false;\r\n\t\t\t\t\trenderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\t$iter.each(this._scrollbarChart.yAxes.iterator(), (yAxis) => {\r\n\t\t\t\tlet renderer = yAxis.renderer;\r\n\t\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\t\trenderer.grid.template.disabled = true;\r\n\t\t\t\t\trenderer.labels.template.disabled = true;\r\n\t\t\t\t\trenderer.minGridDistance = 10;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trenderer.grid.template.disabled = false;\r\n\t\t\t\t\trenderer.labels.template.disabled = false;\r\n\t\t\t\t\trenderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Cleans up after series are removed from Scrollbar.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSeriesRemoved(event: IListEvents<XYSeries>[\"removed\"]) {\r\n\t\tlet sourceSeries: XYSeries = event.oldValue;\r\n\t\tlet scrollbarChart = this.scrollbarChart;\r\n\r\n\t\tscrollbarChart.series.each((series) => {\r\n\t\t\tif (series && series.clonedFrom == sourceSeries) {\r\n\t\t\t\tscrollbarChart.series.removeValue(series);\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (scrollbarChart.series.length == 0) {\r\n\t\t\tscrollbarChart.xAxes.clear();\r\n\t\t\tscrollbarChart.yAxes.clear();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A chart element that is used to display graphs in the Scrollbar.\r\n\t *\r\n\t * This is not the same as `chart`. It's a totally independent instance of\r\n\t * [[XYChart]] with separate config, series, etc.\r\n\t *\r\n\t * It can be configured just like any other [[XYChart]].\r\n\t *\r\n\t * @readonly\r\n\t * @return Scrollbar's internal chart\r\n\t */\r\n\tpublic get scrollbarChart(): XYChart {\r\n\t\treturn this._scrollbarChart;\r\n\t}\r\n\r\n\t/**\r\n\t * A chart that Scrollbar belongs to.\r\n\t *\r\n\t * @param chart  Chart\r\n\t */\r\n\tpublic set chart(chart: XYChart) {\r\n\t\tif (this._chart.get() !== chart) {\r\n\t\t\tthis._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\r\n\t\t\tthis.handleDataChanged();\r\n\t\t\tthis._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): XYChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] object representing overlay that is used to dim area of the\r\n\t * scrollbar that is currently not selected.\r\n\t *\r\n\t * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n\t * completely disabling the dimming, and `1` making unselected area completely\r\n\t * blank.\r\n\t *\r\n\t * @since 4.6.1\r\n\t * @readonly\r\n\t * @return Unselected area curtain element\r\n\t */\r\n\tpublic get unselectedOverlay(): Sprite {\r\n\t\treturn this._unselectedOverlay;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Scrollbar's internal chart's data when the main chart's data\r\n\t * changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataChanged() {\r\n\t\tif (this.chart.data != this.scrollbarChart.data) {\r\n\t\t\tthis.scrollbarChart.data = this.chart.data;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// add data is handled in XYChart\r\n\t\t\t// invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\r\n\t\t\tthis.scrollbarChart.invalidateRawData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms out all axes on the internal chart.\r\n\t */\r\n\tprotected zoomOutAxes() {\r\n\t\tlet scrollbarChart: XYChart = this.scrollbarChart;\r\n\t\t$iter.each(scrollbarChart.xAxes.iterator(), (x) => {\r\n\t\t\tx.zoom({ start: 0, end: 1 }, true, true);\r\n\t\t});\r\n\t\t$iter.each(scrollbarChart.yAxes.iterator(), (y) => {\r\n\t\t\ty.zoom({ start: 0, end: 1 }, true, true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates scrollbar thumb.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic updateThumb(dispatchEvents: boolean = true) {\r\n\t\tsuper.updateThumb(dispatchEvents);\r\n\t\tif (this._unselectedOverlay) {\r\n\t\t\tlet thumb = this.thumb;\r\n\t\t\tlet x: number = thumb.pixelX || 0;\r\n\t\t\tlet y: number = thumb.pixelY || 0;\r\n\t\t\tlet w: number = thumb.pixelWidth || 0;\r\n\t\t\tlet h: number = thumb.pixelHeight || 0;\r\n\r\n\t\t\tlet path: string = \"\";\r\n\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tpath = $path.rectToPath({\r\n\t\t\t\t\tx: -1,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: x,\r\n\t\t\t\t\theight: h\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpath += $path.rectToPath({\r\n\t\t\t\t\tx: x + w,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: (this.pixelWidth || 0) - x - w,\r\n\t\t\t\t\theight: h\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpath = $path.rectToPath({\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: y\r\n\t\t\t\t});\r\n\r\n\t\t\t\tpath += $path.rectToPath({\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: y + h,\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: (this.pixelHeight || 0) - y - h\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._unselectedOverlay.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tlet series = config.series[i];\r\n\t\t\t\t\tif ($type.hasValue(series) && $type.isString(series)) {\r\n\t\t\t\t\t\tif (this.map.hasKey(series)) {\r\n\t\t\t\t\t\t\tconfig.series[i] = this.map.getKey(series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthrow Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;\r\n","/**\r\n * XY Chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { List, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { Optional } from \"../../core/utils/Type\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { AxisRendererX } from \"../axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../axes/AxisRendererY\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { Scrollbar, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\nimport { XYCursor, IXYCursorEvents } from \"../cursors/XYCursor\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { ZoomOutButton } from \"../../core/elements/ZoomOutButton\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { XYChartScrollbar } from \"../elements/XYChartScrollbar\";\r\n\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $number from \"../../core/utils/Number\";\r\n\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: XYChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYChart]].\r\n */\r\nexport interface IXYChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[XYChart]].\r\n */\r\nexport interface IXYChartProperties extends ISerialChartProperties {\r\n\r\n\t/**\r\n\t * A container that is used as a maske for bullets so that they can't\r\n\t * \"spill\" outside of the plot area.\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t *\r\n\t * @default \"none\"\r\n\t */\r\n\tmouseWheelBehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when horizontal mouse wheel is rotated.\r\n\t *\r\n\t * @default \"none\"\r\n\t */\r\n\thorizontalMouseWheelBehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\r\n\r\n\t/**\r\n\t * Specifies if chart should arrange series tooltips so that they won't\r\n\t * overlap.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tarrangeTooltips?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYChart]].\r\n */\r\nexport interface IXYChartEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYChartAdapters extends ISerialChartAdapters, IXYChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates an XY chart, and any derivative chart, like Serial, Date-based, etc.\r\n *\r\n * Basically this is a chart type, that is used to display any chart\r\n * information in a square plot area.\r\n *\r\n * The horizontal and vertical scale is determined by the type of Axis.\r\n *\r\n * The plot types are determined by type of Series.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * let series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"XYChart\");\r\n *\r\n * // Add Data\r\n * chart.data = [{\r\n * \"country\": \"USA\",\r\n * \"visits\": 3025\r\n * }, {\r\n * \t\"country\": \"China\",\r\n * \t\"visits\": 1882\r\n * }, {\r\n * \t\"country\": \"Japan\",\r\n * \t\"visits\": 1809\r\n * }];\r\n *\r\n * // Add category axis\r\n * var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n * categoryAxis.dataFields.category = \"country\";\r\n *\r\n * // Add value axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Add series\r\n * var series = chart.series.push(new am4charts.ColumnSeries());\r\n * series.name = \"Web Traffic\";\r\n * series.dataFields.categoryX = \"country\";\r\n * series.dataFields.valueY = \"visits\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Category axis\r\n * \t\"xAxes\": [{\r\n * \t\t\"type\": \"CategoryAxis\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Value axis\r\n * \t\"yAxes\": [{\r\n * \t\t\"type\": \"ValueAxis\"\r\n * \t}],\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"ColumnSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"categoryX\": \"country\",\r\n * \t\t\t\"valueY\": \"visits\"\r\n * \t\t},\r\n * \t\t\"name\": \"Web Traffic\"\r\n * \t}],\r\n *\r\n * \t// Cursor\r\n * \t\"cursor\": {},\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"USA\",\r\n * \t\t\"visits\": 3025\r\n * \t}, {\r\n * \t\t\"country\": \"China\",\r\n * \t\t\"visits\": 1882\r\n * \t}, {\r\n * \t\t\"country\": \"Japan\",\r\n * \t\t\"visits\": 1809\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"XYChart\");\r\n * ```\r\n *\r\n *\r\n * @see {@link IXYChartEvents} for a list of available Events\r\n * @see {@link IXYChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IXYChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: XYSeries;\r\n\r\n\t/**\r\n\t * A list of horizontal axes.\r\n\t */\r\n\tprotected _xAxes: List<Axis<this[\"_xAxisRendererType\"]>>;\r\n\r\n\t/**\r\n\t * A list of vertical axes.\r\n\t */\r\n\tprotected _yAxes: List<Axis<this[\"_yAxisRendererType\"]>>;\r\n\r\n\t/**\r\n\t * A container that holds vertical axes and plot area.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic yAxesAndPlotContainer: Container\r\n\r\n\t/**\r\n\t * A container that holds top axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic topAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds bottom axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic bottomAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds left axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic leftAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds right axes.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic rightAxesContainer: Container;\r\n\r\n\t/**\r\n\t * A container for plot area.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic plotContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to horizontal [[Scrollbar]].\r\n\t */\r\n\tprotected _scrollbarX: Scrollbar;\r\n\r\n\t/**\r\n\t * A reference to vertical [[Scrollbar]].\r\n\t */\r\n\tprotected _scrollbarY: Scrollbar;\r\n\r\n\t/**\r\n\t * A reference to chart's cursor.\r\n\t */\r\n\tpublic _cursor: XYCursor;\r\n\r\n\t/**\r\n\t * A container that chart's cursor is placed in.\r\n\t */\r\n\tprotected _cursorContainer: Container;\r\n\r\n\t/**\r\n\t * Defines the type of horizontal axis rederer.\r\n\t */\r\n\tprotected _axisRendererX: typeof AxisRendererX = AxisRendererX;\r\n\r\n\t/**\r\n\t * Defines the type of vertical axis rederer.\r\n\t */\r\n\tprotected _axisRendererY: typeof AxisRendererY = AxisRendererY;\r\n\r\n\t/**\r\n\t * Defines the type horizontal axis renderer.\r\n\t */\r\n\tpublic _xAxisRendererType: AxisRendererX;\r\n\r\n\t/**\r\n\t * Defines the type of vertical axis renderer.\r\n\t */\r\n\tpublic _yAxisRendererType: AxisRendererY;\r\n\r\n\t/**\r\n\t * A button which is used to zoom out the chart.\r\n\t */\r\n\tprotected _zoomOutButton: Button;\r\n\r\n\t/**\r\n\t * An element that is used as a mask to contain bullets from spilling out of\r\n\t * the plot area.\r\n\t */\r\n\tprotected _bulletMask: Sprite;\r\n\r\n\r\n\tprotected _panStartXRange: IRange;\r\n\r\n\tprotected _panStartYRange: IRange;\r\n\r\n\tprotected _panEndXRange: IRange;\r\n\r\n\tprotected _panEndYRange: IRange;\r\n\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\tprotected _mouseWheelDisposer2: IDisposer;\r\n\r\n\tprotected _cursorXPosition: number;\r\n\r\n\tprotected _cursorYPosition: number;\r\n\r\n\t/**\r\n\t * Holds a reference to the container axis bullets are drawn in.\r\n\t */\r\n\tpublic axisBulletsContainer: Container;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _seriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"XYChart\";\r\n\r\n\t\t// Set defaults\r\n\t\t//this.margin(10, 10, 10, 10);\r\n\t\tthis.maskBullets = true;\r\n\t\tthis.arrangeTooltips = true;\r\n\r\n\t\t// Create main chart container\r\n\t\tlet chartContainer = this.chartContainer;\r\n\t\tchartContainer.layout = \"vertical\";\r\n\t\tthis.padding(15, 15, 15, 15);\r\n\r\n\t\t// Create top axes container\r\n\t\tlet topAxesCont = chartContainer.createChild(Container);\r\n\t\ttopAxesCont.shouldClone = false;\r\n\t\ttopAxesCont.layout = \"vertical\";\r\n\t\ttopAxesCont.width = percent(100);\r\n\t\ttopAxesCont.zIndex = 1;\r\n\t\tthis.topAxesContainer = topAxesCont;\r\n\r\n\t\t// Create vertical axes and plot area container\r\n\t\t// Plot area and vertical axes share the whole width of the chart,\r\n\t\t// so we need to put then into a separate container so that layouting\r\n\t\t// engine takes care of the positioning\r\n\t\tlet yAxesAndPlotCont = chartContainer.createChild(Container);\r\n\t\tyAxesAndPlotCont.shouldClone = false;\r\n\t\tyAxesAndPlotCont.layout = \"horizontal\";\r\n\t\tyAxesAndPlotCont.width = percent(100);\r\n\t\tyAxesAndPlotCont.height = percent(100);\r\n\t\tyAxesAndPlotCont.zIndex = 0;\r\n\t\tthis.yAxesAndPlotContainer = yAxesAndPlotCont;\r\n\r\n\t\t// Create a container for bottom axes\r\n\t\tlet bottomAxesCont = chartContainer.createChild(Container);\r\n\t\tbottomAxesCont.shouldClone = false;\r\n\t\tbottomAxesCont.width = percent(100);\r\n\t\tbottomAxesCont.layout = \"vertical\";\r\n\t\tbottomAxesCont.zIndex = 1;\r\n\t\tthis.bottomAxesContainer = bottomAxesCont;\r\n\r\n\t\t// Create a container for left-side axes\r\n\t\tlet leftAxesCont = yAxesAndPlotCont.createChild(Container);\r\n\t\tleftAxesCont.shouldClone = false;\r\n\t\tleftAxesCont.layout = \"horizontal\";\r\n\t\tleftAxesCont.height = percent(100);\r\n\t\tleftAxesCont.contentAlign = \"right\";\r\n\t\tleftAxesCont.events.on(\"transformed\", this.updateXAxesMargins, this, false);\r\n\t\tleftAxesCont.zIndex = 1;\r\n\t\tthis.leftAxesContainer = leftAxesCont;\r\n\r\n\t\t// Create a container for plot area\r\n\t\tlet plotCont = yAxesAndPlotCont.createChild(Container);\r\n\t\tplotCont.shouldClone = false;\r\n\t\tplotCont.height = percent(100);\r\n\t\tplotCont.width = percent(100);\r\n\t\t// Create transparend background for plot container so that hover works\r\n\t\t// on all of it\r\n\t\tplotCont.background.fillOpacity = 0;\r\n\t\tthis.plotContainer = plotCont;\r\n\r\n\t\t// must go below plot container\r\n\t\tthis.mouseWheelBehavior = \"none\";\r\n\r\n\t\tthis._cursorContainer = plotCont;\r\n\r\n\t\t// Create a container for right-side axes\r\n\t\tlet rightAxesCont = yAxesAndPlotCont.createChild(Container);\r\n\t\trightAxesCont.shouldClone = false;\r\n\t\trightAxesCont.layout = \"horizontal\";\r\n\t\trightAxesCont.height = percent(100);\r\n\t\trightAxesCont.zIndex = 1;\r\n\t\trightAxesCont.events.on(\"transformed\", this.updateXAxesMargins, this, false);\r\n\t\tthis.rightAxesContainer = rightAxesCont;\r\n\r\n\t\tthis.seriesContainer.parent = plotCont;\r\n\t\tthis.bulletsContainer.parent = plotCont;\r\n\r\n\t\tlet zoomOutButton = plotCont.createChild(ZoomOutButton);\r\n\t\tzoomOutButton.shouldClone = false;\r\n\t\tzoomOutButton.align = \"right\";\r\n\t\tzoomOutButton.valign = \"top\";\r\n\t\tzoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;\r\n\t\tzoomOutButton.marginTop = 5;\r\n\t\tzoomOutButton.marginRight = 5;\r\n\r\n\t\tzoomOutButton.hide(0);\r\n\t\tthis.zoomOutButton = zoomOutButton;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet axisBulletsContainer: Container = this.plotContainer.createChild(Container);\r\n\t\taxisBulletsContainer.shouldClone = false;\r\n\t\taxisBulletsContainer.width = percent(100);\r\n\t\taxisBulletsContainer.height = percent(100);\r\n\t\taxisBulletsContainer.isMeasured = false;\r\n\t\taxisBulletsContainer.zIndex = 4;\r\n\t\taxisBulletsContainer.layout = \"none\";\r\n\t\tthis.axisBulletsContainer = axisBulletsContainer;\r\n\r\n\t\tthis._bulletMask = this.plotContainer;\r\n\r\n\t\tthis.events.on(\"beforedatavalidated\", () => {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.dataGrouped = false;\r\n\t\t\t\tseries._baseInterval = {};\r\n\t\t\t})\r\n\t\t}, this, false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tthis.zoomOutButton.exportable = false;\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"X/Y chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tthis.seriesContainer.toFront();\r\n\t\tthis.bulletsContainer.toFront();\r\n\r\n\t\tif (this.maskBullets) {\r\n\t\t\tthis.bulletsContainer.mask = this._bulletMask;\r\n\t\t}\r\n\r\n\t\tthis.updateSeriesLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers a redrawing of all chart's series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updatePlotElements(): void {\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers data (re)validation which in turn can cause a redraw of the\r\n\t * whole chart or just aprticular series / elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\r\n\t\t// tell axes that data changed\r\n\t\tif (this._parseDataFrom == 0) {\r\n\t\t\t$iter.each(this.xAxes.iterator(), (axis) => {\r\n\t\t\t\taxis.dataChangeUpdate();\r\n\t\t\t});\r\n\r\n\t\t\t$iter.each(this.yAxes.iterator(), (axis) => {\r\n\t\t\t\taxis.dataChangeUpdate();\r\n\t\t\t});\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tseries.dataChangeUpdate();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates margins for horizontal axes based on settings and available space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateXAxesMargins(): void {\r\n\r\n\t\tlet leftAxesWidth = this.leftAxesContainer.measuredWidth;\r\n\t\tlet rightAxesWidth = this.rightAxesContainer.measuredWidth;\r\n\t\tlet bottomAxesCont = this.bottomAxesContainer;\r\n\r\n\t\tif (bottomAxesCont.paddingLeft != leftAxesWidth || bottomAxesCont.paddingRight != rightAxesWidth) {\r\n\t\t\tbottomAxesCont.paddingLeft = leftAxesWidth;\r\n\t\t\tbottomAxesCont.paddingRight = rightAxesWidth;\r\n\t\t}\r\n\r\n\t\tlet topAxesCont = this.topAxesContainer;\r\n\r\n\t\tif (topAxesCont.paddingLeft != leftAxesWidth || topAxesCont.paddingRight != rightAxesWidth) {\r\n\t\t\ttopAxesCont.paddingLeft = leftAxesWidth;\r\n\t\t\ttopAxesCont.paddingRight = rightAxesWidth;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers a re-initialization of this element.\r\n\t *\r\n\t * Will result in complete redrawing of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic reinit(): void {\r\n\t\tsuper.reinit();\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tseries.appeared = false;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers an update on the horizontal axis when one of its properties\r\n\t * change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event An event object\r\n\t */\r\n\tpublic handleXAxisChange(event: AMEvent<AxisRenderer, ISpriteEvents>[\"propertychanged\"]) {\r\n\t\tthis.updateXAxis(event.target);\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers an update on the vertical axis when one of its properties\r\n\t * change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event An event object\r\n\t */\r\n\tpublic handleYAxisChange(event: AMEvent<AxisRenderer, ISpriteEvents>[\"propertychanged\"]) {\r\n\t\tthis.updateYAxis(event.target);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up a new horizontal (X) axis when it is added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Axis insert event\r\n\t */\r\n\tpublic processXAxis(event: IListEvents<Axis>[\"inserted\"]): void {\r\n\r\n\t\tlet axis: Axis = event.newValue;\r\n\t\taxis.chart = this;\r\n\r\n\t\tif (!axis.renderer) {\r\n\t\t\taxis.renderer = new this._axisRendererX();\r\n\t\t\taxis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleXAxisChange, this, false);\r\n\t\t}\r\n\t\taxis.axisLetter = \"X\";\r\n\r\n\t\taxis.events.on(\"startendchanged\", this.handleXAxisRangeChange, this, false);\r\n\t\t//axis.events.on(\"endchanged\", this.handleXAxisRangeChange, this, false);\r\n\r\n\t\t// Although axis does not use data directly, we set dataProvider here\r\n\t\t// (but not add to chart data users) to hold up rendering before data\r\n\t\t// is parsed (system handles this)\r\n\t\taxis.dataProvider = this;\r\n\r\n\t\tthis.updateXAxis(axis.renderer);\r\n\t\tthis.processAxis(axis);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up a new vertical (Y) axis when it is added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Axis insert event\r\n\t */\r\n\tpublic processYAxis(event: IListEvents<Axis>[\"inserted\"]): void {\r\n\r\n\t\tlet axis: Axis = event.newValue;\r\n\t\taxis.chart = this;\r\n\t\tif (!axis.renderer) {\r\n\t\t\taxis.renderer = new this._axisRendererY();\r\n\t\t\taxis.renderer.observe([\"opposite\", \"inside\", \"inversed\", \"minGridDistance\"], this.handleYAxisChange, this, false);\r\n\t\t}\r\n\t\taxis.axisLetter = \"Y\";\r\n\r\n\t\taxis.events.on(\"startendchanged\", this.handleYAxisRangeChange, this, false);\r\n\t\t//axis.events.on(\"endchanged\", this.handleYAxisRangeChange, this, false);\r\n\r\n\t\t// Although axis does not use data directly, we set dataProvider here\r\n\t\t// (but not add to chart data users) to hold up rendering before data\r\n\t\t// is parsed (system handles this)\r\n\t\taxis.dataProvider = this;\r\n\r\n\t\tthis.updateYAxis(axis.renderer);\r\n\t\tthis.processAxis(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates horizontal (X) scrollbar and other horizontal axis whenever axis'\r\n\t * value range changes.\r\n\t */\r\n\tprotected handleXAxisRangeChange() {\r\n\t\tlet range: IRange = this.getCommonAxisRange(this.xAxes);\r\n\t\tif (this.scrollbarX) {\r\n\t\t\tthis.zoomAxes(this.xAxes, range, true);\r\n\t\t}\r\n\t\tthis.toggleZoomOutButton();\r\n\t\tthis.updateScrollbar(this.scrollbarX, range);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows or hides the Zoom Out button depending on whether the chart is fully\r\n\t * zoomed out or not.\r\n\t */\r\n\tpublic toggleZoomOutButton() {\r\n\t\tif (this.zoomOutButton) {\r\n\t\t\tlet show = false;\r\n\r\n\t\t\t$iter.eachContinue(this.xAxes.iterator(), (axis): boolean => {\r\n\t\t\t\tif (axis.toggleZoomOutButton) {\r\n\t\t\t\t\tif (axis.maxZoomCount > 0) {\r\n\t\t\t\t\t\tlet minZoomFactor: number = axis.maxZoomFactor / axis.maxZoomCount;\r\n\t\t\t\t\t\tif ($math.round(axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ($math.round(axis.start, 3) > 0 || $math.round(axis.end, 3) < 1) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\t$iter.eachContinue(this.yAxes.iterator(), (axis): boolean => {\r\n\t\t\t\tif (axis.toggleZoomOutButton) {\r\n\t\t\t\t\tif (axis.maxZoomCount > 0) {\r\n\t\t\t\t\t\tlet minZoomFactor: number = axis.maxZoomFactor / axis.maxZoomCount;\r\n\t\t\t\t\t\tif ($math.round(axis.end - axis.start, 3) < 1 / minZoomFactor) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ($math.round(axis.start, 3) > 0 || $math.round(axis.end, 3) < 1) {\r\n\t\t\t\t\t\t\tshow = true;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (!this.seriesAppeared) {\r\n\t\t\t\tshow = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (show) {\r\n\t\t\t\tthis.zoomOutButton.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.zoomOutButton.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * moved this check to a separate method so that we could override it in TreeMapSeries\r\n\t */\r\n\tprotected seriesAppeared(): boolean {\r\n\t\tlet appeared: boolean = false;\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.appeared) {\r\n\t\t\t\tappeared = false;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn appeared;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates vertical (Y) scrollbar and other horizontal axis whenever axis'\r\n\t * value range changes.\r\n\t */\r\n\tprotected handleYAxisRangeChange() {\r\n\t\tlet range: IRange = this.getCommonAxisRange(this.yAxes);\r\n\r\n\t\tif (this.scrollbarY) {\r\n\t\t\tthis.zoomAxes(this.yAxes, range, true);\r\n\t\t}\r\n\t\tthis.toggleZoomOutButton();\r\n\t\tthis.updateScrollbar(this.scrollbarY, range);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a relative scrollbar whenever data range of the axis changes.\r\n\t *\r\n\t * @param scrollbar  Scrollbar instance\r\n\t * @param range      New data (values) range of the axis\r\n\t */\r\n\tprotected updateScrollbar(scrollbar: Scrollbar, range: IRange): void {\r\n\t\tif (scrollbar) {\r\n\t\t\tscrollbar.skipRangeEvents();\r\n\t\t\tscrollbar.start = range.start;\r\n\t\t\tscrollbar.end = range.end;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a common range of values between a list of axes.\r\n\t *\r\n\t * This is used to synchronize the zoom between multiple axes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axes  A list of axes\r\n\t * @return Common value range\r\n\t */\r\n\tpublic getCommonAxisRange(axes: List<Axis>): IRange {\r\n\t\tlet start: Optional<number>;\r\n\t\tlet end: Optional<number>;\r\n\r\n\t\taxes.each((axis) => {\r\n\t\t\tif (!axis.zoomable || (axis instanceof ValueAxis && axis.syncWithAxis)) {\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet axisStart = axis.start;\r\n\t\t\t\tlet axisEnd = axis.end;\r\n\r\n\t\t\t\tif (axis.renderer.inversed) {\r\n\t\t\t\t\taxisStart = 1 - axis.end;\r\n\t\t\t\t\taxisEnd = 1 - axis.start;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!$type.isNumber(start) || (axisStart < start)) {\r\n\t\t\t\t\tstart = axisStart;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(end) || (axisEnd > end)) {\r\n\t\t\t\t\tend = axisEnd;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn { start: start, end: end };\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the horizontal (X) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic updateXAxis(renderer: AxisRenderer) {\r\n\t\tlet axis = renderer.axis;\r\n\t\tif (renderer.opposite) {\r\n\t\t\taxis.parent = this.topAxesContainer;\r\n\t\t\taxis.toFront();\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxis.parent = this.bottomAxesContainer;\r\n\t\t\taxis.toBack();\r\n\t\t}\r\n\t\tif (axis.renderer) {\r\n\t\t\taxis.renderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the vertical (Y) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic updateYAxis(renderer: AxisRenderer) {\r\n\t\tlet axis = renderer.axis;\r\n\t\tif (renderer.opposite) {\r\n\t\t\taxis.parent = this.rightAxesContainer;\r\n\t\t\taxis.toBack();\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxis.parent = this.leftAxesContainer;\r\n\t\t\taxis.toFront();\r\n\t\t}\r\n\t\tif (axis.renderer) {\r\n\t\t\taxis.renderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates an Axis for use with this chart, e.g. sets proper renderer\r\n\t * and containers for placement.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tprotected processAxis(axis: Axis): void {\r\n\t\t// Value axis does not use data directly, only category axis does\r\n\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\tthis._dataUsers.moveValue(axis);\r\n\t\t}\r\n\r\n\t\tlet renderer: AxisRenderer = axis.renderer;\r\n\r\n\t\trenderer.gridContainer.parent = this.plotContainer;\r\n\t\trenderer.gridContainer.toBack();\r\n\r\n\t\trenderer.breakContainer.parent = this.plotContainer;\r\n\t\trenderer.breakContainer.toFront();\r\n\t\trenderer.breakContainer.zIndex = 10;\r\n\r\n\t\taxis.addDisposer(new Disposer(() => {\r\n\t\t\tthis.dataUsers.removeValue(axis);\r\n\t\t}))\r\n\r\n\t\trenderer.bulletsContainer.parent = this.axisBulletsContainer;\r\n\r\n\t\tthis._disposers.push(axis.events.on(\"positionchanged\", () => {\r\n\t\t\tlet point = $utils.spritePointToSprite({ x: 0, y: 0 }, axis, this.axisBulletsContainer);\r\n\t\t\tif (axis.renderer instanceof AxisRendererY) {\r\n\t\t\t\trenderer.bulletsContainer.y = point.y;\r\n\t\t\t}\r\n\t\t\tif (axis.renderer instanceof AxisRendererX) {\r\n\t\t\t\trenderer.bulletsContainer.x = point.x;\r\n\t\t\t}\r\n\t\t}, undefined, false));\r\n\r\n\t\tthis.plotContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\taxis.invalidateDataItems();\r\n\t\t\t\tthis.updateSeriesMasks();\r\n\t\t\t}\r\n\t\t}, axis, false);\r\n\t}\r\n\r\n\t/**\r\n\t * This is done because for some reason IE doesn't change mask if path of a\r\n\t * mask changes.\r\n\t */\r\n\tprotected updateSeriesMasks(): void {\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tlet mask = series.mainContainer.mask;\r\n\t\t\t\tseries.mainContainer.mask = undefined;\r\n\t\t\t\tseries.mainContainer.mask = mask;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesRemoved(event: IListEvents<XYSeries>[\"removed\"]) {\r\n\t\tlet series = event.oldValue;\r\n\r\n\t\tif (series) {\r\n\t\t\tif (series.xAxis) {\r\n\t\t\t\tseries.xAxis.series.removeValue(series);\r\n\t\t\t\tseries.xAxis.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t\tif (series.yAxis) {\r\n\t\t\t\tseries.yAxis.series.removeValue(series);\r\n\t\t\t\tseries.yAxis.invalidateProcessedData();\r\n\t\t\t}\r\n\t\t\t// otherwise extremes won't change\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.resetExtremes();\r\n\t\t\t})\r\n\t\t}\r\n\t\tsuper.handleSeriesRemoved(event);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of horizontal (X) axes.\r\n\t *\r\n\t * @return List of axes\r\n\t */\r\n\tpublic get xAxes(): List<Axis<this[\"_xAxisRendererType\"]>> {\r\n\t\tif (!this._xAxes) {\r\n\t\t\tthis._xAxes = new List<Axis<this[\"_xAxisRendererType\"]>>();\r\n\t\t\tthis._xAxes.events.on(\"inserted\", this.processXAxis, this, false);\r\n\t\t\tthis._xAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._xAxes, false));\r\n\t\t}\r\n\r\n\t\treturn this._xAxes;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic handleAxisRemoval(event: IListEvents<Axis>[\"removed\"]) {\r\n\t\tlet axis = event.oldValue;\r\n\t\tthis.dataUsers.removeValue(axis); // need to remove, as it might not be disposed\r\n\t\tif (axis.autoDispose) {\r\n\t\t\taxis.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of vertical (Y) axes.\r\n\t *\r\n\t * @return List of axes\r\n\t */\r\n\tpublic get yAxes(): List<Axis<this[\"_yAxisRendererType\"]>> {\r\n\t\tif (!this._yAxes) {\r\n\t\t\tthis._yAxes = new List<Axis<this[\"_yAxisRendererType\"]>>();\r\n\t\t\tthis._yAxes.events.on(\"inserted\", this.processYAxis, this, false);\r\n\t\t\tthis._yAxes.events.on(\"removed\", this.handleAxisRemoval, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._yAxes, false));\r\n\t\t}\r\n\r\n\t\treturn this._yAxes;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[XYSeries]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<XYSeries>[\"inserted\"]): void {\r\n\t\ttry {\r\n\t\t\tsuper.handleSeriesAdded(event);\r\n\t\t\tlet series: XYSeries = event.newValue;\r\n\r\n\t\t\tif (this.xAxes.length == 0 || this.yAxes.length == 0) {\r\n\t\t\t\tregistry.removeFromInvalidComponents(series);\r\n\t\t\t\tseries.dataInvalid = false;\r\n\t\t\t}\r\n\r\n\t\t\t$utils.used(series.xAxis); // this is enough to get axis, handled in getter\r\n\t\t\t$utils.used(series.yAxis); // this is enough to get axis, handled in getter\r\n\r\n\t\t\tseries.maskBullets = series.maskBullets;\r\n\r\n\t\t\tif (series.fill == undefined) {\r\n\t\t\t\tif (this.patterns) {\r\n\t\t\t\t\tif (!$type.hasValue(series.stroke)) {\r\n\t\t\t\t\t\tseries.stroke = this.colors.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tseries.fill = this.patterns.next();\r\n\t\t\t\t\tif ($type.hasValue(series.fillOpacity)) {\r\n\t\t\t\t\t\tseries.fill.backgroundOpacity = series.fillOpacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (series.stroke instanceof Color) {\r\n\t\t\t\t\t\tseries.fill.stroke = series.stroke;\r\n\t\t\t\t\t\tseries.fill.fill = series.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseries.fill = this.colors.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.hasValue(series.stroke)) {\r\n\t\t\t\tseries.stroke = series.fill;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tthis.raiseCriticalError(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's [[Cursor]].\r\n\t *\r\n\t * @param cursor  Cursor\r\n\t */\r\n\tpublic set cursor(cursor: this[\"_cursor\"]) {\r\n\t\tif (this._cursor != cursor) {\r\n\t\t\tif (this._cursor) {\r\n\t\t\t\tthis.removeDispose(this._cursor);\r\n\t\t\t}\r\n\r\n\t\t\tthis._cursor = cursor;\r\n\r\n\t\t\tif (cursor) {\r\n\t\t\t\t// TODO this is wrong, fix it\r\n\t\t\t\tthis._disposers.push(cursor);\r\n\t\t\t\tcursor.chart = this;\r\n\t\t\t\tcursor.shouldClone = false;\r\n\t\t\t\tcursor.parent = this._cursorContainer;\r\n\t\t\t\tcursor.events.on(\"cursorpositionchanged\", this.handleCursorPositionChange, this, false);\r\n\t\t\t\tcursor.events.on(\"zoomstarted\", this.handleCursorZoomStart, this, false);\r\n\t\t\t\tcursor.events.on(\"zoomended\", this.handleCursorZoomEnd, this, false);\r\n\t\t\t\tcursor.events.on(\"panstarted\", this.handleCursorPanStart, this, false);\r\n\t\t\t\tcursor.events.on(\"panning\", this.handleCursorPanning, this, false);\r\n\t\t\t\tcursor.events.on(\"panended\", this.handleCursorPanEnd, this, false);\r\n\t\t\t\tcursor.events.on(\"behaviorcanceled\", this.handleCursorCanceled, this, false);\r\n\t\t\t\tcursor.events.on(\"hidden\", this.handleHideCursor, this, false);\r\n\t\t\t\tcursor.zIndex = Number.MAX_SAFE_INTEGER - 1;\r\n\r\n\t\t\t\tif (this.tapToActivate) {\r\n\t\t\t\t\t// We need this in order to setup cursor properly\r\n\t\t\t\t\tthis.setTapToActivate(this.tapToActivate);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Cursor\r\n\t */\r\n\tpublic get cursor(): this[\"_cursor\"] {\r\n\t\treturn this._cursor;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks when the cursor's position changes, e.g. shows proper\r\n\t * tooltips on axes and series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleCursorPositionChange(): void {\r\n\r\n\t\tlet cursor = this.cursor;\r\n\r\n\t\tif (cursor.visible && !cursor.isHiding) {\r\n\t\t\tlet xPosition: number = this.cursor.xPosition;\r\n\t\t\tlet yPosition: number = this.cursor.yPosition;\r\n\r\n\t\t\tthis.showSeriesTooltip({\r\n\t\t\t\tx: xPosition,\r\n\t\t\t\ty: yPosition\r\n\t\t\t});\r\n\r\n\t\t\tlet exceptAxes: Axis[] = [];\r\n\t\t\tlet snapToSeries = cursor.snapToSeries;\r\n\r\n\t\t\tif (snapToSeries && !cursor.downPoint) {\r\n\t\t\t\tif (snapToSeries instanceof XYSeries) {\r\n\t\t\t\t\tsnapToSeries = [snapToSeries];\r\n\t\t\t\t}\r\n\t\t\t\tlet dataItems: XYSeriesDataItem[] = [];\r\n\r\n\t\t\t\t$array.each(snapToSeries, (snpSeries) => {\r\n\t\t\t\t\tif (!snpSeries.isHidden && !snpSeries.isHiding) {\r\n\r\n\t\t\t\t\t\tlet xAxis = snpSeries.xAxis;\r\n\t\t\t\t\t\tlet yAxis = snpSeries.yAxis;\r\n\r\n\t\t\t\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis) && yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\r\n\t\t\t\t\t\t\tsnpSeries.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\t\t\tdataItems.push(dataItem);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.yAxis);\r\n\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.xAxis);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (snpSeries.baseAxis == snpSeries.xAxis) {\r\n\t\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.yAxis);\r\n\t\t\t\t\t\t\t\tdataItems.push(xAxis.getSeriesDataItem(snpSeries, xAxis.toAxisPosition(xPosition), true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (snpSeries.baseAxis == snpSeries.yAxis) {\r\n\t\t\t\t\t\t\t\t$array.move(exceptAxes, snpSeries.xAxis);\r\n\t\t\t\t\t\t\t\tdataItems.push(yAxis.getSeriesDataItem(snpSeries, yAxis.toAxisPosition(yPosition), true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlet closestDataItem = this.getClosest(dataItems, xPosition, yPosition);\r\n\r\n\t\t\t\tif (closestDataItem) {\r\n\t\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\t\tlet closestSeries = closestDataItem.component;\r\n\t\t\t\t\t\tif (series != closestSeries) {\r\n\t\t\t\t\t\t\tseries.hideTooltip();\r\n\t\t\t\t\t\t\tif (series.xAxis != closestSeries.xAxis) {\r\n\t\t\t\t\t\t\t\tseries.xAxis.hideTooltip();\r\n\t\t\t\t\t\t\t\texceptAxes.push(series.xAxis);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (series.yAxis != closestSeries.yAxis) {\r\n\t\t\t\t\t\t\t\tseries.yAxis.hideTooltip();\r\n\t\t\t\t\t\t\t\texceptAxes.push(series.yAxis);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tclosestDataItem.component.showTooltipAtDataItem(closestDataItem);\r\n\t\t\t\t\tcursor.handleSnap(closestDataItem.component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//}\r\n\t\t\tthis._seriesPoints = [];\r\n\r\n\t\t\tif (this._cursorXPosition != xPosition) {\r\n\t\t\t\tthis.showAxisTooltip(this.xAxes, xPosition, exceptAxes);\r\n\t\t\t}\r\n\t\t\tif (this._cursorYPosition != yPosition) {\r\n\t\t\t\tthis.showAxisTooltip(this.yAxes, yPosition, exceptAxes);\r\n\t\t\t}\r\n\t\t\tif (this.arrangeTooltips) {\r\n\t\t\t\tthis.sortSeriesTooltips(this._seriesPoints);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.legend) {\r\n\t\t\t\tthis.legend.afterDraw();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finds closest data item to position out of the array of items.\r\n\t *\r\n\t * @since 4.9.29\r\n\t * @param   dataItems  Array of items\r\n\t * @param              xPosition X position\r\n\t * @param              yPosition Y position\r\n\t * @return             Data item\r\n\t */\r\n\tpublic getClosest(dataItems: XYSeriesDataItem[], xPosition: number, yPosition: number): XYSeriesDataItem {\r\n\t\tlet minDistance = Infinity;\r\n\t\tlet closestDataItem: XYSeriesDataItem\r\n\r\n\t\t$array.eachContinue(dataItems, (dataItem) => {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet xAxis = dataItem.component.xAxis;\r\n\t\t\t\tlet yAxis = dataItem.component.yAxis;\r\n\r\n\t\t\t\tlet xPos = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.toAxisPosition(xPosition)));\r\n\t\t\t\tlet yPos = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.toAxisPosition(yPosition)));\r\n\r\n\t\t\t\tlet xField = dataItem.component.xField;\r\n\t\t\t\tlet yField = dataItem.component.yField;\r\n\r\n\t\t\t\tif (xAxis instanceof ValueAxis && !$type.isNumber(dataItem.getValue(xField))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (yAxis instanceof ValueAxis && !$type.isNumber(dataItem.getValue(yField))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet dxPosition = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.getPositionX(dataItem, xField, dataItem.locations[xField], \"valueX\")));\r\n\t\t\t\tlet dyPosition = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.getPositionY(dataItem, yField, dataItem.locations[yField], \"valueY\")));\r\n\r\n\t\t\t\tlet distance = Math.sqrt(Math.pow(xPos - dxPosition, 2) + Math.pow(yPos - dyPosition, 2));\r\n\r\n\t\t\t\tif (distance < minDistance) {\r\n\t\t\t\t\tminDistance = distance;\r\n\t\t\t\t\tclosestDataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn closestDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all cursor-related tooltips when the cursor itself is hidden.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleHideCursor(): void {\r\n\t\tthis.hideObjectTooltip(this.xAxes);\r\n\t\tthis.hideObjectTooltip(this.yAxes);\r\n\t\tthis.hideObjectTooltip(this.series);\r\n\t\tthis._cursorXPosition = undefined;\r\n\t\tthis._cursorYPosition = undefined;\r\n\r\n\t\tthis.updateSeriesLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates values for each series' legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSeriesLegend(): void {\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.updateLegendValue();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Hides a tooltip for a list of objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprites  A list of sprites to hide tooltip for\r\n\t */\r\n\tpublic hideObjectTooltip(sprites: List<Axis | XYSeries>): void {\r\n\t\t$iter.each(sprites.iterator(), (sprite) => {\r\n\t\t\tif (sprite.cursorTooltipEnabled) {\r\n\t\t\t\tsprite.hideTooltip(0);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Shows a tooltip for all chart's series, using specific coordinates as a\r\n\t * reference point.\r\n\t *\r\n\t * The tooltip might be shown at different coordinates depending on the\r\n\t * actual data point's position, overlapping with other tooltips, etc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Reference point\r\n\t */\r\n\tpublic showSeriesTooltip(position?: IPoint): void {\r\n\r\n\t\tif (!position) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.hideTooltip();\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet seriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\t//if (series.tooltipText || series.tooltipHTML) { // not good, bullets are not hovered then\r\n\r\n\t\t\tif ((series.xAxis instanceof DateAxis && series.xAxis.snapTooltip) || (series.yAxis instanceof DateAxis && series.yAxis.snapTooltip)) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet point = series.showTooltipAtPosition(position.x, position.y);\r\n\t\t\t\tif (point) {\r\n\t\t\t\t\tseries.tooltip.setBounds($utils.spriteRectToSvg({ x: 0, y: 0, width: this.pixelWidth, height: this.pixelHeight }, this));\r\n\t\t\t\t\tseriesPoints.push({ series: series, point: point });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//}\r\n\t\t});\r\n\r\n\t\tif (this.arrangeTooltips) {\r\n\t\t\tthis.sortSeriesTooltips(seriesPoints);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic sortSeriesTooltips(seriesPoints: { point: IPoint, series: XYSeries }[]) {\r\n\t\tif (seriesPoints.length > 0) {\r\n\t\t\tlet cursor = this.cursor;\r\n\r\n\t\t\tif (cursor && $type.isNumber(cursor.maxTooltipDistance)) {\r\n\r\n\t\t\t\tlet cursorPoint = $utils.spritePointToSvg({ x: cursor.point.x, y: cursor.point.y }, cursor);\r\n\r\n\t\t\t\tlet nearestSeries: XYSeries;\r\n\t\t\t\tlet nearestPoint: IPoint;\r\n\t\t\t\tlet smallestDistance: number = Infinity;\r\n\r\n\t\t\t\t$array.each(seriesPoints, (seriesPoint) => {\r\n\t\t\t\t\tlet series = seriesPoint.series;\r\n\t\t\t\t\tlet fixedPoint = seriesPoint.point;\r\n\t\t\t\t\tif (fixedPoint) {\r\n\t\t\t\t\t\tlet point = { x: fixedPoint.x, y: fixedPoint.y };\r\n\r\n\t\t\t\t\t\tlet distance = Math.abs($math.getDistance(point, cursorPoint));\r\n\t\t\t\t\t\tif (distance < smallestDistance) {\r\n\t\t\t\t\t\t\tnearestPoint = point;\r\n\t\t\t\t\t\t\tsmallestDistance = distance;\r\n\t\t\t\t\t\t\tnearestSeries = series;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tlet newSeriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\t\t\t\tif (nearestSeries) {\r\n\r\n\t\t\t\t\t$array.each(seriesPoints, (seriesPoint) => {\r\n\t\t\t\t\t\tif (Math.abs($math.getDistance(seriesPoint.point, nearestPoint)) <= Math.abs(cursor.maxTooltipDistance)) {\r\n\t\t\t\t\t\t\tnewSeriesPoints.push({ series: seriesPoint.series, point: seriesPoint.point });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlet tooltipDataItem = seriesPoint.series.tooltipDataItem;\r\n\t\t\t\t\t\t\tif (tooltipDataItem) {\r\n\t\t\t\t\t\t\t\t$array.each(tooltipDataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tsprite.isHover = false;\r\n\t\t\t\t\t\t\t\t\tsprite.handleOutReal(); // to avoid flicker\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tseriesPoint.series.hideTooltip(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tif (cursor.maxTooltipDistance < 0) {\r\n\t\t\t\t\t\tif (newSeriesPoints.length > 0) {\r\n\t\t\t\t\t\t\t$array.each(newSeriesPoints, (np) => {\r\n\t\t\t\t\t\t\t\tif (nearestSeries != np.series) {\r\n\t\t\t\t\t\t\t\t\tnp.series.hideTooltip(0);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewSeriesPoints = [{ series: nearestSeries, point: nearestPoint }];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tseriesPoints = newSeriesPoints;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet topLeft = $utils.spritePointToSvg({ x: -0.5, y: -0.5 }, this.plotContainer);\r\n\t\t\tlet bottomRight = $utils.spritePointToSvg({ x: this.plotContainer.pixelWidth + 0.5, y: this.plotContainer.pixelHeight + 0.5 }, this.plotContainer);\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tlet filteredSeriesPoints: { point: IPoint, series: XYSeries }[] = [];\r\n\t\t\t$array.each(seriesPoints, (seriesPoint) => {\r\n\t\t\t\tlet point = seriesPoint.point;\r\n\t\t\t\tif (point && $math.isInRectangle(point, { x: topLeft.x, y: topLeft.y, width: bottomRight.x - topLeft.x, height: bottomRight.y - topLeft.y })) {\r\n\t\t\t\t\tfilteredSeriesPoints.push({ point: point, series: seriesPoint.series });\r\n\t\t\t\t\tsum += point.y;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tseriesPoints = filteredSeriesPoints;\r\n\r\n\t\t\tlet firstSeries = this.series.getIndex(0);\r\n\t\t\tlet inversed = false;\r\n\t\t\tif (firstSeries && firstSeries.yAxis && firstSeries.yAxis.renderer.inversed) {\r\n\t\t\t\tinversed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (inversed) {\r\n\t\t\t\tseriesPoints.sort((a, b) => $number.order(a.point.y, b.point.y))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tseriesPoints.sort((a, b) => $number.order(b.point.y, a.point.y))\r\n\t\t\t\tseriesPoints.reverse();\r\n\t\t\t}\r\n\r\n\t\t\tlet averageY = sum / seriesPoints.length;\r\n\t\t\tlet maxY = $utils.svgPointToDocument({ x: 0, y: 0 }, this.svgContainer.SVGContainer).y;\r\n\r\n\t\t\tif (seriesPoints.length > 0) {\r\n\t\t\t\tlet top = topLeft.y;\r\n\t\t\t\tlet bottom = bottomRight.y;\r\n\r\n\t\t\t\t// TODO is this needed ?\r\n\t\t\t\t$utils.spritePointToDocument({ x: 0, y: top }, this);\r\n\r\n\t\t\t\tlet dropped = false;\r\n\r\n\t\t\t\tif (averageY > top + (bottom - top) / 2) {\r\n\t\t\t\t\tlet nextHeight = bottom;\r\n\t\t\t\t\tfor (let i = seriesPoints.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tlet series = seriesPoints[i].series;\r\n\r\n\t\t\t\t\t\tlet tooltip = series.tooltip;\r\n\t\t\t\t\t\tlet pointY = seriesPoints[i].point.y;\r\n\r\n\t\t\t\t\t\ttooltip.setBounds({ x: 0, y: -maxY, width: this.pixelWidth, height: nextHeight + maxY });\r\n\r\n\t\t\t\t\t\tif (tooltip.invalid) {\r\n\t\t\t\t\t\t\ttooltip.validate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttooltip.toBack();\r\n\t\t\t\t\t\tnextHeight = $utils.spritePointToSvg({ x: 0, y: tooltip.label.pixelY - tooltip.pixelY + pointY - tooltip.pixelMarginTop }, tooltip).y;\r\n\r\n\t\t\t\t\t\tif (nextHeight < -maxY) {\r\n\t\t\t\t\t\t\tdropped = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (averageY <= top + (bottom - top) / 2 || dropped) {\r\n\t\t\t\t\tlet nextY = top;\r\n\t\t\t\t\tfor (let i = 0, len = seriesPoints.length; i < len; i++) {\r\n\t\t\t\t\t\tlet series = seriesPoints[i].series;\r\n\t\t\t\t\t\tlet pointY = seriesPoints[i].point.y;\r\n\t\t\t\t\t\tlet tooltip = series.tooltip;\r\n\t\t\t\t\t\ttooltip.setBounds({ x: 0, y: nextY, width: this.pixelWidth, height: bottom });\r\n\r\n\t\t\t\t\t\tif (tooltip.invalid) {\r\n\t\t\t\t\t\t\ttooltip.validate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttooltip.toBack();\r\n\r\n\t\t\t\t\t\tnextY = $utils.spritePointToSvg({ x: 0, y: tooltip.label.pixelY + tooltip.label.measuredHeight - tooltip.pixelY + pointY + tooltip.pixelMarginBottom }, tooltip).y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows tooltips for a list of axes at specific position.\r\n\t *\r\n\t * Position might be X coordinate for horizontal axes, and Y coordinate for\r\n\t * vertical axes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axes      List of axes to show tooltip on\r\n\t * @param position  Position (px)\r\n\t */\r\n\tpublic showAxisTooltip(axes: List<Axis>, position: number, except?: Axis[]): void {\r\n\t\t$iter.each(axes.iterator(), (axis) => {\r\n\t\t\tif (!except || except.indexOf(axis) == -1) {\r\n\t\t\t\tif (this.dataItems.length > 0 || axis.dataItems.length > 0) {\r\n\t\t\t\t\taxis.showTooltipAtPosition(position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the value range for the axis taking into account zoom level & inversed.\r\n\t *\r\n\t * @param axis   Axis\r\n\t * @param range  Range\r\n\t * @return Modified range\r\n\t */\r\n\tpublic getUpdatedRange(axis: Axis<this[\"_xAxisRendererType\"]>, range: IRange): IRange {\r\n\r\n\t\tif (!axis) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet start: number;\r\n\t\tlet end: number;\r\n\t\tlet inversed = axis.renderer.inversed;\r\n\r\n\t\tif (inversed) {\r\n\t\t\t$math.invertRange(range);\r\n\r\n\t\t\tstart = 1 - axis.end;\r\n\t\t\tend = 1 - axis.start;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstart = axis.start;\r\n\t\t\tend = axis.end;\r\n\t\t}\r\n\r\n\t\tlet difference: number = end - start;\r\n\r\n\t\treturn {\r\n\t\t\tstart: start + range.start * difference,\r\n\t\t\tend: start + range.end * difference\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user finishes zooming using chart\r\n\t * cursor, e.g. zooms axes.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorZoomEnd(event: IXYCursorEvents[\"zoomended\"]): void {\r\n\t\tlet cursor: XYCursor = this.cursor;\r\n\t\tlet behavior = cursor.behavior;\r\n\t\tif (behavior == \"zoomX\" || behavior == \"zoomXY\") {\r\n\t\t\tlet xRange: IRange = cursor.xRange;\r\n\t\t\tif (xRange && this.xAxes.length > 0) {\r\n\t\t\t\txRange = this.getUpdatedRange(this.xAxes.getIndex(0), xRange);\r\n\t\t\t\txRange.priority = \"start\";\r\n\t\t\t\tthis.zoomAxes(this.xAxes, xRange);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (behavior == \"zoomY\" || behavior == \"zoomXY\") {\r\n\t\t\tlet yRange: IRange = cursor.yRange;\r\n\t\t\tif (yRange && this.yAxes.length > 0) {\r\n\t\t\t\tyRange = this.getUpdatedRange(this.yAxes.getIndex(0), yRange);\r\n\t\t\t\tyRange.priority = \"start\";\r\n\t\t\t\tthis.zoomAxes(this.yAxes, yRange);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.handleHideCursor();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorPanStart(event: IXYCursorEvents[\"panning\"]): void {\r\n\t\tlet xAxis = this.xAxes.getIndex(0);\r\n\t\tif (xAxis) {\r\n\t\t\tthis._panStartXRange = { start: xAxis.start, end: xAxis.end };\r\n\t\t\tif (xAxis.renderer.inversed) {\r\n\t\t\t\tthis._panStartXRange = $math.invertRange(this._panStartXRange)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet yAxis = this.yAxes.getIndex(0);\r\n\t\tif (yAxis) {\r\n\t\t\tthis._panStartYRange = { start: yAxis.start, end: yAxis.end };\r\n\t\t\tif (yAxis.renderer.inversed) {\r\n\t\t\t\tthis._panStartYRange = $math.invertRange(this._panStartYRange)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user ends panning\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorPanEnd(event: IXYCursorEvents[\"panning\"]): void {\r\n\t\tlet cursor: XYCursor = this.cursor;\r\n\t\tlet behavior = cursor.behavior;\r\n\r\n\t\tif (this._panEndXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n\t\t\tlet panEndRange = this._panEndXRange;\r\n\t\t\tlet panStartRange = this._panStartXRange;\r\n\t\t\tlet delta = 0;\r\n\r\n\t\t\tif (panEndRange.start < 0) {\r\n\t\t\t\tdelta = panEndRange.start;\r\n\t\t\t}\r\n\r\n\t\t\tif (panStartRange.end > 1) {\r\n\t\t\t\tif (panEndRange.end > panStartRange.end) {\r\n\t\t\t\t\tdelta = panEndRange.end - panStartRange.end;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (panEndRange.end > 1) {\r\n\t\t\t\tdelta = panEndRange.end - 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.zoomAxes(this.xAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, cursor.snapOnPan);\r\n\t\t\tthis._panEndXRange = undefined;\r\n\t\t\tthis._panStartXRange = undefined;\r\n\t\t}\r\n\t\tif (this._panEndYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n\t\t\tlet panEndRange = this._panEndYRange;\r\n\r\n\t\t\tlet delta = 0;\r\n\t\t\tif (panEndRange.start < 0) {\r\n\t\t\t\tdelta = panEndRange.start;\r\n\t\t\t}\r\n\t\t\tif (panEndRange.end > 1) {\r\n\t\t\t\tdelta = panEndRange.end - 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.zoomAxes(this.yAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, cursor.snapOnPan);\r\n\t\t\tthis._panEndYRange = undefined;\r\n\t\t\tthis._panStartYRange = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleCursorCanceled(): void {\r\n\t\tthis._panEndXRange = undefined;\r\n\t\tthis._panStartXRange = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user is panning chart plot using chart cursor.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorPanning(event: IXYCursorEvents[\"panning\"]): void {\r\n\t\tlet cursor: XYCursor = this.cursor;\r\n\t\tlet behavior = cursor.behavior;\r\n\t\tlet maxPanOut = cursor.maxPanOut;\r\n\t\tif (this._panStartXRange && (behavior == \"panX\" || behavior == \"panXY\")) {\r\n\t\t\tlet panStartRange = this._panStartXRange;\r\n\t\t\tlet range = cursor.xRange;\r\n\r\n\t\t\tlet axisRange = this.getCommonAxisRange(this.xAxes);\r\n\r\n\t\t\tlet difference = (panStartRange.end - panStartRange.start);\r\n\t\t\tlet delta = range.start * (axisRange.end - axisRange.start);\r\n\r\n\t\t\tlet newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n\t\t\tlet newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n\r\n\t\t\tif (newStart <= 0) {\r\n\t\t\t\tnewEnd = newStart + difference;\r\n\t\t\t}\r\n\r\n\t\t\tif (newEnd >= 1) {\r\n\t\t\t\tnewStart = newEnd - difference;\r\n\t\t\t}\r\n\r\n\t\t\tlet newRange = {\r\n\t\t\t\tstart: newStart,\r\n\t\t\t\tend: newEnd\r\n\t\t\t}\r\n\t\t\tthis._panEndXRange = newRange;\r\n\r\n\t\t\tthis.zoomAxes(this.xAxes, newRange, false, false, cursor.maxPanOut);\r\n\t\t}\r\n\r\n\t\tif (this._panStartYRange && (behavior == \"panY\" || behavior == \"panXY\")) {\r\n\t\t\tlet panStartRange = this._panStartYRange;\r\n\t\t\tlet range = cursor.yRange;\r\n\r\n\t\t\tlet axisRange = this.getCommonAxisRange(this.yAxes);\r\n\r\n\t\t\tlet difference = panStartRange.end - panStartRange.start;\r\n\t\t\tlet delta = range.start * (axisRange.end - axisRange.start);\r\n\r\n\t\t\tlet newStart = Math.max(-maxPanOut, delta + panStartRange.start);\r\n\t\t\tlet newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);\r\n\r\n\t\t\tif (newStart <= 0) {\r\n\t\t\t\tnewEnd = newStart + difference;\r\n\t\t\t}\r\n\r\n\t\t\tif (newEnd >= 1) {\r\n\t\t\t\tnewStart = newEnd - difference;\r\n\t\t\t}\r\n\r\n\t\t\tlet newRange = {\r\n\t\t\t\tstart: newStart,\r\n\t\t\t\tend: newEnd\r\n\t\t\t}\r\n\t\t\tthis._panEndYRange = newRange;\r\n\t\t\tthis.zoomAxes(this.yAxes, newRange, false, false, cursor.maxPanOut);\r\n\t\t}\r\n\r\n\t\tthis.handleHideCursor();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic handleYAxisSet(series: XYSeries) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs zoom and other operations when user starts zooming using chart\r\n\t * cursor, e.g. zooms axes.\r\n\t *\r\n\t * @param event Cursor's event\r\n\t */\r\n\tprotected handleCursorZoomStart(event: IXYCursorEvents[\"zoomstarted\"]): void {\r\n\r\n\t\t// Nothing here\r\n\t\t// This method is here only as a \"placeholder\" for extending classes to\r\n\t\t// override if necessary\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal (X) scrollbar.\r\n\t *\r\n\t * @param scrollbar Scrollbar\r\n\t */\r\n\tpublic set scrollbarX(scrollbar: Scrollbar) {\r\n\t\tif (this._scrollbarX) {\r\n\t\t\tthis.removeDispose(this._scrollbarX);\r\n\t\t}\r\n\t\tthis._scrollbarX = scrollbar;\r\n\r\n\t\tif (scrollbar) {\r\n\t\t\tthis._disposers.push(scrollbar);\r\n\t\t\tscrollbar.parent = this.topAxesContainer;\r\n\t\t\tscrollbar.shouldClone = false;\r\n\t\t\tscrollbar.startGrip.exportable = false;\r\n\t\t\tscrollbar.endGrip.exportable = false;\r\n\t\t\tscrollbar.toBack();\r\n\t\t\tscrollbar.orientation = \"horizontal\";\r\n\t\t\tscrollbar.events.on(\"rangechanged\", this.handleXScrollbarChange, this, false);\r\n\t\t\tthis.events.on(\"datavalidated\", () => scrollbar.updateThumb(false), this, false);\r\n\t\t\t// accessibility related\r\n\t\t\tscrollbar.adapter.add(\"positionValue\", (arg) => {\r\n\t\t\t\tlet xAxis = this.xAxes.getIndex(0);\r\n\t\t\t\tif (xAxis) {\r\n\t\t\t\t\targ.value = xAxis.getPositionLabel(\r\n\t\t\t\t\t\txAxis.renderer.inversed\r\n\t\t\t\t\t\t\t? 1 - arg.position\r\n\t\t\t\t\t\t\t: arg.position\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn arg;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Scrollbar\r\n\t */\r\n\tpublic get scrollbarX(): Scrollbar {\r\n\t\treturn this._scrollbarX;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical (Y) scrollbar.\r\n\t *\r\n\t * @param scrollbar Scrollbar\r\n\t */\r\n\tpublic set scrollbarY(scrollbar: Scrollbar) {\r\n\t\tif (this._scrollbarY) {\r\n\t\t\tthis.removeDispose(this._scrollbarY);\r\n\t\t}\r\n\t\tthis._scrollbarY = scrollbar;\r\n\r\n\t\tif (scrollbar) {\r\n\t\t\tthis._disposers.push(scrollbar);\r\n\t\t\tscrollbar.parent = this.rightAxesContainer;\r\n\t\t\tscrollbar.startGrip.exportable = false;\r\n\t\t\tscrollbar.shouldClone = false;\r\n\t\t\tscrollbar.endGrip.exportable = false;\r\n\t\t\tscrollbar.toFront();\r\n\t\t\tscrollbar.orientation = \"vertical\";\r\n\t\t\tscrollbar.events.on(\"rangechanged\", this.handleYScrollbarChange, this, false);\r\n\t\t\tthis.events.on(\"datavalidated\", () => scrollbar.updateThumb(false), this, false);\r\n\t\t\t// accessibility related\r\n\t\t\tscrollbar.adapter.add(\"positionValue\", (arg) => {\r\n\t\t\t\tlet yAxis = this.yAxes.getIndex(0);\r\n\t\t\t\tif (yAxis) {\r\n\t\t\t\t\targ.value = yAxis.getPositionLabel(arg.position);\r\n\t\t\t\t}\r\n\t\t\t\treturn arg;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Scrollbar\r\n\t */\r\n\tpublic get scrollbarY(): Scrollbar {\r\n\t\treturn this._scrollbarY;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axes affected by the horizontal (X) scrollbar when the selection\r\n\t * on it changes.\r\n\t *\r\n\t * @param event Scrollbar range change event\r\n\t */\r\n\tprotected handleXScrollbarChange(event: AMEvent<Scrollbar, IScrollbarEvents>[\"rangechanged\"]): void {\r\n\r\n\t\tif (this.inited) {\r\n\t\t\tlet scrollbar: Scrollbar = event.target;\r\n\t\t\tlet range = scrollbar.range;\r\n\r\n\t\t\tif (range.start == 0) {\r\n\t\t\t\trange.priority = \"start\";\r\n\t\t\t}\r\n\r\n\t\t\tif (range.end == 1) {\r\n\t\t\t\trange.priority = \"end\";\r\n\t\t\t}\r\n\r\n\t\t\trange = this.zoomAxes(this.xAxes, range);\r\n\r\n\t\t\tscrollbar.fixRange(range);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axes affected by the vertical (Y) scrollbar when the selection\r\n\t * on it changes.\r\n\t *\r\n\t * @param event Scrollbar range change event\r\n\t */\r\n\tprotected handleYScrollbarChange(event: AMEvent<Scrollbar, IScrollbarEvents>[\"rangechanged\"]): void {\r\n\t\tif (this.inited) {\r\n\t\t\tlet scrollbar: Scrollbar = event.target;\r\n\t\t\tlet range = scrollbar.range;\r\n\t\t\tif (range.end == 1) {\r\n\t\t\t\trange.priority = \"end\";\r\n\t\t\t}\r\n\t\t\tif (range.start == 0) {\r\n\t\t\t\trange.priority = \"start\";\r\n\t\t\t}\r\n\t\t\trange = this.zoomAxes(this.yAxes, range);\r\n\t\t\tscrollbar.fixRange(range);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axes that are affected by to specific relative range.\r\n\t *\r\n\t * @param axes       List of axes to zoom\r\n\t * @param range      Range of values to zoom to (0-1)\r\n\t * @param instantly  If set to `true` will skip zooming animation\r\n\t * @return Recalculated range that is common to all involved axes\r\n\t */\r\n\tprotected zoomAxes(axes: List<Axis<this[\"_xAxisRendererType\"]>>, range: IRange, instantly?: boolean, round?: boolean, declination?: number, stop?: boolean): IRange {\r\n\t\tlet realRange: IRange = { start: 0, end: 1 };\r\n\r\n\t\tthis.showSeriesTooltip(); // hides\r\n\r\n\t\tlet originalRange = range;\r\n\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\t$iter.each(axes.iterator(), (axis) => {\r\n\r\n\t\t\t\tlet maxZoomFactor = axis.maxZoomFactor;\r\n\t\t\t\tif ($type.isNumber(axis.minZoomCount)) {\r\n\t\t\t\t\tmaxZoomFactor = maxZoomFactor / axis.minZoomCount\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (stop && 1 / (range.end - range.start) >= maxZoomFactor) {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (axis.zoomable) {\r\n\t\t\t\t\t\tif (axis.renderer.inversed) {\r\n\t\t\t\t\t\t\trange = $math.invertRange(originalRange);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\trange = originalRange;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\taxis.hideTooltip(0);\r\n\r\n\t\t\t\t\t\tif (round) {\r\n\t\t\t\t\t\t\t//let diff = range.end - range.start;\r\n\t\t\t\t\t\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\t\t\t\t\t\tlet cellWidth = axis.getCellEndPosition(0) - axis.getCellStartPosition(0);\r\n\r\n\t\t\t\t\t\t\t\trange.start = axis.roundPosition(range.start + cellWidth / 2 - (axis.startLocation) * cellWidth, axis.startLocation);\r\n\t\t\t\t\t\t\t\trange.end = axis.roundPosition(range.end - cellWidth / 2 + (1 - axis.endLocation) * cellWidth, axis.endLocation);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\trange.start = axis.roundPosition(range.start + 0.0001, 0, axis.startLocation);\r\n\t\t\t\t\t\t\t\trange.end = axis.roundPosition(range.end + 0.0001, 0, axis.endLocation);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet axisRange: IRange = axis.zoom(range, instantly, instantly, declination);\r\n\r\n\t\t\t\t\t\tif (axis.renderer.inversed) {\r\n\t\t\t\t\t\t\taxisRange = $math.invertRange(axisRange);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trealRange = axisRange;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn realRange;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if bullet container is masked.\r\n\t *\r\n\t * If it is set to `true`, any bullets that do not fit into bullet container\r\n\t * will be clipped off. Settting to `false` will allow bullets to \"spill out\"\r\n\t * of the plot area so they are not cut off.\r\n\t *\r\n\t * @param value Mask bullet container?\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"maskBullets\", value, true) && this.bulletsContainer) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.bulletsContainer.mask = this._bulletMask;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.mask = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mask bullet container?\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if chart should arrange series tooltips so that they would not\r\n\t * overlap.\r\n\t *\r\n\t * If set to `true` (default), the chart will adjust vertical positions of\r\n\t * all simultaneously shown tooltips to avoid overlapping.\r\n\t *\r\n\t * However, if you have a vertically-arranged chart, it might not make sense,\r\n\t * because tooltips would most probably not be aligned horizontally. In this\r\n\t * case it would probably be a good idea to set this setting to `false`.\r\n\t *\r\n\t * @default true\r\n\t * @param value Arrange tooltips?\r\n\t */\r\n\tpublic set arrangeTooltips(value: boolean) {\r\n\t\tthis.setPropertyValue(\"arrangeTooltips\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Arrange tooltips?\r\n\t */\r\n\tpublic get arrangeTooltips(): boolean {\r\n\t\treturn this.getPropertyValue(\"arrangeTooltips\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles mouse wheel event.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\t\tlet plotContainer = this.plotContainer;\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet plotPoint = $utils.svgPointToSprite(svgPoint, plotContainer);\r\n\t\tlet shift = event.shift.y;\r\n\r\n\t\tthis.handleWheelReal(shift, this.mouseWheelBehavior, plotPoint);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles mouse wheel event.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleHorizontalWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\t\tlet plotContainer = this.plotContainer;\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet plotPoint = $utils.svgPointToSprite(svgPoint, plotContainer);\r\n\r\n\t\tthis.handleWheelReal(event.shift.x, this.horizontalMouseWheelBehavior, plotPoint)\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleWheelReal(shift: number, mouseWheelBehavior: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\", plotPoint: IPoint) {\r\n\t\tif (shift != 0) {\r\n\t\t\tlet plotContainer = this.plotContainer;\r\n\r\n\t\t\tlet rangeX: IRange = this.getCommonAxisRange(this.xAxes);\r\n\t\t\tlet rangeY: IRange = this.getCommonAxisRange(this.yAxes);\r\n\r\n\t\t\tlet shiftStep = 0.1;\r\n\r\n\t\t\tlet maxPanOut = 0;\r\n\r\n\t\t\tif (mouseWheelBehavior == \"panX\" || mouseWheelBehavior == \"panXY\") {\r\n\r\n\t\t\t\tlet differenceX = rangeX.end - rangeX.start;\r\n\r\n\t\t\t\tlet newStartX = Math.max(-maxPanOut, rangeX.start + shiftStep * shift / 100 * (rangeX.end - rangeX.start));\r\n\t\t\t\tlet newEndX = Math.min(rangeX.end + shiftStep * shift / 100 * (rangeX.end - rangeX.start), 1 + maxPanOut);\r\n\r\n\t\t\t\tif (newStartX <= 0) {\r\n\t\t\t\t\tnewEndX = newStartX + differenceX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (newEndX >= 1) {\r\n\t\t\t\t\tnewStartX = newEndX - differenceX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.zoomAxes(this.xAxes, { start: newStartX, end: newEndX });\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseWheelBehavior == \"panY\" || mouseWheelBehavior == \"panXY\") {\r\n\t\t\t\tshift *= -1;\r\n\t\t\t\tlet differenceY = rangeY.end - rangeY.start;\r\n\r\n\t\t\t\tlet newStartY = Math.max(-maxPanOut, rangeY.start + shiftStep * shift / 100 * (rangeY.end - rangeY.start));\r\n\t\t\t\tlet newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * (rangeY.end - rangeY.start), 1 + maxPanOut);\r\n\r\n\t\t\t\tif (newStartY <= 0) {\r\n\t\t\t\t\tnewEndY = newStartY + differenceY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (newEndY >= 1) {\r\n\t\t\t\t\tnewStartY = newEndY - differenceY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.zoomAxes(this.yAxes, { start: newStartY, end: newEndY });\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseWheelBehavior == \"zoomX\" || mouseWheelBehavior == \"zoomXY\") {\r\n\t\t\t\tlet locationX = plotPoint.x / plotContainer.maxWidth;\r\n\r\n\t\t\t\tlet location2X = this.xAxes.getIndex(0).toAxisPosition(locationX);\r\n\r\n\t\t\t\tlet newStartX = Math.max(-maxPanOut, rangeX.start - shiftStep * (rangeX.end - rangeX.start) * shift / 100 * locationX);\r\n\t\t\t\tnewStartX = Math.min(newStartX, location2X);\r\n\r\n\t\t\t\tlet newEndX = Math.min(rangeX.end + shiftStep * (rangeX.end - rangeX.start) * shift / 100 * (1 - locationX), 1 + maxPanOut);\r\n\t\t\t\tnewEndX = Math.max(newEndX, location2X);\r\n\r\n\t\t\t\tthis.zoomAxes(this.xAxes, { start: newStartX, end: newEndX }, undefined, undefined, undefined, true);\r\n\t\t\t}\r\n\r\n\t\t\tif (mouseWheelBehavior == \"zoomY\" || mouseWheelBehavior == \"zoomXY\") {\r\n\t\t\t\tlet locationY = plotPoint.y / plotContainer.maxHeight;\r\n\r\n\t\t\t\tlet location2Y = this.yAxes.getIndex(0).toAxisPosition(locationY);\r\n\r\n\t\t\t\tlet newStartY = Math.max(-maxPanOut, rangeY.start - shiftStep * (rangeY.end - rangeY.start) * shift / 100 * (1 - locationY));\r\n\t\t\t\tnewStartY = Math.min(newStartY, location2Y);\r\n\r\n\t\t\t\tlet newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * locationY * (rangeY.end - rangeY.start), 1 + maxPanOut);\r\n\t\t\t\tnewEndY = Math.max(newEndY, location2Y);\r\n\r\n\t\t\t\tthis.zoomAxes(this.yAxes, { start: newStartY, end: newEndY }, undefined, undefined, undefined, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies action for when mouse wheel is used when over the chart.\r\n\t *\r\n\t * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`,`\"panXY\"`, `\"none\"` (default).\r\n\t *\r\n\t * You can control sensitivity of wheel zooming via `mouseOptions`.\r\n\t *\r\n\t * @default \"none\"\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t */\r\n\tpublic set mouseWheelBehavior(value: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer = this.plotContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis.plotContainer.wheelable = false;\r\n\t\t\t\t\tthis.plotContainer.hoverable = false;\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mouse wheel behavior\r\n\t */\r\n\tpublic get mouseWheelBehavior(): \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"mouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies action for when horizontal mouse wheel is used when over the chart.\r\n\t *\r\n\t * Options: Options: `\"zoomX\"`, `\"zoomY\"`, `\"zoomXY\"`, `\"panX\"`, `\"panY\"`, `\"panXY\"`, `\"none\"` (default).\r\n\t *\r\n\t * @default \"none\"\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t */\r\n\tpublic set horizontalMouseWheelBehavior(value: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"horizontalMouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer2 = this.plotContainer.events.on(\"wheel\", this.handleHorizontalWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer2) {\r\n\t\t\t\t\tthis.plotContainer.wheelable = false;\r\n\t\t\t\t\tthis.plotContainer.hoverable = false;\r\n\t\t\t\t\tthis._mouseWheelDisposer2.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal mouse wheel behavior\r\n\t */\r\n\tpublic get horizontalMouseWheelBehavior(): \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"horizontalMouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `dateFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-specific data fields so they are parsed properly.\r\n\t *\r\n\t * @param fields  Array of date fields\r\n\t * @return Array of date fields populated with chart's date fields\r\n\t */\r\n\tprotected dataSourceDateFields(fields: string[]): string[] {\r\n\t\t// Process parent\r\n\t\tfields = super.dataSourceDateFields(fields);\r\n\r\n\t\t// Check if we have any series with date-fields\r\n\t\t$iter.each(this.series.iterator(), (series: this[\"_seriesType\"]) => {\r\n\t\t\tfields = this.populateDataSourceFields(\r\n\t\t\t\tfields,\r\n\t\t\t\t<any>series.dataFields,\r\n\t\t\t\t[\"dateX\", \"dateY\", \"openDateX\", \"openDateY\"]\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `numberFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-specific data fields so they are parsed properly.\r\n\t *\r\n\t * @param value  Array of number fields\r\n\t * @return Array of number fields populated with chart's number fields\r\n\t */\r\n\tprotected dataSourceNumberFields(fields: string[]): string[] {\r\n\t\tfields = super.dataSourceDateFields(fields);\r\n\r\n\t\t// Check if we have any series with date-fields\r\n\t\t$iter.each(this.series.iterator(), (series: this[\"_seriesType\"]) => {\r\n\t\t\tfields = this.populateDataSourceFields(\r\n\t\t\t\tfields,\r\n\t\t\t\t<any>series.dataFields,\r\n\t\t\t\t[\"valueX\", \"valueY\", \"openValueX\", \"openValueY\"]\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn fields;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Save axis ranges for later processing\r\n\t\t\tlet xAxes: any[] = [];\r\n\t\t\tlet yAxes: any[] = [];\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.xAxes.length; i < len; i++) {\r\n\t\t\t\t\tif (!config.xAxes[i].type) {\r\n\t\t\t\t\t\tthrow Error(\"[XYChart error] No type set for xAxes[\" + i + \"].\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(config.xAxes[i][\"axisRanges\"])) {\r\n\r\n\t\t\t\t\t\t// Maybe convert string dates?\r\n\t\t\t\t\t\tfor (let x = 0, len = config.xAxes[i][\"axisRanges\"].length; x < len; x++) {\r\n\t\t\t\t\t\t\tlet range = config.xAxes[i][\"axisRanges\"][x];\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.date) && $type.isString(range.date)) {\r\n\t\t\t\t\t\t\t\trange.date = this.dateFormatter.parse(range.date);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.endDate) && $type.isString(range.endDate)) {\r\n\t\t\t\t\t\t\t\trange.endDate = this.dateFormatter.parse(range.endDate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\txAxes.push({\r\n\t\t\t\t\t\t\taxisRanges: config.xAxes[i][\"axisRanges\"],\r\n\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdelete (config.xAxes[i][\"axisRanges\"]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.yAxes.length; i < len; i++) {\r\n\t\t\t\t\tif (!config.yAxes[i].type) {\r\n\t\t\t\t\t\tthrow Error(\"[XYChart error] No type set for yAxes[\" + i + \"].\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.hasValue(config.yAxes[i][\"axisRanges\"])) {\r\n\r\n\t\t\t\t\t\t// Maybe convert string dates?\r\n\t\t\t\t\t\tfor (let x = 0, len = config.yAxes[i][\"axisRanges\"].length; x < len; x++) {\r\n\t\t\t\t\t\t\tlet range = config.yAxes[i][\"axisRanges\"][x];\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.date) && $type.isString(range.date)) {\r\n\t\t\t\t\t\t\t\trange.date = this.dateFormatter.parse(range.date);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ($type.hasValue(range.endDate) && $type.isString(range.endDate)) {\r\n\t\t\t\t\t\t\t\trange.endDate = this.dateFormatter.parse(range.endDate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tyAxes.push({\r\n\t\t\t\t\t\t\taxisRanges: config.yAxes[i][\"axisRanges\"],\r\n\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tdelete (config.yAxes[i][\"axisRanges\"]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tconfig.series[i].type = config.series[i].type || \"LineSeries\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up cursor\r\n\t\t\tif ($type.hasValue(config.cursor) && !$type.hasValue(config.cursor.type)) {\r\n\t\t\t\tconfig.cursor.type = \"XYCursor\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set up scrollbars\r\n\t\t\tif ($type.hasValue(config.scrollbarX) && !$type.hasValue(config.scrollbarX.type)) {\r\n\t\t\t\tconfig.scrollbarX.type = \"Scrollbar\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(config.scrollbarY) && !$type.hasValue(config.scrollbarY.type)) {\r\n\t\t\t\tconfig.scrollbarY.type = \"Scrollbar\";\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig(config);\r\n\r\n\t\t\t// Finish up with ranges.\r\n\t\t\t// We need to do this here because series are processed last in JSON\r\n\t\t\t// config. Therefore their respective objects are not yet are available\r\n\t\t\t// when axis (and respectively their ranges) are being processed.\r\n\t\t\tif (yAxes.length) {\r\n\t\t\t\tfor (let i = 0, len = yAxes.length; i < len; i++) {\r\n\t\t\t\t\tthis.yAxes.getIndex(yAxes[i].index).config = {\r\n\t\t\t\t\t\taxisRanges: yAxes[i].axisRanges\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (xAxes.length) {\r\n\t\t\t\tfor (let i = 0, len = xAxes.length; i < len; i++) {\r\n\t\t\t\t\tthis.xAxes.getIndex(xAxes[i].index).config = {\r\n\t\t\t\t\t\taxisRanges: xAxes[i].axisRanges\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"scrollbarX\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"scrollbarX\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"scrollbarY\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"scrollbarY\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"cursor\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"cursor\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"series\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"series\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Series of type suitable for this chart.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new XYSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Button]] element that is used for zooming out the chart.\r\n\t *\r\n\t * This button appears only when chart is zoomed in, and disappears\r\n\t * autoamatically when it is zoome dout.\r\n\t *\r\n\t * @param button  Zoom out button\r\n\t */\r\n\tpublic set zoomOutButton(button: Button) {\r\n\t\tthis._zoomOutButton = button;\r\n\t\tif (button) {\r\n\t\t\tbutton.events.on(\"hit\", () => {\r\n\t\t\t\tthis.zoomAxes(this.xAxes, { start: 0, end: 1 });\r\n\t\t\t\tthis.zoomAxes(this.yAxes, { start: 0, end: 1 });\r\n\t\t\t}, undefined, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom out button\r\n\t */\r\n\tpublic get zoomOutButton(): Button {\r\n\t\treturn this._zoomOutButton;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[XYChart]].\r\n\t *\r\n\t * @param source Source XYChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\r\n\t\tsource.xAxes.each((axis) => {\r\n\t\t\tlet a = this.xAxes.push(axis.clone());\r\n\t\t\ta.chart = this;\r\n\t\t\ta.renderer.chart = this;\r\n\t\t})\r\n\r\n\t\tsource.yAxes.each((axis) => {\r\n\t\t\tlet a = this.yAxes.push(axis.clone());\r\n\t\t\ta.renderer.chart = this;\r\n\t\t\ta.chart = this;\r\n\t\t})\r\n\r\n\t\t//this.xAxes.copyFrom(source.xAxes);\r\n\t\t//this.yAxes.copyFrom(source.yAxes);\r\n\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\t//this.zoomOutButton.copyFrom(source.zoomOutButton);\r\n\r\n\t\tif (source.cursor) {\r\n\t\t\tthis.cursor = source.cursor.clone();\r\n\t\t}\r\n\r\n\t\tif (source.scrollbarX) {\r\n\t\t\tthis.scrollbarX = source.scrollbarX.clone();\r\n\t\t}\r\n\r\n\t\tif (source.scrollbarY) {\r\n\t\t\tthis.scrollbarY = source.scrollbarY.clone();\r\n\t\t}\r\n\t\t//@todo copy all container properties\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\r\n\t\tlet scrollbarX = this.scrollbarX;\r\n\t\tif (scrollbarX && scrollbarX instanceof XYChartScrollbar) {\r\n\t\t\tscrollbarX.scrollbarChart.disposeData();\r\n\t\t}\r\n\r\n\t\tlet scrollbarY = this.scrollbarY;\r\n\t\tif (scrollbarY && scrollbarY instanceof XYChartScrollbar) {\r\n\t\t\tscrollbarY.scrollbarChart.disposeData();\r\n\t\t}\r\n\r\n\t\tthis.xAxes.each((axis) => {\r\n\t\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\t\taxis.disposeData();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.yAxes.each((axis) => {\r\n\t\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\t\taxis.disposeData();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number): void {\r\n\t\tif (this.scrollbarX instanceof XYChartScrollbar) {\r\n\t\t\tthis.addScrollbarData(this.scrollbarX, removeCount);\r\n\t\t}\r\n\t\tif (this.scrollbarY instanceof XYChartScrollbar) {\r\n\t\t\tthis.addScrollbarData(this.scrollbarY, removeCount);\r\n\t\t}\r\n\r\n\t\tsuper.addData(rawDataItem, removeCount);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected addScrollbarData(scrollbar: XYChartScrollbar, removeCount: number) {\r\n\t\tlet chart = scrollbar.scrollbarChart;\r\n\t\tchart._parseDataFrom = chart.data.length;\r\n\t\tchart.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected removeScrollbarData(scrollbar: XYChartScrollbar, removeCount: number) {\r\n\t\tlet chart = scrollbar.scrollbarChart;\r\n\t\tif ($type.isNumber(removeCount)) {\r\n\t\t\twhile (removeCount > 0) {\r\n\t\t\t\tlet dataItem = this.dataItems.getIndex(0);\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tchart.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.dataUsers.each((dataUser) => {\r\n\t\t\t\t\tlet dataItem = dataUser.dataItems.getIndex(0);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataUser.dataItems.remove(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tchart._parseDataFrom--;\r\n\r\n\t\t\t\tremoveCount--;\r\n\t\t\t}\r\n\r\n\t\t\tchart.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes elements from the beginning of data\r\n\t *\r\n\t * @param count number of elements to remove\r\n\t */\r\n\tpublic removeData(count: $type.Optional<number>) {\r\n\t\tif (this.scrollbarX instanceof XYChartScrollbar) {\r\n\t\t\tthis.removeScrollbarData(this.scrollbarX, count);\r\n\t\t}\r\n\t\tif (this.scrollbarY instanceof XYChartScrollbar) {\r\n\t\t\tthis.removeScrollbarData(this.scrollbarY, count);\r\n\t\t}\r\n\r\n\t\tsuper.removeData(count);\r\n\t}\r\n\r\n\t/**\r\n\t * @param  value  Tap to activate?\r\n\t */\r\n\tprotected setTapToActivate(value: boolean): void {\r\n\t\tsuper.setTapToActivate(value);\r\n\t\tif (this.cursor) {\r\n\t\t\tthis.cursor.interactions.isTouchProtected = value;\r\n\t\t\tthis.plotContainer.interactions.isTouchProtected = value;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleTapToActivate(): void {\r\n\t\tsuper.handleTapToActivate();\r\n\t\tif (this.cursor) {\r\n\t\t\tthis.cursor.interactions.isTouchProtected = false;\r\n\t\t\tthis.plotContainer.interactions.isTouchProtected = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleTapToActivateDeactivation(): void {\r\n\t\tsuper.handleTapToActivateDeactivation();\r\n\t\tif (this.cursor) {\r\n\t\t\tthis.cursor.interactions.isTouchProtected = true;\r\n\t\t\tthis.plotContainer.interactions.isTouchProtected = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChart\"] = XYChart;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Remove horizontal scrollbar on narrow charts.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof XYChart && target.scrollbarX) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tlet sbstate = target.scrollbarX.states.create(stateId);\r\n\t\t\tsbstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical scrollbar on short charts.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof XYChart && target.scrollbarY) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tlet sbstate = target.scrollbarY.states.create(stateId);\r\n\t\t\tsbstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { LineSeries } from \"./LineSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[LineSeriesSegment]].\r\n */\r\nexport interface ILineSeriesSegmentProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[LineSeriesSegment]].\r\n */\r\nexport interface ILineSeriesSegmentEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[LineSeriesSegment]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILineSeriesSegmentAdapters extends IContainerAdapters, ILineSeriesSegmentProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link ILineSeriesSegmentEvents} for a list of available events\r\n * @see {@link ILineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nexport class LineSeriesSegment extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILineSeriesSegmentProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILineSeriesSegmentAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILineSeriesSegmentEvents;\r\n\r\n\t/**\r\n\t * Segment's line element.\r\n\t */\r\n\tpublic strokeSprite: Sprite;\r\n\r\n\t/**\r\n\t * Segment's fill element.\r\n\t */\r\n\tpublic fillSprite: Sprite;\r\n\r\n\tpublic series: LineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"LineSeriesSegment\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.interactionsEnabled = false;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\t// Create fill element\r\n\t\tlet fillSprite = this.createChild(Sprite);\r\n\t\tthis.fillSprite = fillSprite;\r\n\t\tfillSprite.shouldClone = false;\r\n\t\tfillSprite.setElement(this.paper.add(\"path\"));\r\n\t\tfillSprite.isMeasured = false;\r\n\t\tthis._disposers.push(fillSprite);\r\n\r\n\r\n\t\t// Create line element\r\n\t\tlet strokeSprite = this.createChild(Sprite);\r\n\t\tthis.strokeSprite = strokeSprite;\r\n\t\tstrokeSprite.shouldClone = false;\r\n\t\tstrokeSprite.fill = color();\r\n\t\tstrokeSprite.setElement(this.paper.add(\"path\"));\r\n\t\tstrokeSprite.isMeasured = false;\r\n\t\tthis._disposers.push(strokeSprite);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the series segment.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param points       Points to connect\r\n\t * @param closePoints  ?\r\n\t * @param smoothnessX  Horizontal bezier setting (?)\r\n\t * @param smoothnessY  Vertical bezier setting (?)\r\n\t */\r\n\tpublic drawSegment(points: IPoint[], closePoints: IPoint[], smoothnessX: number, smoothnessY: number): void {\r\n\t\tif (!this.disabled) {\r\n\t\t\tif (points.length > 0 && closePoints.length > 0 && $type.isNumber(points[0].x) && $type.isNumber(points[0].y)) {\r\n\t\t\t\t// first moveTo helps to avoid Chrome straight line in the mask bug.\r\n\t\t\t\tlet path: string = $path.moveTo({ x: points[0].x - 0.2, y: points[0].y - 0.2 }) + $path.moveTo(points[0])\r\n\r\n\t\t\t\tlet series = this.series;\r\n\r\n\t\t\t\tif (series.smoothing == \"bezier\") {\r\n\t\t\t\t\tpath += new $smoothing.Tension(smoothnessX, smoothnessY).smooth(points);\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.smoothing == \"monotoneX\") {\r\n\t\t\t\t\tpath += new $smoothing.MonotoneX({ closed: false }).smooth(points);\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.smoothing == \"monotoneY\") {\r\n\t\t\t\t\tpath += new $smoothing.MonotoneY({ closed: false }).smooth(points);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.strokeOpacity == 0 || this.strokeSprite.strokeOpacity == 0) {\r\n\t\t\t\t\t// like this and not if != 0, otherwise ranges stroke won't be drawn.\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.strokeSprite.path = path;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n\t\t\t\t\tif ($type.isNumber(closePoints[0].x) && $type.isNumber(closePoints[0].y)) {\r\n\t\t\t\t\t\tpath += $path.lineTo(closePoints[0]);\r\n\r\n\t\t\t\t\t\tif (series.smoothing == \"bezier\") {\r\n\t\t\t\t\t\t\tpath += new $smoothing.Tension(smoothnessX, smoothnessY).smooth(closePoints);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (series.smoothing == \"monotoneX\") {\r\n\t\t\t\t\t\t\tpath += new $smoothing.MonotoneX({ closed: false }).smooth(closePoints);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (series.smoothing == \"monotoneY\") {\r\n\t\t\t\t\t\t\tpath += new $smoothing.MonotoneY({ closed: false }).smooth(closePoints);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpath += $path.lineTo(points[0]);\r\n\t\t\t\t\t\tpath += $path.closePath();\r\n\r\n\t\t\t\t\t\tthis.fillSprite.path = path;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.fillSprite.path = \"\";\r\n\t\t\t\tthis.strokeSprite.path = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties from a [[Sprite]] to both line and fill elements.\r\n\t *\r\n\t * @param source Source [[Sprite]] to copy properties from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tlet lineElement = this.strokeSprite;\r\n\t\t$object.copyProperties(source, lineElement.properties, visualProperties);\r\n\t\tlineElement.events.copyFrom(source.strokeSprite.events);\r\n\t\tlineElement.fillOpacity = 0;\r\n\r\n\t\tlet fillElement = this.fillSprite;\r\n\t\t$object.copyProperties(source, fillElement.properties, visualProperties);\r\n\t\tfillElement.events.copyFrom(source.fillSprite.events);\r\n\t\tfillElement.strokeOpacity = 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LineSeriesSegment\"] = LineSeriesSegment;\r\n","/**\r\n * DurationAxis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxis, ValueAxisDataItem, IValueAxisProperties, IValueAxisDataFields, IValueAxisAdapters, IValueAxisEvents } from \"./ValueAxis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { TimeUnit } from \"../../core/defs/TimeUnit\";\r\nimport { IMinMaxStep } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data item for [[DurationAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class DurationAxisDataItem extends ValueAxisDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: DurationAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DurationAxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[DurationAxis]].\r\n */\r\nexport interface IDurationAxisDataFields extends IValueAxisDataFields { }\r\n\r\n/**\r\n * Defines properties for [[DurationAxis]].\r\n */\r\nexport interface IDurationAxisProperties extends IValueAxisProperties { }\r\n\r\n/**\r\n * Defines events for [[DurationAxis]].\r\n */\r\nexport interface IDurationAxisEvents extends IValueAxisEvents { }\r\n\r\n/**\r\n * Defines adapters for [[DurationAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDurationAxisAdapters extends IValueAxisAdapters, IDurationAxisProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create an axis that shows time durations.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let xAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * xAxis.title.text = \"Time\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.xAxes.push(new am4charts.DurationAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Time\";\r\n * ```\r\n * ```JSON\r\n * \"xAxes\": [{\r\n *   \"type\": \"DurationAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Time\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information about duration formatters.\r\n * @see {@link IDurationAxisEvents} for a list of available Events\r\n * @see {@link IDurationAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class DurationAxis<T extends AxisRenderer = AxisRenderer> extends ValueAxis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: IDurationAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IDurationAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDurationAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDurationAxisEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t */\r\n\tpublic _dataItem: DurationAxisDataItem;\r\n\r\n\t/**\r\n\t * A base unit (granularity) of data.\r\n\t *\r\n\t * Used to indicate what are the base units of your data.\r\n\t */\r\n\tprotected _baseUnit: TimeUnit = \"second\";\r\n\r\n\t/**\r\n\t * A special duration format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t */\r\n\tprotected _tooltipDurationFormat: string;\r\n\r\n\t/**\r\n\t * Axis date format chosen dynamically based on min/max and baseUnit.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic axisDurationFormat: string;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"DurationAxis\";\r\n\r\n\t\tthis.setPropertyValue(\"maxZoomFactor\", 1000000);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[DurationFormatter]].\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number, format?: string): string {\r\n\t\treturn this.durationFormatter.format(value, format || this.axisDurationFormat);\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts actual min and max scale values so that the axis starts and ends\r\n\t * at \"nice\" values, unless `strictMinMax` is set.\r\n\t *\r\n\t * The `difference` can be something else than `max - min`, because of the\r\n\t * axis breaks.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param min        [description]\r\n\t * @param max        [description]\r\n\t * @param difference [description]\r\n\t * @param gridCount  [description]\r\n\t * @param strictMode [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number, difference: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\r\n\r\n\t\tlet minMaxStep: IMinMaxStep;\r\n\r\n\t\tlet timeUnit = this.baseUnit;\r\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\r\n\t\tthis.setPropertyValue(\"maxPrecision\", 0);\r\n\r\n\t\tif (timeUnit == \"millisecond\" || timeUnit == \"second\" || timeUnit == \"minute\" || timeUnit == \"hour\") {\r\n\t\t\t// will fail if 0\r\n\t\t\tif (gridCount <= 1) {\r\n\t\t\t\tgridCount = 1;\r\n\t\t\t}\r\n\r\n\t\t\tgridCount = Math.round(gridCount);\r\n\r\n\t\t\tlet initialMin: number = min;\r\n\t\t\tlet initialMax: number = max;\r\n\r\n\t\t\t// in case min and max is the same, use max\r\n\t\t\tif (difference === 0) {\r\n\t\t\t\tdifference = Math.abs(max);\r\n\t\t\t}\r\n\r\n\t\t\tlet step = difference / gridCount;\r\n\r\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\r\n\t\t\tlet realDivisor = 1;\r\n\r\n\t\t\tif (timeUnit == \"hour\") {\r\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\r\n\t\t\t}\r\n\r\n\t\t\tfor (let divisor of divisors) {\r\n\t\t\t\tif (difference / divisor > gridCount) {\r\n\t\t\t\t\trealDivisor = divisor;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\r\n\r\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\r\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\r\n\t\t\tlet reducedCount = count / power;\r\n\r\n\t\t\t// find closest to divisor\r\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\r\n\t\t\tcount = closest * power;\r\n\r\n\t\t\tstep = realDivisor * count;\r\n\r\n\t\t\t// TODO can this be removed ?\r\n\t\t\tthis.durationFormatter.getValueUnit(step, this.baseUnit);\r\n\r\n\t\t\tmin = Math.floor(min / step) * step;\r\n\t\t\tmax = Math.ceil(max / step) * step;\r\n\r\n\t\t\tif (strictMode) {\r\n\t\t\t\tmin -= step;\r\n\t\t\t\tif (min < 0 && initialMin >= 0) {\r\n\t\t\t\t\tmin = 0;\r\n\t\t\t\t}\r\n\t\t\t\tmax += step;\r\n\r\n\t\t\t\tif (max > 0 && initialMax <= 0) {\r\n\t\t\t\t\tmax = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tminMaxStep = { min: min, max: max, step: step };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tminMaxStep = super.adjustMinMax(min, max, difference, gridCount, strictMode);\r\n\t\t}\r\n\r\n\t\t// choose duration formatter based on step\r\n\t\tthis.axisDurationFormat = this.durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, this.baseUnit);\r\n\r\n\t\treturn minMaxStep;\r\n\t}\r\n\r\n\t/**\r\n\t * A special duration format to apply axis tooltips.\r\n\t *\r\n\t * Will use same format as for labels, if not set.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information.\r\n\t * @param value  Duration format for axis labels\r\n\t */\r\n\tpublic set tooltipDurationFormat(value: string) {\r\n\t\tthis._tooltipDurationFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration format for axis labels\r\n\t */\r\n\tpublic get tooltipDurationFormat(): string {\r\n\t\treturn this._tooltipDurationFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a axis tooltip, based on specific position within\r\n\t * axis.\r\n\t *\r\n\t * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (px)\r\n\t * @return Label (numeric value)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet value: number = $math.round(this.positionToValue(position), this._stepDecimalPlaces);\r\n\t\tlet valueStr = this.formatLabel(value, this.tooltipDurationFormat)\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn valueStr;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"getTooltipText\", valueStr);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A base unit (granularity) of data.\r\n\t *\r\n\t * Used to indicate what are the base units of your data.\r\n\t *\r\n\t * Available options: \"millisecond\", \"second\" (default), \"minute\", \"hour\",\r\n\t * \"day\", \"week\", \"month\", \"year\".\r\n\t *\r\n\t * @default \"second\"\r\n\t * @param timeUnit\r\n\t */\r\n\tpublic set baseUnit(timeUnit: TimeUnit) {\r\n\t\tif (this._baseUnit != timeUnit) {\r\n\t\t\tthis._baseUnit = timeUnit;\r\n\t\t\tthis.durationFormatter.baseUnit = timeUnit;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Base unit\r\n\t */\r\n\tpublic get baseUnit(): TimeUnit {\r\n\t\treturn this._baseUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.baseUnit = source.baseUnit;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DurationAxis\"] = DurationAxis;\r\nregistry.registeredClasses[\"DurationAxisDataItem\"] = DurationAxisDataItem;\r\n","/**\r\n * Line series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, XYSeriesDataItem, IXYSeriesProperties, IXYSeriesDataFields, IXYSeriesAdapters, IXYSeriesEvents } from \"./XYSeries\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { Axis, AxisDataItem } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { DurationAxis } from \"../axes/DurationAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { LegendDataItem } from \"../Legend\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[LineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LineSeriesDataItem extends XYSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: LineSeries;\r\n\r\n\t/**\r\n\t * Point of line series data item\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * A reference to a segment object, used for getting proper colors for tooltips\r\n\t */\r\n\tpublic segment: LineSeriesSegment;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LineSeriesDataItem\";\r\n\t}\r\n\r\n\t// @todo: minimums/maximums\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[LineSeries]].\r\n */\r\nexport interface ILineSeriesDataFields extends IXYSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[LineSeries]].\r\n */\r\nexport interface ILineSeriesProperties extends IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Horizontal tension setting of the line (0-1).\r\n\t *\r\n\t * Used for smoothed lines.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\ttensionX?: number;\r\n\r\n\t/**\r\n\t * Vertical tension setting of the line (0-1).\r\n\t *\r\n\t * Used for smoothed lines.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\ttensionY?: number;\r\n\r\n\t/**\r\n\t * Connect the lines over empty data points?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tconnect?: boolean;\r\n\r\n\t/**\r\n\t * If `connect = false` and distance between two data points is bigger\r\n\t * than `baseInterval * autoGapCount`, a line will break automatically.\r\n\t *\r\n\t * @default 1.1\r\n\t */\r\n\tautoGapCount?: number;\r\n\r\n\t/**\r\n\t * Smoothing algorythm to use for the line.\r\n\t *\r\n\t * @since 4.10.0\r\n\t */\r\n\tsmoothing: \"bezier\" | \"monotoneX\" | \"monotoneY\";\r\n}\r\n\r\n/**\r\n * Defines events for [[LineSeries]].\r\n */\r\nexport interface ILineSeriesEvents extends IXYSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[LineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILineSeriesAdapters extends IXYSeriesAdapters, ILineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a line graph.\r\n *\r\n * @see {@link ILineSeriesEvents} for a list of available Events\r\n * @see {@link ILineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ILineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: LineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A list of line series segments.\r\n\t *\r\n\t * Segments are used in two cases:\r\n\t *\r\n\t * * When we want to change the appearance of a part of the line series;\r\n\t * * When we have an axis range.\r\n\t */\r\n\tpublic segments: ListTemplate<this[\"_segment\"]>;\r\n\r\n\t/**\r\n\t * Defines type for segment.\r\n\t */\r\n\tpublic _segment: LineSeriesSegment;\r\n\r\n\t/**\r\n\t * A container for segment elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic segmentsContainer: Container;\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between two adjacent points.\r\n\t *\r\n\t * If the distance is less than this setting, a point is skipped.\r\n\t *\r\n\t * This allows acceptable performance with huge amounts of data points.\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tpublic minDistance: number = 0.5;\r\n\r\n\t/**\r\n\t * Iterator for segments.\r\n\t */\r\n\tprotected _segmentsIterator: $iter.ListIterator<this[\"_segment\"]>;\r\n\r\n\tprotected _adjustedStartIndex: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.segments = new ListTemplate<LineSeriesSegment>(this.createSegment());\r\n\t\tthis.segments.template.applyOnClones = true;\r\n\r\n\t\tthis._disposers.push(new ListDisposer(this.segments));\r\n\t\tthis._disposers.push(this.segments.template);\r\n\r\n\t\tthis._segmentsIterator = new $iter.ListIterator<LineSeriesSegment>(this.segments, () => this.segments.create());\r\n\t\tthis._segmentsIterator.createNewItems = true;\r\n\r\n\t\tthis.className = \"LineSeries\";\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.fillOpacity = 0;\r\n\r\n\t\tthis.connect = true;\r\n\r\n\t\tthis.tensionX = 1;\r\n\t\tthis.tensionY = 1;\r\n\r\n\t\tthis.autoGapCount = 1.1;\r\n\r\n\t\tthis.smoothing = \"bezier\";\r\n\r\n\r\n\t\tthis.segmentsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis.segmentsContainer.isMeasured = false;\r\n\r\n\t\t// line series might have multiple segments and it has a separate sprite for fill and stroke for each segment. So we need to observe all the changes on series and set them on the segments\r\n\t\t// todo: we need list here, otherwise everything will be redrawn event on change of properties like tooltipX or similar.\r\n\t\t// this.addEventListener(SpriteEvent.PROPERTY_CHANGED, this.validateDataElements, false, this);\r\n\r\n\t\tthis.bulletsContainer.toFront();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Line Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createSegment(): this[\"_segment\"] {\r\n\t\treturn new LineSeriesSegment();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits data item's working values.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @param index     Data item's index\r\n\t */\r\n\r\n\tprotected setInitialWorkingValues(dataItem: this[\"_dataItem\"]): void {\r\n\t\t// this makes data items animate when added\r\n\r\n\t\tlet yAxis: Axis = this._yAxis.get();\r\n\t\tlet xAxis: Axis = this._xAxis.get();\r\n\r\n\t\tif (this.appeared && this.visible) {\r\n\r\n\t\t\tlet previousDataItem: XYSeriesDataItem = this.dataItems.getIndex(dataItem.index - 1);\r\n\r\n\t\t\tdataItem.component = this; // as these values are set before, we don't know component yet\r\n\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tif (yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tlet initialY: number = yAxis.minZoomed;\r\n\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\tinitialY = previousDataItem.values[\"valueY\"].workingValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this makes line animate from previous point to newly added point\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", initialY, 0);\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", dataItem.values.valueY.value);\r\n\r\n\t\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX); // animate to it's location\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (xAxis instanceof DurationAxis) {\r\n\t\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\t\tlet value = dataItem.valueX;\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", previousDataItem.valueX, 0); // instantly move it to previous\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", value); // animate to new value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tif (xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tlet initialX: number = xAxis.minZoomed;\r\n\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\tinitialX = previousDataItem.values[\"valueX\"].workingValue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", initialX, 0);\r\n\t\t\t\t\tdataItem.setWorkingValue(\"valueX\", dataItem.values.valueX.value);\r\n\r\n\t\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateX - 1, 0); // instantly move it to previous\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY); // animate to it's location\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (yAxis instanceof DurationAxis) {\r\n\t\t\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\t\t\tlet value = dataItem.valueY;\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", previousDataItem.valueY, 0); // instantly move it to previous\r\n\t\t\t\t\t\t\tdataItem.setWorkingValue(\"valueY\", value); // animate to new value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tif (yAxis instanceof ValueAxis) {\r\n\t\t\t\t\tif (xAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateX\", dataItem.locations.dateX);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (xAxis instanceof CategoryAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"categoryX\", dataItem.locations.categoryX);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tif (xAxis instanceof ValueAxis) {\r\n\t\t\t\t\tif (yAxis instanceof DateAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"dateY\", dataItem.locations.dateY);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (yAxis instanceof CategoryAxis) {\r\n\t\t\t\t\t\tdataItem.setWorkingLocation(\"categoryY\", dataItem.locations.categoryY);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\tsuper.updateLegendValue(dataItem, notRange);\r\n\t\t//This is hack to save some methos, used to set tooltip color source only\r\n\t\tif (dataItem && dataItem.segment) {\r\n\t\t\tthis.tooltipColorSource = dataItem.segment;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tif (this.xAxis && this.yAxis) {\r\n\t\t\tthis._segmentsIterator.reset();\r\n\r\n\t\t\tthis.openSegmentWrapper(this._adjustedStartIndex);\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (range) => {\r\n\t\t\t\tthis.openSegmentWrapper(this._adjustedStartIndex, range);\r\n\t\t\t});\r\n\r\n\t\t\t$iter.each(this._segmentsIterator.iterator(), (segment) => {\r\n\t\t\t\tsegment.__disabled = true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [sliceData description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected sliceData(): void {\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\t// we need extra one item to both sides with values for line series, otherwise the line will not continue out of bounds of the chart while scrolling\r\n\t\t// find first to the left\r\n\t\t// TODO use iterator instead\r\n\t\tfor (let i = this.startIndex - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\tstartIndex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._adjustedStartIndex = this.findAdjustedIndex(startIndex, [\"stroke\", \"strokeWidth\", \"strokeDasharray\", \"strokeOpacity\", \"fill\", \"fillOpacity\", \"opacity\"]);\r\n\r\n\t\t// find first to the right\r\n\t\t// TODO use iterator instead\r\n\t\tfor (let i = this.endIndex, len = this.dataItems.length; i < len; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\tendIndex = i + 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._workingStartIndex = startIndex;\r\n\t\tthis._workingEndIndex = endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected findAdjustedIndex(adjustedIndex: number, properties: string[]): number {\r\n\t\tlet propertyFields: any = this.propertyFields;\r\n\t\tlet startIndex = adjustedIndex;\r\n\r\n\t\t$array.each(properties, (property) => {\r\n\t\t\tif ($type.hasValue(propertyFields[property])) {\r\n\t\t\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tif ($type.hasValue(dataItem.properties[property])) {\r\n\t\t\t\t\t\t\tif (adjustedIndex > i) {\r\n\t\t\t\t\t\t\t\tadjustedIndex = i;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn adjustedIndex;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Wraps openSegment call with iterative solution to prevent stack overflow\r\n\t *\r\n\t * @param openIndex  Index\r\n\t * @param axisRange  Range\r\n\t */\r\n\tprotected openSegmentWrapper(openIndex: number, axisRange?: AxisDataItem): void {\r\n\t\tlet params = {\r\n\t\t\t\"index\": openIndex,\r\n\t\t\t\"axisRange\": axisRange\r\n\t\t};\r\n\t\tdo {\r\n\t\t\tparams = this.openSegment(params.index, params.axisRange);\r\n\t\t} while (params)\r\n\t}\r\n\r\n\r\n\tprotected getSegment(): LineSeriesSegment {\r\n\t\tlet segment = this._segmentsIterator.getFirst();\r\n\t\tsegment.series = this;\r\n\t\tif (segment.isDisposed()) {\r\n\t\t\tthis.segments.removeValue(segment);\r\n\t\t\treturn this.getSegment();\r\n\t\t}\r\n\t\treturn segment;\r\n\t}\r\n\r\n\t/**\r\n\t * [openSegment description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param openIndex  [description]\r\n\t * @param axisRange  [description]\r\n\t */\r\n\tprotected openSegment(openIndex: number, axisRange?: AxisDataItem): { \"index\": number, \"axisRange\": AxisDataItem } {\r\n\t\tlet addToClose = false;\r\n\t\tlet points: IPoint[] = [];\r\n\t\topenIndex = Math.min(openIndex, this.dataItems.length);\r\n\t\tlet endIndex: number = Math.min(this._workingEndIndex, this.dataItems.length);\r\n\t\tthis._workingEndIndex = Math.min(this._workingEndIndex, this.dataItems.length);\r\n\r\n\t\tlet closeIndex: number;\r\n\t\tlet propertiesChanged: boolean = false;\r\n\r\n\t\tlet segment: LineSeriesSegment = this.getSegment();\r\n\t\tsegment.strokeDasharray = undefined;\r\n\t\tsegment.__disabled = false;\r\n\r\n\t\tif (axisRange) {\r\n\t\t\tsegment.parent = axisRange.contents;\r\n\t\t\t$object.copyProperties(axisRange.contents, segment, visualProperties);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$object.copyProperties(this, segment, visualProperties);\r\n\t\t\tsegment.filters.clear();\r\n\t\t\tsegment.parent = this.segmentsContainer;\r\n\t\t}\r\n\r\n\t\tthis.group.node.removeAttribute(\"fill\");\r\n\r\n\t\tlet connect: boolean = this.connect;\r\n\t\tlet valuesFound: boolean = false; // some flag to avoid multiple closes if no values found\r\n\r\n\t\tfor (let i: number = openIndex; i < endIndex; i++) {\r\n\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.segment = segment;\r\n\r\n\t\t\tif (dataItem.hasProperties) {\r\n\t\t\t\t// if this is first item of segment\r\n\t\t\t\tif (i == openIndex) {\r\n\t\t\t\t\tthis.updateSegmentProperties(dataItem.properties, segment);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// this time we only need to know if properties changed, so we don't pass segment\r\n\t\t\t\t\tpropertiesChanged = this.updateSegmentProperties(dataItem.properties, segment, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\tthis.addPoints(points, dataItem, this.xField, this.yField);\r\n\t\t\t\tvaluesFound = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no values in first data item, go to next\r\n\t\t\t\tif (i == openIndex) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// stop cycle\r\n\t\t\t\t\tif (!connect && valuesFound) {\r\n\t\t\t\t\t\tcloseIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcloseIndex = i;\r\n\r\n\t\t\tif (this.baseAxis instanceof DateAxis) {\r\n\t\t\t\tlet next = this.dataItems.getIndex(i + 1)\r\n\t\t\t\tif (next && this.baseAxis.makeGap(next, dataItem)) {\r\n\t\t\t\t\taddToClose = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (propertiesChanged) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.closeSegment(segment, points, openIndex, closeIndex, axisRange, addToClose);\r\n\t}\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param points    [description]\r\n\t * @param dataItem  [description]\r\n\t * @param xField    [description]\r\n\t * @param yField    [description]\r\n\t * @param backwards [description]\r\n\t */\r\n\tprotected addPoints(points: IPoint[], dataItem: this[\"_dataItem\"], xField: string, yField: string, backwards?: boolean) {\r\n\t\tlet point = this.getPoint(dataItem, xField, yField, dataItem.workingLocations[xField], dataItem.workingLocations[yField]);\r\n\t\tif (!backwards) {\r\n\t\t\tdataItem.point = point;\r\n\t\t}\r\n\t\tpoints.push(point);\r\n\t}\r\n\r\n\t/**\r\n\t * [closeSegment description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param segment    [description]\r\n\t * @param points     [description]\r\n\t * @param openIndex  [description]\r\n\t * @param closeIndex [description]\r\n\t * @param axisRange  [description]\r\n\t */\r\n\tprotected closeSegment(segment: LineSeriesSegment, points: IPoint[], openIndex: number, closeIndex: number, axisRange?: AxisDataItem, add?: boolean) {\r\n\t\tlet closePoints: IPoint[] = [];\r\n\r\n\t\tif (this.dataFields[<keyof this[\"_dataFields\"]>this._xOpenField] ||\r\n\t\t\tthis.dataFields[<keyof this[\"_dataFields\"]>this._yOpenField] ||\r\n\t\t\tthis.stacked) {\r\n\t\t\tfor (let i: number = closeIndex; i >= openIndex; i--) {\r\n\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.getIndex(i);\r\n\t\t\t\tif (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) { // not sure, this means that open point will only be added if value is also set for this point, but maybe it's ok.\r\n\t\t\t\t\tthis.addPoints(closePoints, dataItem, this.xOpenField, this.yOpenField, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet baseAxis: Axis = this.baseAxis;\r\n\t\t\tlet count: number = points.length;\r\n\t\t\tlet xAxis: Axis = this.xAxis;\r\n\t\t\tlet yAxis: Axis = this.yAxis;\r\n\t\t\tif (count > 0) {\r\n\t\t\t\tif (baseAxis == xAxis) {\r\n\t\t\t\t\tclosePoints.push({ x: points[count - 1].x, y: yAxis.basePoint.y }); // last x\r\n\t\t\t\t\tclosePoints.push({ x: points[0].x, y: yAxis.basePoint.y }); // first x\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tclosePoints.push({ x: xAxis.basePoint.x, y: points[count - 1].y }); // last y\r\n\t\t\t\t\tclosePoints.push({ x: xAxis.basePoint.x, y: points[0].y }); // first y\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.drawSegment(segment, points, closePoints);\r\n\r\n\t\tif (add) {\r\n\t\t\tcloseIndex++;\r\n\t\t}\r\n\r\n\t\tif (closeIndex < this._workingEndIndex - 1) {\r\n\t\t\treturn { \"index\": closeIndex, \"axisRange\": axisRange };\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the line segment.\r\n\t *\r\n\t * @param segment     Segment\r\n\t * @param points      Segment points\r\n\t * @param closePoints Segment close points\r\n\t */\r\n\tprotected drawSegment(segment: LineSeriesSegment, points: IPoint[], closePoints: IPoint[]): void {\r\n\t\tsegment.drawSegment(points, closePoints, this.tensionX, this.tensionY);\r\n\t}\r\n\r\n\t/**\r\n\t * Segement will get its colors from `this.dataItem`, as thats how\r\n\t * `getPropertyValue()` method works.\r\n\t *\r\n\t * We pass `lineSeriesDataItem.properties` as item here each time when a flag\r\n\t * `hasProperties` is set to `true` on data item (this means it can contain\r\n\t * some properties set).\r\n\t *\r\n\t * @param itemProperties  Item properties\r\n\t * @param segment         Segment\r\n\t * @return Properties changed?\r\n\t */\r\n\tprotected updateSegmentProperties(itemProperties: { [index: string]: any }, segment: LineSeriesSegment, checkOnly?: boolean): boolean {\r\n\t\tlet changed: boolean = false;\r\n\r\n\t\t$object.each(itemProperties, (propertyName, value) => {\r\n\t\t\t// some value must be defined\r\n\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\tlet currentValue = (<any>segment)[propertyName];\r\n\t\t\t\tlet currentValueStr: string;\r\n\t\t\t\t// current value can be Color, number, anything. So we check if it has toString, otherwise just do String().\r\n\t\t\t\t// toString() will return hex if it's color. The only problem is that it will return lowercased hex and if we have uppercase in data, it will think that it changed\r\n\t\t\t\tif (currentValue) {\r\n\t\t\t\t\tif (currentValue.toString) {\r\n\t\t\t\t\t\tcurrentValueStr = currentValue.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcurrentValueStr = currentValue; // not doing String(currentValue) as this will make all Objects the same\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tlet valueStr: string;\r\n\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tif (value.toString) {\r\n\t\t\t\t\t\tvalueStr = value.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalueStr = value;  // not doing String(currentValue) as this will make all Objects the same\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentValue == value || (currentValueStr != undefined && valueStr != undefined && currentValueStr == valueStr)) {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!checkOnly) {\r\n\t\t\t\t\t\t(<any>segment)[propertyName] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Connect the lines over empty data points?\r\n\t *\r\n\t * If set to `true` the line will connect two adjacent data points by a\r\n\t * straight line. Even if there are data points with missing values\r\n\t * in-between.\r\n\t *\r\n\t * If you set this to `false`, the line will break when there are missing\r\n\t * values.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#Line_series_with_gaps} for more information about this feature\r\n\t * @default true\r\n\t * @param value  Connect?\r\n\t */\r\n\tpublic set connect(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"connect\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Connect?\r\n\t */\r\n\tpublic get connect(): boolean {\r\n\t\treturn this.getPropertyValue(\"connect\");\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal tension setting of the line (0-1).\r\n\t *\r\n\t * Can be used to create smoothed lines. It works like this:\r\n\t *\r\n\t * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n\t * will mean that the \"tension\" is very high, so the line is maximally\r\n\t * attracted to the points it connects, hence the straight line.\r\n\t *\r\n\t * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n\t *\r\n\t * The smaller the tension setting, the more relaxed the line and the more\r\n\t * wide the curve.\r\n\t *\r\n\t * This setting is for horizontal tension, meaning the curve will bend in\r\n\t * such way that it never goes below or above connecting points. To enable\r\n\t * vertical bending as well, use `tensionY`.\r\n\t *\r\n\t * IMPORTANT: line smoothing works best when data items are placed at regular\r\n\t * intervals. For setups where data items are spaced erratically, enabling\r\n\t * smoothing might result in awkwardly looking lines.\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Horizontal tension (0-1)\r\n\t */\r\n\tpublic set tensionX(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal tension (0-1)\r\n\t */\r\n\tpublic get tensionX(): number {\r\n\t\treturn this.getPropertyValue(\"tensionX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Can be used to create smoothed lines. It works like this:\r\n\t *\r\n\t * Accepted values are in the range between 0 and 1. The biggest value (1)\r\n\t * will mean that the \"tension\" is very high, so the line is maximally\r\n\t * attracted to the points it connects, hence the straight line.\r\n\t *\r\n\t * Using smaller numbers will \"relax\" the tension, creating some curving.\r\n\t *\r\n\t * The smaller the tension setting, the more relaxed the line and the more\r\n\t * wide the curve.\r\n\t *\r\n\t * This setting is for vertical tension, meaning the curve might bend in\r\n\t * such way that it will go below or above connected points.\r\n\t *\r\n\t * Combine this setting with `tensionX` to create beautifully looking\r\n\t * smoothed line series.\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Vertical tension (0-1)\r\n\t */\r\n\tpublic set tensionY(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical tension (0-1)\r\n\t */\r\n\tpublic get tensionY(): number {\r\n\t\treturn this.getPropertyValue(\"tensionY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.disposeChildren();\r\n\r\n\t\tlet line: Line = marker.createChild(Line);\r\n\t\tline.shouldClone = false;\r\n\t\t//line.copyFrom(<any>this); coppies events which is not good\r\n\t\t$object.copyProperties(this, line, visualProperties);\r\n\r\n\t\tline.x2 = w;\r\n\t\tline.y = h / 2;\r\n\t\tline.y2 = 0.00001;\r\n\t\tline.visible = true;\r\n\r\n\t\tif (this.fillOpacity > 0) {\r\n\t\t\tlet fill: Rectangle = marker.createChild(Rectangle);\r\n\t\t\t//fill.copyFrom(<any>this); coppies events which is not good\r\n\t\t\t$object.copyProperties(this, fill, visualProperties);\r\n\t\t\tfill.width = w;\r\n\t\t\tfill.height = h;\r\n\t\t\tfill.y = 0;\r\n\t\t\tfill.strokeOpacity = 0;\r\n\t\t\tfill.visible = true;\r\n\r\n\t\t\tline.y = 0;\r\n\t\t}\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = this.stroke;\r\n\t\tlegendDataItem.colorOrig = this.fill;\r\n\r\n\t\t$iter.eachContinue(this.bullets.iterator(), (bullet) => {\r\n\r\n\t\t\tif ((bullet instanceof Bullet) && !bullet.copyToLegendMarker) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tlet hasLabels: boolean = false;\r\n\r\n\t\t\tif (bullet instanceof Container) {\r\n\t\t\t\t// do not copy bullets with labels\r\n\r\n\t\t\t\t$iter.each(bullet.children.iterator(), (child) => {\r\n\t\t\t\t\tif (child instanceof Label) {\r\n\t\t\t\t\t\thasLabels = true;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (!hasLabels) {\r\n\t\t\t\tlet clone: Sprite = <Sprite>bullet.clone();\r\n\t\t\t\tclone.parent = marker;\r\n\t\t\t\tclone.isMeasured = true;\r\n\t\t\t\tclone.tooltipText = undefined;\r\n\t\t\t\tclone.x = w / 2;\r\n\t\t\t\tif (this.fillOpacity > 0) {\r\n\t\t\t\t\tclone.y = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tclone.y = h / 2;\r\n\t\t\t\t}\r\n\t\t\t\tclone.visible = true;\r\n\r\n\t\t\t\t// otherwise will not transit to color after hiding\r\n\t\t\t\tif (!$type.hasValue(clone.fill)) {\r\n\t\t\t\t\tclone.fill = this.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!$type.hasValue(clone.stroke)) {\r\n\t\t\t\t\tclone.stroke = this.stroke;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis.segments.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * If `connect = false` and distance between two data points is bigger\r\n\t * than `baseInterval * autoGapCount`, a line will break automatically.\r\n\t *\r\n\t * @since 4.2.4\r\n\t * @param  value  Gap count\r\n\t */\r\n\tpublic set autoGapCount(value: number) {\r\n\t\tthis.setPropertyValue(\"autoGapCount\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Gap count\r\n\t */\r\n\tpublic get autoGapCount(): number {\r\n\t\treturn this.getPropertyValue(\"autoGapCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Smoothing algorithm to be used for lines.\r\n\t *\r\n\t * Available options: `\"bezier\"` (default), `\"monotoneX\"`, and `\"monotoneY\"`.\r\n\t *\r\n\t * Monotone options are best suited for data with irregular intervals. Use `\"monotoneX\"` for\r\n\t * horizontal lines, and `\"monotoneY\"` vertical ones.\r\n\t *\r\n\t * NOTE: Both \"monotone\" algorithms will ignore `tensionX` and `tensionY` settings.\r\n\t *\r\n\t * @since 4.10.0\r\n\t * @param  value  Smoothing algorithm\r\n\t */\r\n\tpublic set smoothing(value: \"bezier\" | \"monotoneX\" | \"monotoneY\") {\r\n\t\tthis.setPropertyValue(\"smoothing\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Smoothing algorithm\r\n\t */\r\n\tpublic get smoothing(): \"bezier\" | \"monotoneX\" | \"monotoneY\" {\r\n\t\treturn this.getPropertyValue(\"smoothing\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LineSeries\"] = LineSeries;\r\nregistry.registeredClasses[\"LineSeriesDataItem\"] = LineSeriesDataItem;\r\n","/**\r\n * Radar series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LineSeries, LineSeriesDataItem, ILineSeriesDataFields, ILineSeriesProperties, ILineSeriesAdapters, ILineSeriesEvents } from \"./LineSeries\";\r\nimport { LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { AxisRendererRadial } from \"../axes/AxisRendererRadial\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n//import { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\n//import { Sprite } from \"../../core/Sprite\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[RadarSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class RadarSeriesDataItem extends LineSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: RadarSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarSeriesDataItem\";\r\n\r\n\t\tthis.setLocation(\"dateX\", 0, 0);\r\n\t\tthis.setLocation(\"dateY\", 0, 0);\r\n\r\n\t\tthis.setLocation(\"categoryX\", 0, 0);\r\n\t\tthis.setLocation(\"categoryY\", 0, 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[RadarSeries]].\r\n */\r\nexport interface IRadarSeriesDataFields extends ILineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[RadarSeries]].\r\n */\r\nexport interface IRadarSeriesProperties extends ILineSeriesProperties {\r\n\r\n\t/**\r\n\t * Should the last and and first data points be connected, forming a complete\r\n\t * closed circle?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tconnectEnds?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RadarSeries]].\r\n */\r\nexport interface IRadarSeriesEvents extends ILineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarSeriesAdapters extends ILineSeriesAdapters, IRadarSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a radar graph.\r\n *\r\n * @see {@link IRadarSeriesEvents} for a list of available Events\r\n * @see {@link IRadarSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class RadarSeries extends LineSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IRadarSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: RadarSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarSeries\";\r\n\t\tthis.connectEnds = true;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new RadarSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: RadarSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string) {\r\n\t\tif (!stackKeyX) {\r\n\t\t\tstackKeyX = \"valueX\";\r\n\t\t}\r\n\t\tif (!stackKeyY) {\r\n\t\t\tstackKeyY = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet x: number = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n\r\n\t\tlet radius: number = $math.getDistance({ x: x, y: y });\r\n\r\n\t\t// hack to be able to determine angle later\r\n\t\tif (radius == 0) {\r\n\t\t\tradius = 0.00001;\r\n\t\t}\r\n\r\n\t\tlet angle: number = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n\r\n\t\tlet startAngle = this.chart.startAngle;\r\n\t\tlet endAngle = this.chart.endAngle;\r\n\r\n\t\t//\t\tangle = $math.fitToRange(angle, startAngle, endAngle);\r\n\t\tif (angle < startAngle || angle > endAngle) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param points    [description]\r\n\t * @param dataItem  [description]\r\n\t * @param xField    [description]\r\n\t * @param yField    [description]\r\n\t * @param backwards [description]\r\n\t */\r\n\tprotected addPoints(points: IPoint[], dataItem: this[\"_dataItem\"], xField: string, yField: string, backwards?: boolean): void {\r\n\t\tlet point = this.getPoint(dataItem, xField, yField, dataItem.locations[xField], dataItem.locations[yField]);\r\n\t\tif (point) {\r\n\t\t\tpoints.push(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to be used as a mask for the series.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tlet renderer: AxisRendererRadial = <AxisRendererRadial>this.yAxis.renderer;\r\n\t\treturn $path.arc(renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n\t}\r\n\r\n\t/**\r\n\t * [drawSegment description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param segment      [description]\r\n\t * @param points       [description]\r\n\t * @param closePoints  [description]\r\n\t */\r\n\tprotected drawSegment(segment: LineSeriesSegment, points: IPoint[], closePoints: IPoint[]): void {\r\n\t\tlet axis: Axis = this.yAxis;\r\n\t\tlet renderer: AxisRendererRadial = <AxisRendererRadial>axis.renderer;\r\n\r\n\t\tif (this.connectEnds && Math.abs(renderer.endAngle - renderer.startAngle) == 360) {\r\n\t\t\t// adds one point to the beginning of closePoints array, if needed\r\n\t\t\tif (this.dataFields[<keyof this[\"_dataFields\"]>this._xOpenField] ||\r\n\t\t\t\tthis.dataFields[<keyof this[\"_dataFields\"]>this._yOpenField] ||\r\n\t\t\t\tthis.stacked) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t\tif (closePoints.length > 0) {\r\n\t\t\t\t\tclosePoints.unshift(closePoints[closePoints.length - 1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.drawSegment(segment, points, closePoints);\r\n\t}\r\n\r\n\t/**\r\n\t * Should the last and and first data points be connected, forming a complete\r\n\t * closed circle?\r\n\t *\r\n\t * @default true\r\n\t * @param value  Connect?\r\n\t */\r\n\tpublic set connectEnds(value: boolean) {\r\n\t\tthis.setPropertyValue(\"connectEnds\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Connect?\r\n\t */\r\n\tpublic get connectEnds(): boolean {\r\n\t\treturn this.getPropertyValue(\"connectEnds\");\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet:Sprite, positionX:number, positionY:number){\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif(positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end){\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\t\t\r\n\t\tbullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\t\t\r\n\t}\r\n\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tsuper.setXAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tsuper.setYAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected updateRendererRefs() {\r\n\t\tlet rendererX = <AxisRendererCircular>this.xAxis.renderer;\r\n\t\tlet rendererY = <AxisRendererRadial>this.yAxis.renderer;\r\n\r\n\t\trendererX.axisRendererY = rendererY;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarSeries\"] = RadarSeries;\r\nregistry.registeredClasses[\"RadarSeriesDataItem\"] = RadarSeriesDataItem;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisFill, IAxisFillProperties, IAxisFillAdapters, IAxisFillEvents } from \"./AxisFill\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { AxisRendererCircular } from \"./AxisRendererCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisFillCircular]].\r\n */\r\nexport interface IAxisFillCircularProperties extends IAxisFillProperties {\r\n\r\n\t/**\r\n\t * Inner radius. Relative ir absolute.\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Outer radius. Relative or absolute.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Corner radius for the fill. In pixels.\r\n\t */\r\n\tcornerRadius?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisFillCircular]].\r\n */\r\nexport interface IAxisFillCircularEvents extends IAxisFillEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisFillCircular]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisFillCircularAdapters extends IAxisFillAdapters, IAxisFillCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Provides fill element functionality for circular Axes.\r\n *\r\n * @see {@link IAxisFillCircularEvents} for a list of available events\r\n * @see {@link IAxisFillCircularAdapters} for a list of available Adapters\r\n * @todo Needs description\r\n */\r\nexport class AxisFillCircular extends AxisFill {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisFillCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisFillCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisFillCircularEvents;\r\n\r\n\t/**\r\n\t * An SVG path, used to draw fill shape.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic fillPath: string;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Axis\r\n\t */\r\n\tconstructor(axis: Axis) {\r\n\t\tsuper(axis);\r\n\r\n\t\tthis.className = \"AxisFillCircular\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.radius = percent(100);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tif(this.__disabled || this.disabled){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRendererCircular = <AxisRendererCircular>this.axis.renderer;\r\n\t\t\tthis.fillPath = renderer.getPositionRangePath(this.startPosition, this.endPosition, this.radius, $type.hasValue(this.innerRadius) ? this.innerRadius : renderer.innerRadius, this.cornerRadius);\r\n\t\t\tthis.path = this.fillPath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n\t *\r\n\t * @param value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the fill. Relative ([[Percent]]) or absolute (pixels).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Corner radius for the fill. In pixels.\r\n\t *\r\n\t * @param value  Corner radius (px)\r\n\t */\r\n\tpublic set cornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Corner radius (px)\r\n\t */\r\n\tpublic get cornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadius\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFillCircular\"] = AxisFillCircular;\r\n","/**\r\n * A module defining functionality for circular axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Grid, IGridProperties, IGridAdapters, IGridEvents } from \"./Grid\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[GridCircular]].\r\n */\r\nexport interface IGridCircularProperties extends IGridProperties {\r\n\r\n\t/**\r\n\t * Inner radius of the circular grid. (absolute or relative)\r\n\t */\r\n\tinnerRadius: number | Percent;\r\n\r\n\t/**\r\n\t * Outer radius of the circular grid. (absolute or relative)\r\n\t */\r\n\tradius: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[GridCircular]].\r\n */\r\nexport interface IGridCircularEvents extends IGridEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GridCircular]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGridCircularAdapters extends IGridAdapters, IGridCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a circular grid element for circular-type axis.\r\n *\r\n * @see {@link IGridCircularEvents} for a list of available events\r\n * @see {@link IGridCircularAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the GridCircular, also with 3d charts we might need some additional elements\r\n */\r\nexport class GridCircular extends Grid {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGridCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGridCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGridCircularEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GridCircular\";\r\n\t\tthis.pixelPerfect = false;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the circular grid. (absolute or relative)\r\n\t *\r\n\t * @param value Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the circular grid. (absolute or relative)\r\n\t *\r\n\t * @param value Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GridCircular\"] = GridCircular;\r\n","/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisLabel, IAxisLabelProperties, IAxisLabelAdapters, IAxisLabelEvents } from \"./AxisLabel\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabelCircular]].\r\n */\r\nexport interface IAxisLabelCircularProperties extends IAxisLabelProperties {\r\n\r\n\t/**\r\n\t * Rotation angle of the label in relation to circle line.\r\n\t */\r\n\trelativeRotation?: number;\r\n\r\n\t/**\r\n\t * Distance of the label from circle line.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Specifies if label should be bent along the circle\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tbent?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabelCircular]].\r\n */\r\nexport interface IAxisLabelCircularEvents extends IAxisLabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabelCircular]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelCircularAdapters extends IAxisLabelAdapters, IAxisLabelCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on circular axis.\r\n *\r\n * @see {@link IAxisLabelCircularEvents} for a list of available events\r\n * @see {@link IAxisLabelCircularAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLabelCircular extends AxisLabel {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLabelCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLabelCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLabelCircularEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: any;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic fdx: number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic fdy: number = 0;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabelCircular\";\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\t\tthis.location = 0.5;\r\n\t\tthis.locationOnPath = 0.5;\r\n\t\tthis.radius = 0;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative rotation of the label.\r\n\t *\r\n\t * It is an angle to circle. In case 90, labels will be positioned like rays\r\n\t * of light, if 0 - positioned along the circle.\r\n\t *\r\n\t * @param value Rotation angle\r\n\t */\r\n\tpublic set relativeRotation(value: number) {\r\n\t\tthis.setPropertyValue(\"relativeRotation\", value, true);\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\tthis.rotation = undefined;\r\n\r\n\t\t\tlet dataItem = this.dataItem;\r\n\t\t\tif (dataItem && dataItem.component) {\r\n\t\t\t\tdataItem.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation angle\r\n\t */\r\n\tpublic get relativeRotation(): number {\r\n\t\treturn this.getPropertyValue(\"relativeRotation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Distance from axis circle to label in pixels or percent.\r\n\t *\r\n\t * @param value Distance (px or percent)\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (px)\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if label should be bent along the circle.\r\n\t *\r\n\t * IMPORTANT: Use this with caution, since it is quite CPU-greedy.\r\n\t *\r\n\t * @since 4.1.2\r\n\t * @default false\r\n\t * @param  value  Bent?\r\n\t */\r\n\tpublic set bent(value: boolean) {\r\n\t\tthis.setPropertyValue(\"bent\", value, true);\r\n\t\tthis.setPropertyValue(\"wrap\", false);\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"none\");\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"none\");\r\n\r\n\t\tif (value) {\r\n\t\t\tthis.setPropertyValue(\"dx\", 0);\r\n\t\t\tthis.setPropertyValue(\"dy\", 0);\r\n\t\t\tthis.setPropertyValue(\"x\", 0);\r\n\t\t\tthis.setPropertyValue(\"y\", 0);\r\n\t\t\tthis.setPropertyValue(\"rotation\", 0)\r\n\t\t\t//this.setPropertyValue(\"relativeRotation\", undefined);\r\n\t\t\tthis.fdx = 0;\r\n\t\t\tthis.fdy = 0;\r\n\t\t\tthis.textAlign = \"middle\";\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(this.textPathElement){\r\n\t\t\t\tthis.textPathElement.dispose();\r\n\t\t\t\tthis.textPathElement = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bent?\r\n\t */\r\n\tpublic get bent(): boolean {\r\n\t\treturn this.getPropertyValue(\"bent\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns label radius in pixels.\r\n\t * \r\n\t * @param   axisRadius  Radius\r\n\t * @return              Pixel radius\r\n\t */\r\n\tpublic pixelRadius(axisRadius: number): number {\r\n\t\tlet sign: number = 1;\r\n\t\tif (this.inside) {\r\n\t\t\tsign = -1;\r\n\t\t}\r\n\r\n\t\treturn $utils.relativeToValue(this.radius, axisRadius) * sign;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns label horizontal radius in pixels.\r\n\t * \r\n\t * @param   axisRadius   Radius\r\n\t * @param   axisRadiusY  Vertical radius\r\n\t * @return               Radius\r\n\t */\r\n\tpublic pixelRadiusY(axisRadius: number, axisRadiusY: number): number {\r\n\t\tlet sign: number = 1;\r\n\t\tif (this.inside) {\r\n\t\t\tsign = -1;\r\n\t\t}\r\n\r\n\t\tlet radius = this.radius;\r\n\r\n\t\tif ($type.isNumber(radius)) {\r\n\t\t\tradius *= axisRadiusY / axisRadius;\r\n\t\t\treturn $utils.relativeToValue(radius, axisRadius) * sign;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn $utils.relativeToValue(radius, axisRadiusY) * sign;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param point       Label affixation point\r\n\t * @param axisRadius  Distance from point (px)\r\n\t */\r\n\tpublic fixPosition(angle: number, axisRadius: number, axisRadiusY?: number, dx?: number, dy?: number) {\r\n\t\tif (!$type.isNumber(axisRadiusY)) {\r\n\t\t\taxisRadiusY = axisRadius;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(dx)) {\r\n\t\t\tdx = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(dy)) {\r\n\t\t\tdy = 0;\r\n\t\t}\r\n\r\n\t\tlet point = { x: axisRadius * $math.cos(angle), y: axisRadiusY * $math.sin(angle) };\r\n\r\n\t\tif (this.invalid) {\r\n\t\t\tthis.validate();  //@todo\" check if we need this\r\n\t\t}\r\n\r\n\t\tlet isNegative = false;\r\n\t\tlet realRadius = this.radius;\r\n\r\n\t\tif (realRadius instanceof Percent && realRadius.value < 0) {\r\n\t\t\tisNegative = true;\r\n\t\t}\r\n\t\telse if (realRadius < 0) {\r\n\t\t\tisNegative = true;\r\n\t\t}\r\n\r\n\t\tlet relativeRotation = this.relativeRotation;\r\n\t\tlet labelRadius = this.pixelRadius(axisRadius);\r\n\r\n\t\tif (this.bent) {\r\n\t\t\tlet point = { x: (axisRadius + labelRadius )* $math.cos(angle + 180), y: (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * $math.sin(angle + 180) };\r\n\t\t\tthis.path = $path.moveTo(point) + $path.arcTo(angle + 180, 360, axisRadius + labelRadius, axisRadiusY + labelRadius * axisRadiusY / axisRadius);\r\n\t\t\t\r\n\t\t\tif (this.textPathElement) {\r\n\t\t\t\tthis.textPathElement.attr({ \"startOffset\": (this.locationOnPath * 100) + \"%\" })\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// WHEN ROTATED\r\n\t\tif ($type.isNumber(relativeRotation)) {\r\n\r\n\t\t\tthis.horizontalCenter = \"none\";\r\n\t\t\tthis.verticalCenter = \"none\";\r\n\r\n\t\t\tangle = $math.fitAngleToRange(angle, -180, 180);\r\n\r\n\t\t\tlet pixelWidth = this.bbox.width;\r\n\t\t\tlet pixelHeight = this.bbox.height;\r\n\r\n\t\t\tlet pixelPaddingBottom = this.pixelPaddingBottom;\r\n\t\t\tlet pixelPaddingTop = this.pixelPaddingTop;\r\n\t\t\tlet pixelPaddingLeft = this.pixelPaddingLeft;\r\n\t\t\tlet pixelPaddingRight = this.pixelPaddingRight;\r\n\r\n\t\t\tif (angle > 90 || angle < -90) {\r\n\t\t\t\tif (relativeRotation == -90) {\r\n\t\t\t\t\trelativeRotation = 90;\r\n\t\t\t\t\tpixelWidth = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (relativeRotation == -90) {\r\n\t\t\t\t\tpixelHeight = - pixelHeight;\r\n\t\t\t\t}\r\n\t\t\t\tif (relativeRotation == 90) {\r\n\t\t\t\t\trelativeRotation = -90;\r\n\t\t\t\t\tpixelWidth = -pixelPaddingLeft - pixelPaddingRight;\r\n\t\t\t\t\tpixelHeight = - pixelHeight - pixelPaddingTop - pixelPaddingBottom;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.rotation = relativeRotation + angle + 90;\r\n\r\n\t\t\tlet dH = $math.sin(relativeRotation) / 2;\r\n\t\t\tlet dW = $math.cos(relativeRotation) / 2;\r\n\r\n\t\t\tlet rotation = this.rotation;\r\n\r\n\t\t\tthis.dx = pixelHeight * dH * $math.sin(rotation) - pixelWidth * dW * $math.cos(rotation);\r\n\t\t\tthis.dy = -pixelHeight * dH * $math.cos(rotation) - pixelWidth * dW * $math.sin(rotation);\r\n\r\n\t\t\tif (!this.inside) {\r\n\t\t\t\tlabelRadius += (pixelHeight + pixelPaddingBottom + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelWidth + pixelPaddingLeft + pixelPaddingRight) * $math.sin(relativeRotation);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (angle > 90 || angle < -90) {\r\n\t\t\t\t\tlabelRadius -= (pixelPaddingBottom + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelPaddingLeft + pixelPaddingRight) * $math.sin(relativeRotation);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabelRadius += (pixelPaddingBottom + this.bbox.height + pixelPaddingTop) * $math.cos(relativeRotation) + (pixelPaddingLeft + pixelPaddingRight + this.bbox.width) * $math.sin(relativeRotation);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x += $math.cos(angle) * labelRadius;\r\n\t\t\tpoint.y += $math.sin(angle) * labelRadius * axisRadiusY / axisRadius;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// END OF ROTATED\r\n\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\tthis.verticalCenter = \"middle\";\r\n\r\n\t\t\tif (isNegative) {\r\n\t\t\t\tthis.dx = 0;\r\n\t\t\t\tthis.dy = 0;\r\n\t\t\t\tpoint.x = (axisRadius + labelRadius) * $math.cos(angle);\r\n\t\t\t\tpoint.y = (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * $math.sin(angle);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// we don't use valign for labels because then they would jump while animating. instead we modify dy depending on a y position\r\n\t\t\t\t// this math makes dy to be 1 at the top of the circle, 0.5 at the middle and 1 at the bottom\r\n\t\t\t\t// @todo with this math doesn't work well with inside = true\r\n\t\t\t\tthis.dy = this._measuredHeight / 2 * $math.sin(angle) //(1 - (point.y + axisRadiusY) / (2 * axisRadiusY));\r\n\t\t\t\t// simmilar with dx\r\n\t\t\t\tthis.dx = this._measuredWidth / 2 * $math.cos(angle) //(1 - (point.x + axisRadius) / (2 * axisRadius));\r\n\r\n\t\t\t\tpoint.x += $math.cos(angle) * labelRadius;\r\n\t\t\t\tpoint.y += $math.sin(angle) * labelRadius * axisRadiusY / axisRadius;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpoint.x += dx;\r\n\t\tpoint.y += dy;\r\n\r\n\t\tthis.fdx = this.dx;\r\n\t\tthis.fdy = this.dy;\r\n\r\n\t\tthis.moveTo(point);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabelCircular\"] = AxisLabelCircular;\r\n","/**\r\n * Module, defining Axis Renderer for circular axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Axis } from \"./Axis\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { AxisFillCircular } from \"./AxisFillCircular\";\r\nimport { AxisRendererRadial } from \"./AxisRendererRadial\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { GridCircular } from \"./GridCircular\";\r\nimport { AxisLabelCircular } from \"./AxisLabelCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererCircular]].\r\n */\r\nexport interface IAxisRendererCircularProperties extends IAxisRendererProperties {\r\n\r\n\t/**\r\n\t * Start angle of the circular axis in degrees (0-360).\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * End angle of the circular axis in degrees (0-360).\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\t/**\r\n\t * Outer radius of the circular axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the circular axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Specifies if axis should use it's own start/end angles or the ones set on chart.\r\n\t */\r\n\tuseChartAngles?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRendererCircular]].\r\n */\r\nexport interface IAxisRendererCircularEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererCircularAdapters extends IAxisRendererAdapters, IAxisRendererCircularProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for circular axis.\r\n */\r\nexport class AxisRendererCircular extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererCircularProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererCircularAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererCircularEvents;\r\n\r\n\t/**\r\n\t * Defines type of the grid elements.\r\n\t */\r\n\tpublic _gridType: GridCircular;\r\n\r\n\t/**\r\n\t * Defines type for the fill elements.\r\n\t */\r\n\tpublic _fillType: AxisFillCircular;\r\n\r\n\t/**\r\n\t * Defines type for the label elements.\r\n\t */\r\n\tpublic _labelType: AxisLabelCircular;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic pixelRadiusReal: number = 0;\r\n\r\n\r\n\t/**\r\n\t * Y axis renderer\r\n\t */\r\n\tpublic axisRendererY: AxisRendererRadial;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\t// axis.layout = \"none\"; // does not trigger redraw when size changes\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.className = \"AxisRendererCircular\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tthis.useChartAngles = true;\r\n\t\tthis.radius = percent(100);\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.grid.template.location = 0;\r\n\r\n\t\tthis.labels.template.location = 0;\r\n\t\tthis.labels.template.radius = 15;\r\n\r\n\t\tthis.ticks.template.location = 0;\r\n\t\tthis.ticks.template.pixelPerfect = false;\r\n\t\tthis.tooltipLocation = 0;\r\n\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.isMeasured = false;\r\n\r\n\t\t// modify x and y so that tooltip would always be on circle\r\n\t\tlet tooltip = axis.tooltip;\r\n\r\n\t\ttooltip.adapter.add(\"dx\", (x, target) => {\r\n\t\t\tlet point: IPoint = $utils.svgPointToSprite({ x: target.pixelX, y: target.pixelY }, this);\r\n\t\t\treturn this.pixelRadius * Math.cos(Math.atan2(point.y, point.x)) - point.x;\r\n\t\t});\r\n\r\n\t\ttooltip.adapter.add(\"dy\", (y, target) => {\r\n\t\t\tlet point: IPoint = $utils.svgPointToSprite({ x: target.pixelX, y: target.pixelY }, this);\r\n\t\t\treturn this.pixelRadius * Math.sin(Math.atan2(point.y, point.x)) - point.y;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart && this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\treturn 2 * Math.PI * this.pixelRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"radius\", value, false, false, 10, false)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius in pixels.\r\n\t *\r\n\t * @return Outer radius (px)\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.radius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"innerRadius\", value, false, false, 10, false)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\tlet chart = <RadarChart>this.chart;\t\t\r\n\t\tlet innerRadius = this.getPropertyValue(\"innerRadius\");\r\n\t\tif(chart){\r\n\t\t\tif (!$type.hasValue(innerRadius)) {\r\n\t\t\t\tinnerRadius = chart.innerRadius;\r\n\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tinnerRadius = percent(innerRadius.value * chart.innerRadiusModifyer * 100)\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tlet mr = chart.mr;\r\n\t\t\t\t\tlet value = innerRadius.value;\r\n\t\t\t\t\tvalue = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;\r\n\t\t\t\t\tinnerRadius = percent(value * 100);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn innerRadius;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if axis should use its own `startAngle` and `endAngle` or\r\n\t * inherit them from relative properties from chart.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Use chart's angles\r\n\t */\r\n\tpublic set useChartAngles(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useChartAngles\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use chart angles\r\n\t */\r\n\tpublic get useChartAngles(): boolean {\r\n\t\treturn this.getPropertyValue(\"useChartAngles\");\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius in pixels.\r\n\t *\r\n\t * @return Inner radius (px)\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.innerRadius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\r\n\t\tif (!$type.isNumber(position2)) {\r\n\t\t\tposition2 = 1;\r\n\t\t}\r\n\r\n\t\tlet coordinate: number = this.positionToCoordinate(position);\r\n\t\tlet angle: number = this.startAngle + (this.endAngle - this.startAngle) * coordinate / this.axisLength;\r\n\t\tlet radius = this.pixelRadius;\r\n\t\tlet innerRadius = this.pixelInnerRadius;\r\n\r\n\t\tif (this.axisRendererY) {\r\n\t\t\tlet realRadius = $math.fitToRange(this.axisRendererY.positionToCoordinate(position2), 0, Infinity)\r\n\r\n\t\t\tif(realRadius == 0){\r\n\t\t\t\trealRadius = 0.000001;\r\n\t\t\t}\r\n\r\n\t\t\tlet point = { x: realRadius * $math.cos(angle), y: realRadius * $math.sin(angle) };\r\n\t\t\treturn point;\r\n\t\t}\r\n\r\n\t\treturn { x: $math.cos(angle) * innerRadius + (radius - innerRadius) * $math.cos(angle) * position2, y: $math.sin(angle) * innerRadius + (radius - innerRadius) * $math.sin(angle) * position2 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) on axis to angle in degrees (0-360).\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Angle (0-360)\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet arc: number = (this.endAngle - this.startAngle) / (axis.end - axis.start);\r\n\r\n\t\tlet angle: number;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tangle = this.startAngle + (axis.end - position) * arc;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tangle = this.startAngle + (position - axis.start) * arc;\r\n\t\t}\r\n\r\n\t\treturn $math.round(angle, 3);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts angle on axis to relative position(0-1).\r\n\t *\r\n\t * @param angle Angle in degrees\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic angleToPosition(angle: number): number {\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet arc: number = (this.endAngle - this.startAngle) / (axis.end - axis.start);\r\n\t\tlet position: number\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = axis.end - (angle - this.startAngle) / arc;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = (angle - this.startAngle) / arc + axis.start;\r\n\t\t}\r\n\r\n\t\treturn $math.round(position, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tlet radius: number = this.pixelRadius;\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\r\n\t\tlet arc: number = $math.min(360, endAngle - startAngle);\t\t\r\n\t\tthis.line.path = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, arc, radius, radius);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: GridCircular, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif ($type.isNumber(point.x) && $type.isNumber(point.y) && grid.element) {\r\n\r\n\t\t\tlet angle: number = $math.DEGREES * Math.atan2(point.y, point.x);\r\n\t\t\tlet radius: number = $utils.relativeRadiusToValue($type.hasValue(grid.radius) ? grid.radius : percent(100), this.pixelRadius);\r\n\r\n\t\t\tlet gridInnerRadius = $utils.relativeRadiusToValue(grid.innerRadius, this.pixelRadius);\r\n\t\t\tgrid.zIndex = 0;\r\n\r\n\t\t\tlet innerRadius: number = $utils.relativeRadiusToValue($type.isNumber(gridInnerRadius) ? gridInnerRadius : this.innerRadius, this.pixelRadiusReal, true);\r\n\r\n\t\t\tif(!$type.isNumber(innerRadius)){\r\n\t\t\t\tinnerRadius = 0;\r\n\t\t\t}\r\n\r\n\t\t\tgrid.path = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) }) + $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t}\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick         Tick element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number) {\r\n\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif (tick.element) {\r\n\t\t\tlet radius: number = this.pixelRadius;\r\n\t\t\tlet angle: number = $math.DEGREES * Math.atan2(point.y, point.x);\r\n\t\t\tlet tickLength: number = tick.length;\r\n\t\t\tif (tick.inside) {\r\n\t\t\t\ttickLength = -tickLength;\r\n\t\t\t}\r\n\t\t\ttick.zIndex = 1;\r\n\t\t\ttick.path = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) }) + $path.lineTo({ x: (radius + tickLength) * $math.cos(angle), y: (radius + tickLength) * $math.sin(angle) });\r\n\t\t}\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\tlet radius: number = this.pixelRadius;\r\n\t\tlet angle: number = $math.DEGREES * Math.atan2(point.y, point.x);\r\n\r\n\t\tpoint = { x: radius * $math.cos(angle), y: radius * $math.sin(angle) }\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: this[\"_labelType\"], position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlabel.fixPosition(this.positionToAngle(position), this.pixelRadius);\r\n\t\tlabel.zIndex = 2;\r\n\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point Point coordinates\r\n\t * @return Fits?\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Start angle of the axis in degrees (0-360).\r\n\t *\r\n\t * @param value  Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\t// do not normalize angel here!\r\n\t\tif (this.setPropertyValue(\"startAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the axis in degrees (0-360).\r\n\t *\r\n\t * @param value  End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\t// do not normalize angel here!\r\n\t\tif (this.setPropertyValue(\"endAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number, radius?: number | Percent, innerRadius?: number | Percent, cornerRadius?: number): string {\r\n\t\tlet path: string = \"\";\r\n\t\tif ($type.isNumber(startPosition) && $type.isNumber(endPosition)) {\r\n\r\n\t\t\tif (!$type.hasValue(radius)) {\r\n\t\t\t\tradius = this.radius;\r\n\t\t\t}\r\n\r\n\t\t\tstartPosition = $math.max(startPosition, this.axis.start);\r\n\t\t\tendPosition = $math.min(endPosition, this.axis.end);\r\n\r\n\t\t\tif (endPosition < startPosition) {\r\n\t\t\t\tendPosition = startPosition;\r\n\t\t\t}\r\n\r\n\t\t\tlet pixelRadius: number = $utils.relativeRadiusToValue(radius, this.pixelRadius);\r\n\t\t\tlet pixelInnerRadius: number = $utils.relativeRadiusToValue(innerRadius, this.pixelRadius, true);\r\n\r\n\t\t\tlet startAngle: number = this.positionToAngle(startPosition);\r\n\t\t\tlet endAngle: number = this.positionToAngle(endPosition);\r\n\r\n\t\t\tlet arc: number = endAngle - startAngle;\r\n\r\n\t\t\tpath = $path.arc(startAngle, arc, pixelRadius, pixelInnerRadius, pixelRadius, cornerRadius);\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new grid element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Grid element\r\n\t */\r\n\tpublic createGrid(): this[\"_gridType\"] {\r\n\t\treturn new GridCircular();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new fill element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Fill element\r\n\t */\r\n\tpublic createFill(axis: Axis): this[\"_fillType\"] {\r\n\t\treturn new AxisFillCircular(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new label element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return Label element\r\n\t */\r\n\tpublic createLabel(): this[\"_labelType\"] {\r\n\t\treturn new AxisLabelCircular();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\tlet angle = $math.fitAngleToRange($math.getAngle(point), this.startAngle, this.endAngle);\r\n\t\treturn this.coordinateToPosition((angle - this.startAngle) / 360 * this.axisLength);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererCircular\"] = AxisRendererCircular;\r\n","/**\r\n * Module, defining Axis Renderer for radial axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererY, IAxisRendererYProperties, IAxisRendererYAdapters, IAxisRendererYEvents } from \"./AxisRendererY\";\r\nimport { Axis } from \"./Axis\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedCircle } from \"../../core/elements/WavedCircle\";\r\nimport { PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { AxisBullet } from \"./AxisBullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererRadial]].\r\n */\r\nexport interface IAxisRendererRadialProperties extends IAxisRendererYProperties {\r\n\r\n\t/**\r\n\t * Start angle of the radial axis in degrees. (0-360)\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * End angle of the radial axis in degrees. (0-360)\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\t/**\r\n\t * A grid type to display: \"circles\" or \"polygons\".\r\n\t *\r\n\t * @default \"circles\"\r\n\t */\r\n\tgridType?: \"circles\" | \"polygons\"; //@todo: move it to GridRadial?\r\n\r\n\t/**\r\n\t * An angle of the axis in degrees. (0-360)\r\n\t */\r\n\taxisAngle?: number;\r\n\r\n\r\n\t/**\r\n\t * Outer radius of the radial axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the radial axis.\r\n\t *\r\n\t * Can either be absolute (pixels) or relative ([[Percent]]).\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRendererRadial]].\r\n */\r\nexport interface IAxisRendererRadialEvents extends IAxisRendererYEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererRadialAdapters extends IAxisRendererYAdapters, IAxisRendererRadialProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for radial axis.\r\n */\r\nexport class AxisRendererRadial extends AxisRendererY {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererRadialProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererRadialAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererRadialEvents;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<RadarChart>();\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic pixelRadiusReal: number = 0;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _chartType: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererRadial\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\t\tthis.minGridDistance = 30;\r\n\t\tthis.gridType = \"circles\";\r\n\t\tthis.axisAngle = -90;\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.radius = percent(100);\r\n\r\n\t\tthis.line.strokeOpacity = 0;\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart && this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\treturn this.pixelRadius - this.pixelInnerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius in pixels.\r\n\t *\r\n\t * @return Outer radius (px)\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.radius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the axis.\r\n\t *\r\n\t * Can be absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, false, false, 10, false)\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\tlet chart = this.chart;\r\n\t\tlet innerRadius = this.getPropertyValue(\"innerRadius\");\r\n\t\tif(chart){\r\n\t\t\tif (!$type.hasValue(innerRadius)) {\r\n\t\t\t\tinnerRadius = chart.innerRadius;\r\n\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tinnerRadius = percent(innerRadius.value * chart.innerRadiusModifyer * 100)\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (innerRadius instanceof Percent && chart) {\r\n\t\t\t\t\tlet mr = chart.mr;\r\n\t\t\t\t\tlet value = innerRadius.value;\r\n\t\t\t\t\tvalue = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;\r\n\t\t\t\t\tinnerRadius = percent(value * 100);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn innerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius in pixels.\r\n\t *\r\n\t * @return Inner radius (px)\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.innerRadius, this.pixelRadiusReal) || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @param position2  Position (0-1) Position on the second axis\r\n\t * @return Point\r\n\t */\r\n\tpublic positionToPoint(position: number, position2?: number): IPoint {\r\n\t\tlet radius: number = $math.fitToRange(this.positionToCoordinate(position), 0, Infinity);\r\n\t\treturn { x: radius * $math.cos(this.axisAngle), y: radius * $math.sin(this.axisAngle) };\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tthis.line.path = $path.moveTo({ x: this.pixelInnerRadius * $math.cos(this.axisAngle), y: this.pixelInnerRadius * $math.sin(this.axisAngle) }) + $path.lineTo({ x: this.pixelRadius * $math.cos(this.axisAngle), y: this.pixelRadius * $math.sin(this.axisAngle) });\r\n\r\n\t\tlet title = this.axis.title;\r\n\t\ttitle.valign = \"none\";\r\n\t\ttitle.horizontalCenter = \"middle\";\r\n\t\ttitle.verticalCenter = \"bottom\";\r\n\t\ttitle.y = - this.axisLength / 2;\r\n\t\tlet rotation: number = 90;\r\n\t\tif (this.opposite) {\r\n\t\t\tif (!this.inside) {\r\n\t\t\t\trotation = -90;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.inside) {\r\n\t\t\t\trotation = -90;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttitle.rotation = rotation;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\tlet path: string;\r\n\t\tlet radius: number = $math.getDistance(point);\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\t\tlet chart = this.chart;\r\n\r\n\t\tif ($type.isNumber(radius) && grid.element && chart) {\r\n\t\t\t\r\n\t\t\tlet xAxis = chart.xAxes.getIndex(0);\r\n\t\t\tlet count = 0;\r\n\r\n\t\t\tlet series = chart.series.getIndex(0);\r\n\r\n\t\t\tif (series) {\r\n\t\t\t\tcount = series.dataItems.length;\r\n\t\t\t}\r\n\r\n\t\t\t// polygons are only possible if x axis is present\r\n\t\t\t// @todo: review this\r\n\t\t\tif (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof CategoryAxis) {\r\n\t\t\t\tlet gridLocation = xAxis.renderer.grid.template.location;\r\n\r\n\t\t\t\tlet angle: number = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\r\n\t\t\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n\t\t\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n\t\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, radius, radius);\r\n\t\t\t}\r\n\t\t\tgrid.path = path;\r\n\t\t}\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param label        Label element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: this[\"_labelType\"], position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\t// @todo? zero grid for radar chart, is it needed?\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point Point coordinates\r\n\t * @return Fits?\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Start angle of the axis in degrees. (0-360)\r\n\t *\r\n\t * @param value  Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\t// do not normalize angle here!\r\n\t\tif (this.setPropertyValue(\"startAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the axis in degrees. (0-360)\r\n\t *\r\n\t * @param value  End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\t// do not normalize angel here!\r\n\t\tif (this.setPropertyValue(\"endAngle\", value)) {\r\n\t\t\tthis.invalidateAxisItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the radial axis in degrees. (0-360)\r\n\t *\r\n\t * @param value  Axis angle\r\n\t */\r\n\tpublic set axisAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"axisAngle\", $math.normalizeAngle(value));\r\n\t\tthis.invalidateAxisItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis angle\r\n\t */\r\n\tpublic get axisAngle(): number {\r\n\t\treturn this.getPropertyValue(\"axisAngle\");\r\n\t\t//return $math.fitToRange(this.getPropertyValue(\"axisAngle\"), this.startAngle, this.endAngle); // no good, as less flexible\r\n\t}\r\n\r\n\t// polygons grid type is only possible under these conditions: xAxis is available and it is CategoryAxis, also at least one series should be added to a chart\r\n\r\n\t/**\r\n\t * Grid type for radial axis.\r\n\t *\r\n\t * A grid on radia axis can either be perfect circles (\"circles\"), or\r\n\t * straight lines (\"polygons\").\r\n\t *\r\n\t * @default \"circles\"\r\n\t * @param value  Grid type\r\n\t */\r\n\tpublic set gridType(value: \"circles\" | \"polygons\") {\r\n\t\tthis.setPropertyValue(\"gridType\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Grid type\r\n\t */\r\n\tpublic get gridType(): \"circles\" | \"polygons\" {\r\n\t\tlet axis: Axis = this.chart.xAxes.getIndex(0);\r\n\t\tif (axis instanceof CategoryAxis) {\r\n\t\t\treturn this.getPropertyValue(\"gridType\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn \"circles\";\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param startPosition  Starting position\r\n\t * @param endPosition    End position\r\n\t * @return SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet pixelInnerRadius = this.pixelInnerRadius;\r\n\t\tlet pixelRadius = this.axisLength + pixelInnerRadius;\r\n\t\tlet innerRadius: number = $math.fitToRange(this.positionToCoordinate(startPosition), pixelInnerRadius, pixelRadius);\r\n\t\tlet radius: number = $math.fitToRange(this.positionToCoordinate(endPosition), pixelInnerRadius, pixelRadius);\r\n\r\n\t\t//let angleCount: number = this.angleCount;\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\t\tlet arc: number = endAngle - startAngle;\r\n\r\n\t\tlet path: string;\r\n\r\n\t\tlet chart = this.chart;\r\n\t\tlet xAxis = chart.xAxes.getIndex(0);\r\n\t\tlet series = chart.series.getIndex(0);\r\n\r\n\t\tlet count = 0;\r\n\t\tif (series) {\r\n\t\t\tcount = series.dataItems.length;\r\n\t\t}\r\n\r\n\t\t// polygons are only possible if x axis is present\r\n\t\t// @todo: review this\r\n\t\tif (this.gridType == \"polygons\" && count > 0 && series && xAxis && xAxis instanceof CategoryAxis) {\r\n\t\t\tlet gridLocation = xAxis.renderer.grid.template.location;\r\n\r\n\t\t\tlet angle: number = xAxis.getAngle(series.dataItems.getIndex(0), \"categoryX\", gridLocation);\r\n\t\t\tpath = $path.moveTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\r\n\t\t\tfor (let i = 1; i < count; i++) {\r\n\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n\t\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t}\r\n\r\n\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(count - 1), \"categoryX\", xAxis.renderer.cellEndLocation);\r\n\t\t\tpath += $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\r\n\t\t\tpath += $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) })\r\n\r\n\t\t\tfor (let i = count - 1; i >= 0; i--) {\r\n\t\t\t\tangle = xAxis.getAngle(series.dataItems.getIndex(i), \"categoryX\", gridLocation);\r\n\t\t\t\tpath += $path.lineTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) });\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpath = $path.arc(startAngle, arc, radius, innerRadius);\r\n\t\t}\r\n\t\treturn path;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak) {\r\n\t\t// @todo: someday we might need axis break when gridType is polygons\r\n\r\n\t\tlet startLine: WavedCircle = <WavedCircle>axisBreak.startLine;\r\n\t\tlet endLine: WavedCircle = <WavedCircle>axisBreak.endLine;\r\n\t\tlet fillShape: WavedCircle = <WavedCircle>axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tstartLine.radius = Math.abs(startPoint.y);\r\n\t\tendLine.radius = Math.abs(endPoint.y);\r\n\t\tfillShape.radius = Math.abs(endPoint.y);\r\n\t\tfillShape.innerRadius = Math.abs(startPoint.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak): void {\r\n\t\taxisBreak.startLine = new WavedCircle();\r\n\t\taxisBreak.endLine = new WavedCircle();\r\n\t\taxisBreak.fillShape = new WavedCircle();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet bigNum: number = 4000;\r\n\t\t\tlet bbx: number = -4000;\r\n\t\t\tlet bby: number = -4000;\r\n\t\t\tlet bbw: number = bigNum * 2;\r\n\t\t\tlet bbh: number = bigNum * 2;\r\n\t\t\tlet axisAngle: number = this.axisAngle;\r\n\t\t\tif (axisAngle < 0) {\r\n\t\t\t\taxisAngle += 360;\r\n\t\t\t}\r\n\t\t\tlet tooltipOrientation: PointerOrientation = \"vertical\";\r\n\t\t\tif ((axisAngle > 45 && axisAngle < 135) || (axisAngle > 225 && axisAngle < 315)) {\r\n\t\t\t\ttooltipOrientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\tthis.axis.updateTooltip(tooltipOrientation, { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param tick      Tick element\r\n\t * @param position  Position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif (tick.element) {\r\n\t\t\tlet angle: number = $math.normalizeAngle(this.axisAngle + 90);\r\n\t\t\tif (angle / 90 != Math.round(angle / 90)) {\r\n\t\t\t\ttick.pixelPerfect = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttick.pixelPerfect = true;\r\n\t\t\t}\r\n\t\t\tlet tickLength = -tick.length;\r\n\t\t\tif (tick.inside) {\r\n\t\t\t\ttickLength *= -1;\r\n\t\t\t}\r\n\t\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength * $math.cos(angle), y: tickLength * $math.sin(angle) });\r\n\t\t}\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions axis bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet       AxisBullet element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateBullet(bullet: Sprite, position: number, endPosition: number): void {\r\n\t\tlet location = 0.5;\r\n\t\tif (bullet instanceof AxisBullet) {\r\n\t\t\tlocation = bullet.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tthis.positionItem(bullet, point);\r\n\r\n\t\tthis.toggleVisibility(bullet, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position on the axis to a coordinate in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\t\tlet innerRadius = this.pixelInnerRadius;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength + innerRadius;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength + innerRadius;\r\n\t\t}\r\n\r\n\t\treturn $math.round(coordinate, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param point  Point\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\tlet coordinate = ($math.getDistance(point) - this.pixelInnerRadius);\r\n\t\treturn this.coordinateToPosition(coordinate);\r\n\t}\r\n\r\n\t/**\r\n\t * A chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: RadarChart) {\r\n\t\tthis._chart.set(value, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): RadarChart {\r\n\t\treturn this._chart.get();\r\n\t}\t\r\n\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererRadial\"] = AxisRendererRadial;\r\n","/**\r\n * Radar chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, IXYChartProperties, IXYChartDataFields, IXYChartAdapters, IXYChartEvents, XYChartDataItem } from \"./XYChart\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { RadarSeries } from \"../series/RadarSeries\";\r\nimport { RadarColumnSeries } from \"../series/RadarColumnSeries\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { RadarCursor } from \"../cursors/RadarCursor\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { AxisRendererRadial } from \"../axes/AxisRendererRadial\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[RadarChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class RadarChartDataItem extends XYChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[RadarChart]].\r\n */\r\nexport interface IRadarChartDataFields extends IXYChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[RadarChart]].\r\n */\r\nexport interface IRadarChartProperties extends IXYChartProperties {\r\n\r\n\t/**\r\n\t * Radius of the Radar face. Absolute or relative.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the Radar face. Percent value is relative to radius.\r\n\t *\r\n\t * @todo review desc\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * An angle radar face starts on. (degrees)\r\n\t *\r\n\t * @default -90\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * An angle radar face ends on. (degrees)\r\n\t *\r\n\t * @default 270\r\n\t */\r\n\tendAngle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RadarChart]].\r\n */\r\nexport interface IRadarChartEvents extends IXYChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarChartAdapters extends IXYChartAdapters, IRadarChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Radar chart.\r\n *\r\n * @see {@link IRadarChartEvents} for a list of available Events\r\n * @see {@link IRadarChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/radar-chart/} for documentation\r\n * @important\r\n */\r\nexport class RadarChart extends XYChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IRadarChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: RadarSeries | RadarColumnSeries;\r\n\r\n\t/**\r\n\t * Defines X axis renderer type.\r\n\t */\r\n\tpublic _xAxisRendererType: AxisRendererCircular;\r\n\r\n\t/**\r\n\t * Defines Y axis renderer type.\r\n\t */\r\n\tpublic _yAxisRendererType: AxisRendererRadial;\r\n\r\n\t/**\r\n\t * Defines X axis renderer type.\r\n\t */\r\n\tprotected _axisRendererX: typeof AxisRendererCircular = AxisRendererCircular;\r\n\r\n\t/**\r\n\t * Defines Y axis renderer type.\r\n\t */\r\n\tprotected _axisRendererY: typeof AxisRendererRadial = AxisRendererRadial;\r\n\r\n\t/**\r\n\t * [_cursor description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _cursor: RadarCursor;\r\n\r\n\t/**\r\n\t * A container that holds Radar visual elements.\r\n\t */\r\n\tpublic radarContainer: Container;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _pixelInnerRadius: number;\r\n\r\n\r\n\t/**\r\n\t * used by cursor. We adjust innerradius if start and end angle are close to each other\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic innerRadiusModifyer: number = 1;\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic mr: number = 1;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarChart\";\r\n\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tthis.radius = percent(80);\r\n\t\tthis.innerRadius = 0;\r\n\r\n\t\tlet radarContainer = this.plotContainer.createChild(Container);\r\n\t\tradarContainer.shouldClone = false;\r\n\t\tradarContainer.layout = \"absolute\";\r\n\t\tradarContainer.align = \"center\";\r\n\t\tradarContainer.valign = \"middle\";\r\n\r\n\t\tthis.seriesContainer.parent = radarContainer;\r\n\t\tthis.radarContainer = radarContainer;\r\n\t\tthis.bulletsContainer.parent = radarContainer;\r\n\t\tthis.axisBulletsContainer = radarContainer;\r\n\r\n\t\tthis._cursorContainer = radarContainer;\r\n\r\n\t\tthis.chartContainer.events.on(\"maxsizechanged\", this.invalidate, this, false); // need this for the chart to change radius if legend is removed/disabled\r\n\r\n\t\tthis._bulletMask = radarContainer.createChild(Circle);\r\n\t\tthis._bulletMask.shouldClone = false;\r\n\t\tthis._bulletMask.element = this.paper.add(\"path\");\r\n\t\tthis._bulletMask.opacity = 0;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Radar chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates Axis with required properties for this chart.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tprotected processAxis(axis: Axis): void {\r\n\t\tsuper.processAxis(axis);\r\n\t\tlet renderer: AxisRenderer = axis.renderer;\r\n\t\trenderer.gridContainer.parent = renderer;\r\n\t\trenderer.breakContainer.parent = renderer;\r\n\t\taxis.parent = this.radarContainer;\r\n\t\trenderer.toBack();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all X axes after range change event.\r\n\t */\r\n\tprotected handleXAxisRangeChange() {\r\n\t\tsuper.handleXAxisRangeChange();\r\n\t\t$iter.each(this.yAxes.iterator(), (axis) => {\r\n\t\t\taxis.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates all Y axes after range change event.\r\n\t */\r\n\tprotected handleYAxisRangeChange() {\r\n\t\tsuper.handleYAxisRangeChange();\r\n\t\t$iter.each(this.xAxes.iterator(), (axis) => {\r\n\t\t\taxis.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up cursor\r\n\t\t\tif ($type.hasValue(config.cursor) && !$type.hasValue(config.cursor.type)) {\r\n\t\t\t\tconfig.cursor.type = \"RadarCursor\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tconfig.series[i].type = config.series[i].type || \"RadarSeries\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set up axes\r\n\t\t\t/*if ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.xAxes.length; i < len; i++) {\r\n\t\t\t\t\tconfig.xAxes[i].type = config.xAxes[i].type || \"AxisRendererCircular\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {\r\n\t\t\t\tfor (let i = 0, len = config.yAxes.length; i < len; i++) {\r\n\t\t\t\t\tconfig.yAxes[i].type = config.yAxes[i].type || \"AxisRendererRadial\";\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Does calculations before drawing the chart.\r\n\t */\r\n\tprotected beforeDraw(): void {\r\n\t\tsuper.beforeDraw();\r\n\r\n\t\tlet plotContainer = this.plotContainer;\r\n\r\n\t\tlet rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n\t\tlet innerRect: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t\tlet wr = plotContainer.innerWidth / rect.width;\r\n\t\tlet hr = plotContainer.innerHeight / rect.height;\r\n\r\n\t\tlet innerRadius = this.innerRadius;\r\n\r\n\t\tif (innerRadius instanceof Percent) {\r\n\t\t\tlet value = innerRadius.value;\r\n\t\t\tlet mr = Math.min(wr, hr);\r\n\r\n\t\t\tthis.mr = mr;\r\n\r\n\t\t\tvalue = Math.max(mr * value, mr - Math.min(plotContainer.innerHeight, plotContainer.innerWidth)) / mr;\r\n\t\t\tinnerRect = $math.getArcRect(this.startAngle, this.endAngle, value);\r\n\r\n\t\t\tthis.innerRadiusModifyer = value / innerRadius.value;\r\n\r\n\t\t\tinnerRadius = percent(value * 100);\r\n\t\t}\r\n\r\n\t\t// @todo handle this when innerRadius set in pixels (do it for pie also)\r\n\t\trect = $math.getCommonRectangle([rect, innerRect]);\r\n\r\n\t\tlet maxRadius = Math.min(plotContainer.innerWidth / rect.width, plotContainer.innerHeight / rect.height);\r\n\r\n\t\tlet diameter = $utils.relativeRadiusToValue(this.radius, maxRadius) * 2 || 0;\r\n\t\tlet radius = diameter / 2;\r\n\t\tlet startAngle = this.startAngle;\r\n\t\tlet endAngle = this.endAngle;\r\n\r\n\t\tthis._pixelInnerRadius = $utils.relativeRadiusToValue(innerRadius, radius);\r\n\r\n\t\tthis._bulletMask.path = $path.arc(startAngle, endAngle - startAngle, radius, this._pixelInnerRadius);\r\n\r\n\t\t$iter.each(this.xAxes.iterator(), (axis) => {\r\n\t\t\tif (axis.renderer.useChartAngles) {\r\n\t\t\t\taxis.renderer.startAngle = startAngle;\r\n\t\t\t\taxis.renderer.endAngle = endAngle;\r\n\t\t\t}\r\n\r\n\t\t\taxis.width = diameter;\r\n\t\t\taxis.height = diameter;\r\n\t\t\t//axis.renderer.width = diameter;\r\n\t\t\t//axis.renderer.height = diameter;\r\n\t\t\taxis.renderer.pixelRadiusReal = radius;\r\n\t\t\t//axis.renderer.innerRadius = innerRadius;\r\n\t\t});\r\n\r\n\t\t$iter.each(this.yAxes.iterator(), (axis) => {\r\n\t\t\taxis.renderer.startAngle = startAngle;\r\n\t\t\taxis.renderer.endAngle = endAngle;\r\n\r\n\t\t\taxis.width = diameter;\r\n\t\t\taxis.height = diameter;\r\n\t\t\t//axis.renderer.width = diameter;\r\n\t\t\t//axis.renderer.height = diameter;\r\n\t\t\taxis.renderer.pixelRadiusReal = radius;\r\n\t\t\t//axis.renderer.innerRadius = innerRadius;\r\n\t\t});\r\n\r\n\r\n\r\n\t\tlet cursor = this.cursor;\r\n\t\tif (cursor) {\r\n\t\t\tcursor.width = diameter;\r\n\t\t\tcursor.height = diameter;\r\n\t\t\tcursor.startAngle = startAngle;\r\n\t\t\tcursor.endAngle = endAngle;\r\n\t\t}\r\n\r\n\t\tthis.radarContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n\t\tthis.radarContainer.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for RadarChart.\r\n\t *\r\n\t * @return New Series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new RadarSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n\t * top center. (at -90 degrees)\r\n\t *\r\n\t * You can use `startAngle` to change this setting.\r\n\t *\r\n\t * E.g. setting this to 0 will make the radial axis start horizontally to\r\n\t * the right, as opposed to vertical.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  Start angle (degrees)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle (degrees)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n\t * where it has started, forming a full 360 circle. (at 270 degrees)\r\n\t *\r\n\t * You can use `endAngle` to end the circle somewhere else.\r\n\t *\r\n\t * E.g. setting this to 180 will make the radar face end at horizontal line\r\n\t * to the left off the center.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  End angle (degrees)\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle (degrees)\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the Radar face.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius in pixels\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn this._pixelInnerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the radar face.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * If set in Percent, it will be relative to `radius`. (outer radius)\r\n\t *\r\n\t * @param value Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the horizontal (X) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis Axis\r\n\t */\r\n\tpublic updateXAxis(renderer: AxisRenderer) {\r\n\t\t//do not call super!\r\n\t\tif (renderer) {\r\n\t\t\trenderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the vertical (Y) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis Axis\r\n\t */\r\n\tpublic updateYAxis(renderer: AxisRenderer) {\r\n\t\t// do not call super!\r\n\t\tif (renderer) {\r\n\t\t\trenderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarChart\"] = RadarChart;\r\n","/**\r\n * Functionality for drawing simple ClockHands\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Trapezoid } from \"../../core/elements/Trapezoid\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { GaugeChart } from \"../types/GaugeChart\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ClockHand]].\r\n */\r\nexport interface IClockHandProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Radius of the hand's outer end. (tip)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t */\r\n\tradius: number | Percent;\r\n\r\n\t/**\r\n\t * Radius of the hand's inner end. (base)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(0)\r\n\t */\r\n\tinnerRadius: number | Percent;\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's tip.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tendWidth: number;\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's base.\r\n\t *\r\n\t * @default 5\r\n\t */\r\n\tstartWidth: number;\r\n\r\n\t/**\r\n\t * rotation direction\r\n\t * @default \"any\"\r\n\t */\r\n\trotationDirection: \"any\" | \"clockWise\" | \"counterClockWise\";\r\n}\r\n\r\n/**\r\n * Defines events for [[ClockHand]].\r\n */\r\nexport interface IClockHandEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ClockHand]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IClockHandAdapters extends IContainerAdapters, IClockHandProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * ClockHand class is capable of drawing a simple pointy shape with optionally\r\n * rounderd corners and an icon.\r\n *\r\n * @see {@link IClockHandEvents} for a list of available events\r\n * @see {@link IClockHandAdapters} for a list of available Adapters\r\n * @todo Improve\r\n * @important\r\n */\r\nexport class ClockHand extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IClockHandProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IClockHandAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IClockHandEvents;\r\n\r\n\t/**\r\n\t * A circle element used as hand's base.\r\n\t */\r\n\tprotected _pin: Circle;\r\n\r\n\t/**\r\n\t * A trapezoid shape used for hand itself.\r\n\t */\r\n\tprotected _hand: Trapezoid;\r\n\r\n\t/**\r\n\t * An Axis hand is related to.\r\n\t */\r\n\tprotected _axis: MutableValueDisposer<Axis> = new MutableValueDisposer<Axis>();\r\n\r\n\t/**\r\n\t * Hand's current value.\r\n\t */\r\n\tprotected _value: any;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ClockHand\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.stroke = this.fill;\r\n\r\n\t\tlet pin: Circle = new Circle();\r\n\t\tpin.radius = 5;\r\n\t\tthis.pin = pin;\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.startWidth = 5;\r\n\t\tthis.endWidth = 1;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.radius = percent(100);\r\n\t\tthis.innerRadius = percent(0);\r\n\r\n\t\tlet hand: Trapezoid = new Trapezoid();\r\n\t\tthis.hand = hand;\r\n\r\n\t\tthis._disposers.push(this._axis);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Re(validates) the clock hand, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet hand = this.hand;\r\n\t\thand.width = this.pixelWidth;\r\n\t\tlet h: number = Math.max(this.startWidth, this.endWidth);\r\n\t\thand.height = h;\r\n\t\thand.leftSide = percent(this.startWidth / h * 100);\r\n\t\thand.rightSide = percent(this.endWidth / h * 100);\r\n\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRendererCircular = <AxisRendererCircular>this.axis.renderer;\r\n\r\n\t\t\tlet x0: number = $utils.relativeRadiusToValue(this.innerRadius, renderer.pixelRadius);\r\n\t\t\tlet x1: number = $utils.relativeRadiusToValue(this.radius, renderer.pixelRadius);\r\n\r\n\t\t\thand.x = x0;\r\n\t\t\thand.y = - h / 2;\r\n\r\n\t\t\thand.width = x1 - x0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A circle element used as hand's base. (pin)\r\n\t *\r\n\t * @param pin  Pin element\r\n\t */\r\n\tpublic set pin(pin: Circle) {\r\n\t\tif (this._pin) {\r\n\t\t\tthis.removeDispose(this._pin);\r\n\t\t}\r\n\t\tif (pin) {\r\n\t\t\tthis._pin = pin;\r\n\t\t\tpin.parent = this;\r\n\t\t\tthis._disposers.push(pin);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pin element\r\n\t */\r\n\tpublic get pin(): Circle {\r\n\t\treturn this._pin;\r\n\t}\r\n\r\n\t/**\r\n\t * A trapezoid shape used for hand itself.\r\n\t *\r\n\t * The shape of the trapezoid is controlled by ClockHand's `startWidth` and\r\n\t * `endWidth` properties.\r\n\t *\r\n\t * Set `endWidth` to 1 (px) to make it pointy.\r\n\t *\r\n\t * @param hand  Hand element\r\n\t */\r\n\tpublic set hand(hand: Trapezoid) {\r\n\t\tif (this._hand) {\r\n\t\t\tthis.removeDispose(this._hand);\r\n\t\t}\r\n\t\tif (hand) {\r\n\t\t\tthis._hand = hand;\r\n\t\t\thand.parent = this;\r\n\t\t\tthis._disposers.push(hand);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hand element\r\n\t */\r\n\tpublic get hand(): Trapezoid {\r\n\t\treturn this._hand;\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the hand's outer end. (tip)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(0)\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the hand's inner end. (base)\r\n\t *\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(0)\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's inner end. (base)\r\n\t *\r\n\t * @default 5\r\n\t * @param value  Width (px)\r\n\t */\r\n\tpublic set startWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"startWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get startWidth(): number {\r\n\t\treturn this.getPropertyValue(\"startWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Width, in pixels, of the clock hand's outer end. (tip)\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Width (px)\r\n\t */\r\n\tpublic set endWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"endWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get endWidth(): number {\r\n\t\treturn this.getPropertyValue(\"endWidth\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Rotation direction\r\n\t *\r\n\t * @default any\r\n\t * @param value\r\n\t */\r\n\tpublic set rotationDirection(value: \"any\" | \"clockWise\" | \"counterClockWise\") {\r\n\t\tthis.setPropertyValue(\"rotationDirection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return rotationDirection\r\n\t */\r\n\tpublic get rotationDirection(): \"any\" | \"clockWise\" | \"counterClockWise\" {\r\n\t\treturn this.getPropertyValue(\"rotationDirection\");\r\n\t}\r\n\r\n\t/**\r\n\t * Moves clock hand to particular value.\r\n\t *\r\n\t * If `duration` is set to a number in milliseconds, the hand will move\r\n\t * to the new position gracefully, rather than jumping rigth to it.\r\n\t *\r\n\t * Alternatively, you can also set `value` directly.\r\n\t *\r\n\t * @param value     New value\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param easing  Animation easing function\r\n\t */\r\n\tpublic showValue(value: any, duration?: number, easing?: (value: number) => number): void {\r\n\t\tthis._value = value;\r\n\t\tif (value != undefined) {\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tlet renderer = <AxisRendererCircular>this.axis.renderer;\r\n\t\t\t\tlet newAngle = renderer.positionToAngle(this.axis.anyToPosition(value));\r\n\t\t\t\tlet currentAngle = this.rotation;\r\n\r\n\t\t\t\tif (this.rotationDirection == \"clockWise\") {\r\n\t\t\t\t\tif (newAngle < currentAngle) {\r\n\t\t\t\t\t\tthis.rotation = currentAngle - 360;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.rotationDirection == \"counterClockWise\") {\r\n\t\t\t\t\tif (newAngle > currentAngle) {\r\n\t\t\t\t\t\tthis.rotation = currentAngle + 360;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animate({ property: \"rotation\", to: newAngle }, duration, easing);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns hand's relative position on axis\r\n\t */\r\n\tpublic get currentPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer = <AxisRendererCircular>this.axis.renderer;\r\n\t\t\treturn renderer.angleToPosition(this.rotation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A current value clock hand is pointing to.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: any) {\r\n\t\tthis.showValue(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): any {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * An Axis clock hand is associated with.\r\n\t *\r\n\t * Hand's `value` relates to values on the Axis.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic set axis(axis: Axis) {\r\n\t\tif (this.axis != axis) {\r\n\t\t\tthis._axis.set(axis, new MultiDisposer([\r\n\t\t\t\taxis.events.on(\"datavalidated\", this.updateValue, this, false),\r\n\t\t\t\taxis.events.on(\"datarangechanged\", this.updateValue, this, false),\r\n\t\t\t\taxis.events.on(\"dataitemsvalidated\", this.updateValue, this, false),\r\n\t\t\t\taxis.events.on(\"propertychanged\", this.invalidate, this, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t\tif (axis) {\r\n\t\t\tlet chart: GaugeChart = <GaugeChart>axis.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tthis.rotation = chart.startAngle;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.parent = axis.renderer;\r\n\t\tthis.zIndex = 5;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Axis\r\n\t */\r\n\tpublic get axis(): Axis {\r\n\t\treturn this._axis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers `value` accessor, so that Hand animates to new position, in case\r\n\t * value has changed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateValue() {\r\n\t\tthis.value = this.value;\r\n\t}\r\n\r\n\t/**\r\n * Processes JSON-based config before it is applied to the object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param config  Config\r\n */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Connect clock hands with axes\r\n\t\t\tif ($type.hasValue(config.axis) && $type.isString(config.axis) && this.map.hasKey(config.axis)) {\r\n\t\t\t\tconfig.axis = this.map.getKey(config.axis);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ClockHand\"] = ClockHand;\r\n","/**\r\n * Module for building Gauge charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadarChart, IRadarChartProperties, IRadarChartDataFields, IRadarChartAdapters, IRadarChartEvents, RadarChartDataItem } from \"./RadarChart\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { ClockHand } from \"../elements/ClockHand\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class GaugeChartDataItem extends RadarChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: GaugeChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GaugeChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[GaugeChart]].\r\n */\r\nexport interface IGaugeChartDataFields extends IRadarChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[GaugeChart]].\r\n */\r\nexport interface IGaugeChartProperties extends IRadarChartProperties { }\r\n\r\n/**\r\n * Defines events for [[GaugeChart]].\r\n */\r\nexport interface IGaugeChartEvents extends IRadarChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GaugeChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGaugeChartAdapters extends IRadarChartAdapters, IGaugeChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\r\nexport class GaugeChart extends RadarChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IGaugeChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGaugeChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGaugeChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGaugeChartEvents;\r\n\r\n\t/**\r\n\t * A list of [[ClockHand]] items displayed on this Gauge chart.\r\n\t */\r\n\tpublic hands: ListTemplate<ClockHand>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"GaugeChart\";\r\n\r\n\t\tthis.startAngle = 180;\r\n\t\tthis.endAngle = 360;\r\n\r\n\t\tthis.hands = new ListTemplate<ClockHand>(new ClockHand());\r\n\t\tthis.hands.events.on(\"inserted\", this.processHand, this, false);\r\n\r\n\t\tthis._disposers.push(new ListDisposer(this.hands));\r\n\t\tthis._disposers.push(this.hands.template);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Gauge chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a [[ClockHand]] when it is added to the chart.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected processHand(event: IListEvents<ClockHand>[\"inserted\"]): void {\r\n\t\tlet hand: ClockHand = event.newValue;\r\n\t\tif (!hand.axis) {\r\n\t\t\thand.axis = this.xAxes.getIndex(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"hands\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"hands\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GaugeChart\"] = GaugeChart;\r\n","/**\r\n * Defines Percent Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"./Series\";\r\nimport { ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { LegendDataItem, LegendSettings } from \"../../charts/Legend\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { PatternSet } from \"../../core/utils/PatternSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { PercentChart } from \"../types/PercentChart\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PercentSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: Sprite;\r\n\r\n\t/**\r\n\t * A reference to a slice label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a slice tick element.\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _tick: Tick;\r\n\r\n\t/**\r\n\t * A reference to a corresponding legend data item.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Custom settings for the legend item.\r\n\t * Not used, only added to sattisfy LegendDataItem\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic legendSettings: LegendSettings;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PercentSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PercentSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds an `id` attribute the the slice element and returns its id.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic uidAttr(): string {\r\n\t\treturn this.slice.uidAttr();\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param toValue   Target value for animation\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\r\n\t\treturn super.hide(duration, delay, 0, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tif (!noChangeValues) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setWorkingValue(\"value\", 0, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t}\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Category.\r\n\t *\r\n\t * @param value  Category\r\n\t */\r\n\tpublic set category(value: string) {\r\n\t\tthis.setProperty(\"category\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Category\r\n\t */\r\n\tpublic get category(): string {\r\n\t\treturn this.properties.category;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a marker used in the legend for this slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Marker container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tthis.component.createLegendMarker(marker, this);\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * A Tick element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return Tick element\r\n\t */\r\n\tpublic get tick(): this[\"_tick\"] {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet tick = this.component.ticks.create();\r\n\t\t\tthis._tick = tick;\r\n\t\t\tthis.addSprite(tick);\r\n\t\t\tthis._disposers.push(tick);\r\n\t\t\ttick.parent = this.component.ticksContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.ticks.removeValue(tick);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\r\n\t\t\ttick.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * A Label element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): this[\"_label\"] {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._label = label;\r\n\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.component.labelsContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tlabel.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return Slice element\r\n\t */\r\n\tpublic get slice(): this[\"_slice\"] {\r\n\t\tif (!this._slice) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet slice = component.slices.create();\r\n\t\t\tthis.addSprite(slice);\r\n\r\n\t\t\tthis._slice = slice;\r\n\t\t\tthis._disposers.push(slice);\r\n\t\t\tslice.parent = component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tcomponent.slices.removeValue(slice);\r\n\t\t\t}));\r\n\r\n\r\n\t\t\tslice.visible = this.visible;\r\n\r\n\t\t\t// Apply accessibility\r\n\t\t\tif (component.itemsFocusable()) {\r\n\t\t\t\tif (!$type.hasValue(this.component.role)) {\r\n\t\t\t\t\tthis.component.role = \"menu\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.hasValue(slice.role)) {\r\n\t\t\t\t\tslice.role = \"menuitem\";\r\n\t\t\t\t}\r\n\t\t\t\tslice.focusable = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!$type.hasValue(this.component.role)) {\r\n\t\t\t\t\tthis.component.role = \"list\";\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.hasValue(slice.role)) {\r\n\t\t\t\t\tslice.role = \"listitem\";\r\n\t\t\t\t}\r\n\t\t\t\tslice.focusable = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply screen reader label\r\n\t\t\tif (slice.focusable) {\r\n\t\t\t\tslice.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tslice.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t\tif (slice.hoverable) {\r\n\t\t\t\tslice.events.on(\"over\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tslice.events.on(\"out\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._slice;\r\n\t}\r\n\r\n\t/**\r\n\t * Should dataItem (slice) be hidden in legend?\r\n\t *\r\n\t * @param value Visible in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tthis.setProperty(\"hiddenInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Disabled in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.properties.hiddenInLegend;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category.\r\n\t */\r\n\tcategory?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be\r\n\t * hidden in legend.\r\n\t */\r\n\thiddenInLegend?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesProperties extends ISeriesProperties {\r\n\t/**\r\n\t * A color set to be used for slices.\r\n\t *\r\n\t * For each new subsequent slice, the chart will assign the next color in\r\n\t * this set.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Pattern set to apply to fills.\r\n\t * \r\n\t * @since 4.7.5\r\n\t */\r\n\tpatterns?: PatternSet;\r\n\r\n\t/**\r\n\t * Align labels into nice vertical columns?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\talignLabels?: boolean;\r\n\r\n\t/**\r\n\t * If set to `true` the chart will not show slices with zero values.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.7.9\r\n\t */\r\n\tignoreZeroValues?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesEvents extends ISeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PercentSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPercentSeriesAdapters extends ISeriesAdapters, IPercentSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\r\nexport class PercentSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines type of the slice elements for the series.\r\n\t */\r\n\tpublic _slice: Sprite;\r\n\r\n\t/**\r\n\t * Defines type of the tick elements for the series.\r\n\t */\r\n\tpublic _tick: Tick;\r\n\r\n\t/**\r\n\t * Defines type of the label elements for the series.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: PercentChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPercentSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPercentSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPercentSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPercentSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PercentSeriesDataItem;\r\n\r\n\t/**\r\n\t * Container slice elements are put in.\r\n\t */\r\n\tpublic slicesContainer: Container;\r\n\r\n\t/**\r\n\t * Container tick elements are put in.\r\n\t */\r\n\tpublic ticksContainer: Container;\r\n\r\n\t/**\r\n\t * Container label elements are put in.\r\n\t */\r\n\tpublic labelsContainer: Container;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t */\r\n\tprotected _slices: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * List of tick elements.\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tick\"]>;\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_label\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PercentSeries\";\r\n\r\n\t\tthis._addAllDataItems = false;\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.colors.step = 1;\r\n\t\tthis.isMeasured = true;\r\n\t\tthis.calculatePercent = true;\r\n\r\n\t\tlet slicesContainer = this.createChild(Container);\r\n\t\tslicesContainer.shouldClone = false;\r\n\t\tslicesContainer.isMeasured = false;\r\n\t\tthis.slicesContainer = slicesContainer;\r\n\r\n\t\tlet ticksContainer = this.createChild(Container);\r\n\t\tticksContainer.shouldClone = false;\r\n\t\tticksContainer.isMeasured = false;\r\n\t\tticksContainer.layout = \"none\";\r\n\t\tthis.ticksContainer = ticksContainer;\r\n\r\n\t\tlet labelsContainer = this.createChild(Container);\r\n\t\tlabelsContainer.shouldClone = false;\r\n\t\tlabelsContainer.isMeasured = false;\r\n\t\tlabelsContainer.layout = \"none\";\r\n\t\tthis.labelsContainer = labelsContainer;\r\n\r\n\t\tthis.alignLabels = false;\r\n\r\n\t\tthis.bulletsContainer.toFront();\r\n\r\n\t\t// Make all slices focusable\r\n\t\tthis.skipFocusThreshold = 50;\r\n\r\n\t\tlet defaultState = this.defaultState;\r\n\t\tdefaultState.transitionEasing = $ease.sinOut;\r\n\r\n\t\t// Accessibility\r\n\t\tthis.itemReaderText = \"{category}: {value.percent.formatNumber('#.#')}%\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a slice element.\r\n\t *\r\n\t * @return Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new Sprite();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a tick element.\r\n\t *\r\n\t * @return Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new Tick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sreates label element.\r\n\t *\r\n\t * @return label\r\n\t */\r\n\tprotected createLabel(): this[\"_label\"] {\r\n\t\treturn new Label();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of slice elements for the series.\r\n\t *\r\n\t * Use its `template` to configure look and behavior of the slices. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.slices.template.stroke = am4core.color(\"#fff\");\r\n\t * series.slices.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.slices.template.stroke = am4core.color(\"#fff\");\r\n\t * series.slices.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"slices\": {\r\n\t *       \"stroke\": \"#fff\",\r\n\t *       \"strokeWidth\": 2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n\t * @return Slices\r\n\t */\r\n\tpublic get slices(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._slices) {\r\n\t\t\tlet slice = this.createSlice();\r\n\r\n\t\t\tslice.applyOnClones = true;\r\n\t\t\tthis._disposers.push(slice);\r\n\t\t\tthis.initSlice(slice);\r\n\r\n\t\t\tthis._slices = new ListTemplate(slice);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._slices));\r\n\t\t}\r\n\t\treturn this._slices;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of tick elements for the series. Ticks connect slice to its label.\r\n\t *\r\n\t * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.ticks.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.ticks.template.strokeWidth = 2;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"ticks\": {\r\n\t *       \"strokeWidth\": 2\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n\t * @return Ticks\r\n\t */\r\n\tpublic get ticks(): ListTemplate<this[\"_tick\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\tthis._disposers.push(tick);\r\n\t\t\tthis.initTick(tick);\r\n\r\n\t\t\tthis._ticks = new ListTemplate(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of slice label elements for the series.\r\n\t *\r\n\t * Use its `template` to configure look and behavior of the labels. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.labels.template.fill = am4core.color(\"#c00\");\r\n\t * series.labels.template.fontSize = 20;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.labels.template.fill = am4core.color(\"#c00\");\r\n\t * series.labels.template.fontSize = 20;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"labels\": {\r\n\t *       \"stroke\": \"#c00\",\r\n\t *       \"fontSize\": 20\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n\t * @return Labels\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_label\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tthis.initLabel(label);\r\n\r\n\t\t\tthis._labels = new ListTemplate(label);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PercentSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new slice element.\r\n\t *\r\n\t * @param sliceType  Type of the slice element\r\n\t * @return Slice\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\r\n\t}\r\n\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tlabel.text = \"{category}: {value.percent.formatNumber('#.0')}%\";\r\n\t\tlabel.isMeasured = false;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\tprotected initTick(label: this[\"_tick\"]) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\t\tthis.colors.reset();\r\n\t\tif (this.patterns) {\r\n\t\t\tthis.patterns.reset();\r\n\t\t}\r\n\t\tsuper.validateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t\tlet slice = dataItem.slice;\r\n\r\n\t\tif (slice) {\r\n\t\t\tif (slice.fill == undefined) {\r\n\t\t\t\tif (this.patterns) {\r\n\t\t\t\t\tif (!$type.hasValue(slice.stroke)) {\r\n\t\t\t\t\t\tslice.stroke = this.colors.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tslice.fill = this.patterns.next();\r\n\t\t\t\t\tif ($type.hasValue(slice.fillOpacity)) {\r\n\t\t\t\t\t\tslice.fill.backgroundOpacity = slice.fillOpacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (slice.stroke instanceof Color) {\r\n\t\t\t\t\t\tslice.fill.stroke = slice.stroke;\r\n\t\t\t\t\t\tslice.fill.fill = slice.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslice.fill = this.colors.next();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.colors.currentStep += this.colors.step;\r\n\t\t\t}\r\n\r\n\t\t\tif (slice.stroke == undefined) {\r\n\t\t\t\tslice.stroke = slice.fill;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (slice) {\r\n\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\tif (bullet.fill == undefined) {\r\n\t\t\t\t\tbullet.fill = slice.fill;\r\n\t\t\t\t}\r\n\t\t\t\tif (bullet.stroke == undefined) {\r\n\t\t\t\t\tbullet.stroke = slice.stroke;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.updateLegendValue(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Arranges slice labels according to position settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItems  Data items\r\n\t */\r\n\tprotected arrangeLabels(dataItems: this[\"_dataItem\"][]): void {\r\n\t\tfor (let i = 0, len = dataItems.length; i < len; i++) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = dataItems[i];\r\n\r\n\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\tif (label) {\r\n\r\n\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\tlabel.validate();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet lh = label.measuredHeight;\r\n\t\t\t\tif (!label.visible) {\r\n\t\t\t\t\tlh = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (label.pixelY - lh / 2 < -this.maxHeight / 2) {\r\n\t\t\t\t\tlabel.y = -this.maxHeight / 2 + lh / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet nextLabel = this.getNextLabel(i + 1, dataItems);\r\n\r\n\t\t\t\tlet bottom: number = label.pixelY + lh;\r\n\r\n\t\t\t\tif (nextLabel) {\r\n\t\t\t\t\tif (nextLabel.y < bottom) {\r\n\t\t\t\t\t\tnextLabel.y = bottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected arrangeLabels2(dataItems: this[\"_dataItem\"][]): void {\r\n\r\n\t\tlet previousTop = this.maxHeight / 2;\r\n\r\n\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = dataItems[i];\r\n\r\n\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\tif (label) {\r\n\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\tlabel.validate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet lh = label.measuredHeight;\r\n\t\t\t\tif (!label.visible) {\r\n\t\t\t\t\tlh = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i == dataItems.length - 1) {\r\n\t\t\t\t\tpreviousTop += lh / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (label.pixelY + lh > previousTop) {\r\n\t\t\t\t\tlabel.y = previousTop - lh;\r\n\t\t\t\t\tpreviousTop = label.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next label according to `index`.\r\n\t *\r\n\t * @param index      Current index\r\n\t * @param dataItems  Data items\r\n\t * @return Label element\r\n\t */\r\n\tprotected getNextLabel(index: number, dataItems: this[\"_dataItem\"][]): this[\"_label\"] {\r\n\t\tif (dataItems.length >= index) {\r\n\t\t\tlet nextDataItem: this[\"_dataItem\"] = dataItems[index];\r\n\t\t\tif (nextDataItem) {\r\n\t\t\t\tif (nextDataItem.label) {\r\n\t\t\t\t\tif (nextDataItem.visible) {\r\n\t\t\t\t\t\treturn nextDataItem.label;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn this.getNextLabel(index + 1, dataItems);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn this.getNextLabel(index + 1, dataItems);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for slices.\r\n\t *\r\n\t * For each new subsequent slice, the chart will assign the next color in\r\n\t * this set.\r\n\t *\r\n\t * @param value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * A [[PatternSet]] to use when creating patterned fills for slices.\r\n\t *\r\n\t * @since 4.7.5\r\n\t * @param value  Pattern set\r\n\t */\r\n\tpublic set patterns(value: PatternSet) {\r\n\t\tthis.setPropertyValue(\"patterns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern set\r\n\t */\r\n\tpublic get patterns(): PatternSet {\r\n\t\treturn this.getPropertyValue(\"patterns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker    Container\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic createLegendMarker(marker: Container, dataItem?: this[\"_dataItem\"]): void {\r\n\t\t$iter.each(marker.children.iterator(), (child) => {\r\n\t\t\tlet slice: this[\"_slice\"] = dataItem.slice;\r\n\r\n\t\t\tchild.defaultState.properties.fill = slice.fill;\r\n\t\t\tchild.defaultState.properties.stroke = slice.stroke;\r\n\t\t\tchild.defaultState.properties.fillOpacity = slice.fillOpacity;\r\n\t\t\tchild.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n\r\n\t\t\tchild.fill = slice.fill;\r\n\t\t\tchild.stroke = slice.stroke;\r\n\t\t\tchild.fillOpacity = slice.fillOpacity;\r\n\t\t\tchild.strokeOpacity = slice.strokeOpacity;\r\n\r\n\t\t\tif (child.fill == undefined) {\r\n\t\t\t\tchild.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\t\tlegendDataItem.color = slice.fill;\r\n\t\t\tlegendDataItem.colorOrig = slice.fill;\r\n\r\n\t\t\tchild.addDisposer(slice.events.on(\"propertychanged\", (ev) => {\r\n\t\t\t\tif (ev.property == \"fill\") {\r\n\r\n\t\t\t\t\tchild.__disabled = false;\r\n\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.fill = slice.fill;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.fill = slice.fill;\r\n\t\t\t\t\tlegendDataItem.color = slice.fill;\r\n\t\t\t\t\tlegendDataItem.colorOrig = slice.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ev.property == \"stroke\") {\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.stroke = slice.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.stroke = slice.stroke;\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions bullets when slice's size changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSliceScale(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tlet slice: this[\"_slice\"] = event.target;\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>slice.dataItem;\r\n\t\tif(dataItem && dataItem.bullets){\r\n\t\t\t$iter.each(dataItem.bullets.iterator(), (a) => {\r\n\t\t\t\tlet value = a[1];\r\n\t\t\t\tthis.positionBullet(value);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions bullet and labels when slice moves.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSliceMove(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[PercentSeries]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.slices.template.copyFrom(source.slices.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t\tthis.colors = source.colors.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Align labels into nice vertical columns?\r\n\t *\r\n\t * This will ensure that labels never overlap with each other.\r\n\t *\r\n\t * Arranging labels into columns makes them more readble, and better user\r\n\t * experience.\r\n\t *\r\n\t * If set to `false` labels will be positioned at `label.radius` distance,\r\n\t * and may, in some cases, overlap.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Align labels?\r\n\t */\r\n\tpublic set alignLabels(value: boolean) {\r\n\t\tthis.setAlignLabels(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Align labels?\r\n\t */\r\n\tpublic get alignLabels(): boolean {\r\n\t\treturn this.getPropertyValue(\"alignLabels\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setAlignLabels(value: boolean) {\r\n\t\tthis.setPropertyValue(\"alignLabels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the chart will not show slices with zero values.\r\n\t * \r\n\t * @default false\r\n\t * @since 4.7.9\r\n\t * @param  value  Ignore zero values\r\n\t */\r\n\tpublic set ignoreZeroValues(value: boolean) {\r\n\t\tthis.setPropertyValue(\"ignoreZeroValues\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore zero values\r\n\t */\r\n\tpublic get ignoreZeroValues(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreZeroValues\");\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"]) {\r\n\t\tif (dataItem) {\r\n\t\t\tlet legendDataItem = dataItem.legendDataItem;\r\n\t\t\tlet legendSettings = dataItem.legendSettings;\r\n\r\n\t\t\tif (legendDataItem && legendSettings) {\r\n\r\n\t\t\t\tif (legendSettings) {\r\n\t\t\t\t\tif (legendSettings.labelText) {\r\n\t\t\t\t\t\tlegendDataItem.label.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlegendDataItem.label.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (legendSettings.valueText) {\r\n\t\t\t\t\t\tlegendDataItem.valueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tlegendDataItem.valueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\r\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Disable labels and ticks.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.maybeXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof PercentSeries) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\r\n\t\t\tlet labelState = target.labels.template.states.create(stateId);\r\n\t\t\tlabelState.properties.disabled = true;\r\n\r\n\t\t\tlet tickState = target.ticks.template.states.create(stateId);\r\n\t\t\ttickState.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Percent chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { PercentSeries, PercentSeriesDataItem } from \"../series/PercentSeries\";\r\nimport { Legend } from \"../Legend\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PercentChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PercentChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PercentChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PercentChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PercentChart]].\r\n */\r\nexport interface IPercentChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PercentChart]]\r\n */\r\nexport interface IPercentChartProperties extends ISerialChartProperties { }\r\n\r\n/**\r\n * Defines events for [[PercentChart]].\r\n */\r\nexport interface IPercentChartEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PercentChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPercentChartAdapters extends ISerialChartAdapters, IPercentChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for \"percent-based\" chart types like Pie and Funnel.\r\n *\r\n * @see {@link IPercentChartEvents} for a list of available Events\r\n * @see {@link IPercentChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for Pie chart documentation\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for Sliced chart documentation\r\n */\r\nexport class PercentChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IPercentChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPercentChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPercentChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPercentChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: PercentSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PercentChart\";\r\n\r\n\t\tthis.align = \"none\";\r\n\t\tthis.valign = \"none\";\r\n\r\n\t\t// so that the chart is always drawn, even the legend wants all the space\r\n\t\tthis.chartContainer.minHeight = 50;\r\n\t\tthis.chartContainer.minWidth = 50;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\t\tthis.feedLegend();\r\n\t}\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\t\t\t\t\t$iter.each(series.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\tif (!dataItem.hiddenInLegend) {\r\n\t\t\t\t\t\t\tlegendData.push(<PercentSeriesDataItem>dataItem);\r\n\t\t\t\t\t\t\tif(!dataItem.legendSettings){\r\n\t\t\t\t\t\t\t\tdataItem.legendSettings = series.legendSettings;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"category\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new [[PercentSeries]].\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new PercentSeries();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tsuper.setLegend(legend);\r\n\t\tif (legend) {\r\n\t\t\tlegend.labels.template.text = \"{category}\";\r\n\t\t\tlegend.valueLabels.template.text = \"{value.percent.formatNumber('#.0')}%\";\r\n\r\n\t\t\tlegend.itemContainers.template.events.on(\"over\", (event) => {\r\n\t\t\t\tlet percentSeriesDataItem: PercentSeriesDataItem = <PercentSeriesDataItem>event.target.dataItem.dataContext;\r\n\t\t\t\tif (percentSeriesDataItem.visible && !percentSeriesDataItem.isHiding) {\r\n\t\t\t\t\tlet slice = percentSeriesDataItem.slice;\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tslice.dispatchImmediately(\"over\");\t\t\t\t\t\r\n\t\t\t\t\tslice.isHover = true;\t\t\t\t\r\n\t\t\t\t\tslice.interactions.isRealHover = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlegend.itemContainers.template.events.on(\"out\", (event) => {\r\n\t\t\t\tlet percentSeriesDataItem: PercentSeriesDataItem = <PercentSeriesDataItem>event.target.dataItem.dataContext;\r\n\t\t\t\tlet slice = percentSeriesDataItem.slice;\r\n\t\t\t\tslice.dispatchImmediately(\"out\");\r\n\t\t\t\tslice.isHover = false;\t\t\t\t\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @hidden\r\n */\r\nregistry.registeredClasses[\"PercentChart\"] = PercentChart;\r\nregistry.registeredClasses[\"PercentChartDataItem\"] = PercentChartDataItem;\r\n","/**\r\n * Pie tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { PieSeries } from \"../series/PieSeries\"\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PieTick]].\r\n */\r\nexport interface IPieTickProperties extends ITickProperties { }\r\n\r\n/**\r\n * Defines events for [[PieTick]].\r\n */\r\nexport interface IPieTickEvents extends ITickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieTickAdapters extends ITickAdapters, IPieTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an tick line for a pie slice connecting it to a related label.\r\n *\r\n * @see {@link IPieTickEvents} for a list of available events\r\n * @see {@link IPieTickAdapters} for a list of available Adapters\r\n */\r\nexport class PieTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieTickEvents;\r\n\r\n\t/**\r\n\t * A label element this tick is attached to.\r\n\t */\r\n\tprotected _label = new MutableValueDisposer<AxisLabelCircular>();\r\n\r\n\t/**\r\n\t * A slice element this tick is attached to.\r\n\t */\r\n\tprotected _slice = new MutableValueDisposer<Slice>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieTick\";\r\n\t\tthis.element = this.paper.add(\"polyline\");\r\n\t\tthis._disposers.push(this._label);\r\n\t\tthis._disposers.push(this._slice);\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet slice: Slice = this.slice;\r\n\t\tlet label = this.label;\r\n\r\n\t\tlet series = <PieSeries>slice.dataItem.component;\r\n\r\n\t\tif (slice && slice.radius > 0 && label && label.text) {\r\n\t\t\tlet x0 = slice.dx + slice.slice.dx + slice.pixelX + slice.ix * slice.radius * slice.scale;\r\n\t\t\tlet y0 = slice.dy + slice.slice.dy + slice.pixelY + slice.iy * slice.radiusY * slice.scale;\r\n\r\n\t\t\tlet x1: number;\r\n\t\t\tlet y1: number;\r\n\r\n\t\t\tlet x2: number;\r\n\t\t\tlet y2: number;\r\n\r\n\t\t\tif (series.alignLabels) {\r\n\t\t\t\tx1 = label.pixelX - this.length;\r\n\t\t\t\ty1 = label.pixelY;\r\n\r\n\t\t\t\tx2 = label.pixelX;\r\n\t\t\t\ty2 = y1;\r\n\r\n\t\t\t\tif (label.horizontalCenter == \"right\") {\r\n\t\t\t\t\tx1 += 2 * this.length;\r\n\t\t\t\t\tx2 = x1 - this.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst r = label.pixelRadius(slice.radius);\r\n\r\n\t\t\t\tx1 = x0 + r * slice.ix;\r\n\t\t\t\ty1 = y0 + r * slice.iy;\r\n\r\n\t\t\t\tx2 = x1;\r\n\t\t\t\ty2 = y1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.attr({ \"points\": [x0, y0, x1, y1, x2, y2] });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Slice element tick is attached to.\r\n\t *\r\n\t * @param slice  Slice\r\n\t */\r\n\tpublic set slice(slice: Slice) {\r\n\t\tthis._slice.set(slice, new MultiDisposer([\r\n\t\t\tslice.events.on(\"transformed\", this.invalidate, this),\r\n\t\t\tslice.events.on(\"validated\", this.invalidate, this)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Slice\r\n\t */\r\n\tpublic get slice(): Slice {\r\n\t\treturn this._slice.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Label element tick is attached to.\r\n\t *\r\n\t * @param label  Label\r\n\t */\r\n\tpublic set label(label: AxisLabelCircular) {\r\n\t\tthis._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): AxisLabelCircular {\r\n\t\treturn this._label.get();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieTick\"] = PieTick;\r\n","/**\r\n * Defines Pie Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPercentSeriesAdapters, IPercentSeriesDataFields, IPercentSeriesEvents, IPercentSeriesProperties, PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\n//import { Slice3D } from \"../../core/elements/3D/Slice3D\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { PieTick } from \"../elements/PieTick\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { PieChart } from \"../types/PieChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieSeriesDataItem extends PercentSeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: Slice;\r\n\r\n\t/**\r\n\t * A reference to a slice label element.\r\n\t */\r\n\tpublic _label: AxisLabelCircular;\r\n\r\n\t/**\r\n\t * A reference to a slice tick element.\r\n\t */\r\n\tpublic _tick: PieTick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieSeriesDataItem\";\r\n\r\n\t\tthis.values.radiusValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Slice's radius, if other than default.\r\n\t *\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set radiusValue(value: number) {\r\n\t\tthis.setValue(\"radiusValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get radiusValue(): number {\r\n\t\treturn this.values.radiusValue.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param toValue   Target value for animation\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\treturn super.hide(duration, delay, 0, [\"value\", \"radiusValue\"]);\r\n\t}\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\treturn super.show(duration, delay, [\"value\", \"radiusValue\"]);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieSeries]].\r\n */\r\nexport interface IPieSeriesDataFields extends IPercentSeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds item's radius value.\r\n\t */\r\n\tradiusValue?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[PieSeries]].\r\n */\r\nexport interface IPieSeriesProperties extends IPercentSeriesProperties {\r\n\r\n\t/**\r\n\t * Outer radius for the series' slices in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius for the series' slices in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Start angle for the series' slices in degrees. (0-360)\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * End angle for the series' slices in degrees. (0-360)\r\n\t */\r\n\tendAngle?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[PieSeries]].\r\n */\r\nexport interface IPieSeriesEvents extends IPercentSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieSeriesAdapters extends IPercentSeriesAdapters, IPieSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n\r\n\tpublic _slice: Slice;\r\n\r\n\tpublic _tick: PieTick;\r\n\r\n\tpublic _label: AxisLabelCircular;\r\n\r\n\tpublic _chart: PieChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPieSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PieSeriesDataItem;\r\n\r\n\t/**\r\n\t * Holds current angle for the next slice to start on.\r\n\t */\r\n\tprotected _currentStartAngle: number;\r\n\r\n\t/**\r\n\t * Data items that fall to the left side of the pie.\r\n\t */\r\n\tprotected _leftItems: this[\"_dataItem\"][];\r\n\r\n\t/**\r\n\t * Data items that fall to the right side of the pie.\r\n\t */\r\n\tprotected _rightItems: this[\"_dataItem\"][];\r\n\r\n\t/**\r\n\t * [_arcRect description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _arcRect: IRectangle;\r\n\r\n\t/**\r\n\t * [_maxRadiusPercent description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _maxRadiusPercent: number;\r\n\r\n\t/**\r\n\t * [_pixelRadius description]\r\n\t *\r\n\t * @ignore this is set by pie chart, not by user\r\n\t */\r\n\tprotected _pixelRadius: number;\r\n\r\n\t/**\r\n\t * [_pixelInnerRadius description]\r\n\t *\r\n\t * @ignore this is set by pie chart, not by user\r\n\t */\r\n\tprotected _pixelInnerRadius: number;\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _startAngleInternal: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _endAngleInternal: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PieSeries\";\r\n\r\n\t\tthis.alignLabels = true;\r\n\t\t//this.startAngle = -90;\r\n\t\t//this.endAngle = 270;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.labels.template.radius = percent(5);\r\n\r\n\t\tthis.addDisposer(this.labels.template.events.on(\"enabled\", this.invalidate, this, false));\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * creates slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new Slice();\r\n\t}\r\n\r\n\t/**\r\n\t * creates tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new PieTick();\r\n\t}\r\n\r\n\t/**\r\n\t * creates label\r\n\t */\r\n\tprotected createLabel(): this[\"_label\"] {\r\n\t\treturn new AxisLabelCircular();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pie Slice Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PieSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits slice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tslice.isMeasured = false;\r\n\t\tslice.defaultState.properties.scale = 1;\r\n\t\tslice.observe(\"scale\", this.handleSliceScale, this);\r\n\t\tslice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\r\n\t\tslice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n\r\n\t\tlet hoverState = slice.states.create(\"hover\");\r\n\t\thoverState.properties.scale = 1.05;\r\n\r\n\t\tlet defaultState = slice.defaultState;\r\n\t\tdefaultState.properties.shiftRadius = 0;\r\n\r\n\t\tslice.togglable = true;\r\n\r\n\t\tslice.events.on(\"toggled\", (event) => {\r\n\t\t\tevent.target.hideTooltip();\r\n\r\n\t\t\t// The following takes care of removing hover on subsequent click of\r\n\t\t\t// a slice\r\n\t\t\tif (event.target.interactions.lastHitPointer\r\n\t\t\t\t&& event.target.interactions.lastHitPointer.touch\r\n\t\t\t\t&& !event.target.isActive) {\r\n\t\t\t\tevent.target.isHover = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet activeState = slice.states.create(\"active\");\r\n\t\tactiveState.properties.shiftRadius = 0.10;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis._leftItems = [];\r\n\t\tthis._rightItems = [];\r\n\r\n\t\tthis._currentStartAngle = this.startAngle;\r\n\t\tthis._arcRect = $math.getArcRect(this.startAngle, this.endAngle);\r\n\r\n\t\tthis._maxRadiusPercent = 0;\r\n\t\tfor (let i = this.startIndex; i < this.endIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet radiusValuePercent = dataItem.values.radiusValue.percent;\r\n\t\t\tif (radiusValuePercent > this._maxRadiusPercent) {\r\n\t\t\t\tthis._maxRadiusPercent = radiusValuePercent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tif (this.startAngle > this.endAngle) {\r\n\t\t\t\tthis._rightItems.reverse();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._leftItems.reverse()\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._rightItems.sort((a, b) => {\r\n\t\t\t\tlet aAngle = (a.slice.middleAngle + 360) % 360;\r\n\t\t\t\tlet bAngle = (b.slice.middleAngle + 360) % 360;\r\n\r\n\t\t\t\tif (aAngle > 270) {\r\n\t\t\t\t\taAngle -= 360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (bAngle > 270) {\r\n\t\t\t\t\tbAngle -= 360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (aAngle < bAngle) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (aAngle > bAngle) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis._leftItems.sort((a, b) => {\r\n\r\n\t\t\t\tlet aAngle = (a.slice.middleAngle + 360) % 360;\r\n\t\t\t\tlet bAngle = (b.slice.middleAngle + 360) % 360;\r\n\r\n\t\t\t\tif (aAngle < bAngle) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (aAngle > bAngle) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.arrangeLabels(this._rightItems);\r\n\t\t\tthis.arrangeLabels2(this._rightItems);\r\n\t\t\tthis.arrangeLabels(this._leftItems);\r\n\t\t\tthis.arrangeLabels2(this._leftItems);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tif (this.pixelRadius > 0) {\r\n\r\n\t\t\tif (this.ignoreZeroValues && (dataItem.value == 0 || dataItem.value == null)) {\r\n\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t}\r\n\r\n\t\t\t// SLICE\r\n\t\t\tlet slice: Slice = dataItem.slice;\r\n\t\t\tslice.radius = this.pixelRadius;\r\n\r\n\t\t\tif ($type.isNumber(dataItem.radiusValue)) {\r\n\t\t\t\tslice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\r\n\t\t\t}\r\n\t\t\tif (!(slice.innerRadius instanceof Percent)) {\r\n\t\t\t\tslice.innerRadius = this.pixelInnerRadius;\r\n\t\t\t}\r\n\t\t\tslice.startAngle = this._currentStartAngle;\r\n\r\n\t\t\tslice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;\r\n\r\n\t\t\t// LABEL\r\n\t\t\tif (!this.labels.template.disabled) {\r\n\t\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\t\tlet tick = dataItem.tick;\r\n\t\t\t\ttick.slice = slice;\r\n\t\t\t\ttick.label = label;\r\n\r\n\t\t\t\tlet normalizedMiddleAngle: number = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\r\n\r\n\t\t\t\tlet point: IPoint;\r\n\r\n\t\t\t\tif (this.alignLabels) {\r\n\t\t\t\t\tlet labelRadius = label.pixelRadius(slice.radius);\r\n\t\t\t\t\tlet x: number = tick.length + labelRadius;\r\n\t\t\t\t\tlabel.dx = 0;\r\n\t\t\t\t\tlabel.dy = 0;\r\n\t\t\t\t\tlabel.verticalCenter = \"middle\";\r\n\t\t\t\t\tlet arcRect = this._arcRect;\r\n\t\t\t\t\t// right half\r\n\t\t\t\t\tif (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\r\n\t\t\t\t\t\tx += (arcRect.width + arcRect.x) * this.pixelRadius;\r\n\t\t\t\t\t\tlabel.horizontalCenter = \"left\";\r\n\t\t\t\t\t\tthis._rightItems.push(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// left half\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tx -= arcRect.x * this.pixelRadius;\r\n\t\t\t\t\t\tlabel.horizontalCenter = \"right\";\r\n\t\t\t\t\t\tthis._leftItems.push(dataItem);\r\n\t\t\t\t\t\tx *= -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet distance = slice.radius + tick.length + labelRadius;\r\n\t\t\t\t\tpoint = { x: x, y: slice.iy * distance };\r\n\t\t\t\t\tlabel.moveTo(point);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet depth = (<any>slice)[\"depth\"];\r\n\t\t\t\t\tif (!$type.isNumber(depth)) {\r\n\t\t\t\t\t\tdepth = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentStartAngle += slice.arc;\r\n\r\n\t\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\t\tsuper.validateDataElement(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius for the series' slices in pixels or [[Percent]].\r\n\t *\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t * @ignore\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn this._pixelRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set pixelRadius(value: number) {\r\n\t\tif (this._pixelRadius != value) {\r\n\t\t\tthis._pixelRadius = value;\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pixel inner radius\r\n\t * @ignore\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn this._pixelInnerRadius;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set pixelInnerRadius(value: number) {\r\n\t\tif (this._pixelInnerRadius != value) {\r\n\t\t\tthis._pixelInnerRadius = value;\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius for the series' slices in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Redo so that users can set it\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Start angle for the series' slices in degrees. (0-360)\r\n\t *\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\tlet startAngle = this.getPropertyValue(\"startAngle\");\r\n\t\tif ($type.isNumber(startAngle)) {\r\n\t\t\treturn startAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._startAngleInternal;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * End angle for the series' slices in degrees. (0-360)\r\n\t *\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\tlet endAngle = this.getPropertyValue(\"endAngle\");\r\n\t\tif ($type.isNumber(endAngle)) {\r\n\t\t\treturn endAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._endAngleInternal;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice: Slice = dataItem.slice;\r\n\r\n\t\tlet locationX = bullet.locationX;\r\n\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\tlocationX = 0.5;\r\n\t\t}\r\n\t\tlet locationY = bullet.locationY;\r\n\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\tlocationY = 1;\r\n\t\t}\r\n\r\n\t\tlet angle = slice.startAngle + slice.arc * locationX;\r\n\r\n\t\tbullet.x = locationY * slice.radius * $math.cos(angle);\r\n\t\tbullet.y = locationY * slice.radiusY * $math.sin(angle);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Repositions bullet and labels when slice moves.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSliceMove(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tif (!this.alignLabels) {\r\n\r\n\t\t\tlet slice = event.target;\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>slice.dataItem;\r\n\t\t\t// moving textelement, as label dx and dy are already employed for aligning\r\n\t\t\t//@labeltodo\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet label = dataItem.label;\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tlabel.dx = label.fdx + slice.dx + slice.pixelX;\r\n\t\t\t\t\tlabel.dy = label.fdy + slice.dy + slice.pixelY;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\treturn $math.getArcRect(chart.startAngle, chart.endAngle, this.pixelRadius);\r\n\t\t}\r\n\r\n\t\treturn $math.getArcRect(this.startAngle, this.endAngle, this.pixelRadius);\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries\"] = PieSeries;\r\nregistry.registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;\r\n","/**\r\n * Pie chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, IPercentChartProperties, IPercentChartDataFields, IPercentChartAdapters, IPercentChartEvents, PercentChartDataItem } from \"./PercentChart\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { PieSeries } from \"../series/PieSeries\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieChartDataItem extends PercentChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieChart]].\r\n */\r\nexport interface IPieChartDataFields extends IPercentChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PieChart]]\r\n */\r\nexport interface IPieChartProperties extends IPercentChartProperties {\r\n\r\n\t/**\r\n\t * Outer radius of the pie.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Relative inner radius (0-1).\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * An angle pie starts on. (degrees)\r\n\t *\r\n\t * @default -90\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * An angle pie ends on. (degrees)\r\n\t *\r\n\t * @default 270\r\n\t */\r\n\tendAngle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PieChart]].\r\n */\r\nexport interface IPieChartEvents extends IPercentChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieChartAdapters extends IPercentChartAdapters, IPieChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Pie chart.\r\n *\r\n * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.PieSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"PieSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChartEvents} for a list of available Events\r\n * @see {@link IPieChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IPieChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: PieSeries;\r\n\r\n\tprotected _chartPixelRadius:number;\r\n\r\n\tprotected _chartPixelInnerRadius:number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChart\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.innerRadius = 0;\r\n\t\tthis.radius = percent(80);\r\n\t\tthis.align = \"none\";\r\n\t\tthis.valign = \"none\";\r\n\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tseriesContainer.isMeasured = true;\r\n\t\tseriesContainer.valign = \"middle\";\r\n\t\tseriesContainer.align = \"center\";\r\n\t\tseriesContainer.layout = \"absolute\";\r\n\t\tseriesContainer.width = undefined;\r\n\t\tseriesContainer.height = undefined;\r\n\r\n\t\t// so that the pie is always drawn, even the legend wants all the space\r\n\t\tthis.chartContainer.minHeight = 50;\r\n\t\tthis.chartContainer.minWidth = 50;\r\n\r\n\t\tthis.chartContainer.events.on(\"maxsizechanged\", this.updateRadius, this, false); // need this for the chart to change radius if legend is removed/disabled\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pie chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the chart, causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\t\tsuper.validateLayout();\r\n\t\tthis.updateRadius();\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<PieSeries>[\"inserted\"]): void {\r\n\t\tsuper.handleSeriesAdded(event);\r\n\t\tthis._chartPixelRadius = undefined;\r\n\t\tthis.updateSeriesAngles();\r\n\t}\r\n\r\n\tprotected updateSeriesAngles(){\r\n\t\tthis.series.each((series)=>{\r\n\t\t\tseries._startAngleInternal = this.startAngle;\r\n\t\t\tseries._endAngleInternal = this.endAngle;\r\n\t\t\t//series.defaultState.properties.startAngle = this.startAngle;\r\n\t\t\t//series.defaultState.properties.endAngle = this.endAngle;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates pie's radius, based on a number of criteria.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateRadius(): void {\r\n\r\n\t\tlet chartCont = this.chartContainer;\r\n\r\n\t\tlet rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n\t\tlet innerRect: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t\tlet innerRadius = this.innerRadius;\r\n\r\n\t\tif (innerRadius instanceof Percent) {\r\n\t\t\tinnerRect = $math.getArcRect(this.startAngle, this.endAngle, innerRadius.value);\r\n\t\t}\r\n\t\t// @todo handle this when innerRadius set in pixels (do it for radar also)\r\n\r\n\t\trect = $math.getCommonRectangle([rect, innerRect]);\r\n\r\n\t\tlet maxRadius = Math.min(chartCont.innerWidth / rect.width, chartCont.innerHeight / rect.height);\r\n\r\n\t\tif(!$type.isNumber(maxRadius)){\r\n\t\t\tmaxRadius = 0;\r\n\t\t}\r\n\r\n\t\tlet chartRadius = $utils.relativeRadiusToValue(this.radius, maxRadius);\r\n\r\n\t\tlet chartPixelInnerRadius = $utils.relativeRadiusToValue(this.innerRadius, maxRadius);\r\n\r\n\t\tlet seriesRadius = (chartRadius - chartPixelInnerRadius) / this.series.length;\r\n\r\n\t\tif(chartRadius != this._chartPixelRadius || chartPixelInnerRadius != this._chartPixelInnerRadius){\r\n\t\t\tthis._chartPixelRadius = chartRadius;\r\n\t\t\tthis._chartPixelInnerRadius = chartPixelInnerRadius;\r\n\r\n\t\t\t//@todo: make it possible to set series radius in percent\r\n\t\t\t$iter.each($iter.indexed(this.series.iterator()), (a) => {\r\n\t\t\t\tlet i = a[0];\r\n\t\t\t\tlet series = a[1];\r\n\r\n\t\t\t\tlet radius = chartPixelInnerRadius + $utils.relativeRadiusToValue(series.radius, chartRadius - chartPixelInnerRadius);\r\n\t\t\t\tlet innerRadius = chartPixelInnerRadius + $utils.relativeRadiusToValue(series.innerRadius, chartRadius - chartPixelInnerRadius);\r\n\r\n\t\t\t\tif(!$type.isNumber(radius)){\r\n\t\t\t\t\tradius = chartPixelInnerRadius + seriesRadius * (i + 1);\r\n\t\t\t\t}\r\n\t\t\t\tif(!$type.isNumber(innerRadius)){\r\n\t\t\t\t\tinnerRadius = chartPixelInnerRadius + seriesRadius * i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tseries.pixelRadius = radius;\r\n\t\t\t\tseries.pixelInnerRadius = innerRadius;\r\n\t\t\t});\r\n\r\n\r\n\t\t\tthis.seriesContainer.definedBBox = { x: chartRadius * rect.x, y: chartRadius * rect.y, width: chartRadius * rect.width, height: chartRadius * rect.height };\r\n\t\t\tthis.seriesContainer.invalidateLayout();\r\n\r\n\t\t\tthis.bulletsContainer.x = this.seriesContainer.x;\r\n\t\t\tthis.bulletsContainer.y = this.seriesContainer.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets radius of the pie chart.\r\n\t *\r\n\t * Setting to a number will mean a fixed pixel radius.\r\n\t *\r\n\t * Setting to an instance of [[Percent]] will mean a relative radius to\r\n\t * available space.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.radius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.radius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // Set pie chart to be at 50% of the available space\r\n\t *   \"radius\": \"50%\"\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 80%\r\n\t * @param value  Radius (px or relative)\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tif(this.setPercentProperty(\"radius\", value, true, false, 10, false)){\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px or relative)\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets relative inner radius (to create a donut chart).\r\n\t *\r\n\t * Setting to a number will mean a fixed pixel radius.\r\n\t *\r\n\t * Setting to an instance of [[Percent]] will mean a relative radius to\r\n\t * available space.\r\n\t *\r\n\t * NOTE: it's not related to `radius`.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.innerRadius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Set pie chart to be at 50% of the available space\r\n\t * pieChart.innerRadius = am4core.percent(50);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // Set pie chart to be at 50% of the available space\r\n\t *   \"innerRadius\": \"50%\"\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Relative inner radius (0-1)\r\n\t * @todo Setting things like `innerRadius` modifies `slice.radius` and it then looks like it is not the same value as in default state\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative inner radius (0-1)\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new [[PieSeries]].\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new PieSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Pie circle. (degrees)\r\n\t *\r\n\t * Normally, a pie chart begins (the left side of the first slice is drawn)\r\n\t * at the top center. (at -90 degrees)\r\n\t *\r\n\t * You can use `startAngle` to change this setting.\r\n\t *\r\n\t * E.g. setting this to 0 will make the first slice be drawn to the right.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set to those lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * NOTE: This setting is not supported in a 3D pie chart.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  Start angle (degrees)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tif(this.setPropertyValue(\"startAngle\", value)){\r\n\t\t\tthis.updateRadius();\r\n\t\t\tthis.updateSeriesAngles()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle (degrees)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the Pie circle. (degrees)\r\n\t *\r\n\t * Normally, a pie chart ends (the right side of the last slice is drawn)\r\n\t * at the top center. (at 270 degrees)\r\n\t *\r\n\t * You can use `endAngle` to change this setting.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set to those lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * NOTE: This setting is not supported in a 3D pie chart.\r\n\t *\r\n\t * @default 270\r\n\t * @param value  End angle (degrees)\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tif(this.setPropertyValue(\"endAngle\", value)){\r\n\t\t\tthis.updateRadius();\r\n\t\t\tthis.updateSeriesAngles()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle (degrees)\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart\"] = PieChart;\r\nregistry.registeredClasses[\"PieChartDataItem\"] = PieChartDataItem;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { PieSeries, PieSeriesDataItem, IPieSeriesDataFields, IPieSeriesProperties, IPieSeriesAdapters, IPieSeriesEvents } from \"../series/PieSeries\";\r\nimport { PieChart3D } from \"../types/PieChart3D\";\r\nimport { Slice3D } from \"../../core/elements/3d/Slice3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieSeries3DDataItem extends PieSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines type of the slice represented by this data item.\r\n\t */\r\n\tpublic _slice: Slice3D;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieSeries3D;\r\n\r\n\t/**\r\n\t * @todo Remove?\r\n\t * @deprecated\r\n\t */\r\n\tpublic component: PieSeries3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieSeries3DDataItem\";\r\n\r\n\t\tthis.values.depthValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Slice depth (height).\r\n\t *\r\n\t * @param value  Depth\r\n\t */\r\n\tpublic set depthValue(value: number) {\r\n\t\tthis.setValue(\"depthValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth\r\n\t */\r\n\tpublic get depthValue(): number {\r\n\t\treturn this.values[\"depthValue\"].value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieSeries3D]].\r\n */\r\nexport interface IPieSeries3DDataFields extends IPieSeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds 3D slice depth (height).\r\n\t */\r\n\tdepthValue?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[PieSeries3D]].\r\n */\r\nexport interface IPieSeries3DProperties extends IPieSeriesProperties {\r\n\r\n\t/**\r\n\t * Depth (height) of the pie slice in pixels.\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the view point of the 3D pie.\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PieSeries3D]].\r\n */\r\nexport interface IPieSeries3DEvents extends IPieSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieSeries3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieSeries3DAdapters extends IPieSeriesAdapters, IPieSeries3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a slice series on a 3D pie chart.\r\n *\r\n * @see {@link IPieSeries3DEvents} for a list of available Events\r\n * @see {@link IPieSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class PieSeries3D extends PieSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPieSeries3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieSeries3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieSeries3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieSeries3DEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PieSeries3DDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: PieChart3D;\r\n\r\n\tpublic _slice: Slice3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieSeries3D\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PieSeries3DDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * creates slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new Slice3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: PieSeries3DDataItem): void {\r\n\r\n\t\tlet slice: Slice3D = <Slice3D>dataItem.slice;\r\n\r\n\t\tlet depth: number = this.depth;\r\n\t\tif (!$type.isNumber(depth)) {\r\n\t\t\tdepth = this.chart.depth;\r\n\t\t}\r\n\r\n\t\tlet depthPercent: number = dataItem.values.depthValue.percent;\r\n\t\tif (!$type.isNumber(depthPercent)) {\r\n\t\t\tdepthPercent = 100;\r\n\t\t}\r\n\r\n\t\tslice.depth = depthPercent * depth / 100;\r\n\r\n\t\tlet angle: number = this.angle;\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = this.chart.angle;\r\n\t\t}\r\n\r\n\t\tslice.angle = angle;\r\n\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\r\n\t\tfor (let i = this._workingStartIndex; i < this._workingEndIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet slice: Slice3D = dataItem.slice;\r\n\r\n\t\t\tconst startAngle = slice.startAngle;\r\n\t\t\t// find quarter\r\n\t\t\t//q0 || q1\r\n\t\t\tif ((startAngle >= -90 && startAngle < 90)) {\r\n\t\t\t\tslice.toFront();\r\n\t\t\t}\r\n\t\t\t//q2 || q3\r\n\t\t\telse if ((startAngle >= 90)) {\r\n\t\t\t\tslice.toBack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (height) of the pie slice in pixels.\r\n\t *\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the view point of the 3D pie. (0-360)\r\n\t *\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice = dataItem.slice;\r\n\r\n\t\tbullet.y = bullet.pixelY - slice.depth;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries3D\"] = PieSeries3D;\r\nregistry.registeredClasses[\"PieSeries3DDataItem\"] = PieSeries3DDataItem;\r\n","/**\r\n * 3D Pie chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { PieChart, IPieChartProperties, IPieChartDataFields, IPieChartAdapters, IPieChartEvents, PieChartDataItem } from \"./PieChart\";\r\nimport { PieSeries3D } from \"../series/PieSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PieChart3DDataItem extends PieChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PieChart3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChart3DDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PieChart3D]].\r\n */\r\nexport interface IPieChart3DDataFields extends IPieChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PieChart3D]].\r\n */\r\nexport interface IPieChart3DProperties extends IPieChartProperties {\r\n\r\n\t/**\r\n\t * Pie's \"depth\" or \"height\" in pixels.\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Pie's angle at which we are looking at it. (degrees)\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PieChart3D]].\r\n */\r\nexport interface IPieChart3DEvents extends IPieChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PieChart3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPieChart3DAdapters extends IPieChartAdapters, IPieChart3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nexport class PieChart3D extends PieChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IPieChart3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPieChart3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPieChart3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPieChart3DEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: PieSeries3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PieChart3D\";\r\n\r\n\t\tthis.depth = 20;\r\n\t\tthis.angle = 10;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Depth of the 3D pie in pixels.\r\n\t *\r\n\t * This will determine \"height\" of the pie.\r\n\t *\r\n\t * @default 20\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tif (this.setPropertyValue(\"depth\", value)) {\r\n\t\t\tthis.invalidateDataUsers();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n\t *\r\n\t * @default 10\r\n\t * @param value  Angle (degrees)\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tvalue = $math.fitToRange(value, 0, 90);\r\n\t\tif (this.setPropertyValue(\"angle\", value)) {\r\n\t\t\tthis.invalidateDataUsers();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle (degrees)\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new PieSeries3D();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;\r\n","/**\r\n * Sliced chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, IPercentChartProperties, IPercentChartDataFields, IPercentChartAdapters, IPercentChartEvents, PercentChartDataItem } from \"./PercentChart\";\r\nimport { FunnelSeries } from \"../series/FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SlicedChartDataItem extends PercentChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SlicedChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SlicedChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SlicedChart]].\r\n */\r\nexport interface ISlicedChartDataFields extends IPercentChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SlicedChart]]\r\n */\r\nexport interface ISlicedChartProperties extends IPercentChartProperties { }\r\n\r\n/**\r\n * Defines events for [[SlicedChart]].\r\n */\r\nexport interface ISlicedChartEvents extends IPercentChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SlicedChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISlicedChartAdapters extends IPercentChartAdapters, ISlicedChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class SlicedChart extends PercentChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ISlicedChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISlicedChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISlicedChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISlicedChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: FunnelSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SlicedChart\";\r\n\r\n\t\tthis.seriesContainer.layout = \"horizontal\";\r\n\r\n\t\tthis.padding(15, 15, 15, 15);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Sliced chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the chart, causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SlicedChart\"] = SlicedChart;\r\nregistry.registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;\r\n","/**\r\n * FlowDiagramNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, AMEvent, visualProperties, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { FlowDiagram, FlowDiagramDataItem } from \"../types/FlowDiagram\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $string from \"../../core/utils/String\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { LegendSettings, LegendDataItem } from \"../Legend\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FlowDiagramNode]].\r\n */\r\nexport interface IFlowDiagramNodeProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Name of the node.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * Sum of all incomming+outgoing link values\r\n\t */\r\n\ttotal?: number;\r\n\r\n\t/**\r\n\t * Sum of all incoming link values\r\n\t */\r\n\ttotalIncoming?: number;\r\n\r\n\t/**\r\n\t * Sum of all outgoing link values\r\n\t */\r\n\ttotalOutgoing?: number;\r\n\r\n\t/**\r\n\t * Node's color.\r\n\t */\r\n\tcolor?: Color;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagramNode]].\r\n */\r\nexport interface IFlowDiagramNodeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagramNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramNodeAdapters extends IContainerAdapters, IFlowDiagramNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Flow Diagram.\r\n *\r\n * A Flow node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[FlowLink]] elements.\r\n *\r\n * @see {@link IFlowDiagramNodeEvents} for a list of available events\r\n * @see {@link IFlowDiagramNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagramNode extends Container {\r\n\r\n\t/**\r\n\t * total ajusted taken in mind chart.minNodeSize\r\n\t */\r\n\tpublic adjustedTotal: number;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFlowDiagramNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFlowDiagramNodeEvents;\r\n\r\n\t/**\r\n\t * A list of data items of the items coming in from another node, one level\r\n\t * up.\r\n\t *\r\n\t * These are what ingoing links are build out of.\r\n\t */\r\n\tprotected _incomingDataItems: List<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A list of data items of the items going out of the node.\r\n\t *\r\n\t * These are what outgoing links are build out of.\r\n\t */\r\n\tprotected _outgoingDataItems: List<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Sorted list of incoming items.\r\n\t */\r\n\tprotected _incomingSorted: $iter.Iterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Sorted list of outgoing items.\r\n\t */\r\n\tprotected _outgoingSorted: $iter.Iterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t */\r\n\tpublic chart: FlowDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[FlowDiagramDataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this node.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramNode\";\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\tnew InterfaceColorSet();\r\n\r\n\t\tthis.draggable = true;\r\n\t\tthis.inert = true;\r\n\r\n\t\tthis.setStateOnChildren = true;\r\n\r\n\t\tthis.events.on(\"positionchanged\", this.invalidateLinks, this, false);\r\n\t\tthis.events.on(\"sizechanged\", this.invalidateLinks, this, false);\r\n\t\t//this.events.on(\"hit\", this.handleHit, this, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic handleHit(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tif (this.isHidden || this.isHiding) {\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden node.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\tthis.outgoingDataItems.each(function(dataItem) {\r\n\t\t\tif (!dataItem.toNode || (dataItem.toNode && !dataItem.toNode.isHidden)) {\r\n\t\t\t\tdataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n\t\t\t\tdataItem.link.show();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.incomingDataItems.each(function(dataItem) {\r\n\t\t\tif (!dataItem.fromNode || (dataItem.fromNode && !dataItem.fromNode.isHidden)) {\r\n\t\t\t\tdataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n\t\t\t\tdataItem.link.show();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides node.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet animation = super.hide(duration);\r\n\r\n\t\tthis.outgoingDataItems.each(function(dataItem) {\r\n\t\t\tdataItem.setWorkingValue(\"value\", 0, duration);\r\n\t\t\tdataItem.link.hide();\r\n\t\t})\r\n\r\n\t\tthis.incomingDataItems.each(function(dataItem) {\r\n\t\t\tdataItem.setWorkingValue(\"value\", 0, duration);\r\n\t\t\tdataItem.link.hide();\r\n\t\t})\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Marks node as invalid, for redrawal in the next update cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif(!this.isDisposed()){\r\n\t\t\tsuper.validate();\r\n\t\t\tthis.invalidateLinks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\r\n\t\tthis.outgoingDataItems.each((dataItem) => {\r\n\t\t\tlet link = dataItem.link;\r\n\t\t\tif (link.colorMode == \"fromNode\") {\r\n\t\t\t\tlink.fill = link.dataItem.fromNode.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (link.colorMode == \"gradient\") {\r\n\r\n\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\tlink.stroke = link.gradient;\r\n\r\n\t\t\t\tlet stop = link.gradient.stops.getIndex(0);\r\n\r\n\t\t\t\tif (stop) {\r\n\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.incomingDataItems.each((dataItem) => {\r\n\t\t\tlet link = dataItem.link;\r\n\t\t\tif (link.colorMode == \"toNode\") {\r\n\t\t\t\tlink.fill = link.dataItem.toNode.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\tlink.stroke = link.gradient;\r\n\r\n\t\t\t\tlet stop = link.gradient.stops.getIndex(1);\r\n\r\n\t\t\t\tif (stop) {\r\n\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * List of incoming items (links).\r\n\t *\r\n\t * @readonly\r\n\t * @return Incoming items\r\n\t */\r\n\tpublic get incomingDataItems(): List<this[\"_dataItem\"]> {\r\n\t\tif (!this._incomingDataItems) {\r\n\t\t\tlet incomingDataItems = new List<FlowDiagramDataItem>();\r\n\t\t\tincomingDataItems.events.on(\"inserted\", () => {\r\n\t\t\t\tif (this.chart.sortBy == \"name\") {\r\n\t\t\t\t\tthis._incomingSorted = $iter.sort(this._incomingDataItems.iterator(), (x, y) => $string.order(x.fromName, y.fromName));\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.chart.sortBy == \"value\") {\r\n\t\t\t\t\tthis._incomingSorted = $iter.sort(this._incomingDataItems.iterator(), (x, y) => $order.reverse($number.order(x.value, y.value)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._incomingSorted = this._incomingDataItems.iterator();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._incomingDataItems = incomingDataItems;\r\n\t\t}\r\n\t\treturn this._incomingDataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * List of outgoing items (links).\r\n\t *\r\n\t * @readonly\r\n\t * @return Outgoing items\r\n\t */\r\n\tpublic get outgoingDataItems(): List<FlowDiagramDataItem> {\r\n\t\tif (!this._outgoingDataItems) {\r\n\t\t\tlet outgoingDataItems = new List<FlowDiagramDataItem>();\r\n\t\t\toutgoingDataItems.events.on(\"inserted\", () => {\r\n\t\t\t\tif (this.chart.sortBy == \"name\") {\r\n\t\t\t\t\tthis._outgoingSorted = $iter.sort(this._outgoingDataItems.iterator(), (x, y) => $string.order(x.fromName, y.fromName));\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.chart.sortBy == \"value\") {\r\n\t\t\t\t\tthis._outgoingSorted = $iter.sort(this._outgoingDataItems.iterator(), (x, y) => $order.reverse($number.order(x.value, y.value)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._outgoingSorted = this._outgoingDataItems.iterator();\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._outgoingDataItems = outgoingDataItems;\r\n\t\t}\r\n\t\treturn this._outgoingDataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * A name of the node.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all incoming+outgoing link values\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set total(value: number) {\r\n\t\tthis.setPropertyValue(\"total\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get total(): number {\r\n\t\treturn this.getPropertyValue(\"total\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all incomming link values.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set totalIncoming(value: number) {\r\n\t\tthis.setPropertyValue(\"totalIncoming\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get totalIncoming(): number {\r\n\t\treturn this.getPropertyValue(\"totalIncoming\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all outgoing link values.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set totalOutgoing(value: number) {\r\n\t\tthis.setPropertyValue(\"totalOutgoing\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get totalOutgoing(): number {\r\n\t\treturn this.getPropertyValue(\"totalOutgoing\");\r\n\t}\r\n\r\n\t/**\r\n\t * Node's color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setColorProperty(\"color\", value);\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.fill = value;\r\n\t\t}\r\n\t\tthis.fill = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.getPropertyValue(\"color\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\tcolumn.shouldClone = false;\r\n\t\t$object.copyProperties(this, column, visualProperties);\r\n\t\tcolumn.stroke = this.fill;\r\n\r\n\t\tcolumn.copyFrom(<any>this);\r\n\t\tcolumn.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n\t\tcolumn.width = w;\r\n\t\tcolumn.height = h;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramNode\"] = FlowDiagramNode;\r\n","/**\r\n * FlowDiagramLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { FlowDiagramDataItem } from \"../types/FlowDiagram\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FlowDiagramLink]].\r\n */\r\nexport interface IFlowDiagramLinkProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * [tension description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartX?: number;\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartY?: number;\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendX?: number;\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendY?: number;\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tlinkWidth?: number;\r\n\r\n\t/**\r\n\t * [startAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * [endAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\t/**\r\n\t * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n\t */\r\n\tcolorMode?: \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\";\r\n\r\n\t/**\r\n\t * [controlPointDistance description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tcontrolPointDistance?: number;\r\n\r\n\t/**\r\n\t * [maskBullets description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * [tooltipLocation description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\ttooltipLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagramLink]].\r\n */\r\nexport interface IFlowDiagramLinkEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagramLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramLinkAdapters extends IContainerAdapters, IFlowDiagramLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Flow Diagram.\r\n *\r\n * @see {@link IFlowDiagramLinkEvents} for a list of available events\r\n * @see {@link IFlowDiagramLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagramLink extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFlowDiagramLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFlowDiagramLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * A gradiend instance that is used to provided colored gradient fills for\r\n\t * the Flow link.\r\n\t */\r\n\tprotected _gradient: LinearGradient;\r\n\r\n\r\n\t/**\r\n\t * List of bullets\r\n\t * @ignore\r\n\t */\r\n\tprotected _bullets: ListTemplate<Bullet>;\r\n\r\n\t/**\r\n\t * Link sprite\r\n\t */\r\n\tpublic link: Sprite;\r\n\r\n\t/**\r\n\t * Bullets mask spite\r\n     */\r\n\tprotected _bulletsMask: Sprite;\r\n\r\n\t/**\r\n\t * Bullets container\r\n     */\r\n\tprotected _bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n     */\r\n\tpublic middleLine: Line | Polyline;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramLink\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.maskBullets = false;\r\n\r\n\t\tthis.colorMode = \"fromNode\";\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.startAngle = 0;\r\n\t\tthis.endAngle = 0;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\t// this is very important, otherwise the container will be shifted\r\n\t\tthis.verticalCenter = \"none\";\r\n\t\tthis.horizontalCenter = \"none\";\r\n\r\n\t\tthis.tooltipText = \"{fromName}→{toName}:{value.value}\";\r\n\t\tthis.tooltipLocation = 0.5;\r\n\r\n\t\tthis.link = this.createChild(Sprite);\r\n\t\tthis.link.shouldClone = false;\r\n\t\tthis.link.setElement(this.paper.add(\"path\"));\r\n\t\tthis.link.isMeasured = false;\r\n\t\tthis.fillOpacity = 0.2;\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullets\r\n\t * @ignore\r\n\t */\r\n\tprotected positionBullets() {\r\n\t\t$iter.each(this.bullets.iterator(), (bullet) => {\r\n\t\t\tbullet.parent = this.bulletsContainer;\r\n\r\n\t\t\tbullet.maxWidth = this.maxWidth;\r\n\t\t\tbullet.maxHeight = this.maxHeight;\r\n\r\n\t\t\tthis.positionBullet(bullet);\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Bullets container\r\n     */\r\n\tpublic get bulletsContainer() {\r\n\t\tif (!this._bulletsContainer) {\r\n\t\t\tlet bulletsContainer = this.createChild(Container);\r\n\t\t\tbulletsContainer.shouldClone = false;\r\n\t\t\tbulletsContainer.layout = \"none\";\r\n\t\t\tthis._bulletsContainer = bulletsContainer;\r\n\t\t}\r\n\t\treturn this._bulletsContainer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Bullets mask sprite\r\n     */\r\n\tpublic get bulletsMask() {\r\n\t\tif (!this._bulletsMask) {\r\n\t\t\tlet bulletsMask = this.createChild(Sprite);\r\n\t\t\tbulletsMask.shouldClone = false;\r\n\t\t\tbulletsMask.setElement(this.paper.add(\"path\"));\r\n\t\t\tbulletsMask.isMeasured = false;\r\n\t\t\tthis._bulletsMask = bulletsMask;\r\n\t\t}\r\n\t\treturn this._bulletsMask;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullets at relative bullet.locationX position on the link.\r\n\t * @ignore\r\n\t */\r\n\tprotected positionBullet(bullet: Bullet) {\r\n\r\n\t\tlet location = bullet.locationX;\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = bullet.locationY;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = 0.5;\r\n\t\t}\r\n\t\tlet point = this.middleLine.positionToPoint(location);\r\n\r\n\t\tbullet.moveTo(point);\r\n\r\n\t\tlet rotationField = bullet.propertyFields.rotation;\r\n\t\tlet angle: number;\r\n\t\tif (bullet.dataItem) {\r\n\t\t\tlet dataContext: any = bullet.dataItem.dataContext;\r\n\t\t\tangle = dataContext[rotationField];\r\n\t\t}\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = point.angle;\r\n\t\t}\r\n\r\n\t\tbullet.rotation = angle;\r\n\t}\r\n\r\n\t/**\r\n\t * [startAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n\t * Some of the links, like ChordLink does not support gradiens well.\r\n\t *\r\n\t * @param value  Fill mode\r\n\t */\r\n\tpublic set colorMode(value: \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\") {\r\n\t\tif (value == \"gradient\") {\r\n\t\t\tlet color = this.fill;\r\n\r\n\t\t\tthis.gradient.stops.clear();\r\n\t\t\tif (color instanceof Color) {\r\n\t\t\t\tthis.gradient.addColor(color);\r\n\t\t\t\tthis.gradient.addColor(color);\r\n\t\t\t}\r\n\t\t\tthis.fill = this.gradient;\r\n\t\t\tthis.stroke = this.gradient;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"colorMode\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Fill mode\r\n\t */\r\n\tpublic get colorMode(): \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\" {\r\n\t\treturn this.getPropertyValue(\"colorMode\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should link bullets be masked or not\r\n\t *\r\n\t * @param value\r\n\t * @default false\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tthis.setPropertyValue(\"maskBullets\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return mask bullets value\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of a tooltip.\r\n\t * @default 0.5\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Tooltip location value\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Adds color steps in the link gradient.\r\n\t *\r\n\t * @param value  Fill option\r\n\t */\r\n\tprotected setFill(value: Color | Pattern | LinearGradient | RadialGradient) {\r\n\t\tsuper.setFill(value)\r\n\t\tlet gradient = this._gradient;\r\n\r\n\t\tif (gradient && value instanceof Color) {\r\n\t\t\tgradient.stops.clear();\r\n\t\t\tgradient.addColor(value);\r\n\t\t\tgradient.addColor(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates bounding box based on element dimension settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * List of bullets\r\n\t *\r\n\t * @return [description]\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Bullet> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Bullet>(new Bullet());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t\tthis._bullets.events.on(\"inserted\", (event) => {\r\n\t\t\t\tevent.newValue.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"locationX\" || event.property == \"locationY\") {\r\n\t\t\t\t\t\tthis.positionBullet(event.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t}, undefined, false)\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies properties from another [[FlowDiagramLink]].\r\n\t *\r\n\t * @param source  Source link\r\n\t */\r\n\tcopyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tlet middleLine = this.middleLine;\r\n\t\tif (middleLine) {\r\n\t\t\tif (middleLine instanceof Line && source.middleLine instanceof Line) {\r\n\t\t\t\tmiddleLine.copyFrom(source.middleLine);\r\n\t\t\t}\r\n\r\n\t\t\tif (middleLine instanceof Polyline && source.middleLine instanceof Polyline) {\r\n\t\t\t\tmiddleLine.copyFrom(source.middleLine);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.link.copyFrom(source.link);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Tooltip X (px)\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tif (this.middleLine) {\r\n\t\t\treturn this.middleLine.positionToPoint(this.tooltipLocation).x;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Tooltip Y (px)\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tif (this.middleLine) {\r\n\t\t\treturn this.middleLine.positionToPoint(this.tooltipLocation).y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A gradiend instance that is used to provided colored gradient fills for\r\n\t * the Flow link.\r\n\t */\r\n\tpublic get gradient() {\r\n\t\tif (!this._gradient) {\r\n\t\t\tthis._gradient = new LinearGradient();\r\n\t\t}\r\n\t\treturn this._gradient;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramLink\"] = FlowDiagramLink;\r\n","/**\r\n * FlowDiagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { FlowDiagramNode } from \"../elements/FlowDiagramNode\";\r\nimport { FlowDiagramLink } from \"../elements/FlowDiagramLink\";\r\nimport { LinearGradientModifier } from \"../../core/rendering/fills/LinearGradientModifier\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FlowDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FlowDiagramDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: FlowDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: FlowDiagramLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t */\r\n\tpublic fromNode: FlowDiagramNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t */\r\n\tpublic toNode: FlowDiagramNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Source node's name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set fromName(value: string) {\r\n\t\tthis.setProperty(\"fromName\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return name\r\n\t */\r\n\tpublic get fromName(): string {\r\n\t\treturn this.properties.fromName;\r\n\t}\r\n\r\n\t/**\r\n\t * Destination node's name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set toName(value: string) {\r\n\t\tthis.setProperty(\"toName\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return name\r\n\t */\r\n\tpublic get toName(): string {\r\n\t\treturn this.properties.toName;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Node color\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setProperty(\"color\", toColor(value));\r\n\t}\r\n\r\n\t/**\r\n\t * @return color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * Link's value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * A visual element, representing link between the source and target nodes.\r\n\t *\r\n\t * Link's actual thickness will be determined by `value` of this link and\r\n\t * `value` of the source node.\r\n\t *\r\n\t * @readonly\r\n\t * @return Link element\r\n\t */\r\n\tpublic get link(): this[\"_link\"] {\r\n\t\tif (!this._link) {\r\n\t\t\tlet link = this.component.links.create();\r\n\t\t\tthis._link = link;\r\n\r\n\t\t\tthis.addSprite(link);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.links.removeValue(link);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._link;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FlowDiagram]].\r\n */\r\nexport interface IFlowDiagramDataFields extends IChartDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t */\r\n\tcolor?: string;\r\n\r\n\t/**\r\n\t * Visibility of a node\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[FlowDiagram]]\r\n */\r\nexport interface IFlowDiagramProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * Padding for node square in pixels.\r\n\t */\r\n\tnodePadding?: number;\r\n\r\n\t/**\r\n\t * Sort nodes by name or value or do not sort a\r\n\t */\r\n\tsortBy?: \"none\" | \"name\" | \"value\";\r\n\r\n\t/**\r\n\t * Sometimes nodes can get very small if their value is little. With this setting you\r\n\t * can set min size of a node (this is relative value from the total size of all nodes)\r\n\t */\r\n\tminNodeSize: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagram]].\r\n */\r\nexport interface IFlowDiagramEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramAdapters extends IChartAdapters, IFlowDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Pie chart\r\n * @see {@link IFlowDiagramEvents} for a list of available Events\r\n * @see {@link IFlowDiagramAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagram extends Chart {\r\n\r\n\t/**\r\n\t * A Color Set to use when applying/generating colors for each subsequent\r\n\t * node.\r\n\t */\r\n\tpublic colors: ColorSet = new ColorSet();\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IFlowDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFlowDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFlowDiagramEvents;\r\n\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node: FlowDiagramNode;\r\n\r\n\r\n\t/**\r\n\t * A list of chart's FlowDiagram nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n\t */\r\n\tprotected _nodes: DictionaryTemplate<string, this[\"_node\"]>;\r\n\r\n\r\n\t/**\r\n\t */\r\n\tpublic _link: FlowDiagramLink;\r\n\r\n\t/**\r\n\t * A list of FlowDiagram links connecting nodes.\r\n\t *\r\n\t * @param {ListTemplate<this[\"_link\"]>}\r\n\t */\r\n\tprotected _links: ListTemplate<this[\"_link\"]>;\r\n\r\n\t/**\r\n\t * A container that holds all of the link elements.\r\n\t */\r\n\tpublic linksContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds all of the node elements.\r\n\t */\r\n\tpublic nodesContainer: Container;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, FlowDiagramNode]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagram\";\r\n\t\tthis.nodePadding = 20;\r\n\t\tthis.sortBy = \"none\";\r\n\t\tthis.sequencedInterpolation = true;\r\n\r\n\t\tthis.colors.step = 2;\r\n\t\tthis.minNodeSize = 0.02;\r\n\r\n\t\tlet linksContainer = this.chartContainer.createChild(Container);\r\n\t\tlinksContainer.shouldClone = false;\r\n\t\tlinksContainer.layout = \"none\";\r\n\t\tlinksContainer.isMeasured = false;\r\n\t\tthis.linksContainer = linksContainer;\r\n\r\n\t\tlet nodesContainer = this.chartContainer.createChild(Container);\r\n\t\tnodesContainer.shouldClone = false;\r\n\t\tnodesContainer.layout = \"none\";\r\n\t\tnodesContainer.isMeasured = false;\r\n\t\tthis.nodesContainer = nodesContainer;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\t\tthis.dataItem.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart's data, effectively causing the chart to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tif (this._parseDataFrom == 0) {\r\n\t\t\tthis.nodes.clear();\r\n\t\t}\r\n\r\n\t\tthis.sortNodes();\r\n\r\n\t\tthis.colors.reset();\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tlet sum = 0;\r\n\t\tlet count = 0;\r\n\t\tlet low: number;\r\n\t\tlet high: number;\r\n\r\n\t\t// build blocks\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tlet fromName = dataItem.fromName;\r\n\r\n\t\t\tif (fromName) {\r\n\t\t\t\tlet node = this.nodes.getKey(fromName);\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tnode = this.nodes.create(fromName);\r\n\t\t\t\t\tnode.name = fromName;\r\n\t\t\t\t\tnode.chart = this;\r\n\t\t\t\t\tnode.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tdataItem.fromNode = node;\r\n\t\t\t\tdataItem.fromNode.outgoingDataItems.push(dataItem);\r\n\t\t\t}\r\n\t\t\tlet toName = dataItem.toName;\r\n\t\t\tif (toName) {\r\n\t\t\t\tlet node = this.nodes.getKey(toName);\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tnode = this.nodes.create(toName);\r\n\t\t\t\t\tnode.name = toName;\r\n\t\t\t\t\tnode.chart = this;\r\n\t\t\t\t\tnode.dataItem = dataItem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataItem.toNode = node;\r\n\t\t\t\tdataItem.toNode.incomingDataItems.push(dataItem);\r\n\t\t\t}\r\n\r\n\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\tlet strokeModifier = new LinearGradientModifier();\r\n\t\t\t\tstrokeModifier.opacities = [0, 1];\r\n\t\t\t\tdataItem.link.strokeModifier = strokeModifier;\r\n\t\t\t}\r\n\r\n\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\tlet fillModifier = new LinearGradientModifier();\r\n\t\t\t\tfillModifier.opacities = [1, 0];\r\n\t\t\t\tdataItem.link.strokeModifier = fillModifier;\r\n\t\t\t}\r\n\r\n\t\t\tlet value = dataItem.value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\tsum += value;\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif (low > value || !$type.isNumber(low)) {\r\n\t\t\t\t\tlow = value;\r\n\t\t\t\t}\r\n\t\t\t\tif (high < value || !$type.isNumber(high)) {\r\n\t\t\t\t\thigh = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet key = \"value\";\r\n\r\n\t\tthis.dataItem.setCalculatedValue(key, high, \"high\");\r\n\t\tthis.dataItem.setCalculatedValue(key, low, \"low\");\r\n\t\tthis.dataItem.setCalculatedValue(key, sum, \"sum\");\r\n\t\tthis.dataItem.setCalculatedValue(key, sum / count, \"average\");\r\n\t\tthis.dataItem.setCalculatedValue(key, count, \"count\");\r\n\r\n\r\n\t\t$iter.each(this.nodes.iterator(), (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\r\n\t\t\tif (node.fill instanceof Color) {\r\n\t\t\t\tnode.color = node.fill;\r\n\t\t\t}\r\n\r\n\t\t\tif (node.color == undefined) {\r\n\t\t\t\tnode.color = this.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tif (node.dataItem.color != undefined) {\r\n\t\t\t\tnode.color = node.dataItem.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (!node.dataItem.visible) {\r\n\t\t\t\tnode.hide(0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t});\r\n\r\n\t\tthis.sortNodes();\r\n\t\tthis.feedLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sorts nodes by either their values or names, based on `sortBy` setting.\r\n\t */\r\n\tprotected sortNodes() {\r\n\t\tif (this.sortBy == \"name\") {\r\n\t\t\tthis._sorted = this.nodes.sortedIterator();\r\n\t\t}\r\n\t\telse if (this.sortBy == \"value\") {\r\n\t\t\tthis._sorted = $iter.sort(this.nodes.iterator(), (x, y) => $order.reverse($number.order(x[1].total, y[1].total)));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._sorted = this.nodes.iterator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a cummulative value of the node.\r\n\t *\r\n\t * A node's value is determined by summing values of all of the incoming\r\n\t * links or all of the outgoing links, whichever results in bigger number.\r\n\t *\r\n\t * @param node  Node value\r\n\t */\r\n\tprotected getNodeValue(node: FlowDiagramNode) {\r\n\r\n\t\t// todo: totalIncomming totalOutgoing, total\r\n\r\n\t\tlet incomingTotal = 0;\r\n\t\tlet outgoingTotal = 0;\r\n\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (dataItem: FlowDiagramDataItem) => {\r\n\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\tincomingTotal += value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$iter.each(node.outgoingDataItems.iterator(), (dataItem: FlowDiagramDataItem) => {\r\n\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\toutgoingTotal += value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tnode.total = incomingTotal + outgoingTotal;\r\n\t\tnode.totalIncoming = incomingTotal;\r\n\t\tnode.totalOutgoing = outgoingTotal;\r\n\t};\r\n\r\n\t/**\r\n\t * Changes the sort type of the nodes.\r\n\t *\r\n\t * This will actually reshuffle nodes using nice animation.\r\n\t */\r\n\tprotected changeSorting() {\r\n\t\tthis.sortNodes();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Flow diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FlowDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Padding for node square in pixels.\r\n\t *\r\n\t * Padding will add extra space around node's name label.\r\n\t *\r\n\t * @param value Padding (px)\r\n\t */\r\n\tpublic set nodePadding(value: number) {\r\n\t\tthis.setPropertyValue(\"nodePadding\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Padding (px)\r\n\t */\r\n\tpublic get nodePadding(): number {\r\n\t\treturn this.getPropertyValue(\"nodePadding\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sort nodes by \"name\" or \"value\" or do not sort at all. If not sorted, nodes will appear in the same order as they are in the data.\r\n\t * @default \"none\"\r\n\t * @param value  Node sorting\r\n\t */\r\n\tpublic set sortBy(value: \"none\" | \"name\" | \"value\") {\r\n\t\tthis.setPropertyValue(\"sortBy\", value);\r\n\t\tthis.changeSorting();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Node sorting\r\n\t */\r\n\tpublic get sortBy(): \"none\" | \"name\" | \"value\" {\r\n\t\treturn this.getPropertyValue(\"sortBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sometimes nodes can get very small if their value is little. With this setting you\r\n\t * can set min size of a node (this is relative value from the total size of all nodes)\r\n\t * @default 0.02\r\n\t * @param value  Node sorting\r\n\t */\r\n\tpublic set minNodeSize(value: number) {\r\n\t\tthis.setPropertyValue(\"minNodeSize\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns min node size\r\n\t */\r\n\tpublic get minNodeSize(): number {\r\n\t\treturn this.getPropertyValue(\"minNodeSize\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of chart's nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n\t */\r\n\tpublic get nodes(): DictionaryTemplate<string, this[\"_node\"]> {\r\n\t\tif (!this._nodes) {\r\n\t\t\tlet template = this.createNode();\r\n\t\t\ttemplate.events.on(\"hit\", (event) => {\r\n\t\t\t\tevent.target.handleHit(event);\r\n\t\t\t});\r\n\t\t\tthis._nodes = new DictionaryTemplate<string, this[\"_node\"]>(template);\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._nodes));\r\n\t\t}\r\n\t\treturn this._nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode(): this[\"_node\"] {\r\n\t\tlet node = new FlowDiagramNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's links.\r\n\t *\r\n\t * @param {ListTemplate<this[\"_link\"]>}\r\n\t */\r\n\tpublic get links(): ListTemplate<this[\"_link\"]> {\r\n\t\tif (!this._links) {\r\n\t\t\tthis._links = new ListTemplate<this[\"_link\"]>(this.createLink());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._links));\r\n\t\t}\r\n\t\treturn this._links;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink(): this[\"_link\"] {\r\n\t\tlet link = new FlowDiagramLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\tthis.nodes.each((key, node) => {\r\n\t\t\t\tlegendData.push(node);\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis.nodes.clear();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagram\"] = FlowDiagram;\r\n","/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface ILabelBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface ILabelBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILabelBulletAdapters extends IBulletAdapters, ILabelBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class LabelBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILabelBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILabelBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILabelBulletEvents;\r\n\r\n\t/**\r\n\t * A label (textual) element for the bullet.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"LabelBullet\";\r\n\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.hideOversized = false;\r\n\r\n\t\tlabel.maxWidth = 500;\r\n\t\tlabel.maxHeight = 500;\r\n\r\n\t\tlabel.stroke = color();\r\n\t\tlabel.strokeOpacity = 0;\r\n\t\tlabel.fill = new InterfaceColorSet().getFor(\"text\");\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", this.handleMaxSize, this, false);\r\n\r\n\t\tthis.label = label;\r\n\r\n\t\t// not good, as lineSeries will have labels somewhere in the middle.\r\n\t\t//this.locationX = 0.5;\r\n\t\t//this.locationY = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected handleMaxSize(){\r\n\t\tthis.label.maxWidth = this.maxWidth;\r\n\t\tthis.label.maxHeight = this.maxHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[LabelBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.label.copyFrom(source.label);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;\r\n","/**\r\n * SankeyNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode, IFlowDiagramNodeAdapters, IFlowDiagramNodeEvents, IFlowDiagramNodeProperties } from \"./FlowDiagramNode\";\r\nimport { SankeyDiagram, SankeyDiagramDataItem } from \"../types/SankeyDiagram\";\r\nimport { LabelBullet } from \"./LabelBullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeProperties extends IFlowDiagramNodeProperties {\r\n\r\n\t/**\r\n\t * A level node is at. (0 - ...)\r\n\t */\r\n\tlevel?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeEvents extends IFlowDiagramNodeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyNodeAdapters extends IFlowDiagramNodeAdapters, ISankeyNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Sankey Diagram.\r\n *\r\n * A Sankey node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[SankeyLink]] elements.\r\n *\r\n * @see {@link ISankeyNodeEvents} for a list of available events\r\n * @see {@link ISankeyNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SankeyNode extends FlowDiagramNode {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISankeyNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISankeyNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISankeyNodeEvents;\r\n\r\n\r\n\t/**\r\n\t * [nextInCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic nextInCoord: number = 0;\r\n\r\n\t/**\r\n\t * [nextOutCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic nextOutCoord: number = 0;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t */\r\n\tpublic chart: SankeyDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[SankeyDiagramDataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * A label element which shows node's value.\r\n\t */\r\n\tpublic valueLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * A label element which shows node's name.\r\n\t */\r\n\tpublic nameLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyNode\";\r\n\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\r\n\t\tlet nameLabel = this.createChild(LabelBullet);\r\n\t\tnameLabel.shouldClone = false;\r\n\t\t//@should we auto update these locations if position is changed?\r\n\t\tnameLabel.locationX = 1;\r\n\t\tnameLabel.locationY = 0.5;\r\n\t\tnameLabel.label.text = \"{name}\";\r\n\r\n\t\t//nameLabel.label.textElement.hideOversized = false;\r\n\t\tnameLabel.width = 150;\r\n\t\tnameLabel.height = 150;\r\n\t\tnameLabel.label.horizontalCenter = \"left\";\r\n\t\tnameLabel.label.padding(0, 5, 0, 5);\r\n\t\tthis.nameLabel = nameLabel;\r\n\r\n\t\tlet valueLabel = this.createChild(LabelBullet);\r\n\t\tvalueLabel.shouldClone = false;\r\n\t\tvalueLabel.label.hideOversized = false;\r\n\t\tvalueLabel.locationX = 0.5;\r\n\t\tvalueLabel.locationY = 0.5;\r\n\t\tvalueLabel.width = 150;\r\n\t\tvalueLabel.height = 150;\r\n\t\t//valueLabel.label.text = \"{value}\";\r\n\t\tvalueLabel.label.horizontalCenter = \"middle\";\r\n\t\tthis.valueLabel = valueLabel;\r\n\r\n\t\tlet hiddenState = this.hiddenState;\r\n\t\thiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\thiddenState.properties.opacity = 0.5;\r\n\t\thiddenState.properties.visible = true;\r\n\r\n\t\tthis.background.hiddenState.copyFrom(hiddenState);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\t\tsuper.invalidateLinks();\r\n\t\tthis.nextInCoord = 0;\r\n\t\tthis.nextOutCoord = 0;\r\n\t\tlet chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tlet orientation = chart.orientation;\r\n\t\t\tif (this._incomingSorted) {\r\n\t\t\t\t$iter.each(this._incomingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tx = this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.nextInCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ty = this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tx = this.nextInCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.endX = x;\r\n\t\t\t\t\t\tlink.endY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.fromNode) {\r\n\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = this.pixelX + this.dx - link.maxWidth;\r\n\t\t\t\t\t\t\t\tlink.startY = link.endY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = link.endX;\r\n\t\t\t\t\t\t\t\tlink.startY = this.pixelY + this.dy - link.maxHeight;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// TODO is this needed ?\r\n\t\t\t\t\t\t\t$utils.used(link.gradient);\r\n\r\n\t\t\t\t\t\t\tlink.fill = dataItem.toNode.color;\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(0);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextInCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this._outgoingSorted) {\r\n\t\t\t\t$iter.each(this._outgoingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t\tx = this.pixelX + this.pixelWidth + this.dx - 1;\r\n\t\t\t\t\t\t\ty = this.nextOutCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t\tx = this.nextOutCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.pixelY + this.pixelHeight + this.dy - 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.startX = x;\r\n\t\t\t\t\t\tlink.startY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * this.chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = this.pixelX + link.maxWidth + this.dx;\r\n\t\t\t\t\t\t\t\tlink.endY = link.startY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = link.startX;\r\n\t\t\t\t\t\t\t\tlink.endY = this.pixelY + link.maxHeight + this.dy;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlink.opacity = this.opacity;\r\n\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(1);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextOutCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.positionBullet(this.nameLabel);\r\n\t\tthis.positionBullet(this.valueLabel);\r\n\t}\r\n\r\n\t/**\r\n\t * Positions the bullet so it is centered within the node element.\r\n\t *\r\n\t * @param bullet  Target bullet\r\n\t */\r\n\tprotected positionBullet(bullet: LabelBullet) {\r\n\t\tif (bullet) {\r\n\t\t\tbullet.x = this.measuredWidth * bullet.locationX;\r\n\t\t\tbullet.y = this.measuredHeight * bullet.locationY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A level node is displayed at. (0 - ...)\r\n\t *\r\n\t * Levels are measured from left to right.\r\n\t *\r\n\t * The nodes in the left-most column will have `level = 0`.\r\n\t *\r\n\t * Nodes in second column - `level = 1`, etc.\r\n\t *\r\n\t * @param value  Level\r\n\t */\r\n\tpublic set level(value: number) {\r\n\t\tthis.setPropertyValue(\"level\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\treturn this.getPropertyValue(\"level\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties and labels from another [[SankeyNode]].\r\n\t *\r\n\t * @param source  Source node\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.nameLabel.copyFrom(source.nameLabel);\r\n\t\tthis.valueLabel.copyFrom(source.valueLabel);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyNode\"] = SankeyNode;\r\n","/**\r\n * SankeyLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SankeyDiagramDataItem, SankeyDiagram } from \"../types/SankeyDiagram\";\r\nimport { FlowDiagramLink, IFlowDiagramLinkAdapters, IFlowDiagramLinkEvents, IFlowDiagramLinkProperties } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SankeyLink]].\r\n */\r\nexport interface ISankeyLinkProperties extends IFlowDiagramLinkProperties {\r\n\r\n\t/**\r\n\t * [tension description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartX?: number;\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tstartY?: number;\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendX?: number;\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tendY?: number;\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tlinkWidth?: number;\r\n\r\n\t/**\r\n\t * [controlPointDistance description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tcontrolPointDistance?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyLink]].\r\n */\r\nexport interface ISankeyLinkEvents extends IFlowDiagramLinkEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyLinkAdapters extends IFlowDiagramLinkAdapters, ISankeyLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link ISankeyLinkEvents} for a list of available events\r\n * @see {@link ISankeyLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SankeyLink extends FlowDiagramLink {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISankeyLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISankeyLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISankeyLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n\t */\r\n\tpublic middleLine: Polyspline;\r\n\r\n\tpublic chart: SankeyDiagram;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyLink\";\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\tnew InterfaceColorSet();\r\n\r\n\t\tthis.tension = 0.8;\r\n\t\tthis.controlPointDistance = 0.2;\r\n\r\n\t\tthis.startAngle = 0;\r\n\t\tthis.endAngle = 0;\r\n\r\n\t\tthis.linkWidth = 0;\r\n\r\n\t\tthis.startX = 0;\r\n\t\tthis.endX = 0;\r\n\r\n\t\tthis.startY = 0;\r\n\t\tthis.endY = 0;\r\n\r\n\t\tthis.middleLine = this.createChild(Polyspline);\r\n\t\tthis.middleLine.shouldClone = false;\r\n\t\tthis.middleLine.strokeOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected makeBackwards() {\r\n\t\tif (this.states.getKey(\"backwards\") != undefined) {\r\n\t\t\tthis.setState(\"backwards\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates (redraws) the link.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tif (!this.isTemplate) {\r\n\r\n\t\t\tlet x0 = this.startX\r\n\t\t\tlet y0 = this.startY;\r\n\t\t\tlet x1 = this.endX;\r\n\t\t\tlet y1 = this.endY;\r\n\r\n\t\t\tif (this.states.getKey(\"backwards\")) {\r\n\t\t\t\tthis.setState(\"default\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataItem) {\r\n\t\t\t\tlet chart = this.dataItem.component;\r\n\r\n\t\t\t\tif (chart) {\r\n\t\t\t\t\tif (chart.orientation == \"horizontal\") {\r\n\t\t\t\t\t\tif (x1 < x0) {\r\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\r\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\r\n\t\t\t\t\t\t\tthis.makeBackwards();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (y1 < y0) {\r\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\r\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\r\n\t\t\t\t\t\t\tthis.makeBackwards();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(x1)) {\r\n\t\t\t\tx1 = x0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(y1)) {\r\n\t\t\t\ty1 = y0;\r\n\t\t\t}\r\n\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet endAngle = this.endAngle;\r\n\t\t\tlet w = this.linkWidth;\r\n\r\n\t\t\tlet path = \"\";\r\n\r\n\t\t\tlet xt0 = x0;\r\n\t\t\tlet yt0 = y0;\r\n\r\n\t\t\tlet xt1 = x1;\r\n\t\t\tlet yt1 = y1;\r\n\r\n\t\t\tlet xb0 = x0 + w * $math.sin(startAngle);\r\n\t\t\tlet xb1 = x1 + w * $math.sin(endAngle);\r\n\r\n\t\t\tlet yb0 = y0 + w * $math.cos(startAngle);\r\n\t\t\tlet yb1 = y1 + w * $math.cos(endAngle);\r\n\r\n\t\t\tlet xm0 = x0 + w / 2 * $math.sin(startAngle);\r\n\t\t\tlet xm1 = x1 + w / 2 * $math.sin(endAngle);\r\n\r\n\t\t\tlet ym0 = y0 + w / 2 * $math.cos(startAngle);\r\n\t\t\tlet ym1 = y1 + w / 2 * $math.cos(endAngle);\r\n\r\n\t\t\tthis.zIndex = this.zIndex || this.dataItem.index;\r\n\r\n\t\t\tlet tensionX = this.tension + (1 - this.tension) * $math.sin(startAngle);\r\n\t\t\tlet tensionY = this.tension + (1 - this.tension) * $math.cos(startAngle);\r\n\r\n\t\t\tthis.middleLine.tensionX = tensionX;\r\n\t\t\tthis.middleLine.tensionY = tensionY;\r\n\r\n\t\t\tif ($type.isNumber(w) && ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1))) {\r\n\r\n\t\t\t\t// solves issues with gradient fill of straight lines\r\n\t\t\t\tif ($math.round(xt0, 3) == $math.round(xt1, 3)) {\r\n\t\t\t\t\txt1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(yt0, 3) == $math.round(yt1, 3)) {\r\n\t\t\t\t\tyt1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(xb0, 3) == $math.round(xb1, 3)) {\r\n\t\t\t\t\txb1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(yb0, 3) == $math.round(yb1, 3)) {\r\n\t\t\t\t\tyb1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minX = Math.min(xb0, xb1, xt0, xt1);\r\n\t\t\t\tlet minY = Math.min(yb0, yb1, yt0, yt1);\r\n\t\t\t\tlet maxX = Math.max(xb0, xb1, xt0, xt1);\r\n\t\t\t\tlet maxY = Math.max(yb0, yb1, yt0, yt1);\r\n\r\n\t\t\t\tthis._bbox = {\r\n\t\t\t\t\tx: minX,\r\n\t\t\t\t\ty: minY,\r\n\t\t\t\t\twidth: maxX - minX,\r\n\t\t\t\t\theight: maxY - minY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet cpd = this.controlPointDistance;\r\n\r\n\t\t\t\tlet kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(endAngle);\r\n\r\n\t\t\t\tlet kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(endAngle);\r\n\r\n\t\t\t\tlet angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\r\n\r\n\t\t\t\tlet dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(startAngle);\r\n\t\t\t\tlet dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(endAngle);\r\n\r\n\r\n\t\t\t\tthis.middleLine.segments = [[{ x: xm0, y: ym0 }, { x: kxm0, y: kym0 }, { x: kxm1, y: kym1 }, { x: xm1, y: ym1 }]];\r\n\r\n\t\t\t\tkxt0 += dx / 2;\r\n\t\t\t\tkyt0 += dy / 2;\r\n\r\n\t\t\t\tkxt1 += dx / 2;\r\n\t\t\t\tkyt1 += dy / 2;\r\n\r\n\t\t\t\tpath += $path.moveTo({ x: xt0, y: yt0 });\r\n\t\t\t\tpath += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xt0, y: yt0 }, { x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 }, { x: xt1, y: yt1 }]);\r\n\t\t\t\tpath += $path.lineTo({ x: xb1, y: yb1 });\r\n\t\t\t\tpath += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xb1, y: yb1 }, { x: kxb1, y: kyb1 }, { x: kxb0, y: kyb0 }, { x: xb0, y: yb0 }]);\r\n\t\t\t\tpath += $path.closePath();\r\n\t\t\t}\r\n\r\n\t\t\tthis.link.path = path;\r\n\r\n\t\t\tif (this.maskBullets) {\r\n\t\t\t\tthis.bulletsMask.path = path;\r\n\t\t\t\tthis.bulletsContainer.mask = this.bulletsMask;\r\n\t\t\t}\r\n\t\t\tthis.positionBullets();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  Start X\r\n\t */\r\n\tpublic set startX(value: number) {\r\n\t\tthis.setPropertyValue(\"startX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start X\r\n\t */\r\n\tpublic get startX(): number {\r\n\t\treturn this.getPropertyValue(\"startX\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  End X\r\n\t */\r\n\tpublic set endX(value: number) {\r\n\t\tthis.setPropertyValue(\"endX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End X\r\n\t */\r\n\tpublic get endX(): number {\r\n\t\treturn this.getPropertyValue(\"endX\");\r\n\t}\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  Start Y\r\n\t */\r\n\tpublic set startY(value: number) {\r\n\t\tthis.setPropertyValue(\"startY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start Y\r\n\t */\r\n\tpublic get startY(): number {\r\n\t\treturn this.getPropertyValue(\"startY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value End Y\r\n\t */\r\n\tpublic set endY(value: number) {\r\n\t\tthis.setPropertyValue(\"endY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End Y\r\n\t */\r\n\tpublic get endY(): number {\r\n\t\treturn this.getPropertyValue(\"endY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set linkWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"linkWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get linkWidth(): number {\r\n\t\treturn this.getPropertyValue(\"linkWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Distance of control point of a link, defines relative distance from a node at which linke should bend\r\n\t * @default 0.2\r\n\t * @param value\r\n\t */\r\n\tpublic set controlPointDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"controlPointDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return relative control point distance\r\n\t */\r\n\tpublic get controlPointDistance(): number {\r\n\t\treturn this.getPropertyValue(\"controlPointDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of a spline, 1 would make the link to have sharp edges\r\n\t * @default 0.8\r\n\t * @param value\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return tension value\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyLink\"] = SankeyLink;\r\n","/**\r\n * Sankey diagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagram, FlowDiagramDataItem, IFlowDiagramAdapters, IFlowDiagramDataFields, IFlowDiagramEvents, IFlowDiagramProperties } from \"./FlowDiagram\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SankeyNode } from \"../elements/SankeyNode\";\r\nimport { SankeyLink } from \"../elements/SankeyLink\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $object from \"../../core/utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SankeyDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SankeyDiagramDataItem extends FlowDiagramDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SankeyDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: SankeyLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t */\r\n\tpublic fromNode: SankeyNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t */\r\n\tpublic toNode: SankeyNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyDiagramDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SankeyDiagram]].\r\n */\r\nexport interface ISankeyDiagramDataFields extends IFlowDiagramDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t */\r\n\tcolor?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[SankeyDiagram]]\r\n */\r\nexport interface ISankeyDiagramProperties extends IFlowDiagramProperties {\r\n\r\n\t/**\r\n\t * Sort nodes by name or value or do not sort at all\r\n\t */\r\n\tnodeAlign?: \"top\" | \"bottom\" | \"middle\";\r\n\r\n\r\n\t/**\r\n\t * Orientation of the chart.\r\n\t */\r\n\torientation?: Orientation;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyDiagram]].\r\n */\r\nexport interface ISankeyDiagramEvents extends IFlowDiagramEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyDiagramAdapters extends IFlowDiagramAdapters, ISankeyDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Sankey Diagram chart.\r\n *\r\n * @see {@link ISankeyDiagramEvents} for a list of available Events\r\n * @see {@link ISankeyDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sankey-diagram/} for documentation\r\n * @important\r\n */\r\nexport class SankeyDiagram extends FlowDiagram {\r\n\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ISankeyDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISankeyDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISankeyDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISankeyDiagramEvents;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: SankeyLink;\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _levelSum: { [index: number]: number };\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _levelNodesCount: { [index: number]: number };\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node: SankeyNode;\r\n\r\n\t/**\r\n\t * [maxSum description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic maxSum: number;\r\n\r\n\t/**\r\n\t * level with max sum\r\n\t */\r\n\tprotected _maxSumLevel: number;\r\n\r\n\t/**\r\n\t * [valueHeight description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _valueHeight: number;\r\n\r\n\t/**\r\n\t * A total number of levels, present on this chart.\r\n\t */\r\n\tprotected _levelCount: number;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, this[\"_node\"]]>;\r\n\r\n\tprotected _heightAnimation: Animation;\r\n\r\n\tprotected _level: number;\r\n\r\n\tprotected _counter: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyDiagram\";\r\n\t\tthis.orientation = \"horizontal\";\r\n\t\tthis.nodeAlign = \"middle\";\r\n\r\n\t\tthis.nodesContainer.width = percent(100);\r\n\t\tthis.nodesContainer.height = percent(100);\r\n\r\n\t\tthis.linksContainer.width = percent(100);\r\n\t\tthis.linksContainer.height = percent(100);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart's data, effectively causing the chart to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis._valueHeight = undefined;\t\t\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis._levelCount = 0;\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tnode.level = undefined;\r\n\t\t});\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tnode.level = this.getNodeLevel(node, 0);\r\n\t\t\tthis._levelCount = $math.max(this._levelCount, node.level);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns node's highest level.\r\n\t *\r\n\t * @param node   Node\r\n\t * @param level  Current level\r\n\t * @return New level\r\n\t */\r\n\tprotected getNodeLevel(node: this[\"_node\"], level: number): number {\r\n\t\tlet levels: number[] = [level];\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (link) => {\r\n\t\t\tif (link.fromNode) {\r\n\t\t\t\tif ($type.isNumber(link.fromNode.level)) {\r\n\t\t\t\t\tlevels.push(link.fromNode.level + 1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._counter = 0;\r\n\t\t\t\t\tthis.checkLoop(link.fromNode);\r\n\t\t\t\t\tif (this._counter < this.dataItems.length) {\r\n\t\t\t\t\t\tlevels.push(this.getNodeLevel(link.fromNode, level + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn Math.max(...levels);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there's no loop in the ancestor chain.\r\n\t * \r\n\t * @param  node  Node\r\n\t */\r\n\tprotected checkLoop(node: this[\"_node\"]): void {\r\n\t\tthis._counter++;\r\n\r\n\t\tif (this._counter > this.dataItems.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (link) => {\r\n\t\t\tthis.checkLoop(link.fromNode);\r\n\t\t})\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates relation between pixel height and total value.\r\n\t *\r\n\t * In Sankey the actual thickness of links and height of nodes will depend\r\n\t * on their values.\r\n\t */\r\n\tprotected calculateValueHeight() {\r\n\t\t// calculate sums of each level\r\n\t\tthis._levelSum = {};\r\n\t\tthis._levelNodesCount = {};\r\n\t\tthis.maxSum = 0;\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t});\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tlet level = node.level;\r\n\r\n\t\t\tlet value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n\r\n\r\n\t\t\tif (value / total < this.minNodeSize) {\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._levelSum[level])) {\r\n\t\t\t\tthis._levelSum[level] += value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._levelSum[level] = value;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._levelNodesCount[level])) {\r\n\t\t\t\tthis._levelNodesCount[level]++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._levelNodesCount[level] = 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tlet availableHeight: number;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tavailableHeight = this.chartContainer.maxHeight - 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tavailableHeight = this.chartContainer.maxWidth - 1;\r\n\t\t}\r\n\r\n\r\n\t\tlet maxSumLevel: number;\r\n\t\tlet minHeight: number;\r\n\r\n\t\t$object.each(this._levelSum, (key, value) => {\r\n\t\t\tlet realValue = value;\r\n\r\n\t\t\tlet levelNodeCount = this._levelNodesCount[key];\r\n\t\t\tlet valueHeight = (availableHeight - (levelNodeCount - 1) * this.nodePadding) / realValue;\r\n\r\n\t\t\tif (valueHeight == Infinity) {\r\n\t\t\t\tvalueHeight = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (minHeight > valueHeight || !$type.isNumber(minHeight)) {\r\n\t\t\t\tminHeight = valueHeight;\r\n\t\t\t\tthis.maxSum = realValue;\r\n\t\t\t\tmaxSumLevel = $type.toNumber(key);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._maxSumLevel = maxSumLevel;\r\n\r\n\t\tlet maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n\r\n\t\tlet valueHeight = (availableHeight - (maxSumLevelNodeCount - 1) * this.nodePadding) / this.maxSum;\r\n\r\n\t\tif (valueHeight == Infinity) {\r\n\t\t\tvalueHeight = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(this.valueHeight)) {\r\n\t\t\tthis.valueHeight = valueHeight;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet finalHeight;\r\n\t\t\ttry {\r\n\t\t\t\tfinalHeight = this._heightAnimation.animationOptions[0].to;\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\r\n\t\t\t}\r\n\t\t\t// without animations it will be non-smooth as maxValue jumps from one column to another\r\n\t\t\tif (finalHeight != valueHeight) {\r\n\t\t\t\tlet duration = this.interpolationDuration;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tduration = this.nodes.template.states.getKey(\"active\").transitionDuration;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._heightAnimation = new Animation(this, { property: \"valueHeight\", from: this.valueHeight, to: valueHeight }, duration, this.interpolationEasing).start();\r\n\t\t\t\tthis._disposers.push(this._heightAnimation);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.calculateValueHeight();\r\n\r\n\t\tlet container = this.nodesContainer;\r\n\r\n\t\tlet nextCoordinate: { [index: number]: number } = {};\r\n\r\n\t\tlet maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\r\n\t\tlet availableHeight: number;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tavailableHeight = this.chartContainer.maxHeight - 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tavailableHeight = this.chartContainer.maxWidth - 1;\r\n\t\t}\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet level = node.level;\r\n\t\t\tlet levelCoordinate: number = 0;\r\n\r\n\t\t\tlet nodeCount = this._levelNodesCount[level];\r\n\r\n\t\t\tswitch (this.nodeAlign) {\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tlevelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight - (nodeCount - maxSumLevelNodeCount) * this.nodePadding;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tlevelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight / 2 - (nodeCount - maxSumLevelNodeCount) * this.nodePadding / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.maxSum == 0) {\r\n\t\t\t\tswitch (this.nodeAlign) {\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tlevelCoordinate = availableHeight - nodeCount * (this.minNodeSize * availableHeight + this.nodePadding);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tlevelCoordinate = availableHeight / 2 - nodeCount / 2 * (this.minNodeSize * availableHeight + this.nodePadding);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnode.parent = container;\r\n\r\n\t\t\tlet delta: number;\r\n\t\t\tlet x: number;\r\n\t\t\tlet y: number;\r\n\r\n\t\t\tlet value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n\r\n\t\t\tif (value / total < this.minNodeSize) {\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tdelta = (this.innerWidth - node.pixelWidth) / this._levelCount;\r\n\r\n\t\t\t\tx = delta * node.level;\r\n\t\t\t\ty = nextCoordinate[level] || levelCoordinate;\r\n\r\n\t\t\t\tlet h = value * this.valueHeight;\r\n\r\n\t\t\t\tif (total == 0 && h == 0) {\r\n\t\t\t\t\th = this.minNodeSize * availableHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.height = h;\r\n\t\t\t\tnode.minX = x;\r\n\t\t\t\tnode.maxX = x;\r\n\t\t\t\tnextCoordinate[level] = y + h + this.nodePadding;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdelta = (this.innerHeight - node.pixelHeight) / this._levelCount;\r\n\r\n\t\t\t\tx = nextCoordinate[level] || levelCoordinate;\r\n\t\t\t\ty = delta * node.level;\r\n\r\n\t\t\t\tlet w = value * this.valueHeight;\r\n\r\n\t\t\t\tif (total == 0 && w == 0) {\r\n\t\t\t\t\tw = this.minNodeSize * availableHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.width = w;\r\n\t\t\t\tnode.minY = y;\r\n\t\t\t\tnode.maxY = y;\r\n\t\t\t\tnextCoordinate[level] = x + w + this.nodePadding;\r\n\t\t\t}\r\n\t\t\tnode.x = x;\r\n\t\t\tnode.y = y;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Performs actual operations to reveal this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param duration Fade in duration (ms)\r\n\t * @return Fade in duration (ms)\r\n\t */\r\n\tprotected showReal(duration?: number): $type.Optional<Animation> {\r\n\r\n\t\tif (this.preventShow) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.interpolationDuration > 0) {\r\n\t\t\tlet container = this.nodesContainer;\r\n\r\n\t\t\tlet i: number = 0;\r\n\r\n\t\t\t$iter.each(this.links.iterator(), (link) => {\r\n\t\t\t\tlink.hide(0);\r\n\t\t\t})\r\n\r\n\t\t\t$iter.each(this._sorted, (strNode) => {\r\n\r\n\t\t\t\tlet node = strNode[1];\r\n\r\n\t\t\t\tlet property: \"dx\" | \"dy\";\r\n\r\n\t\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\t\tnode.dx = -(container.pixelWidth - node.pixelWidth) / Math.max(this._levelCount, 1);\r\n\t\t\t\t\tproperty = \"dx\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.dy = -(container.pixelHeight - node.pixelHeight) / Math.max(this._levelCount, 1);\r\n\t\t\t\t\tproperty = \"dy\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet delay = 0;\r\n\t\t\t\tlet duration = this.interpolationDuration;\r\n\t\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\t\tdelay = this.sequencedInterpolationDelay * i + duration * i / $iter.length(this.nodes.iterator());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.opacity = 0;\r\n\t\t\t\tnode.invalidateLinks();\r\n\r\n\t\t\t\tnode.animate([{ property: \"opacity\", from: 0, to: 1 }, { property: property, to: 0 }], this.interpolationDuration, this.interpolationEasing).delay(delay);\r\n\r\n\t\t\t\t$iter.each(node.outgoingDataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\tlet animation = dataItem.link.show(this.interpolationDuration);\r\n\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t$iter.each(node.incomingDataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\t\t\tlet animation = dataItem.link.show(this.interpolationDuration);\r\n\t\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn super.showReal();\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the sort type of the nodes.\r\n\t *\r\n\t * This will actually reshuffle nodes using nice animation.\r\n\t */\r\n\tprotected changeSorting() {\r\n\t\tthis.sortNodes();\r\n\r\n\t\tlet nextCoordinate: { [index: number]: number } = {};\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet level = node.level;\r\n\r\n\t\t\tlet levelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight / 2;\r\n\r\n\t\t\tlet property: \"x\" | \"y\";\r\n\t\t\tlet nodeHeight: number;\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tproperty = \"y\";\r\n\t\t\t\tnodeHeight = node.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tproperty = \"x\";\r\n\t\t\t\tnodeHeight = node.pixelWidth;\r\n\t\t\t}\r\n\r\n\t\t\tnode.animate({ property: property, to: nextCoordinate[level] || levelCoordinate }, this.interpolationDuration, this.interpolationEasing);\r\n\t\t\tnextCoordinate[level] = (nextCoordinate[level] || levelCoordinate) + nodeHeight + this.nodePadding;\r\n\r\n\t\t\tnode.invalidateLinks();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Sankey diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SankeyDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * How to align nodes. In case layout is vertical, top means left and bottom means right\r\n\t *\r\n\t * @param value  Node sorting\r\n\t */\r\n\tpublic set nodeAlign(value: \"top\" | \"middle\" | \"bottom\") {\r\n\t\tthis.setPropertyValue(\"nodeAlign\", value);\r\n\t\tthis.changeSorting();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Returns nodeAlign value\r\n\t */\r\n\tpublic get nodeAlign(): \"top\" | \"middle\" | \"bottom\" {\r\n\t\treturn this.getPropertyValue(\"nodeAlign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the chart: \"horizontal\" or \"vertical\";\r\n\t *\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet nameLabel = this.nodes.template.nameLabel;\r\n\r\n\t\tif (value == \"vertical\") {\r\n\t\t\tthis.nodes.template.width = undefined;\r\n\t\t\tnameLabel.label.horizontalCenter = \"middle\";\r\n\t\t\tnameLabel.locationX = 0.5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.nodes.template.height = undefined;\r\n\t\t\tnameLabel.label.horizontalCenter = \"left\";\r\n\t\t\tnameLabel.locationX = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode(): this[\"_node\"] {\r\n\t\tlet node = new SankeyNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink(): this[\"_link\"] {\r\n\t\tlet link = new SankeyLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get valueHeight(): number {\r\n\t\treturn this._valueHeight;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set valueHeight(value: number) {\r\n\t\tif (value != this._valueHeight) {\r\n\t\t\tthis._valueHeight = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tdisposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis._sorted = this.nodes.iterator();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyDiagram\"] = SankeyDiagram;\r\n","/**\r\n * ChordNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode, IFlowDiagramNodeAdapters, IFlowDiagramNodeEvents, IFlowDiagramNodeProperties } from \"./FlowDiagramNode\";\r\nimport { ChordDiagram, ChordDiagramDataItem } from \"../types/ChordDiagram\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ChordNode]].\r\n */\r\nexport interface IChordNodeProperties extends IFlowDiagramNodeProperties { }\r\n\r\n/**\r\n * Defines events for [[ChordNode]].\r\n */\r\nexport interface IChordNodeEvents extends IFlowDiagramNodeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ChordNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChordNodeAdapters extends IFlowDiagramNodeAdapters, IChordNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Chord Diagram.\r\n *\r\n * A Chord node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[ChordLink]] elements.\r\n *\r\n * @see {@link IChordNodeEvents} for a list of available events\r\n * @see {@link IChordNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ChordNode extends FlowDiagramNode {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChordNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChordNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChordNodeEvents;\r\n\r\n\t/**\r\n\t * A list of data items of the items coming in from another node, one level\r\n\t * up.\r\n\t *\r\n\t * These are what ingoing links are build out of.\r\n\t */\r\n\tprotected _incomingDataItems: List<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * A list of data items of the items going out of the node.\r\n\t *\r\n\t * These are what outgoing links are build out of.\r\n\t */\r\n\tprotected _outgoingDataItems: List<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * Sorted list of incoming items.\r\n\t */\r\n\tprotected _incomingSorted: $iter.Iterator<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * Sorted list of outgoing items.\r\n\t */\r\n\tprotected _outgoingSorted: $iter.Iterator<ChordDiagramDataItem>;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t */\r\n\tpublic chart: ChordDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[ChordDiagramDataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: ChordDiagramDataItem;\r\n\r\n\r\n\t/**\r\n\t * Slice sprite of a node\r\n\t */\r\n\tpublic slice: Slice;\r\n\r\n\t/**\r\n\t * A label element which shows node's name.\r\n\t */\r\n\tpublic label: AxisLabelCircular;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic nextAngle: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic trueStartAngle: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordNode\";\r\n\r\n\t\tlet label = this.createChild(AxisLabelCircular);\r\n\t\tlabel.location = 0.5;\r\n\t\tlabel.radius = 5;\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.zIndex = 1;\r\n\t\tlabel.shouldClone = false;\r\n\t\tthis.label = label;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.events.on(\"positionchanged\", this.updateRotation, this, false);\r\n\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.slice = this.createChild(Slice);\r\n\t\tthis.slice.isMeasured = false;\r\n\r\n\t\tlet hiddenState = this.hiddenState;\r\n\t\thiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\thiddenState.properties.opacity = 0.5;\r\n\t\thiddenState.properties.visible = true;\r\n\r\n\t\tthis.setStateOnChildren = false;\r\n\r\n\t\tthis.slice.hiddenState.properties.visible = true;\r\n\r\n\t\tthis.adapter.add(\"tooltipX\", (tooltipX, target)=>{\r\n\t\t    return target.slice.ix * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n\t\t})\r\n\r\n\t\tthis.adapter.add(\"tooltipY\", (tooltipY, target)=>{\r\n\t\t    return target.slice.iy * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\t\tsuper.invalidateLinks();\r\n\r\n\t\tlet label = this.label;\r\n\t\tlet slice = this.slice;\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart && slice) {\r\n\r\n\t\t\tlet sum = this.total;\r\n\t\t\tlet arc = slice.arc;\r\n\t\t\tlet sliceStartAngle = slice.startAngle;\r\n\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tif (child instanceof Bullet) {\r\n\t\t\t\t\tlet locationX = child.locationX;\r\n\t\t\t\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\t\t\t\tlocationX = 0.5;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet locationY = child.locationY;\r\n\t\t\t\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\t\t\t\tlocationY = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet childAngle = sliceStartAngle + arc * locationX;\r\n\t\t\t\t\tlet childRadius = locationY * slice.radius;\r\n\r\n\t\t\t\t\tchild.x = childRadius * $math.cos(childAngle);\r\n\t\t\t\t\tchild.y = childRadius * $math.sin(childAngle);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\tlet labelAngle = sliceStartAngle + arc * label.location;\r\n\t\t\tlet startAngle = sliceStartAngle + (1 - sum / this.adjustedTotal) * arc * 0.5; // if value of a node is > then sum of the links, add to center link\r\n\r\n\t\t\tif ($type.isNaN(startAngle)) {\r\n\t\t\t\tstartAngle = sliceStartAngle;\r\n\t\t\t}\r\n\r\n\t\t\tlabel.fixPosition(labelAngle, slice.radius);\r\n\r\n\t\t\tthis.nextAngle = startAngle;\r\n\r\n\t\t\tif (this._outgoingSorted) {\r\n\r\n\t\t\t\t$iter.each(this._outgoingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\tif (chart.nonRibbon) {\r\n\t\t\t\t\t\t\tlet percentWidth = link.percentWidth;\r\n\t\t\t\t\t\t\tif (!$type.isNumber(percentWidth)) {\r\n\t\t\t\t\t\t\t\tpercentWidth = 5;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpercentWidth = percentWidth / 100;\r\n\r\n\t\t\t\t\t\t\tlink.startAngle = sliceStartAngle + arc / 2 - arc / 2 * percentWidth;\r\n\t\t\t\t\t\t\tlink.arc = arc * percentWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlink.arc = value * chart.valueAngle;\r\n\t\t\t\t\t\t\tlink.startAngle = this.nextAngle;\r\n\t\t\t\t\t\t\tthis.nextAngle += link.arc;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\t\t\t\tlink.endAngle = link.startAngle;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.radius = slice.pixelInnerRadius;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//link.validate();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this._incomingSorted) {\r\n\t\t\t\t$iter.each(this._incomingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\r\n\t\t\t\t\tlink.radius = slice.pixelInnerRadius;\r\n\r\n\t\t\t\t\tif (chart.nonRibbon) {\r\n\t\t\t\t\t\tlet percentWidth = link.percentWidth;\r\n\t\t\t\t\t\tif (!$type.isNumber(percentWidth)) {\r\n\t\t\t\t\t\t\tpercentWidth = 5;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpercentWidth = percentWidth / 100;\r\n\r\n\t\t\t\t\t\tlink.endAngle = sliceStartAngle + arc / 2 - arc / 2 * percentWidth;\r\n\t\t\t\t\t\tlink.arc = arc * percentWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlink.endAngle = this.nextAngle;\r\n\t\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tlink.arc = value * chart.valueAngle; // yes, this is needed\r\n\t\t\t\t\t\t\tthis.nextAngle += link.arc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\t\t\tlink.startAngle = link.endAngle;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//link.validate();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * updates slice start angle so that when we drag a node it would face the center\r\n\t */\r\n\tprotected updateRotation() {\r\n\t\tlet slice = this.slice;\r\n\t\tlet mAngle = this.trueStartAngle + slice.arc / 2;\r\n\t\tlet radius = slice.radius;\r\n\r\n\t\tlet tx = radius * $math.cos(mAngle);\r\n\t\tlet ty = radius * $math.sin(mAngle);\r\n\r\n\t\tlet angle = $math.getAngle({ x: tx + this.pixelX, y: ty + this.pixelY });\r\n\r\n\t\tslice.startAngle = this.trueStartAngle + (angle - mAngle);\r\n\r\n\t\tthis.dx = - this.pixelX;\r\n\t\tthis.dy = - this.pixelY;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies properties and labels from another [[ChordNode]].\r\n\t *\r\n\t * @param source  Source node\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.label.copyFrom(source.label);\r\n\t\tthis.slice.copyFrom(source.slice);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordNode\"] = ChordNode;\r\n","/**\r\n * Functionality for drawing quadratic curves.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Line, ILineProperties, ILineAdapters, ILineEvents } from \"./Line\";\r\nimport { IPoint, IOrientationPoint } from \"../defs/IPoint\";\r\nimport { color } from \"../utils/Color\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available properties for [[QuadraticCurve]].\r\n */\r\nexport interface IQuadraticCurveProperties extends ILineProperties {\r\n\t/**\r\n\t * X coordinate of control point.\r\n\t */\r\n\tcpx?: number;\r\n\r\n\t/**\r\n\t * Y coordinate of control point.\r\n\t */\r\n\tcpy?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[QuadraticCurve]].\r\n */\r\nexport interface IQuadraticCurveEvents extends ILineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[QuadraticCurve]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IQuadraticCurveAdapters extends ILineAdapters, IQuadraticCurveProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IQuadraticCurveEvents} for a list of available events\r\n * @see {@link IQuadraticCurveAdapters} for a list of available Adapters\r\n */\r\nexport class QuadraticCurve extends Line {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IQuadraticCurveProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IQuadraticCurveAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IQuadraticCurveEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"QuadraticCurve\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.pixelPerfect = false;\r\n\r\n\t\tthis.fill = color();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\t//super.draw();\r\n\t\tif($type.isNumber(this.x1 + this.x2 + this.y1 + this.y2 + this.cpx + this.cpy )){\r\n\r\n\t\t\tlet p1: IPoint = { x: this.x1, y: this.y1 };\r\n\t\t\tlet p2: IPoint = { x: this.x2, y: this.y2 };\r\n\t\t\tlet cp: IPoint = { x: this.cpx, y: this.cpy };\r\n\r\n\t\t\tlet d: string = $path.moveTo(p1) + $path.quadraticCurveTo(p2, cp);\r\n\r\n\t\t\tthis.path = d;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate of control point.\r\n\t *\r\n\t * @param value X\r\n\t */\r\n\tpublic set cpx(value: number) {\r\n\t\tthis.setPropertyValue(\"cpx\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get cpx(): number {\r\n\t\treturn this.getPropertyValue(\"cpx\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate of control point.\r\n\t *\r\n\t * @param value Y\r\n\t */\r\n\tpublic set cpy(value: number) {\r\n\t\tthis.setPropertyValue(\"cpy\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get cpy(): number {\r\n\t\treturn this.getPropertyValue(\"cpy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tlet p1 = {x:this.x1, y:this.y1};\r\n\t\tlet cp = {x:this.cpx, y:this.cpy};\r\n\t\tlet p2 = {x:this.x2, y:this.y2};\r\n\r\n\t\tlet point1 = $math.getPointOnQuadraticCurve(p1, p2, cp, position);\r\n\t\tlet point2 = $math.getPointOnQuadraticCurve(p1, p2, cp, position + 0.001);\r\n\r\n\t\treturn {x:point1.x, y:point1.y, angle:$math.getAngle(point1, point2)};\r\n\t}\r\n}\r\n","/**\r\n * ChordLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ChordDiagramDataItem } from \"../types/ChordDiagram\";\r\nimport { FlowDiagramLink, IFlowDiagramLinkAdapters, IFlowDiagramLinkEvents, IFlowDiagramLinkProperties } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { QuadraticCurve } from \"../../core/elements/QuadraticCurve\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ChordLink]].\r\n */\r\nexport interface IChordLinkProperties extends IFlowDiagramLinkProperties {\r\n\r\n\t/**\r\n\t * [radius description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tradius?: number;\r\n\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tarc?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[ChordLink]].\r\n */\r\nexport interface IChordLinkEvents extends IFlowDiagramLinkEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ChordLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChordLinkAdapters extends IFlowDiagramLinkAdapters, IChordLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Chord Diagram.\r\n *\r\n * @see {@link IChordLinkEvents} for a list of available events\r\n * @see {@link IChordLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ChordLink extends FlowDiagramLink {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChordLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChordLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChordLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t */\r\n\tpublic _dataItem: ChordDiagramDataItem;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n     */\r\n\tpublic middleLine: QuadraticCurve;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordLink\";\r\n\r\n\t\tthis.middleLine = this.createChild(QuadraticCurve);\r\n\t\tthis.middleLine.shouldClone = false;\r\n\t\tthis.middleLine.strokeOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates (redraws) the link.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tif (!this.isTemplate) {\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet endAngle = this.endAngle;\r\n\r\n\t\t\tlet arc = this.arc;\r\n\t\t\tlet radius = this.radius;\r\n\r\n\t\t\tlet fromNode = this.dataItem.fromNode;\r\n\t\t\tlet toNode = this.dataItem.toNode;\r\n\r\n\t\t\tlet fromX = 0;\r\n\t\t\tlet fromY = 0;\r\n\r\n\t\t\tif (fromNode) {\r\n\t\t\t\tfromX = fromNode.pixelX + fromNode.dx;\r\n\t\t\t\tfromY = fromNode.pixelY + fromNode.dy;\r\n\t\t\t}\r\n\r\n\t\t\tlet toX = 0;\r\n\t\t\tlet toY = 0;\r\n\r\n\t\t\tif (toNode) {\r\n\t\t\t\ttoX = toNode.pixelX + toNode.dx;\r\n\t\t\t\ttoY = toNode.pixelY + toNode.dy;\r\n\t\t\t}\r\n\r\n\t\t\tif (radius > 0) {\r\n\t\t\t\tlet x1 = radius * $math.cos(startAngle) + fromX;\r\n\t\t\t\tlet y1 = radius * $math.sin(startAngle) + fromY;\r\n\t\t\t\tlet x2 = radius * $math.cos(endAngle) + toX;\r\n\t\t\t\tlet y2 = radius * $math.sin(endAngle) + toY;\r\n\r\n\t\t\t\t//let cpAngle = startAngle + arc + (endAngle - startAngle - arc) / 2;\r\n\t\t\t\t//let arcWidth = $math.getDistance({x:x1, y:y1}, {x:x4, y:y4});\r\n\r\n\t\t\t\t//let cpx = (arcWidth) * $math.cos(cpAngle);\r\n\t\t\t\t//let cpy = (arcWidth) * $math.sin(cpAngle);\r\n\r\n\t\t\t\tlet cp = { x: 0, y: 0 };\r\n\t\t\t\tlet path = $path.moveTo({ x: x1, y: y1 });\r\n\r\n\t\t\t\tpath += $path.arcTo(startAngle, arc, radius);\r\n\t\t\t\tpath += $path.quadraticCurveTo({ x: x2, y: y2 }, cp);\r\n\t\t\t\tpath += $path.arcTo(endAngle, arc, radius);\r\n\t\t\t\tpath += $path.quadraticCurveTo({ x: x1, y: y1 }, cp);\r\n\r\n\t\t\t\tif (arc > 0) {\r\n\t\t\t\t\tthis.link.path = path;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.link.path = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.maskBullets) {\r\n\t\t\t\t\tthis.bulletsMask.path = path;\r\n\t\t\t\t\tthis.bulletsContainer.mask = this.bulletsMask;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet mAngle1 = startAngle + arc / 2;\r\n\t\t\t\tlet mAngle2 = endAngle + arc / 2;\r\n\r\n\t\t\t\tlet middleLine = this.middleLine;\r\n\r\n\t\t\t\tmiddleLine.x1 = radius * $math.cos(mAngle1) + fromX;\r\n\t\t\t\tmiddleLine.y1 = radius * $math.sin(mAngle1) + fromY;\r\n\t\t\t\tmiddleLine.x2 = radius * $math.cos(mAngle2) + toX;\r\n\t\t\t\tmiddleLine.y2 = radius * $math.sin(mAngle2) + toY;\r\n\r\n\t\t\t\tmiddleLine.cpx = 0;\r\n\t\t\t\tmiddleLine.cpy = 0;\r\n\r\n\t\t\t\tmiddleLine.stroke = this.fill;\r\n\r\n\t\t\t\tthis.positionBullets();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * [radius description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value End Y\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.setPropertyValue(\"radius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End Y\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set arc(value: number) {\r\n\t\tthis.setPropertyValue(\"arc\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get arc(): number {\r\n\t\treturn this.getPropertyValue(\"arc\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordLink\"] = ChordLink;\r\n","/**\r\n * Chord diagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagram, FlowDiagramDataItem, IFlowDiagramAdapters, IFlowDiagramDataFields, IFlowDiagramEvents, IFlowDiagramProperties } from \"./FlowDiagram\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { DictionaryTemplate } from \"../../core/utils/Dictionary\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ChordNode } from \"../elements/ChordNode\";\r\nimport { ChordLink } from \"../elements/ChordLink\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ChordDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChordDiagramDataItem extends FlowDiagramDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ChordDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: ChordLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t */\r\n\tpublic fromNode: ChordNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t */\r\n\tpublic toNode: ChordNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordDiagramDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ChordDiagram]].\r\n */\r\nexport interface IChordDiagramDataFields extends IFlowDiagramDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t */\r\n\tcolor?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[ChordDiagram]]\r\n */\r\nexport interface IChordDiagramProperties extends IFlowDiagramProperties {\r\n\t/**\r\n\t * Radius of the Chord. Absolute or relative.\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n\t/**\r\n\t * Inner radius of the Chord nodes. Absolute or relative. Negative value means that the inner radius will be calculated from the radius, not from the center.\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * An angle radar face starts on. (degrees)\r\n\t *\r\n\t * @default -90\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * An angle radar face ends on. (degrees)\r\n\t *\r\n\t * @default 270\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\r\n\t/**\r\n\t * If you set this to true, all the lines will be of the same width.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tnonRibbon?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[ChordDiagram]].\r\n */\r\nexport interface IChordDiagramEvents extends IFlowDiagramEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ChordDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChordDiagramAdapters extends IFlowDiagramAdapters, IChordDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Chord Diagram chart.\r\n *\r\n * @see {@link IChordDiagramEvents} for a list of available Events\r\n * @see {@link IChordDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/chord-diagram/} for documentation\r\n * @important\r\n */\r\nexport class ChordDiagram extends FlowDiagram {\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t */\r\n\tpublic _dataItem: ChordDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IChordDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChordDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChordDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChordDiagramEvents;\r\n\r\n\t/**\r\n\t * A list of chart's Chord nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, ChordNode>}\r\n\t */\r\n\tpublic nodes: DictionaryTemplate<string, ChordNode>;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t */\r\n\tpublic _link: ChordLink;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, ChordNode]>;\r\n\r\n\t/**\r\n\t * [valueAngle description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic valueAngle: number = 0;\r\n\r\n\t/**\r\n\t * A container for chord elemens.\r\n\t */\r\n\tpublic chordContainer:Container;\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node:ChordNode;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ChordDiagram\";\r\n\r\n\t\tthis.startAngle = -90;\r\n\t\tthis.endAngle = 270;\r\n\r\n\t\tthis.radius = percent(80);\r\n\r\n\t\tthis.innerRadius = - 15;\r\n\r\n\t\tthis.nodePadding = 5;\r\n\r\n\t\tlet chordContainer = this.chartContainer.createChild(Container);\r\n\t\tchordContainer.align = \"center\";\r\n\t\tchordContainer.valign = \"middle\";\r\n\t\tchordContainer.shouldClone = false;\r\n\t\tchordContainer.layout = \"absolute\";\r\n\t\tthis.chordContainer = chordContainer;\r\n\r\n\t\tthis.nodesContainer.parent = chordContainer;\r\n\t\tthis.linksContainer.parent = chordContainer;\r\n\r\n\t\tthis.chartContainer.events.on(\"maxsizechanged\", this.invalidate, this, false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tlet chartContainer = this.chartContainer;\r\n\r\n\t\tlet endAngle = this.endAngle;\r\n\t\tlet startAngle = this.startAngle + this.nodePadding / 2;\r\n\r\n\t\tlet rect = $math.getArcRect(this.startAngle, this.endAngle, 1);\r\n\t\tlet innerRect: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t\trect = $math.getCommonRectangle([rect, innerRect]);\r\n\r\n\t\tlet maxRadius = Math.min(chartContainer.innerWidth / rect.width, chartContainer.innerHeight / rect.height);\r\n\r\n\t\tif(!$type.isNumber(maxRadius)){\r\n\t\t\tmaxRadius = 0;\r\n\t\t}\r\n\r\n\t\tlet radius = $utils.relativeRadiusToValue(this.radius, maxRadius);\r\n\t\tlet pixelInnerRadius = $utils.relativeRadiusToValue(this.innerRadius, radius, true);\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\t\tlet count = 0;\r\n\r\n\t\tlet newTotal = 0;\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t\tcount++;\r\n\t\t\tlet value = node.total;\r\n\t\t\tif(node.total / total < this.minNodeSize){\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\t\t\tnewTotal += value;\r\n\t\t});\r\n\r\n\t\tthis.valueAngle = (endAngle - this.startAngle - this.nodePadding * count) / newTotal;\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet slice = node.slice;\r\n\r\n\t\t\tslice.radius = radius;\r\n\t\t\tslice.innerRadius = pixelInnerRadius;\r\n\r\n\t\t\tlet value = node.total;\r\n\r\n\t\t\tif(node.total / total < this.minNodeSize){\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tnode.adjustedTotal = value;\r\n\r\n\t\t\tlet arc: number;\r\n\t\t\tif (this.nonRibbon) {\r\n\t\t\t\tarc = (endAngle - this.startAngle) / count - this.nodePadding;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tarc = this.valueAngle * value;\r\n\t\t\t}\r\n\r\n\t\t\tslice.arc = arc;\r\n\t\t\tslice.startAngle = startAngle;\r\n\t\t\tnode.trueStartAngle = startAngle;\r\n\t\t\tnode.parent = this.nodesContainer;\r\n\t\t\tnode.validate(); // otherwise flickers - nodes are already created, but not yet positioned etc.\r\n\t\t\tstartAngle += arc + this.nodePadding;\r\n\t\t})\r\n\r\n\t\tthis.chordContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };\r\n\t\tthis.chordContainer.invalidateLayout();\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chord diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ChordDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face begins (the radial axis is drawn) at the\r\n\t * top center. (at -90 degrees)\r\n\t *\r\n\t * You can use `startAngle` to change this setting.\r\n\t *\r\n\t * E.g. setting this to 0 will make the radial axis start horizontally to\r\n\t * the right, as opposed to vertical.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  Start angle (degrees)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle (degrees)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the Radar face. (degrees)\r\n\t *\r\n\t * Normally, a circular radar face ends (the radial axis is drawn) exactly\r\n\t * where it has started, forming a full 360 circle. (at 270 degrees)\r\n\t *\r\n\t * You can use `endAngle` to end the circle somewhere else.\r\n\t *\r\n\t * E.g. setting this to 180 will make the radar face end at horizontal line\r\n\t * to the left off the center.\r\n\t *\r\n\t * For a perfect circle the absolute sum of `startAngle` and `endAngle`\r\n\t * needs to be 360.\r\n\t *\r\n\t * However, it's **not** necessary to do so. You can set those to lesser\r\n\t * numbers, to create semi-circles.\r\n\t *\r\n\t * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that\r\n\t * looks like a quarter of a circle.\r\n\t *\r\n\t * @default -90\r\n\t * @param value  End angle (degrees)\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle (degrees)\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the Radar face.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the Chord nodes.\r\n\t *\r\n\t * This can either be in absolute pixel value, or relative [[Percent]].\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * If you set this to true, all the lines will be of the same width. This is done by making middleLine of a ChordLink visible.\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set nonRibbon(value: boolean) {\r\n\t\tthis.setPropertyValue(\"nonRibbon\", value, true);\r\n\t\tthis.links.template.middleLine.strokeOpacity = 1;\r\n\t\tthis.links.template.link.fillOpacity = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Non-ribbon\r\n\t */\r\n\tpublic get nonRibbon(): boolean {\r\n\t\treturn this.getPropertyValue(\"nonRibbon\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode():this[\"_node\"]{\r\n\t\tlet node = new ChordNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink():this[\"_link\"]{\r\n\t\tlet link = new ChordLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordDiagram\"] = ChordDiagram;\r\n","/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column]].\r\n */\r\nexport interface IColumnProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[Column]].\r\n */\r\nexport interface IColumnEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnAdapters extends IContainerAdapters, IColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumnEvents;\r\n\r\n\t/**\r\n\t * column element\r\n\t */\r\n\tpublic column: RoundedRectangle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realX: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realY: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column\";\r\n\r\n\t\tthis.width = percent(80);\r\n\t\tthis.height = percent(80);\r\n\r\n\t\t//this.isMeasured = true; // for correct position of the tooltip\r\n\t\tthis.events.disableType(\"transformed\"); // not to bug parent\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.createAssets();\r\n\r\n\t\t// otherwise users will have to set layout themselves if they'll want to align, scale etc children\r\n\t\tthis.events.on(\"childadded\", this.handleKidAdded, this, false);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleKidAdded() {\r\n\t\tif (this.layout == \"none\") {\r\n\t\t\tthis.layout = \"absolute\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.column = this.createChild(RoundedRectangle);\r\n\t\tthis.column.shouldClone = false;\r\n\t\tthis.column.isMeasured = false;\r\n\t\tthis.column.cornerRadius(0, 0, 0, 0);\r\n\t\tthis._disposers.push(this.column);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet column = this.column;\r\n\t\tif (column) {\r\n\t\t\tcolumn.width = $math.min(this.pixelWidth, this.maxWidth);\r\n\t\t\tcolumn.height = $math.min(this.pixelHeight, this.maxHeight);\r\n\t\t\tif(column.invalid){\r\n\t\t\t\tcolumn.validate(); // important!\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Copies all parameters from another [[Column]].\r\n\t *\r\n\t * @param source Source Column\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.column) {\r\n\t\t\tthis.column.copyFrom(source.column);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\tif (this.column) {\r\n\t\t\treturn { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: $math.min(this.pixelWidth, this.maxWidth), height: $math.min(this.pixelHeight, this.maxHeight) };\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column\"] = Column;\r\n","/**\r\n * Column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, IXYSeriesDataFields, XYSeriesDataItem, IXYSeriesProperties, IXYSeriesAdapters, IXYSeriesEvents } from \"./XYSeries\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { SpriteState } from \"../../core/SpriteState\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Column } from \"../elements/Column\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { IDataItemAdapters } from \"../../core/DataItem\";\r\n\r\n/**\r\n * Defines adapters for [[DataItem]]\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnSeriesDataItemAdapters extends IDataItemAdapters {\r\n\twidth: number | Percent;\r\n\theight: number | Percent;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ColumnSeriesDataItem extends XYSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnSeriesDataItemAdapters;\r\n\r\n\t/**\r\n\t * A Column Element\r\n\t */\r\n\tpublic _column: Column;\r\n\r\n\t/**\r\n\t * Indicates if this data items close value is lower than its open value.\r\n\t */\r\n\tpublic droppedFromOpen: boolean;\r\n\r\n\t/**\r\n\t * Indicates if this items value is lower than previous data item's value.\r\n\t */\r\n\tpublic droppedFromPrevious: boolean;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: ColumnSeries;\r\n\r\n\t/**\r\n\t * A dictionary storing axes ranges columns by axis uid\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected _rangesColumns: Dictionary<string, this[\"_column\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeriesDataItem\";\r\n\r\n\t\tthis.locations[\"dateX\"] = 0.5;\r\n\t\tthis.locations[\"dateY\"] = 0.5;\r\n\r\n\t\tthis.locations[\"categoryX\"] = 0.5;\r\n\t\tthis.locations[\"categoryY\"] = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A column used to draw a column for this data item.\r\n\t *\r\n\t * @param column\r\n\t */\r\n\tpublic set column(column: this[\"_column\"]) {\r\n\t\tthis.setColumn(column);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Column\r\n\t */\r\n\tpublic get column(): this[\"_column\"] {\r\n\t\treturn this._column;\r\n\t}\r\n\r\n\tprotected setColumn(column: this[\"_column\"]) {\r\n\t\tif (this._column && column != this._column) {\r\n\t\t\t$array.remove(this.sprites, this._column);\r\n\t\t}\r\n\t\tthis._column = column;\r\n\r\n\t\tif (column) {\r\n\t\t\tlet prevDataItem: ColumnSeriesDataItem = <any>column.dataItem;\r\n\t\t\tif (prevDataItem && prevDataItem != this) {\r\n\t\t\t\tprevDataItem.column = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(column);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t// TODO investigate why component is undefined\r\n\t\t\t\t// https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.columns.removeValue(column);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic set width(value: number | Percent) {\r\n\t\tif (this.properties.width != value) {\r\n\t\t\tthis.properties.width = value;\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.validateDataElement(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get width(): number | Percent {\r\n\t\tlet width = this.properties.width;\r\n\t\tif (this._adapterO) {\r\n\t\t\twidth = this._adapterO.apply(\"width\", width);\r\n\t\t}\r\n\t\treturn width;\r\n\t}\r\n\r\n\r\n\tpublic set height(value: number | Percent) {\r\n\t\tif (this.properties.height != value) {\r\n\t\t\tthis.properties.height = value;\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.validateDataElement(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get height(): number | Percent {\r\n\t\tlet height = this.properties.height;\r\n\t\tif (this._adapterO) {\r\n\t\t\theight = this._adapterO.apply(\"height\", height);\r\n\t\t}\r\n\t\treturn height;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A dictionary storing axes ranges columns by axis uid\r\n\t */\r\n\tpublic get rangesColumns(): Dictionary<string, this[\"_column\"]> {\r\n\t\tif (!this._rangesColumns) {\r\n\t\t\tthis._rangesColumns = new Dictionary<string, this[\"_column\"]>();\r\n\t\t}\r\n\t\treturn this._rangesColumns;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYSeries]].\r\n */\r\nexport interface IColumnSeriesDataFields extends IXYSeriesDataFields {\r\n\twidth?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[ColumnSeries]].\r\n */\r\nexport interface IColumnSeriesProperties extends IXYSeriesProperties {\r\n\r\n\t/**\r\n\t * Cluster this series columns?\r\n\t *\r\n\t * Setting to `false` will make columns overlap with other series.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tclustered?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ColumnSeries]].\r\n */\r\nexport interface IColumnSeriesEvents extends IXYSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnSeriesAdapters extends IXYSeriesAdapters, IColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class ColumnSeries extends XYSeries {\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: Column;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IColumnSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * A list of column elements.\r\n\t */\r\n\tprotected _columns: ListTemplate<this[\"_column\"]>;\r\n\r\n\t/**\r\n\t * Container to put column elements in.\r\n\t */\r\n\tprotected _columnsContainer: Container;\r\n\r\n\t/**\r\n\t * Start location within cell for columns.\r\n\t */\r\n\tprotected _startLocation: number = 0;\r\n\r\n\t/**\r\n\t * End location within cell for columns.\r\n\t */\r\n\tprotected _endLocation: number = 1;\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is lower than open value.\r\n\t */\r\n\tprotected _dropFromOpenState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is lower value of a previous\r\n\t * column.\r\n\t */\r\n\tprotected _dropFromPreviousState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is same or higher than open\r\n\t * value.\r\n\t */\r\n\tprotected _riseFromOpenState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is same or higher than value\r\n\t * of a previous column.\r\n\t */\r\n\tprotected _riseFromPreviousState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeries\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\t\tthis.fillOpacity = 1;\r\n\r\n\t\tthis.clustered = true;\r\n\r\n\t\tlet columnsContainer = this.mainContainer.createChild(Container);\r\n\t\tcolumnsContainer.shouldClone = false;\r\n\t\tcolumnsContainer.isMeasured = false;\r\n\t\tcolumnsContainer.layout = \"none\";\r\n\t\tthis._columnsContainer = columnsContainer;\r\n\r\n\t\tthis.columns.template.pixelPerfect = false;\r\n\r\n\t\tthis.tooltipColorSource = this.columns.template;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A container that columns are created in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get columnsContainer() {\r\n\t\treturn this._columnsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Column Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ColumnSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\t//@todo Check if we can do better than use `instanceof`\r\n\t\t// find start/end locations based on clustered/stacked settings\r\n\t\t// go through chart series instead of base axis series, because axis series doesn't maintain order\r\n\r\n\t\tthis.group.node.removeAttribute(\"fill\");\r\n\r\n\t\tif (this.chart && this.xAxis && this.yAxis) {\r\n\t\t\tlet baseAxisSeries = this.chart.series;\r\n\t\t\tlet clusterCount: number = 0;\r\n\t\t\tlet index: number = 0;\r\n\r\n\t\t\tlet sortedByAxis: { series: XYSeries, axis: number }[] = [];\r\n\t\t\t$iter.each(baseAxisSeries.iterator(), (series) => {\r\n\t\t\t\tif (series instanceof ColumnSeries) {\r\n\t\t\t\t\tif (this.baseAxis == series.baseAxis) {\r\n\t\t\t\t\t\tlet index: number;\r\n\t\t\t\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\t\t\t\tindex = this.chart.yAxes.indexOf(series.yAxis);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tindex = this.chart.xAxes.indexOf(series.xAxis);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsortedByAxis.push({ series: series, axis: index })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\tsortedByAxis.sort((a, b) => a.axis - b.axis);\r\n\t\t\tlet prevAxisIndex: number;\r\n\r\n\t\t\t$array.each(sortedByAxis, (sortedItem) => {\r\n\t\t\t\tlet series = sortedItem.series;\r\n\t\t\t\tif (series instanceof ColumnSeries) {\r\n\t\t\t\t\tif ((!series.stacked && series.clustered) || (prevAxisIndex != sortedItem.axis && series.clustered)) {\r\n\t\t\t\t\t\tclusterCount++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (series == this) {\r\n\t\t\t\t\t\tindex = clusterCount - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprevAxisIndex = sortedItem.axis;\r\n\t\t\t});\r\n\r\n\t\t\tif (!this.clustered) {\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tclusterCount = 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet renderer = this.baseAxis.renderer;\r\n\r\n\t\t\tlet cellStartLocation: number = renderer.cellStartLocation;\r\n\t\t\tlet cellEndLocation: number = renderer.cellEndLocation;\r\n\r\n\t\t\tthis._startLocation = cellStartLocation + (index / clusterCount) * (cellEndLocation - cellStartLocation);\r\n\t\t\tthis._endLocation = cellStartLocation + (index + 1) / clusterCount * (cellEndLocation - cellStartLocation);\r\n\r\n\t\t\tlet xAxis = this.xAxis;\r\n\t\t\tlet yAxis = this.yAxis;\r\n\r\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof ValueAxis) {\r\n\t\t\t\tif (xAxis.sortBySeries == this) {\r\n\t\t\t\t\tthis.sortCategoryAxis(xAxis, \"valueY\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (yAxis instanceof CategoryAxis && xAxis instanceof ValueAxis) {\r\n\t\t\t\tif (yAxis.sortBySeries == this) {\r\n\t\t\t\t\tthis.sortCategoryAxis(yAxis, \"valueX\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\r\n\t\tfor (let i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\r\n\t\tthis._propertiesChanged = false;\r\n\t}\r\n\r\n\tprotected sortCategoryAxis(axis: CategoryAxis, key: string) {\r\n\t\tthis.dataItems.values.sort((x, y) => {\r\n\t\t\treturn (<any>y).values[key].workingValue - (<any>x).values[key].workingValue;\r\n\t\t})\r\n\t\tlet i = 0;\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tdataItem._index = i;\r\n\t\t\ti++;\r\n\t\t})\r\n\r\n\t\taxis.dataItems.each((dataItem) => {\r\n\t\t\tlet axis = dataItem.component;\r\n\t\t\tlet currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;\r\n\r\n\t\t\tlet seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, this);\r\n\r\n\t\t\tif (seriesDataItem) {\r\n\t\t\t\tlet index = this.dataItems.indexOf(<ColumnSeriesDataItem>seriesDataItem);\r\n\r\n\t\t\t\tdataItem._index = index;\r\n\r\n\t\t\t\tlet deltaPosition = $math.round((index + 0.5) / this.dataItems.length - currentPosition, 3);\r\n\r\n\t\t\t\tif (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse if (deltaPosition != $math.round(dataItem.deltaPosition, 3)) {\r\n\t\t\t\t\tif (dataItem.deltaAnimation) {\r\n\t\t\t\t\t\tdataItem.deltaAnimation.stop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.deltaAnimation = dataItem.animate({ property: \"deltaPosition\", from: -deltaPosition, to: 0 }, axis.interpolationDuration, axis.interpolationEasing);\r\n\t\t\t\t\tthis._disposers.push(dataItem.deltaAnimation);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\taxis.dataItems.values.sort((x, y) => {\r\n\t\t\treturn x.index - y.index;\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\t// important oder here, first real, then super. we need this to know size\r\n\t\tif (this.chart && this.xAxis && this.yAxis) {\r\n\t\t\tthis.validateDataElementReal(dataItem);\r\n\t\t\tsuper.validateDataElement(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative start location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getStartLocation(dataItem: this[\"_dataItem\"]): number {\r\n\t\tlet startLocation = this._startLocation;\r\n\r\n\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\tstartLocation += dataItem.locations[this.xOpenField] - 0.5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstartLocation += dataItem.locations[this.yOpenField] - 0.5;\r\n\t\t}\r\n\t\treturn startLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\t/*\r\n   public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t   if (this.simplifiedProcessing) {\r\n\t\t   this.validateDataElement(dataItem);\r\n\t   }\r\n\t   else {\r\n\t\t   super.handleDataItemWorkingValueChange(dataItem, name);\r\n\t   }\r\n   }*/\r\n\r\n\t/**\r\n\t * Returns relative end location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getEndLocation(dataItem: this[\"_dataItem\"]): number {\r\n\t\tlet endLocation = this._endLocation;\r\n\r\n\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\tendLocation += dataItem.locations[this.xField] - 0.5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tendLocation += dataItem.locations[this.yField] - 0.5;\r\n\t\t}\r\n\t\treturn endLocation;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\t//\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\r\n\t\tlet l: number;\r\n\t\tlet r: number;\r\n\t\tlet t: number;\r\n\t\tlet b: number;\r\n\r\n\t\tlet startLocation = this.getStartLocation(dataItem);\r\n\t\tlet endLocation = this.getEndLocation(dataItem);\r\n\r\n\t\tlet xField = this.xField;\r\n\t\tlet xOpenField = this.xOpenField;\r\n\t\tlet yField = this.yField;\r\n\t\tlet yOpenField = this.yOpenField;\r\n\r\n\t\tlet template: Sprite = this.columns.template;\r\n\r\n\t\tlet percentWidth: number = template.percentWidth;\r\n\t\tlet percentHeight: number = template.percentHeight;\r\n\r\n\t\tlet pixelWidth: number = template.pixelWidth;\r\n\t\tlet pixelHeight: number = template.pixelHeight;\r\n\r\n\t\tlet maxWidth: number = template.maxWidth;\r\n\t\tlet maxHeight: number = template.maxHeight;\r\n\r\n\t\tlet paddingLeft: number = template.pixelPaddingLeft;\r\n\t\tlet paddingRight: number = template.pixelPaddingRight;\r\n\t\tlet paddingTop: number = template.pixelPaddingTop;\r\n\t\tlet paddingBottom: number = template.pixelPaddingBottom;\r\n\r\n\t\tlet outOfBounds: boolean = false;\r\n\r\n\t\tlet diw = dataItem.width;\r\n\t\tif ($type.hasValue(diw)) {\r\n\t\t\tif ($type.isNumber(diw)) {\r\n\t\t\t\tpixelWidth = diw;\r\n\t\t\t}\r\n\t\t\tif (diw instanceof Percent) {\r\n\t\t\t\tpercentWidth = diw.value * 100;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet dih = dataItem.height;\r\n\t\tif ($type.hasValue(dih)) {\r\n\t\t\tif ($type.isNumber(dih)) {\r\n\t\t\t\tpixelHeight = dih;\r\n\t\t\t}\r\n\t\t\tif (dih instanceof Percent) {\r\n\t\t\t\tpercentHeight = dih.value * 100;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// two category axes\r\n\t\tif ((this.xAxis instanceof CategoryAxis) && (this.yAxis instanceof CategoryAxis)) {\r\n\r\n\t\t\tif (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstartLocation = 0;\r\n\t\t\tendLocation = 1;\r\n\t\t\tif (!$type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tl = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n\t\t\tr = this.xAxis.getX(dataItem, xField, endLocation);\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif ($type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = ((r - l) - pixelWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case max width is set in pixels\r\n\t\t\tif (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n\t\t\t\tlet offset: number = ((r - l) - maxWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tstartLocation = 0;\r\n\t\t\tendLocation = 1;\r\n\r\n\t\t\tif (!$type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = $math.round((1 - percentHeight / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n\t\t\tb = this.yAxis.getY(dataItem, yField, endLocation);\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif ($type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = ((b - t) - pixelHeight) / 2;\r\n\t\t\t\tb += offset;\r\n\t\t\t\tt -= offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case max width is set in pixels\r\n\t\t\tif (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n\t\t\t\tlet offset: number = ((b - t) - maxHeight) / 2;\r\n\t\t\t\tb += offset;\r\n\t\t\t\tt -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tr = this.fixHorizontalCoordinate(r);\r\n\t\t\tl = this.fixHorizontalCoordinate(l);\r\n\t\t\tt = this.fixVerticalCoordinate(t);\r\n\t\t\tb = this.fixVerticalCoordinate(b);\r\n\t\t}\r\n\t\telse if (this.baseAxis == this.xAxis) {\r\n\r\n\t\t\tif (!dataItem.hasValue(this._yValueFields)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// in case width is set in percent\r\n\t\t\tif (!$type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tl = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n\t\t\tr = this.xAxis.getX(dataItem, xField, endLocation);\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif ($type.isNaN(percentWidth)) {\r\n\t\t\t\tlet offset: number = ((r - l) - pixelWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case width is set in pixels\r\n\t\t\tif (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n\t\t\t\tlet offset: number = ((r - l) - maxWidth) / 2;\r\n\t\t\t\tl += offset;\r\n\t\t\t\tr -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tlet bottomLocation = dataItem.locations[yOpenField];\r\n\t\t\tlet topLocation = dataItem.locations[yField];\r\n\t\t\t// otherwise gantt chart will start items in the middle of a cell\r\n\t\t\tif (this.yAxis instanceof ValueAxis) {\r\n\t\t\t\tif ((<any>this.dataFields)[this.yField] != (<any>this.dataFields)[this.yOpenField]) {\r\n\t\t\t\t\tbottomLocation = 0;\r\n\t\t\t\t\ttopLocation = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tb = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\r\n\t\t\tt = this.yAxis.getY(dataItem, yField, topLocation);\r\n\r\n\t\t\t// used to save location for bullets, but it's not a good approach\r\n\t\t\t// dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\r\n\r\n\t\t\tlet axisLenght = Math.ceil(this.yAxis.axisLength);\r\n\r\n\t\t\tif ((t < 0 && b < 0) || (t > axisLenght && b > axisLenght)) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.fixVerticalCoordinate(t);\r\n\t\t\tb = this.fixVerticalCoordinate(b);\r\n\r\n\t\t\tif (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// horizontal bars\r\n\t\telse {\r\n\t\t\tif (!dataItem.hasValue(this._xValueFields)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\r\n\t\t\t\tstartLocation += offset;\r\n\t\t\t\tendLocation -= offset;\r\n\t\t\t}\r\n\r\n\t\t\tt = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n\t\t\tb = this.yAxis.getY(dataItem, yField, endLocation);\r\n\r\n\t\t\t// in case height is set in pixels\r\n\t\t\tif ($type.isNaN(percentHeight)) {\r\n\t\t\t\tlet offset: number = ((b - t) - pixelHeight) / 2;\r\n\t\t\t\tb -= offset;\r\n\t\t\t\tt += offset;\r\n\t\t\t}\r\n\r\n\t\t\t// in case height is set in pixels\r\n\t\t\tif (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n\t\t\t\tlet offset: number = ((b - t) - maxHeight) / 2;\r\n\t\t\t\tb -= offset;\r\n\t\t\t\tt += offset;\r\n\t\t\t}\r\n\r\n\t\t\tlet rightLocation = dataItem.locations[xField];\r\n\t\t\tlet leftLocation = dataItem.locations[xOpenField];\r\n\r\n\t\t\t// otherwise gantt chart will start items in the middle of a cell\r\n\t\t\tif (this.xAxis instanceof ValueAxis) {\r\n\t\t\t\tif ((<any>this.dataFields)[this.xField] != (<any>this.dataFields)[this.xOpenField]) {\r\n\t\t\t\t\trightLocation = 0;\r\n\t\t\t\t\tleftLocation = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tr = this.xAxis.getX(dataItem, xField, rightLocation);\r\n\t\t\tl = this.xAxis.getX(dataItem, xOpenField, leftLocation);\r\n\t\t\t// used to save location for bullets, but it's not a good approach\r\n\t\t\t// dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\r\n\r\n\t\t\tlet axisLenght = Math.ceil(this.xAxis.axisLength);\r\n\r\n\t\t\tif ((r < 0 && l < 0) || (r > axisLenght && l > axisLenght)) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\r\n\t\t\tr = this.fixHorizontalCoordinate(r);\r\n\t\t\tl = this.fixHorizontalCoordinate(l);\r\n\r\n\t\t\tif (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\r\n\t\t\t\toutOfBounds = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet w: number = Math.abs(r - l);\r\n\t\tlet h: number = Math.abs(b - t);\r\n\r\n\t\tlet x: number = Math.min(l, r);\r\n\t\tlet y: number = Math.min(t, b);\r\n\r\n\t\tif (!outOfBounds) {\r\n\t\t\tlet column: this[\"_column\"];\r\n\t\t\tif (!dataItem.column) {\r\n\t\t\t\tcolumn = this.columns.create();\r\n\t\t\t\t//$object.forceCopyProperties(this.columns.template, column, visualProperties);\r\n\t\t\t\t$object.copyProperties(this, column, visualProperties); // need this because 3d columns are not in the same container\r\n\t\t\t\t$object.copyProperties(this.columns.template, column, visualProperties); // second time, no force, so that columns.template would override series properties\r\n\t\t\t\tdataItem.addSprite(column);\r\n\r\n\t\t\t\tdataItem.column = column;\r\n\t\t\t\tcolumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n\r\n\t\t\t\t// accessibility\r\n\t\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\t\tif (!$type.hasValue(this.role)) {\r\n\t\t\t\t\t\tthis.role = \"menu\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.hasValue(column.role)) {\r\n\t\t\t\t\t\tcolumn.role = \"menuitem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolumn.focusable = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!$type.hasValue(this.role)) {\r\n\t\t\t\t\t\tthis.role = \"list\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$type.hasValue(column.role)) {\r\n\t\t\t\t\t\tcolumn.role = \"listitem\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolumn.focusable = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (column.focusable) {\r\n\t\t\t\t\tcolumn.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = this.populateString(this.itemReaderText, dataItem);\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\tcolumn.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = \"\";\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t}\r\n\t\t\t\tif (column.hoverable) {\r\n\t\t\t\t\tcolumn.events.on(\"over\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = this.populateString(this.itemReaderText, dataItem);\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\tcolumn.events.on(\"out\", (ev) => {\r\n\t\t\t\t\t\tcolumn.readerTitle = \"\";\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t}\r\n\t\t\t\tcolumn.parent = this.columnsContainer;\r\n\t\t\t\tcolumn.virtualParent = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumn = dataItem.column;\r\n\t\t\t\tif (this._propertiesChanged) {\r\n\t\t\t\t\t$object.copyProperties(this, column, visualProperties);\r\n\t\t\t\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\t\t\t\t\t$array.each(visualProperties, (property) => {\r\n\t\t\t\t\t\t(<any>column)[property] = column[property];\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.width = w;\r\n\t\t\tcolumn.height = h;\r\n\r\n\t\t\tcolumn.x = x;\r\n\t\t\tcolumn.y = y;\r\n\r\n\t\t\tcolumn.realX = l;\r\n\t\t\tcolumn.realY = t;\r\n\r\n\t\t\tcolumn.realWidth = r - l;\r\n\t\t\tcolumn.realHeight = b - t;\r\n\r\n\t\t\tthis.setColumnStates(column);\r\n\r\n\t\t\tif (column.invalid) {\r\n\t\t\t\tcolumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n\t\t\t}\r\n\r\n\t\t\tcolumn.__disabled = false;\r\n\t\t\t//column.returnAfterTemp();\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn: this[\"_column\"] = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (!rangeColumn) {\r\n\t\t\t\t\trangeColumn = this.columns.create();\r\n\r\n\t\t\t\t\t//$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n\t\t\t\t\t$object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n\r\n\t\t\t\t\tdataItem.addSprite(rangeColumn);\r\n\t\t\t\t\tdataItem.rangesColumns.setKey(axisRange.uid, <Column>rangeColumn);\r\n\t\t\t\t\trangeColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeColumn.parent = axisRange.contents;\r\n\r\n\t\t\t\trangeColumn.width = w;\r\n\t\t\t\trangeColumn.height = h;\r\n\t\t\t\trangeColumn.x = x;\r\n\t\t\t\trangeColumn.y = y;\r\n\r\n\t\t\t\tthis.setColumnStates(rangeColumn);\r\n\r\n\t\t\t\tif (rangeColumn.invalid) {\r\n\t\t\t\t\trangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeColumn.__disabled = false;\r\n\t\t\t\t//rangeColumn.returnAfterTemp();\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\r\n\t\tdataItem.itemWidth = w;\r\n\t\tdataItem.itemHeight = h;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected disableUnusedColumns(dataItem: ColumnSeriesDataItem) {\r\n\t\tif (dataItem) {\r\n\t\t\tif (dataItem.column) {\r\n\t\t\t\t// otherwise might flicker when enabling\r\n\t\t\t\tdataItem.column.width = 0;\r\n\t\t\t\tdataItem.column.height = 0;\r\n\t\t\t\tdataItem.column.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn: Sprite = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\t// otherwise might flicker when enabling\r\n\t\t\t\t\trangeColumn.width = 0;\r\n\t\t\t\t\trangeColumn.height = 0;\r\n\t\t\t\t\trangeColumn.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Apply different state/coloring to columns based on the change value.\r\n\t *\r\n\t * @param sprite  Sprite to apply state to\r\n\t * @todo Do not apply accessibility to wicks of the candlesticks\r\n\t */\r\n\tprotected setColumnStates(sprite: Sprite): void {\r\n\t\tif (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\r\n\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>sprite.dataItem;\r\n\r\n\t\t\tif (this.xAxis instanceof ValueAxis || this.yAxis instanceof ValueAxis) {\r\n\t\t\t\tlet open: number;\r\n\t\t\t\tlet value: number;\r\n\t\t\t\tlet change: number;\r\n\r\n\t\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\t\tif (this.xOpenField && this.xField && this.xAxis instanceof ValueAxis) {\r\n\t\t\t\t\t\topen = dataItem.getValue(this.xOpenField);\r\n\t\t\t\t\t\tvalue = dataItem.getValue(this.xField);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchange = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.yOpenField && this.yField && this.yAxis instanceof ValueAxis) {\r\n\t\t\t\t\t\topen = dataItem.getValue(this.yOpenField);\r\n\t\t\t\t\t\tvalue = dataItem.getValue(this.yField);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchange = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < open) {\r\n\t\t\t\t\tdataItem.droppedFromOpen = true;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._dropFromOpenState)\r\n\t\t\t\t\tsprite.setState(this._dropFromOpenState, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdataItem.droppedFromOpen = false;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._riseFromOpenState)\r\n\t\t\t\t\tsprite.setState(this._riseFromOpenState, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (change < 0) {\r\n\t\t\t\t\tdataItem.droppedFromPrevious = true;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._dropFromPreviousState)\r\n\t\t\t\t\tsprite.setState((this._dropFromPreviousState), 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdataItem.droppedFromPrevious = false;\r\n\t\t\t\t\tsprite.defaultState.copyFrom(this._riseFromPreviousState)\r\n\t\t\t\t\tsprite.setState((this._riseFromPreviousState), 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of column elements in the series.\r\n\t *\r\n\t * @return Columns\r\n\t */\r\n\tpublic get columns(): ListTemplate<this[\"_column\"]> {\r\n\t\tif (!this._columns) {\r\n\t\t\tthis._columns = new ListTemplate<this[\"_column\"]>(this.createColumnTemplate());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._columns));\r\n\t\t\tthis._disposers.push(this._columns.template);\r\n\t\t}\r\n\t\treturn this._columns;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a column element to use as a template.\r\n\t *\r\n\t * @return Column template\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Column();\r\n\t}\r\n\r\n\t/**\r\n\t * Cluster this series columns?\r\n\t *\r\n\t * Setting to `false` will make columns overlap with other series.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Clustered?\r\n\t */\r\n\tpublic set clustered(value: boolean) {\r\n\t\tthis.setPropertyValue(\"clustered\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Clustered?\r\n\t */\r\n\tpublic get clustered(): boolean {\r\n\t\treturn this.getPropertyValue(\"clustered\");\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is lower than open value.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set dropFromOpenState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._dropFromOpenState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get dropFromOpenState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._dropFromOpenState) {\r\n\t\t\tthis._dropFromOpenState = this.states.create(\"dropFromOpenState\");\r\n\t\t}\r\n\t\treturn this._dropFromOpenState;\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is lower value of a previous\r\n\t * column.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set dropFromPreviousState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._dropFromPreviousState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get dropFromPreviousState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._dropFromPreviousState) {\r\n\t\t\tthis._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\r\n\t\t}\r\n\t\treturn this._dropFromPreviousState;\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when close value is same or higher than open\r\n\t * value.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set riseFromOpenState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._riseFromOpenState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get riseFromOpenState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._riseFromOpenState) {\r\n\t\t\tthis._riseFromOpenState = this.states.create(\"riseFromOpenState\");\r\n\t\t}\r\n\t\treturn this._riseFromOpenState;\r\n\t}\r\n\r\n\t/**\r\n\t * A state to apply to a column when its value is same or higher than value\r\n\t * of a previous column.\r\n\t *\r\n\t * Can be used to differentiate appearance based on value relations.\r\n\t *\r\n\t * @readonly You can modify state object, but can't overwrite it\r\n\t * @param  value  State\r\n\t */\r\n\tpublic set riseFromPreviousState(value: SpriteState<this[\"_properties\"], this[\"_adapter\"]>) {\r\n\t\tthis._riseFromPreviousState = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return State\r\n\t */\r\n\tpublic get riseFromPreviousState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this._riseFromPreviousState) {\r\n\t\t\tthis._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\r\n\t\t}\r\n\t\treturn this._riseFromPreviousState;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates value of the related legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\tsuper.updateLegendValue(dataItem, notRange);\r\n\r\n\t\tif (this.legendDataItem) {\r\n\t\t\tlet marker: Container = this.legendDataItem.marker;\r\n\t\t\tlet fromOpenState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\t\t\tlet fromPreviousState: SpriteState<this[\"_properties\"], this[\"_adapter\"]>;\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tif (dataItem.droppedFromOpen) {\r\n\t\t\t\t\tfromOpenState = this._dropFromOpenState;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfromOpenState = this._riseFromOpenState;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dataItem.droppedFromPrevious) {\r\n\t\t\t\t\tfromPreviousState = this._dropFromPreviousState;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfromPreviousState = this._riseFromPreviousState;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(marker.children.iterator(), (child) => {\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tchild.setState(fromPreviousState);\r\n\t\t\t\t\tchild.setState(fromOpenState);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// todo: think what to do here, maybe apply above states based on totals?\r\n\t\t\t\t\tchild.setState(this._riseFromPreviousState);\r\n\t\t\t\t\tchild.setState(this._riseFromOpenState);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\tcolumn.shouldClone = false;\r\n\t\t$object.copyProperties(this, column, visualProperties);\r\n\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\t\tcolumn.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n\t\tcolumn.width = w;\r\n\t\tcolumn.height = h;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = this.fill;\r\n\t\tlegendDataItem.colorOrig = this.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[ColumnSeries]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.columns.template.copyFrom(source.columns.template);\r\n\t}\r\n\r\n\t/**\r\n\t* returns bullet x location\r\n\t* @ignore\r\n\t*/\r\n\r\n\tprotected getBulletLocationX(bullet: Bullet, field: string): number {\r\n\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\tlet bulletLocationX = bullet.locationX;\r\n\t\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\t\tbulletLocationX = 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tlet endLocation = this.getEndLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\t\t\tlet startLocation = this.getStartLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\r\n\t\t\treturn endLocation - (endLocation - startLocation) * bulletLocationX;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.getBulletLocationX(bullet, field);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* returns bullet y location\r\n\t* @ignore\r\n\t*/\r\n\tprotected getBulletLocationY(bullet: Bullet, field: string): number {\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tlet bulletLocationY = bullet.locationY;\r\n\t\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\t\tbulletLocationY = 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tlet endLocation = this.getEndLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\t\t\tlet startLocation = this.getStartLocation(<ColumnSeriesDataItem>bullet.dataItem);\r\n\r\n\t\t\treturn endLocation - (endLocation - startLocation) * bulletLocationY;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.getBulletLocationY(bullet, field);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getAdjustedXLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationX?: number) {\r\n\t\t//if (this.baseAxis == this.xAxis) {\r\n\t\tif (!$type.isNumber(bulletLocationX)) {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tbulletLocationX = dataItem.locations[field];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbulletLocationX = 0.5;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX);\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\treturn super.getAdjustedXLocation(dataItem, field);\r\n\t\t//}\r\n\t}\r\n\r\n\tprotected getAdjustedYLocation(dataItem: this[\"_dataItem\"], field: string, bulletLocationY?: number) {\r\n\t\t//if (this.baseAxis == this.yAxis) {\r\n\t\tif (!$type.isNumber(bulletLocationY)) {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tbulletLocationY = dataItem.locations[field];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbulletLocationY = 0.5;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;\r\n\t\t//}\r\n\t\t//else {\r\n\t\t//\treturn super.getAdjustedYLocation(dataItem, field);\r\n\t\t//}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected fixVerticalCoordinate(coordinate: number): number {\r\n\t\tlet paddingBottom = this.columns.template.pixelPaddingBottom;\r\n\t\tlet paddingTop = this.columns.template.pixelPaddingTop;\r\n\r\n\t\tlet minY: number = -paddingTop;\r\n\t\tlet maxY: number = this.yAxis.axisLength + paddingBottom;\r\n\r\n\t\treturn $math.fitToRange(coordinate, minY, maxY);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected fixHorizontalCoordinate(coordinate: number): number {\r\n\t\tlet paddingLeft = this.columns.template.pixelPaddingLeft;\r\n\t\tlet paddingRight = this.columns.template.pixelPaddingRight;\r\n\r\n\t\tlet minX: number = -paddingLeft;\r\n\t\tlet maxX: number = this.xAxis.axisLength + paddingRight;\r\n\r\n\t\treturn $math.fitToRange(coordinate, minX, maxX);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis.columns.clear();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries\"] = ColumnSeries;\r\nregistry.registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;\r\n","/**\r\n * TreeMap series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesProperties, IColumnSeriesDataFields, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { TreeMap, TreeMapDataItem } from \"../types/TreeMap\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../../core/Container\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class TreeMapSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: TreeMapSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"TreeMapSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Data for the this particular item.\r\n\t *\r\n\t * @param value  Item's data\r\n\t */\r\n\t//public set dataContext(value: Object) {\r\n\t//\tthis._dataContext = value;\r\n\t//}\r\n\r\n\r\n\r\n\t/**\r\n\t * @return Item's data\r\n\t */\r\n\t/*\r\n   public get dataContext(): Object {\r\n\t   // It's because data of tree series is TreeMapDataItems.\r\n\t   if (this._dataContext) {\r\n\t\t   return (<any>this._dataContext).dataContext;\r\n\t   }\r\n   }*/\r\n\r\n\t/**\r\n\t * The name of the item's parent item.\r\n\t *\r\n\t * @return Parent name\r\n\t */\r\n\tpublic get parentName(): string {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem && treeMapDataItem.parent) {\r\n\t\t\treturn treeMapDataItem.parent.name;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Item's numeric value.\r\n\t *\r\n\t * @readonly\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem) {\r\n\t\t\treturn treeMapDataItem.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A corresponding data item from the tree map.\r\n\t *\r\n\t * @readonly\r\n\t * @return Data item\r\n\t */\r\n\tpublic get treeMapDataItem(): TreeMapDataItem {\r\n\t\treturn <TreeMapDataItem>this._dataContext;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem) {\r\n\t\t\ttreeMapDataItem.hide(duration);\r\n\t\t}\r\n\t\treturn super.hide(duration, delay, toValue, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tlet treeMapDataItem = this.treeMapDataItem;\r\n\t\tif (treeMapDataItem) {\r\n\t\t\ttreeMapDataItem.show(duration, delay, fields);\r\n\t\t}\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[TreeMapSeries]].\r\n */\r\nexport interface ITreeMapSeriesDataFields extends IColumnSeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[TreeMapSeries]].\r\n */\r\nexport interface ITreeMapSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[TreeMapSeries]].\r\n */\r\nexport interface ITreeMapSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[TreeMapSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITreeMapSeriesAdapters extends IColumnSeriesAdapters, ITreeMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines Series for a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapSeriesEvents} for a list of available Events\r\n * @see {@link ITreeMapSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class TreeMapSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ITreeMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITreeMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITreeMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITreeMapSeriesEvents;\r\n\r\n\t/**\r\n\t * The level in treemap hierarchy series is at.\r\n\t */\r\n\tpublic level: number;\r\n\r\n\t/**\r\n\t * Type of the data item used by series.\r\n\t */\r\n\tpublic _dataItem: TreeMapSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: TreeMap;\r\n\r\n\t/**\r\n\t * Parent data item of a series.\r\n\t */\r\n\tpublic parentDataItem: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"TreeMapSeries\";\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.fillOpacity = 1;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.minBulletDistance = 0;\r\n\t\tthis.columns.template.tooltipText = \"{parentName} {name}: {value}\"; //@todo add format number?\r\n\t\tthis.columns.template.configField = \"config\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.stroke = interfaceColors.getFor(\"background\");\r\n\t\tthis.dataFields.openValueX = \"x0\";\r\n\t\tthis.dataFields.valueX = \"x1\";\r\n\t\tthis.dataFields.openValueY = \"y0\";\r\n\t\tthis.dataFields.valueY = \"y1\";\r\n\r\n\t\tthis.sequencedInterpolation = false;\r\n\r\n\t\tthis.showOnInit = false;\r\n\r\n\t\t// otherwise nodes don't stack nicely to each other\r\n\t\tthis.columns.template.pixelPerfect = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data item.\r\n\t *\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  Raw data\r\n\t * @param index        Index of the data item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\t(<TreeMapDataItem>dataContext).seriesDataItem = dataItem; // save a reference here. dataContext is TreeMapDataItem and we need to know dataItem sometimes\r\n\t\tsuper.processDataItem(dataItem, dataContext);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new TreeMapSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Shows series.\r\n\t *\r\n\t * @param duration  Duration of fade in (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\t\tif(this.preventShow){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t//dataItem.treeMapDataItem.setWorkingValue(\"value\", dataItem.treeMapDataItem.values.value.value);\r\n\t\t\tdataItem.show(duration);\r\n\t\t})\r\n\r\n\t\treturn super.showReal(interpolationDuration);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of fade out (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tlet animation = super.hideReal(interpolationDuration);\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t//dataItem.treeMapDataItem.setWorkingValue(\"value\", 0);\r\n\t\t\tdataItem.hide(duration);\r\n\t\t})\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Process values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processValues() {\r\n\r\n\t\t// Just overriding so that inherited method does not kick in.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative start location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getStartLocation(dataItem: this[\"_dataItem\"]): number {\t\t\r\n\t\treturn 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Returns relative end location for the data item.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t * @return Location (0-1)\r\n\t */\r\n\tprotected getEndLocation(dataItem: this[\"_dataItem\"]): number {\r\n\t\treturn 1;\r\n\t}\t\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dataChangeUpdate() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Add empty data fields if the they are not set, so that XYSeries\r\n\t\t\t// dataField check does not result in error.\r\n\t\t\tif (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n\t\t\t\tconfig.dataFields = {};\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\tcolumn.shouldClone = false;\r\n\t\t$object.copyProperties(this, column, visualProperties);\r\n\r\n\t\t//column.copyFrom(<any>this.columns.template);\r\n\t\tcolumn.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n\t\tcolumn.width = w;\r\n\t\tcolumn.height = h;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\tprotected disableUnusedColumns(dataItem: ColumnSeriesDataItem) {\r\n\t\tsuper.disableUnusedColumns(dataItem);\r\n\t\tif(dataItem.column){\r\n\t\t\tdataItem.column.__disabled = false;\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TreeMapSeries\"] = TreeMapSeries;\r\nregistry.registeredClasses[\"TreeMapSeriesDataItem\"] = TreeMapSeriesDataItem;\r\n","/**\r\n * TreeMap chart module.\r\n *\r\n * Parts of the functionality used in this module are taken from D3.js library\r\n * (https://d3js.org/)\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, IXYChartProperties, IXYChartDataFields, IXYChartAdapters, IXYChartEvents, XYChartDataItem } from \"./XYChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { TreeMapSeries } from \"../series/TreeMapSeries\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { TreeMapSeriesDataItem } from \"../series/TreeMapSeries\";\r\nimport { NavigationBar } from \"../elements/NavigationBar\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { Export } from \"../../core/export/Export\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[TreeMap]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class TreeMapDataItem extends XYChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: TreeMap;\r\n\r\n\t/**\r\n\t * A treemap level this data item is displayed at.\r\n\t */\r\n\tprotected _level: number;\r\n\r\n\t/**\r\n\t * Series of children data items.\r\n\t */\r\n\tprotected _series: TreeMapSeries;\r\n\r\n\t/**\r\n\t * Related series data item.\r\n\t */\r\n\tpublic seriesDataItem: TreeMapSeriesDataItem;\r\n\r\n\t/**\r\n\t * Required for squarify functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rows: TreeMapDataItem[] = [];\r\n\r\n\t/**\r\n\t * Required for squarify functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rowsRatio: number;\r\n\r\n\t/**\r\n\t * Required for squarify functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic dice: boolean;\r\n\r\n\t/**\r\n\t * A reference to a corresponding legend data item.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"TreeMapDataItem\";\r\n\r\n\t\tthis.values.value = {workingValue:0};\r\n\r\n\t\tthis.values.x0 = {};\r\n\r\n\t\tthis.values.y0 = {};\r\n\r\n\t\tthis.values.x1 = {};\r\n\r\n\t\tthis.values.y1 = {};\r\n\r\n\t\tthis.hasChildren.children = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a duration (ms) the Data Item should take to animate from one\r\n\t * value to another.\r\n\t *\r\n\t * If the duration is not specified via parameter, this method will try to\r\n\t * request a default duration from the related `Component`.\r\n\t *\r\n\t * @param duration  Default duration (ms)\r\n\t * @return Duration (ms)\r\n\t */\r\n\tpublic getDuration(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the item.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\r\n\t\tlet value = 0;\r\n\t\tif (!this.children || this.children.length == 0) {\r\n\t\t\tvalue = this.values[\"value\"].workingValue;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tlet childValue = child.value;\r\n\t\t\t\tif ($type.isNumber(childValue)) {\r\n\t\t\t\t\tvalue += childValue;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t\t/*\r\n\t\tlet value = this.values[\"value\"].workingValue;\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t\tif (this.children) {\r\n\t\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\t\tif ($type.isNumber(child.value)) {\r\n\t\t\t\t\t\tvalue += child.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;*/\r\n\t}\r\n\r\n\t/**\r\n\t * Percent value of a node\r\n\t */\r\n\tpublic get percent(): number {\r\n\t\tif (this.parent) {\r\n\t\t\treturn this.value / this.parent.value * 100;\r\n\t\t}\r\n\t\treturn 100;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's X position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  X\r\n\t */\r\n\tpublic set x0(value: number) {\r\n\t\tthis.setValue(\"x0\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get x0(): number {\r\n\t\treturn this.values.x0.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's X position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  X\r\n\t */\r\n\tpublic set x1(value: number) {\r\n\t\tthis.setValue(\"x1\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get x1(): number {\r\n\t\treturn this.values.x1.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's Y position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  Y\r\n\t */\r\n\tpublic set y0(value: number) {\r\n\t\tthis.setValue(\"y0\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get y0(): number {\r\n\t\treturn this.values.y0.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's Y position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param value  Y\r\n\t */\r\n\tpublic set y1(value: number) {\r\n\t\tthis.setValue(\"y1\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get y1(): number {\r\n\t\treturn this.values.y1.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Item's name.\r\n\t *\r\n\t * @param name  Name\r\n\t */\r\n\tpublic set name(name: string) {\r\n\t\tthis.setProperty(\"name\", name);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.properties.name;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of item's sub-children.\r\n\t *\r\n\t * Having children means that the TreeMap chat will automatically be\r\n\t * \"drillable\". Clicking on an item with children will zoom to the item, then\r\n\t * display its children.\r\n\t *\r\n\t * Treemap can have any level of nesting.\r\n\t *\r\n\t * @param children  Item's children\r\n\t */\r\n\tpublic set children(children: OrderedListTemplate<TreeMapDataItem>) {\r\n\t\tthis.setProperty(\"children\", children);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Item's children\r\n\t */\r\n\tpublic get children(): OrderedListTemplate<TreeMapDataItem> {\r\n\t\treturn this.properties.children;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth level in the treemap hierarchy.\r\n\t *\r\n\t * The top-level item will have level set at 0. Its children will have\r\n\t * level 1, and so on.\r\n\t *\r\n\t * @readonly\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.parent.level + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Item's color.\r\n\t *\r\n\t * If not set, will use parent's color, or, if that is not set either,\r\n\t * automatically assigned color from chart's color set. (`chart.colors`)\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * For the legend to work properly\r\n\t */\r\n\tpublic get fill(): Color {\r\n\t\treturn this.color;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\tlet color = this.properties.color;\r\n\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tcolor = this.parent.color;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tcolor = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\r\n\t/**\r\n\t * Series of children data items\r\n\t * @todo: proper descrition\r\n\t */\r\n\tpublic set series(series: TreeMapSeries) {\r\n\t\tif (series != this._series) {\r\n\t\t\tif (this._series) {\r\n\t\t\t\tthis.component.series.removeValue(this._series);\r\n\t\t\t\tthis._series.dispose();\r\n\t\t\t}\r\n\t\t\tthis._series = series;\r\n\t\t\tthis._disposers.push(series);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get series(): TreeMapSeries {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis.setWorkingValue(\"value\", 0);\r\n\r\n\t\tif (this.children) {\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tchild.hide(duration, delay, toValue, fields);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet seriesDataItem = this.seriesDataItem;\r\n\t\tif (seriesDataItem) {\r\n\t\t\tseriesDataItem.bullets.each((key, value) => {\r\n\t\t\t\tvalue.hide();\r\n\t\t\t\tvalue.preventShow = true;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn super.hide(duration, delay, toValue, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis.setWorkingValue(\"value\", this.values.value.value);\r\n\t\tif (this.children) {\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tchild.show(duration, delay, fields);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet seriesDataItem = this.seriesDataItem;\r\n\t\tif (seriesDataItem) {\r\n\t\t\tseriesDataItem.bullets.each((key, value) => {\r\n\t\t\t\tvalue.preventShow = false;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[TreeMap]].\r\n */\r\nexport interface ITreeMapDataFields extends IXYChartDataFields {\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's sub-items.\r\n\t */\r\n\tchildren?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's name.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's color.\r\n\t *\r\n\t * If not set, a new color will be automatically assigned to each item as\r\n\t * defined by theme.\r\n\t */\r\n\tcolor?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[TreeMap]].\r\n */\r\nexport interface ITreeMapProperties extends IXYChartProperties {\r\n\r\n\t/**\r\n\t * Maximum number of levels the chart will display initially.\r\n\t *\r\n\t * @default 2\r\n\t */\r\n\tmaxLevels?: number;\r\n\r\n\t/**\r\n\t * Current drill-down level the treemap is at.\r\n\t */\r\n\tcurrentLevel?: number;\r\n\r\n\t/**\r\n\t * Sorting direction of treemap items.\r\n\t *\r\n\t * @default \"descending\"\r\n\t */\r\n\tsorting?: \"none\" | \"ascending\" | \"descending\";\r\n\r\n\t/**\r\n\t * If set to `true`, columns of parent nodes will be hidden when user\r\n\t * drills-down into deeper levels.\r\n\t * \r\n\t * @sice 4.7.4\r\n\t * @default false\r\n\t */\r\n\thideParentColumns?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[TreeMap]].\r\n */\r\nexport interface ITreeMapEvents extends IXYChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[TreeMap]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITreeMapAdapters extends IXYChartAdapters, ITreeMapProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a TreeMap chart.\r\n *\r\n * @see {@link ITreeMapEvents} for a list of available Events\r\n * @see {@link ITreeMapAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/} for documentation\r\n */\r\nexport class TreeMap extends XYChart {\r\n\r\n\t/**\r\n\t * Defines a type of the data item used for this chart.\r\n\t */\r\n\tpublic _dataItem: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ITreeMapDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITreeMapProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITreeMapAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITreeMapEvents;\r\n\r\n\t/**\r\n\t * A horizontal value axis.\r\n\t *\r\n\t * TreeMap chart is basically an XY chart, which means it has vertical and\r\n\t * horizontal value axes.\r\n\t *\r\n\t * As with any XY-based chart, it can be zoomed.\r\n\t */\r\n\tpublic xAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * A vertical value axis.\r\n\t *\r\n\t * TreeMap chart is basically an XY chart, which means it has vertical and\r\n\t * horizontal value axes.\r\n\t *\r\n\t * As with any XY-based chart, it can be zoomed.\r\n\t */\r\n\tpublic yAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * An algorithm used to divide area into squares based on their value.\r\n\t *\r\n\t * Available options: squarify (default), binaryTree, slice, dice, sliceDice.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.layoutAlgorithm = chart.sliceDice;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.layoutAlgorithm = chart.sliceDice;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"layoutAlgorithm\": \"sliceDice\",\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/#Area_division_methods} For more info and examples.\r\n\t * @default squarify\r\n\t */\r\n\tpublic layoutAlgorithm: (parent: TreeMapDataItem) => void = this.squarify;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: TreeMapSeries;\r\n\r\n\t/**\r\n\t * [_homeDataItem description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _homeDataItem: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * [_tempSeries description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _tempSeries: TreeMapSeries[];\r\n\r\n\t/**\r\n\t * A text dispalyed on the home button in breadcurmb nav control.\r\n\t */\r\n\tprotected _homeText: string;\r\n\r\n\t/**\r\n\t * A set of colors to be applied automatically to each new chart item, if\r\n\t * not explicitly set.\r\n\t */\r\n\tpublic colors: ColorSet;\r\n\r\n\t/**\r\n\t * Holds series object for each TreeMap level.\r\n\t *\r\n\t * \"0\" is the top-level series.\r\n\t * \"1\" is the second level.\r\n\t * Etc.\r\n\t *\r\n\t * @todo Description\r\n\t * @param Templates for each level\r\n\t */\r\n\tpublic seriesTemplates: DictionaryTemplate<string, this[\"_seriesType\"]>;\r\n\r\n\t/**\r\n\t * Is the chart zoomable?\r\n\t *\r\n\t * If the chart is `zoomable`, and items have sub-items, the chart will\r\n\t * drill-down to sub-items when click on their parent item.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic zoomable: boolean = true;\r\n\r\n\r\n\t/**\r\n\t * A navigation bar used to show \"breadcrumb\" control, indicating current\r\n\t * drill-down path.\r\n\t */\r\n\tprotected _navigationBar: NavigationBar;\r\n\r\n\t/**\r\n\t * Currently selected data item.\r\n\t * @readonly\r\n\t */\r\n\tpublic currentlyZoomed: TreeMapDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"TreeMap\";\r\n\r\n\t\tthis._usesData = true;\r\n\r\n\t\tthis.maxLevels = 2;\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.hideParentColumns = false;\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.sorting = \"descending\";\r\n\r\n\t\t// create two value axes for the chart\r\n\t\tlet xAxis = this.xAxes.push(new ValueAxis<any>());\r\n\t\txAxis.title.disabled = true;\r\n\t\txAxis.strictMinMax = true;\r\n\r\n\t\tlet xRenderer = xAxis.renderer;\r\n\t\txRenderer.inside = true;\r\n\t\txRenderer.labels.template.disabled = true;\r\n\t\txRenderer.ticks.template.disabled = true;\r\n\t\txRenderer.grid.template.disabled = true;\r\n\t\txRenderer.axisFills.template.disabled = true;\r\n\t\txRenderer.minGridDistance = 100;\r\n\t\txRenderer.line.disabled = true;\r\n\t\txRenderer.baseGrid.disabled = true;\r\n\t\t//xRenderer.inversed = true;\r\n\r\n\t\tlet yAxis = this.yAxes.push(new ValueAxis<any>());\r\n\t\tyAxis.title.disabled = true;\r\n\t\tyAxis.strictMinMax = true;\r\n\r\n\t\tlet yRenderer = yAxis.renderer;\r\n\t\tyRenderer.inside = true;\r\n\t\tyRenderer.labels.template.disabled = true;\r\n\t\tyRenderer.ticks.template.disabled = true;\r\n\t\tyRenderer.grid.template.disabled = true;\r\n\t\tyRenderer.axisFills.template.disabled = true;\r\n\t\tyRenderer.minGridDistance = 100;\r\n\t\tyRenderer.line.disabled = true;\r\n\t\tyRenderer.baseGrid.disabled = true;\r\n\t\tyRenderer.inversed = true;\r\n\r\n\t\t// shortcuts\r\n\t\tthis.xAxis = xAxis;\r\n\t\tthis.yAxis = yAxis;\r\n\r\n\t\tconst template = new TreeMapSeries();\r\n\t\tthis.seriesTemplates = new DictionaryTemplate<string, this[\"_seriesType\"]>(template);\r\n\t\ttemplate.virtualParent = this;\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.seriesTemplates));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\tthis.zoomOutButton.events.on(\"hit\", () => {\r\n\t\t\tthis.zoomToChartDataItem(this._homeDataItem);\r\n\t\t}, undefined, false)\r\n\r\n\t\tthis.seriesTemplates.events.on(\"insertKey\", (event) => {\r\n\t\t\tevent.newValue.isTemplate = true;\r\n\t\t}, undefined, false)\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A navigation bar used to show \"breadcrumb\" control, indicating current\r\n\t * drill-down path.\r\n\t */\r\n\tpublic set navigationBar(navigationBar: NavigationBar) {\r\n\t\tif (this._navigationBar != navigationBar) {\r\n\t\t\tthis._navigationBar = navigationBar;\r\n\t\t\tnavigationBar.parent = this;\r\n\t\t\tnavigationBar.toBack();\r\n\t\t\tnavigationBar.links.template.events.on(\"hit\", (event) => {\r\n\t\t\t\tlet dataItem = <TreeMapDataItem>event.target.dataItem.dataContext;\r\n\t\t\t\tif (!dataItem.isDisposed()) {\r\n\t\t\t\t\tthis.zoomToChartDataItem(dataItem);\r\n\t\t\t\t\tthis.createTreeSeries(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}, undefined, true);\r\n\r\n\t\t\tthis._disposers.push(navigationBar);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns navigationBar if it is added to a chart\r\n\t */\r\n\tpublic get navigationBar(): NavigationBar {\r\n\t\treturn this._navigationBar;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates chart's data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\r\n\t\tthis.series.clear();\r\n\t\tthis._tempSeries = [];\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tif (this._homeDataItem) {\r\n\t\t\tthis._homeDataItem.dispose();\r\n\t\t}\r\n\r\n\t\tlet homeDataItem = this.dataItems.template.clone(); // cant' use createDataItem here!\r\n\r\n\t\tthis._homeDataItem = homeDataItem;\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tdataItem.parent = homeDataItem;\r\n\t\t});\r\n\r\n\t\thomeDataItem.children = this.dataItems;\r\n\r\n\t\thomeDataItem.x0 = 0;\r\n\t\thomeDataItem.y0 = 0;\r\n\t\thomeDataItem.name = this._homeText;\r\n\r\n\t\tlet maxX = 1000;\r\n\t\tlet maxY = Math.round((maxX * this.pixelHeight / this.pixelWidth) / 10) * 10 || 1000;\r\n\r\n\t\thomeDataItem.x1 = maxX;\r\n\t\thomeDataItem.y1 = maxY;\r\n\r\n\t\tthis.xAxis.min = 0;\r\n\t\tthis.xAxis.max = maxX;\r\n\t\tthis.xAxis.getMinMax();\r\n\r\n\t\tthis.yAxis.min = 0;\r\n\t\tthis.yAxis.max = maxY;\r\n\t\tthis.yAxis.getMinMax();\r\n\r\n\t\tthis.layoutItems(homeDataItem);\r\n\r\n\t\tthis.createTreeSeries(homeDataItem);\r\n\r\n\t\tthis.feedLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * Layouts and sizes all items according to their value and\r\n\t * `layoutAlgorithm`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Parent data item\r\n\t */\r\n\tpublic layoutItems(parent: TreeMapDataItem, sorting?: \"none\" | \"ascending\" | \"descending\"): void {\r\n\t\tif (parent) {\r\n\t\t\tlet children = parent.children;\r\n\r\n\t\t\tif (!sorting) {\r\n\t\t\t\tsorting = this.sorting;\r\n\t\t\t}\r\n\r\n\t\t\tif (sorting == \"ascending\") {\r\n\t\t\t\tchildren.values.sort((a, b) => {\r\n\t\t\t\t\treturn a.value - b.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (sorting == \"descending\") {\r\n\t\t\t\tchildren.values.sort((a, b) => {\r\n\t\t\t\t\treturn b.value - a.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._updateDataItemIndexes(0);\r\n\r\n\t\t\tthis.layoutAlgorithm(parent);\r\n\r\n\t\t\tfor (let i = 0, len = children.length; i < len; i++) {\r\n\r\n\t\t\t\tlet node = children.getIndex(i);\r\n\r\n\t\t\t\tif (node.children) {\r\n\t\t\t\t\tthis.layoutItems(node);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates and returns a new treemap series.\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  Data item to create series out of\r\n\t */\r\n\tprotected createTreeSeries(dataItem: TreeMapDataItem) {\r\n\t\tthis._tempSeries = [];\r\n\r\n\t\tlet navigationData = [dataItem];\r\n\r\n\t\t// create parent series and navigation data\r\n\t\tlet parentDataItem = dataItem.parent;\r\n\t\twhile (parentDataItem != undefined) {\r\n\t\t\tthis.initSeries(parentDataItem);\r\n\t\t\tnavigationData.push(parentDataItem);\r\n\t\t\tparentDataItem = parentDataItem.parent;\r\n\t\t}\r\n\r\n\t\tnavigationData.reverse();\r\n\r\n\t\tif (this.navigationBar) {\r\n\t\t\tthis.navigationBar.data = navigationData;\r\n\t\t}\r\n\r\n\t\t// create series and children series\r\n\t\tthis.createTreeSeriesReal(dataItem);\r\n\r\n\t\t// add those which are not in the list\r\n\t\t$array.each(this._tempSeries, (series) => {\r\n\t\t\tif (this.series.indexOf(series) == -1) {\r\n\t\t\t\tthis.series.push(series);\r\n\t\t\t}\r\n\t\t\tseries.zIndex = series.level;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * [createTreeSeriesReal description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected createTreeSeriesReal(dataItem: TreeMapDataItem) {\r\n\t\tif (dataItem.children) {\r\n\t\t\tlet level = dataItem.level;\r\n\r\n\t\t\tif (level < this.currentLevel + this.maxLevels) {\r\n\r\n\t\t\t\tthis.initSeries(dataItem);\r\n\r\n\t\t\t\tfor (let i = 0; i < dataItem.children.length; i++) {\r\n\t\t\t\t\tlet child = dataItem.children.getIndex(i);\r\n\t\t\t\t\tif (child.children) {\r\n\t\t\t\t\t\tthis.createTreeSeriesReal(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected setData(value: any[]) {\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.currentlyZoomed = undefined;\r\n\t\tthis.xAxis.start = 0;\r\n\t\tthis.xAxis.end = 1;\r\n\t\tthis.yAxis.start = 0;\r\n\t\tthis.yAxis.end = 1;\r\n\t\tsuper.setData(value);\r\n\t}\r\n\t/**\r\n\t * @ignore\r\n\t * Overriding, as tree map series are created on the fly all the time\r\n\t */\r\n\tprotected seriesAppeared(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initializes the treemap series.\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  Chart data item\r\n\t */\r\n\tprotected initSeries(dataItem: TreeMapDataItem) {\r\n\t\tif (!dataItem.series) {\r\n\t\t\tlet series: TreeMapSeries;\r\n\r\n\t\t\tlet template = this.seriesTemplates.getKey(dataItem.level.toString());\r\n\t\t\tif (template) {\r\n\t\t\t\tseries = template.clone();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tseries = this.series.create();\r\n\t\t\t}\r\n\t\t\t// for the legend to get {value}\r\n\t\t\tseries.dataItem.dataContext = dataItem;\r\n\r\n\t\t\tseries.name = dataItem.name;\r\n\t\t\tseries.parentDataItem = dataItem;\r\n\t\t\tdataItem.series = series;\r\n\r\n\t\t\tlet level = dataItem.level;\r\n\t\t\tseries.level = level;\r\n\r\n\t\t\tlet dataContext: any = dataItem.dataContext;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tseries.config = dataContext.config;\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataUsers.removeValue(series); // series do not use data directly, that's why we remove it\r\n\t\t\tseries.data = dataItem.children.values;\r\n\t\t\tseries.fill = dataItem.color;\r\n\r\n\t\t\tseries.columnsContainer.hide(0);\r\n\t\t\tseries.bulletsContainer.hide(0);\r\n\r\n\t\t\tseries.columns.template.adapter.add(\"fill\", (fill, target) => {\r\n\t\t\t\tlet dataItem = <TreeMapSeriesDataItem>target.dataItem;\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tlet treeMapDataItem = dataItem.treeMapDataItem;\r\n\t\t\t\t\tif (treeMapDataItem) {\r\n\t\t\t\t\t\ttarget.fill = treeMapDataItem.color;\r\n\t\t\t\t\t\ttarget.adapter.remove(\"fill\"); //@todo: make it possible adapters applied once?\r\n\t\t\t\t\t\treturn treeMapDataItem.color;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.zoomable && (dataItem.level > this.currentLevel || (dataItem.children && dataItem.children.length > 0))) {\r\n\t\t\t\tseries.columns.template.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\t\t\tif (this.zoomable) {\r\n\t\t\t\t\tseries.columns.template.events.on(\"hit\", (event) => {\r\n\t\t\t\t\t\tlet seriesDataItem = <TreeMapSeriesDataItem>event.target.dataItem;\r\n\r\n\t\t\t\t\t\tif (dataItem.level > this.currentLevel) {\r\n\t\t\t\t\t\t\tthis.zoomToChartDataItem(seriesDataItem.treeMapDataItem.parent);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.zoomToSeriesDataItem(seriesDataItem);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}, this, undefined);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._tempSeries.push(dataItem.series);\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles bullets so that labels that belong to current drill level are\r\n\t * shown.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t */\r\n\tprotected toggleBullets(duration?: number): void {\r\n\t\t// hide all series which are not in tempSeries\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (this._tempSeries.indexOf(series) == - 1) {\r\n\t\t\t\t//series.hideReal(duration);\r\n\t\t\t\tseries.columnsContainer.hide();\r\n\t\t\t\tseries.bulletsContainer.hide(duration);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//series.showReal(duration);\r\n\t\t\t\tseries.columnsContainer.show();\r\n\t\t\t\tseries.bulletsContainer.show(duration);\r\n\r\n\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\tbullet.show();\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (series.level < this.currentLevel) {\r\n\t\t\t\t\tif (this.hideParentColumns) {\r\n\t\t\t\t\t\tseries.columnsContainer.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tseries.bulletsContainer.hide(duration);\r\n\t\t\t\t}\r\n\t\t\t\telse if (series.level == this.currentLevel) {\r\n\t\t\t\t\tif (this.maxLevels > 1) {\r\n\t\t\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\t\tif (dataItem.treeMapDataItem.children) {\r\n\t\t\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\t\t\tbullet.hide();\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to particular item in series.\r\n\t *\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic zoomToSeriesDataItem(dataItem: TreeMapSeriesDataItem): void {\r\n\t\tthis.zoomToChartDataItem(dataItem.treeMapDataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to particular item. If dataItem is not specified, the chart will zoom-out.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic zoomToChartDataItem(dataItem?: TreeMapDataItem): void {\r\n\t\tif (!dataItem) {\r\n\t\t\tdataItem = this._homeDataItem;\r\n\t\t}\r\n\r\n\t\tlet zoomOutButton = this.zoomOutButton;\r\n\t\t// this is needed because if there is only one fist level, it won't be shown\r\n\t\tif (zoomOutButton) {\r\n\t\t\tif (dataItem != this._homeDataItem) {\r\n\t\t\t\tzoomOutButton.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tzoomOutButton.hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (dataItem && dataItem.children) {\r\n\t\t\tthis.xAxis.zoomToValues(dataItem.x0, dataItem.x1);\r\n\t\t\tthis.yAxis.zoomToValues(dataItem.y0, dataItem.y1);\r\n\r\n\t\t\tthis.currentLevel = dataItem.level;\r\n\t\t\tthis.currentlyZoomed = dataItem;\r\n\r\n\t\t\tthis.createTreeSeries(dataItem);\r\n\r\n\t\t\tlet rangeChangeAnimation = this.xAxis.rangeChangeAnimation || this.yAxis.rangeChangeAnimation;\r\n\r\n\t\t\tif (rangeChangeAnimation && !rangeChangeAnimation.isDisposed() && !rangeChangeAnimation.isFinished()) {\r\n\t\t\t\tthis._dataDisposers.push(rangeChangeAnimation);\r\n\r\n\t\t\t\trangeChangeAnimation.events.once(\"animationended\", () => {\r\n\t\t\t\t\tthis.toggleBullets();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.toggleBullets();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"TreeMap chart\");\r\n\t\t}\r\n\t\t//this.homeText = this.language.translate(\"Home\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new TreeMapDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of levels the chart will display initially.\r\n\t *\r\n\t * @default 2\r\n\t * @param value  Maximum drill-down level\r\n\t */\r\n\tpublic set maxLevels(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLevels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum drill-down level\r\n\t */\r\n\tpublic get maxLevels(): number {\r\n\t\treturn this.getPropertyValue(\"maxLevels\");\r\n\t}\r\n\r\n\t/**\r\n\t * Current drill-down level the chart is at.\r\n\t *\r\n\t * @param value  Current level\r\n\t */\r\n\tpublic set currentLevel(value: number) {\r\n\t\tthis.setPropertyValue(\"currentLevel\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Current level\r\n\t */\r\n\tpublic get currentLevel(): number {\r\n\t\treturn this.getPropertyValue(\"currentLevel\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, columns of parent nodes will be hidden when user\r\n\t * drills-down into deeper levels.\r\n\t * \r\n\t * @sice 4.7.4\r\n\t * @default false\r\n\t * @param  value  Hide?\r\n\t */\r\n\tpublic set hideParentColumns(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideParentColumns\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide?\r\n\t */\r\n\tpublic get hideParentColumns(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideParentColumns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sorting direction of treemap items.\r\n\t *\r\n\t * Available options: \"none\", \"ascending\", and \"descending\" (default).\r\n\t *\r\n\t * @default \"descending\"\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set sorting(value: \"none\" | \"ascending\" | \"descending\") {\r\n\t\tthis.setPropertyValue(\"sorting\", value, true);\r\n\t}\r\n\r\n\tpublic get sorting(): \"none\" | \"ascending\" | \"descending\" {\r\n\t\treturn this.getPropertyValue(\"sorting\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new series of the suitable type.\r\n\t *\r\n\t * @return new series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new TreeMapSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * A text displayed on the \"home\" button which is used to go back to level 0\r\n\t * after drill into sub-items.\r\n\t *\r\n\t * @param value  Home text\r\n\t */\r\n\tpublic set homeText(value: string) {\r\n\t\tthis._homeText = value;\r\n\t\tif (this._homeDataItem) {\r\n\t\t\tthis._homeDataItem.name = this._homeText;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home text\r\n\t */\r\n\tpublic get homeText(): string {\r\n\t\treturn this._homeText;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Instantiate layout algorithm\r\n\t\t\tif ($type.hasValue(config[\"layoutAlgorithm\"]) && $type.isString(config[\"layoutAlgorithm\"])) {\r\n\t\t\t\tswitch (config[\"layoutAlgorithm\"]) {\r\n\t\t\t\t\tcase \"squarify\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.squarify;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"binaryTree\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.binaryTree;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"slice\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.slice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"dice\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.dice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"sliceDice\":\r\n\t\t\t\t\t\tconfig[\"layoutAlgorithm\"] = this.sliceDice;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tdelete config[\"layoutAlgorithm\"];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Set type for navigation bar\r\n\t\t\tif ($type.hasValue(config.navigationBar) && !$type.hasValue(config.navigationBar.type)) {\r\n\t\t\t\tconfig.navigationBar.type = \"NavigationBar\";\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig(config);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the size of container and informs its children of how much size\r\n\t * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n\t * properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout() {\r\n\t\tsuper.validateLayout();\r\n\t\tthis.layoutItems(this.currentlyZoomed);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.layoutItems(this._homeDataItem);\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.validateRawData();\r\n\t\t});\r\n\r\n\t\tthis.zoomToChartDataItem(this._homeDataItem);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * TREEMAP LAYOUT FUNCTIONS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * The functions below are from D3.js library (https://d3js.org/)\r\n\t *\r\n\t * --------------------------------------------------------------------------\r\n\t * Copyright 2017 Mike Bostock\r\n\t *\r\n\t * Redistribution and use in source and binary forms, with or without\r\n\t * modification, are permitted provided that the following conditions are met:\r\n\t *\r\n\t * 1. Redistributions of source code must retain the above copyright notice,\r\n\t *    this list of conditions and the following disclaimer.\r\n\t *\r\n\t * 2. Redistributions in binary form must reproduce the above copyright\r\n\t *    notice,this list of conditions and the following disclaimer in the\r\n\t *    documentation and/or other materials provided with the distribution.\r\n\t *\r\n\t * 3. Neither the name of the copyright holder nor the names of its\r\n\t *    contributors may be used to endorse or promote products derived from\r\n\t *    this software without specific prior written permission.\r\n\t *\r\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n\t * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n\t * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\t * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n\t * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n\t * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n\t * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n\t * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n\t * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n\t * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n\t * POSSIBILITY OF SUCH DAMAGE.\r\n\t * --------------------------------------------------------------------------\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: binaryTree.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic binaryTree(parent: TreeMapDataItem): void {\r\n\t\tlet nodes = parent.children,\r\n\t\t\ti, n = nodes.length,\r\n\t\t\tsum, sums = new Array(n + 1);\r\n\r\n\t\tfor (sums[0] = sum = i = 0; i < n; ++i) {\r\n\t\t\tsums[i + 1] = sum += nodes.getIndex(i).value;\r\n\t\t}\r\n\r\n\t\tif(n > 0){\r\n\t\t\tpartition(0, n, parent.value, parent.x0, parent.y0, parent.x1, parent.y1);\r\n\t\t}\r\n\r\n\t\tfunction partition(i: number, j: number, value: number, x0: number, y0: number, x1: number, y1: number) {\r\n\r\n\t\t\tif (i >= j - 1) {\r\n\t\t\t\tlet node = nodes.getIndex(i);\r\n\t\t\t\tnode.x0 = x0;\r\n\t\t\t\tnode.y0 = y0;\r\n\t\t\t\tnode.x1 = x1;\r\n\t\t\t\tnode.y1 = y1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet valueOffset = sums[i],\r\n\t\t\t\tvalueTarget = (value / 2) + valueOffset,\r\n\t\t\t\tk = i + 1,\r\n\t\t\t\thi = j - 1;\r\n\r\n\t\t\twhile (k < hi) {\r\n\t\t\t\tlet mid = k + hi >>> 1;\r\n\t\t\t\tif (sums[mid] < valueTarget) {\r\n\t\t\t\t\tk = mid + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thi = mid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) {\r\n\t\t\t\t--k;\r\n\t\t\t}\r\n\r\n\t\t\tlet valueLeft = sums[k] - valueOffset,\r\n\t\t\t\tvalueRight = value - valueLeft;\r\n\r\n\t\t\tif(value == 0){\r\n\t\t\t\tlet node = nodes.getIndex(i);\r\n\t\t\t\tnode.x0 = x0;\r\n\t\t\t\tnode.y0 = y0;\r\n\t\t\t\tnode.x1 = x1;\r\n\t\t\t\tnode.y1 = y1;\t\t\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\t\t\t\t\r\n\r\n\t\t\tif ((x1 - x0) > (y1 - y0)) {\r\n\t\t\t\tlet xk = (x0 * valueRight + x1 * valueLeft) / value;\r\n\t\t\t\tpartition(i, k, valueLeft, x0, y0, xk, y1);\r\n\t\t\t\tpartition(k, j, valueRight, xk, y0, x1, y1);\r\n\t\t\t} else {\r\n\t\t\t\tlet yk = (y0 * valueRight + y1 * valueLeft) / value;\r\n\t\t\t\tpartition(i, k, valueLeft, x0, y0, x1, yk);\r\n\t\t\t\tpartition(k, j, valueRight, x0, yk, x1, y1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic slice(parent: TreeMapDataItem): void {\r\n\t\tlet x0 = parent.x0;\r\n\t\tlet x1 = parent.x1;\r\n\t\tlet y0 = parent.y0;\r\n\t\tlet y1 = parent.y1;\r\n\r\n\t\tlet nodes = parent.children;\r\n\t\tlet node;\r\n\t\tlet i = -1;\r\n\t\tlet n = nodes.length;\r\n\t\tlet k = parent.value && (y1 - y0) / parent.value;\r\n\r\n\t\twhile (++i < n) {\r\n\t\t\tnode = nodes.getIndex(i);\r\n\t\t\tnode.x0 = x0;\r\n\t\t\tnode.x1 = x1;\r\n\t\t\tnode.y0 = y0;\r\n\t\t\ty0 += node.value * k;\r\n\t\t\tnode.y1 = y0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: dice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic dice(parent: TreeMapDataItem): void {\r\n\t\tlet x0 = parent.x0;\r\n\t\tlet x1 = parent.x1;\r\n\t\tlet y0 = parent.y0;\r\n\t\tlet y1 = parent.y1;\r\n\r\n\t\tlet nodes = parent.children,\r\n\t\t\tnode,\r\n\t\t\ti = -1,\r\n\t\t\tn = nodes.length,\r\n\t\t\tk = parent.value && (x1 - x0) / parent.value;\r\n\r\n\t\twhile (++i < n) {\r\n\t\t\tnode = nodes.getIndex(i);\r\n\t\t\tnode.y0 = y0;\r\n\t\t\tnode.y1 = y1;\r\n\t\t\tnode.x0 = x0;\r\n\t\t\tx0 += node.value * k;\r\n\t\t\tnode.x1 = x0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: slideDice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic sliceDice(parent: TreeMapDataItem): void {\r\n\t\tif (parent.level & 1) {\r\n\t\t\tthis.slice(parent);\r\n\t\t} else {\r\n\t\t\tthis.dice(parent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Treemap layout algorithm: squarify.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param parent  Data item\r\n\t */\r\n\tpublic squarify(parent: TreeMapDataItem): void {\r\n\t\tlet ratio = (1 + Math.sqrt(5)) / 2;\r\n\r\n\t\tlet x0 = parent.x0;\r\n\t\tlet x1 = parent.x1;\r\n\t\tlet y0 = parent.y0;\r\n\t\tlet y1 = parent.y1;\r\n\r\n\t\tlet nodes = parent.children;\r\n\t\tlet nodeValue;\r\n\t\tlet i0 = 0;\r\n\t\tlet i1 = 0;\r\n\t\tlet n = nodes.length;\r\n\t\tlet dx;\r\n\t\tlet dy;\r\n\t\tlet value = parent.value;\r\n\t\tlet sumValue;\r\n\t\tlet minValue;\r\n\t\tlet maxValue;\r\n\t\tlet newRatio;\r\n\t\tlet minRatio;\r\n\t\tlet alpha;\r\n\t\tlet beta;\r\n\r\n\t\twhile (i0 < n) {\r\n\t\t\tdx = x1 - x0;\r\n\t\t\tdy = y1 - y0;\r\n\r\n\t\t\t// Find the next non-empty node.\r\n\t\t\tdo {\r\n\t\t\t\tsumValue = nodes.getIndex(i1++).value;\r\n\t\t\t} while (!sumValue && i1 < n);\r\n\r\n\t\t\tminValue = maxValue = sumValue;\r\n\t\t\talpha = Math.max(dy / dx, dx / dy) / (value * ratio);\r\n\t\t\tbeta = sumValue * sumValue * alpha;\r\n\t\t\tminRatio = Math.max(maxValue / beta, beta / minValue);\r\n\r\n\t\t\t// Keep adding nodes while the aspect ratio maintains or improves.\r\n\t\t\tfor (; i1 < n; ++i1) {\r\n\t\t\t\tsumValue += nodeValue = nodes.getIndex(i1).value;\r\n\t\t\t\tif (nodeValue < minValue) {\r\n\t\t\t\t\tminValue = nodeValue;\r\n\t\t\t\t}\r\n\t\t\t\tif (nodeValue > maxValue) {\r\n\t\t\t\t\tmaxValue = nodeValue;\r\n\t\t\t\t}\r\n\t\t\t\tbeta = sumValue * sumValue * alpha;\r\n\t\t\t\tnewRatio = Math.max(maxValue / beta, beta / minValue);\r\n\t\t\t\tif (newRatio > minRatio) {\r\n\t\t\t\t\tsumValue -= nodeValue; break;\r\n\t\t\t\t}\r\n\t\t\t\tminRatio = newRatio;\r\n\t\t\t}\r\n\r\n\t\t\t// Position and record the row orientation.\r\n\t\t\tlet row = this.dataItems.template.clone();\r\n\t\t\trow.value = sumValue;\r\n\t\t\trow.dice = dx < dy;\r\n\t\t\trow.children = nodes.slice(i0, i1);\r\n\t\t\trow.x0 = x0;\r\n\t\t\trow.y0 = y0;\r\n\t\t\trow.x1 = x1;\r\n\t\t\trow.y1 = y1;\r\n\r\n\t\t\tif (row.dice) {\r\n\t\t\t\trow.y1 = value ? (y0 += (dy * sumValue) / value) : y1;\r\n\t\t\t\tthis.dice(row);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trow.x1 = value ? (x0 += (dx * sumValue) / value) : x1;\r\n\t\t\t\tthis.slice(row);\r\n\t\t\t}\r\n\t\t\tvalue -= sumValue;\r\n\t\t\ti0 = i1;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesAdded2() {\r\n\t\t// void\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic handleDataItemValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (name == \"value\") {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (name == \"value\") {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getLegendLevel(dataItem: TreeMapDataItem): TreeMapDataItem {\r\n\t\tif (!dataItem) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!dataItem.children) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (dataItem.children.length > 1) {\r\n\t\t\treturn dataItem;\r\n\t\t}\r\n\t\telse if (dataItem.children.length == 1) {\r\n\t\t\tlet child = dataItem.children.getIndex(0);\r\n\t\t\tif (child.children) {\r\n\t\t\t\treturn this.getLegendLevel(child);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn dataItem;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleLegendSeriesAdded(series:TreeMapSeries){\r\n\t\t// void\r\n\t}\t\r\n\r\n\t/**\r\n\t * A data item associated with top node.\r\n\t * \r\n\t * @since 4.8.2\r\n\t */\r\n\tpublic get homeDataItem(): TreeMapDataItem {\r\n\t\treturn this._homeDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\r\n\t\t\tlet legendParent = this.getLegendLevel(this._homeDataItem);\r\n\r\n\t\t\tif (legendParent) {\r\n\t\t\t\tlet legendData: Array<this[\"_dataItem\"]> = [];\r\n\r\n\t\t\t\tlegendParent.children.each((dataItem) => {\r\n\t\t\t\t\t//if (!dataItem.hiddenInLegend) {\r\n\t\t\t\t\tlegendData.push(dataItem);\r\n\t\t\t\t\t//}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlegend.data = legendData;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\r\n\t\tsuper.disposeData();\r\n\r\n\t\tthis._homeDataItem = undefined;\r\n\r\n\t\tthis.series.clear();\r\n\r\n\t\tif (this.navigationBar) {\r\n\t\t\tthis.navigationBar.disposeData();\r\n\t\t}\r\n\r\n\t\tthis.xAxis.disposeData();\r\n\t\tthis.yAxis.disposeData();\r\n\t}\r\n\r\n\t/**\r\n\t * Since this chart uses hierarchical data, we need to remove childrent\r\n\t * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n\t *\r\n\t * @return Export\r\n\t */\r\n\tprotected getExporting(): Export {\r\n\t\tconst exporting = super.getExporting();\r\n\t\texporting.adapter.add(\"formatDataFields\", (info) => {\r\n\t\t\tif (info.format == \"csv\" || info.format == \"xlsx\") {\r\n\t\t\t\tif ($type.hasValue(this.dataFields.children)) {\r\n\t\t\t\t\tdelete info.dataFields[this.dataFields.children];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn info;\r\n\t\t})\r\n\t\treturn exporting;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TreeMap\"] = TreeMap;\r\n","/**\r\n * Module, defining Axis Renderer for horizontal 3D axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererX, IAxisRendererXProperties, IAxisRendererXAdapters, IAxisRendererXEvents } from \"../axes/AxisRendererX\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { XYChart3D } from \"../types/XYChart3D\";\r\nimport { Grid } from \"../axes/Grid\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererX3D]].\r\n */\r\nexport interface IAxisRendererX3DProperties extends IAxisRendererXProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererX3D]].\r\n */\r\nexport interface IAxisRendererX3DEvents extends IAxisRendererXEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererX3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererX3DAdapters extends IAxisRendererXAdapters, IAxisRendererX3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Renderer for horizontal 3D axis.\r\n *\r\n * @see {@link IAxisRendererX3DEvents} for a list of available events\r\n * @see {@link IAxisRendererX3DAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererX3D extends AxisRendererX {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IAxisRendererX3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IAxisRendererX3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererX3DEvents;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<XYChart3D>();\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererX3D\";\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tif (grid.element) {\r\n\r\n\t\t\tlet dx: number = this.chart.dx3D || 0;\r\n\t\t\tlet dy: number = this.chart.dy3D || 0;\r\n\r\n\t\t\tlet h: number = this.getHeight();\r\n\r\n\t\t\tgrid.path = $path.moveTo({ x: dx, y: dy }) + $path.lineTo({ x: dx, y: h + dy }) + $path.lineTo({ x: 0, y: h });\r\n\t\t}\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement() {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet h = this.getHeight();\r\n\t\tlet dx = this.chart.dx3D || 0;\r\n\t\tlet dy = this.chart.dy3D || 0;\r\n\t\tthis.baseGrid.path =  $path.moveTo({ x: dx, y: dy }) + $path.lineTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n\t}\r\n\r\n\t/**\r\n\t * Chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Chart\r\n\t */\r\n\tpublic set chart(chart: XYChart3D) {\r\n\t\tif (chart) {\r\n\t\t\tthis._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): XYChart3D {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when 3D-related settings change, like depth or angle.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handle3DChanged(event: AMEvent<Sprite, ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tif (event.property == \"depth\" || event.property == \"angle\") {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX3D\"] = AxisRendererX3D;\r\n","/**\r\n * Module, defining Axis Renderer for vertical 3D axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRendererY, IAxisRendererYProperties, IAxisRendererYAdapters, IAxisRendererYEvents } from \"../axes/AxisRendererY\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { XYChart3D } from \"../types/XYChart3D\";\r\nimport { Grid } from \"../axes/Grid\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererY3D]].\r\n */\r\nexport interface IAxisRendererY3DProperties extends IAxisRendererYProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererY3D]].\r\n */\r\nexport interface IAxisRendererY3DEvents extends IAxisRendererYEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererY3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererY3DAdapters extends IAxisRendererYAdapters, IAxisRendererY3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Renderer for vertical 3D axis.\r\n *\r\n * @see {@link IAxisRendererY3DEvents} for a list of available events\r\n * @see {@link IAxisRendererY3DAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererY3D extends AxisRendererY {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisRendererY3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisRendererY3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisRendererY3DEvents;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<XYChart3D>();\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererY3D\";\r\n\t\tthis._disposers.push(this._chart);\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param grid         Grid element\r\n\t * @param position     Starting position\r\n\t * @param endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\tif (grid.element) {\r\n\r\n\t\t\tlet dx: number = this.chart.dx3D || 0;\r\n\t\t\tlet dy: number = this.chart.dy3D || 0;\r\n\r\n\t\t\tlet w: number = this.getWidth();\r\n\r\n\t\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: dx, y: dy }) + $path.lineTo({ x: w + dx, y: dy });\r\n\t\t}\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet dx: number = this.chart.dx3D || 0;\r\n\t\tlet dy: number = this.chart.dy3D || 0;\r\n\r\n\t\tlet w: number = this.getWidth();\r\n\t\tthis.baseGrid.path = $path.moveTo({ x: 0, y: 0 })\r\n\t\t\t+ $path.lineTo({ x: w, y: 0 })\r\n\t\t\t+ $path.lineTo({ x: w + dx, y: dy });\r\n\t}\r\n\r\n\t/**\r\n\t * Chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(chart: XYChart3D) {\r\n\t\tif (chart) {\r\n\t\t\tthis._chart.set(chart, chart.events.on(\"propertychanged\", this.handle3DChanged, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): XYChart3D {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when 3D-related settings change, like depth or angle.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handle3DChanged(event: AMEvent<Sprite, ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tif (event.property == \"depth\" || event.property == \"angle\") {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column3D]].\r\n */\r\nexport interface IColumn3DProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Column3D]].\r\n */\r\nexport interface IColumn3DEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumn3DAdapters extends IColumnAdapters, IColumn3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column3D extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumn3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumn3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumn3DEvents;\r\n\r\n\r\n\t/**\r\n\t * column3D element\r\n\t */\r\n\tpublic column3D: Rectangle3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column3D\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.column3D = this.createChild(Rectangle3D);\r\n\t\tthis.column3D.shouldClone = false;\r\n\t\tthis.column3D.strokeOpacity = 0;\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.column3D;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.width = this.pixelWidth;\r\n\t\t\tthis.column3D.height = this.pixelHeight;\r\n\t\t\tif(this.column3D.invalid){\r\n\t\t\t\tthis.column3D.validate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Column3D]].\r\n\t *\r\n\t * @param source Source Column3D\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.copyFrom(source.column3D);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\t\tthis.column.fill = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column3D\"] = Column3D;\r\n","/**\r\n * 3D column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesProperties, IColumnSeriesDataFields, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { XYChart3D } from \"../types/XYChart3D\";\r\nimport { Column3D } from \"../elements/Column3D\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nexport class ColumnSeries3DDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: Column3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeries3DDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ColumnSeries3D]].\r\n */\r\nexport interface IColumnSeries3DDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ColumnSeries3D]].\r\n */\r\nexport interface IColumnSeries3DProperties extends IColumnSeriesProperties {\r\n\r\n\t/**\r\n\t * Depth (height) of the slices in the series in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of view for the slices in series. (0-360)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ColumnSeries3D]].\r\n */\r\nexport interface IColumnSeries3DEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ColumnSeries3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnSeries3DAdapters extends IColumnSeriesAdapters, IColumnSeries3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class ColumnSeries3D extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Type of data item.\r\n\t */\r\n\tpublic _dataItem: ColumnSeries3DDataItem;\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: Column3D;\r\n\r\n\t/**\r\n\t * Defines the type for data fields.\r\n\t */\r\n\tpublic _dataFields: IColumnSeries3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumnSeries3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnSeries3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumnSeries3DEvents;\r\n\r\n\t/**\r\n\t * Specifies how deep in 3d space columns should be drawn.\r\n\t *\r\n\t * Internal use only.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic depthIndex: number;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: XYChart3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ColumnSeries3D\";\r\n\r\n\t\tthis.columns.template.column3D.applyOnClones = true;\r\n\t\tthis.columns.template.hiddenState.properties.visible = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get columnsContainer(): Container {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\r\n\t\t\treturn chart.columnsContainer;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._columnsContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tif (dataItem.column) {\r\n\t\t\tdataItem.column.dx = this.dx;\r\n\t\t\tdataItem.column.dy = this.dy;\r\n\r\n\t\t\tdataItem.column.visible = this.visible;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements(): void {\r\n\t\tsuper.validateDataElements();\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for 3D bar.\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Column3D();\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Depth (height) of the slices in the series in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t\tlet template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\r\n\t\ttemplate.column3D.depth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of view for the slices in series. (0-360)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Angle (0-360)\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value);\r\n\t\tlet template = this.columns.template;\r\n\t\ttemplate.column3D.angle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Angle (0-360)\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\r\nregistry.registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;\r\n","/**\r\n * Module for building 3D serial charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, IXYChartProperties, IXYChartDataFields, IXYChartAdapters, IXYChartEvents, XYChartDataItem } from \"./XYChart\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { AxisRendererX3D } from \"../axes/AxisRendererX3D\";\r\nimport { AxisRendererY3D } from \"../axes/AxisRendererY3D\";\r\nimport { ColumnSeries3D } from \"../series/ColumnSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[XYChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class XYChart3DDataItem extends XYChartDataItem {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChart3DDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[XYChart3D]].\r\n */\r\nexport interface IXYChart3DDataFields extends IXYChartDataFields { }\r\n\r\n/**\r\n * Defines available properties for [[XYChart3D]].\r\n */\r\nexport interface IXYChart3DProperties extends IXYChartProperties {\r\n\r\n\t/**\r\n\t * Depths of the chart in pixels.\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle the chart is viewed at.\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[XYChart3D]].\r\n */\r\nexport interface IXYChart3DEvents extends IXYChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYChart3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYChart3DAdapters extends IXYChartAdapters, IXYChart3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a 3D XY chart.\r\n *\r\n * @see {@link IXYChart3DEvents} for a list of available Events\r\n * @see {@link IXYChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nexport class XYChart3D extends XYChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IXYChart3DDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYChart3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IXYChart3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYChart3DEvents;\r\n\r\n\t/**\r\n\t * Type of the axis renderer to use for X axes.\r\n\t */\r\n\tprotected _axisRendererX: typeof AxisRendererX3D = AxisRendererX3D;\r\n\r\n\t/**\r\n\t * Type of the axis renderer to use for Y axes.\r\n\t */\r\n\tprotected _axisRendererY: typeof AxisRendererY3D = AxisRendererY3D;\r\n\r\n\t/**\r\n\t * A container to add 3D column elements to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic columnsContainer: Container;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"XYChart3D\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.depth = 30;\r\n\t\tthis.angle = 30;\r\n\r\n\t\t// Creeate container for columns\r\n\t\tlet columnsContainer = this.seriesContainer.createChild(Container);\r\n\t\tcolumnsContainer.shouldClone = false;\r\n\t\tcolumnsContainer.isMeasured = false;\r\n\t\tcolumnsContainer.layout = \"none\";\r\n\t\tthis.columnsContainer = columnsContainer;\r\n\r\n\t\tthis.columnsContainer.mask = this.createChild(Sprite);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is done because for some reason IE doesn't change mask if path of a\r\n\t * mask changes.\r\n\t */\r\n\tprotected updateSeriesMasks(): void {\r\n\t\tsuper.updateSeriesMasks();\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tlet columnsContainer = this.columnsContainer;\r\n\t\t\tlet mask = columnsContainer.mask;\r\n\t\t\tcolumnsContainer.mask = undefined;\r\n\t\t\tcolumnsContainer.mask = mask;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Depth of the 3D chart / columns in pixels.\r\n\t *\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value);\r\n\t\tthis.fixLayout();\r\n\t\tthis.invalidateDataUsers();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle the chart is viewed at.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value);\r\n\t\tthis.fixLayout();\r\n\t\tthis.invalidateDataUsers();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * A calculated horizontal 3D offset (px).\r\n\t *\r\n\t * @readonly\r\n\t * @return Offset (px)\r\n\t */\r\n\tpublic get dx3D(): number {\r\n\t\treturn $math.cos(this.angle) * this.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * A calculated vertical 3D offset (px).\r\n\t *\r\n\t * @readonly\r\n\t * @return Offset (px)\r\n\t */\r\n\tpublic get dy3D(): number {\r\n\t\treturn -$math.sin(this.angle) * this.depth;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates layout\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout() {\r\n\t\tsuper.validateLayout();\r\n\t\tthis.fixColumns();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the layout (padding and scrollbar positions) to accommodate for\r\n\t * 3D depth and angle.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\r\n\t\tthis.chartContainer.paddingTop = -this.dy3D;\r\n\t\tthis.chartContainer.paddingRight = this.dx3D;\r\n\r\n\t\tif (this.scrollbarX) {\r\n\t\t\tthis.scrollbarX.dy = this.dy3D;\r\n\t\t\tthis.scrollbarX.dx = this.dx3D;\r\n\t\t}\r\n\r\n\t\tif (this.scrollbarY) {\r\n\t\t\tthis.scrollbarY.dy = this.dy3D;\r\n\t\t\tthis.scrollbarY.dx = this.dx3D;\r\n\t\t}\r\n\r\n\t\tthis.fixColumns();\r\n\r\n\t\tsuper.fixLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates column positions, offset and dimensions based on chart's angle\r\n\t * and depth.\r\n\t */\r\n\tprotected fixColumns(): void {\r\n\t\tlet count: number = 1;\r\n\t\tlet i = 0;\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series instanceof ColumnSeries3D) {\r\n\r\n\t\t\t\tif (!series.clustered && i > 0) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tseries.depthIndex = count - 1;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet s: number = 0;\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (series instanceof ColumnSeries3D) {\r\n\r\n\t\t\t\tseries.depth = this.depth / (count);\r\n\t\t\t\tseries.angle = this.angle;\r\n\t\t\t\tif (series.columnsContainer == this.columnsContainer) {\r\n\t\t\t\t\tseries.dx = this.depth / (count) * $math.cos(this.angle) * (series.depthIndex);\r\n\t\t\t\t\tseries.dy = -this.depth / (count) * $math.sin(this.angle) * (series.depthIndex);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet inversed = false;\r\n\t\t\t\tif ((series.baseAxis == series.xAxis && series.xAxis.renderer.inversed) || (series.baseAxis == series.yAxis && series.yAxis.renderer.inversed)) {\r\n\t\t\t\t\tinversed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet i: number = 1;\r\n\t\t\t\tseries.dataItems.each((dataItem) => {\r\n\t\t\t\t\tlet column = dataItem.column;\r\n\t\t\t\t\tif (column) {\r\n\t\t\t\t\t\tif (inversed) {\r\n\t\t\t\t\t\t\tcolumn.zIndex = 1000 * (1000 - i) + s - series.depthIndex * 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tcolumn.zIndex = 1000 * i + s - series.depthIndex * 100;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t});\r\n\t\t\t\tif (inversed) {\r\n\t\t\t\t\ts--;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ts++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.maskColumns();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tconfig.series[i].type = config.series[i].type || \"ColumnSeries3D\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\tprotected maskColumns() {\r\n\t\tlet w: number = this.plotContainer.pixelWidth;\r\n\t\tlet h: number = this.plotContainer.pixelHeight;\r\n\r\n\t\tlet dx: number = this.dx3D;\r\n\t\tlet dy: number = this.dy3D;\r\n\r\n\t\tlet path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: dx, y: dy }) + $path.lineTo({ x: w + dx, y: dy }) + $path.lineTo({ x: w + dx, y: h + dy }) + $path.lineTo({ x: w, y: h }) + $path.lineTo({ x: w, y: h }) + $path.lineTo({ x: 0, y: h }) + $path.closePath();\r\n\r\n\t\tlet columnsContainer = this.columnsContainer;\r\n\t\tif (columnsContainer && columnsContainer.mask) {\r\n\t\t\tcolumnsContainer.mask.path = path;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChart3D\"] = XYChart3D;\r\n","/**\r\n * HeatLegend module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ValueAxis } from \"../../charts/axes/ValueAxis\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminColor?: Color;\r\n\r\n\t/**\r\n\t * Minimum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tminValue?: number;\r\n\r\n\t/**\r\n\t * Maximum value\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxValue?: number;\r\n\r\n\r\n\t/**\r\n\t * Maximum color\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmaxColor?: Color;\r\n\r\n\t/**\r\n\t * Number of markers (steps)\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tmarkerCount?: number;\r\n\r\n\r\n\t/**\r\n\t * Orientation\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[HeatLegend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IHeatLegendAdapters extends IContainerAdapters, IHeatLegendProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link IHeatLegendEvents} for a list of available events\r\n * @see {@link IHeatLegendAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class HeatLegend extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IHeatLegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IHeatLegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IHeatLegendEvents;\r\n\r\n\t/**\r\n\t * List of heat legend markers (color step rectangles).\r\n\t */\r\n\tpublic markers: ListTemplate<RoundedRectangle>;\r\n\r\n\t/**\r\n\t * Container which holds markers\r\n\t */\r\n\tpublic markerContainer: Container;\r\n\r\n\t/**\r\n\t * Value axis of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _valueAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * Series of a heat legend\r\n\t * @ignore\r\n\t */\r\n\tprotected _series: Series;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"HeatLegend\";\r\n\r\n\t\tthis.markerContainer = this.createChild(Container);\r\n\t\tthis.markerContainer.shouldClone = false;\r\n\r\n\t\tthis.markerCount = 1;\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: RoundedRectangle = new RoundedRectangle();\r\n\t\tmarker.minHeight = 20;\r\n\t\tmarker.minWidth = 20;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.fillOpacity = 1;\r\n\t\tmarker.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tthis.markerContainer.minHeight = 20;\r\n\t\tthis.markerContainer.minWidth = 20;\r\n\r\n\t\tthis.orientation = \"horizontal\";\r\n\r\n\t\tthis.markers = new ListTemplate<RoundedRectangle>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tprotected getMinFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet minValue;\r\n\t\t\t$iter.eachContinue(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tminValue = heatRule.min;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\treturn minValue;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getMaxFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet maxValue;\r\n\t\t\t$iter.each(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tmaxValue = heatRule.max;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\treturn maxValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.valueAxis.renderer.inversed = this.reverseOrder;\r\n\r\n\t\tlet series = this.series;\r\n\r\n\t\tlet minColor = this.minColor;\r\n\t\tlet maxColor = this.maxColor;\r\n\r\n\t\tif (!$type.hasValue(minColor)) {\r\n\t\t\tminColor = toColor(this.getMinFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (series) {\r\n\t\t\tlet seriesFill = series.fill;\r\n\t\t\tif (!$type.hasValue(minColor) && seriesFill instanceof Color) {\r\n\t\t\t\tminColor = seriesFill;\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(maxColor) && seriesFill instanceof Color) {\r\n\t\t\t\tmaxColor = seriesFill;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tlet minOpacity = $type.toNumber(this.getMinFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(minOpacity)) {\r\n\t\t\tminOpacity = 1;\r\n\t\t}\r\n\t\tlet maxOpacity = $type.toNumber(this.getMaxFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(maxOpacity)) {\r\n\t\t\tmaxOpacity = 1;\r\n\t\t}\r\n\r\n\r\n\t\tlet minStrokeOpacity = $type.toNumber(this.getMinFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(minStrokeOpacity)) {\r\n\t\t\tminStrokeOpacity = 1;\r\n\t\t}\r\n\t\tlet maxStrokeOpacity = $type.toNumber(this.getMaxFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(maxStrokeOpacity)) {\r\n\t\t\tmaxStrokeOpacity = 1;\r\n\t\t}\r\n\r\n\t\tlet minStroke = toColor(this.getMinFromRules(\"stroke\"));\r\n\t\tlet maxStroke = toColor(this.getMaxFromRules(\"stroke\"));\r\n\r\n\r\n\t\t//if (series) {\r\n\t\tfor (let i = 0; i < this.markerCount; i++) {\r\n\t\t\tlet marker = this.markers.getIndex(i);\r\n\r\n\t\t\tif (!marker) {\r\n\t\t\t\tmarker = this.markers.create();\r\n\t\t\t\tmarker.parent = this.markerContainer;\r\n\t\t\t\tmarker.height = percent(100);\r\n\t\t\t\tmarker.width = percent(100);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.markerCount == 1) {\r\n\t\t\t\tlet gradient = new LinearGradient();\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\t\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tgradient.rotation = -90;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmarker.fill = gradient;\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet strokeGradient = new LinearGradient();\r\n\t\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\tstrokeGradient.rotation = -90;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmarker.stroke = strokeGradient;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet c = i;\r\n\t\t\t\tif (this.reverseOrder) {\r\n\t\t\t\t\tc = this.markerCount - i - 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet color = new Color($colors.interpolate(minColor.rgb, maxColor.rgb, c / this.markerCount));\r\n\t\t\t\tmarker.fill = color;\r\n\r\n\t\t\t\tlet opacity = minOpacity + (maxOpacity - minOpacity) * c / this.markerCount;\r\n\t\t\t\tmarker.fillOpacity = opacity;\r\n\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet color = new Color($colors.interpolate(minStroke.rgb, maxStroke.rgb, c / this.markerCount));\r\n\t\t\t\t\tmarker.stroke = color;\r\n\r\n\t\t\t\t\tlet opacity = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * c / this.markerCount;\r\n\t\t\t\t\tmarker.strokeOpacity = opacity;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet renderer = this.valueAxis.renderer;\r\n\t\tif (this.markerCount > 1) {\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\trenderer.minGridDistance = this.measuredWidth / this.markerCount;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.minGridDistance = this.measuredHeight / this.markerCount;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.valueAxis.invalidate();\r\n\r\n\t\tfor (let i = this.markerCount, len = this.markers.length; i < len; i++) {\r\n\t\t\tthis.markers.getIndex(i).parent = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set minColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"minColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get minColor(): Color {\r\n\t\treturn this.getPropertyValue(\"minColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set maxColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"maxColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maxColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get maxColor(): Color {\r\n\t\treturn this.getPropertyValue(\"maxColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set markerCount(value: number) {\r\n\t\tthis.setPropertyValue(\"markerCount\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of color squares (markers).\r\n\t * @return {number}\r\n\t */\r\n\tpublic get markerCount(): number {\r\n\t\treturn this.getPropertyValue(\"markerCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tthis.setPropertyValue(\"minValue\", value);\r\n\t\tthis.valueAxis.min = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minimum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\treturn this.getPropertyValue(\"minValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxValue(value: number) {\r\n\t\tthis.setPropertyValue(\"maxValue\", value);\r\n\t\tthis.valueAxis.max = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get maxValue(): number {\r\n\t\treturn this.getPropertyValue(\"maxValue\");\r\n\t}\r\n\r\n\t/**\r\n\t* Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.\r\n\t*\r\n\t* @param {\"horizontal\" | \"vertical\"}\r\n\t*/\r\n\tpublic set orientation(value: \"horizontal\" | \"vertical\") {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet markerContainer = this.markerContainer;\r\n\t\tlet valueAxis = this.valueAxis;\r\n\r\n\t\t// HORIZONTAL\r\n\t\tif (value == \"horizontal\") {\r\n\t\t\tif (!$type.hasValue(this.width)) {\r\n\t\t\t\tthis.width = 200;\r\n\t\t\t}\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tvalueAxis.width = percent(100);\r\n\t\t\tvalueAxis.height = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"vertical\";\r\n\r\n\t\t\tthis.layout = \"vertical\";\r\n\t\t\tmarkerContainer.width = percent(100);\r\n\t\t\tmarkerContainer.height = undefined;\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererX)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererX();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// VERTICAL\r\n\t\telse {\r\n\t\t\tif (!$type.hasValue(this.height)) {\r\n\t\t\t\tthis.height = 200;\r\n\t\t\t}\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.layout = \"horizontal\";\r\n\t\t\tmarkerContainer.width = undefined;\r\n\t\t\tmarkerContainer.height = percent(100);\r\n\t\t\tvalueAxis.height = percent(100);\r\n\t\t\tvalueAxis.width = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererY)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererY();\r\n\t\t\t}\r\n\t\t\tvalueAxis.renderer.inside = true;\r\n\t\t\tvalueAxis.renderer.labels.template.inside = true;\r\n\r\n\t\t\tthis.markerContainer.reverseOrder = true;\r\n\t\t}\r\n\r\n\t\tlet renderer = valueAxis.renderer;\r\n\t\trenderer.grid.template.disabled = true;\r\n\t\trenderer.axisFills.template.disabled = true;\r\n\t\trenderer.baseGrid.disabled = true;\r\n\t\trenderer.labels.template.padding(2, 3, 2, 3);\r\n\r\n\t\trenderer.minHeight = undefined;\r\n\t\trenderer.minWidth = undefined;\r\n\r\n\t\tthis.markerContainer.layout = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns orientation value.\r\n\t *\r\n\t * @return {\"horizontal\" | \"vertical\"}\r\n\t */\r\n\tpublic get orientation(): \"horizontal\" | \"vertical\" {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value axis of heat legend. Value axis for heat legend is created automatically.\r\n\t * @param {ValueAxis}\r\n\t */\r\n\tpublic set valueAxis(valueAxis: ValueAxis) {\r\n\r\n\t\tthis._valueAxis = valueAxis;\r\n\r\n\t\tvalueAxis.parent = this;\r\n\t\tvalueAxis.strictMinMax = true;\r\n\t\tthis.orientation = this.orientation;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns valueAxis value.\r\n\t * @return {ValueAxis}\r\n\t */\r\n\tpublic get valueAxis(): ValueAxis {\r\n\t\tif (!this._valueAxis) {\r\n\t\t\tthis.valueAxis = this.createChild(ValueAxis);\r\n\t\t\tthis.valueAxis.shouldClone = false;\r\n\t\t}\r\n\t\treturn this._valueAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.\r\n\t * @param series\r\n\t */\r\n\tset series(series: Series) {\r\n\t\tthis._series = series;\r\n\r\n\t\tlet dataField = \"value\";\r\n\r\n\t\ttry {\r\n\t\t\tlet dataFieldDefined = series.heatRules.getIndex(0).dataField;\r\n\t\t\tif (dataFieldDefined) {\r\n\t\t\t\tdataField = dataFieldDefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\r\n\t\tseries.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\t\t}, undefined, false);\r\n\r\n\t\tseries.heatRules.events.on(\"inserted\", this.invalidate, this, false);\r\n\t\tseries.heatRules.events.on(\"removed\", this.invalidate, this, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns series value.\r\n\t * @return {Series}\r\n\t */\r\n\tget series(): Series {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates min/max of value axis.\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMinMax(min: number, max: number) {\r\n\t\tlet valueAxis = this.valueAxis;\r\n\t\tif (!$type.isNumber(this.minValue)) {\r\n\t\t\tvalueAxis.min = min;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t\tif (!$type.isNumber(this.maxValue)) {\r\n\t\t\tvalueAxis.max = max;\r\n\t\t\tvalueAxis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isString(config.series)) {\r\n\t\t\t\tif ($type.isString(config.series)) {\r\n\t\t\t\t\tif (this.map.hasKey(config.series)) {\r\n\t\t\t\t\t\tconfig.series = this.map.getKey(config.series);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet seriesId = config.series;\r\n\t\t\t\t\t\tconst disposer = this.map.events.on(\"insertKey\", function(ev) {\r\n\t\t\t\t\t\t\tif (ev.key == seriesId) {\r\n\t\t\t\t\t\t\t\tthis.series = ev.newValue;\r\n\t\t\t\t\t\t\t\tdisposer.dispose();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t\tdelete config.series;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"HeatLegend\"] = HeatLegend;\r\n","/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Candlestick]].\r\n */\r\nexport interface ICandlestickProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Candlestick]].\r\n */\r\nexport interface ICandlestickEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Candlestick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICandlestickAdapters extends IColumnAdapters, ICandlestickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Candlestick extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICandlestickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICandlestickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICandlestickEvents;\r\n\r\n\t/**\r\n\t * Low line element\r\n\t */\r\n\tpublic lowLine: Line;\r\n\r\n\t/**\r\n\t * High line element\r\n\t */\r\n\tpublic highLine: Line;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Candlestick\";\r\n\t\tthis.layout = \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tsuper.createAssets();\r\n\r\n\t\tthis.lowLine = this.createChild(Line);\r\n\t\tthis.lowLine.shouldClone = false;\r\n\r\n\t\tthis.highLine = this.createChild(Line);\r\n\t\tthis.highLine.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Candlestick]].\r\n\t *\r\n\t * @param source Source Candlestick\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.lowLine) {\r\n\t\t\tthis.lowLine.copyFrom(source.lowLine);\r\n\t\t}\r\n\t\tif (this.highLine) {\r\n\t\t\tthis.highLine.copyFrom(source.highLine);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;\r\n","/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents } from \"./ColumnSeries\";\r\nimport { GroupField, IXYSeriesGroupFields } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Candlestick } from \"../elements/Candlestick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CandlestickSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n\t */\r\n\t//public _component!: CandlestickSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.values.lowValueX = {};\r\n\t\tthis.values.lowValueY = {};\r\n\t\tthis.values.highValueX = {};\r\n\t\tthis.values.highValueY = {};\r\n\r\n\t\tthis.className = \"CandlestickSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueX(value: number) {\r\n\t\tthis.setValue(\"lowValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueX(): number {\r\n\t\treturn this.values.lowValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueY(value: number) {\r\n\t\tthis.setValue(\"lowValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueY(): number {\r\n\t\treturn this.values.lowValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueX(value: number) {\r\n\t\tthis.setValue(\"highValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueX(): number {\r\n\t\treturn this.values.highValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueY(value: number) {\r\n\t\tthis.setValue(\"highValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueY(): number {\r\n\t\treturn this.values.highValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for horizontal axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for vertical axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesDataFields extends IColumnSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for horizontal axis.\r\n\t */\r\n\tlowValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\tlowValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high numeric value for horizontal axis.\r\n\t */\r\n\thighValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\thighValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for horizontal axis.\r\n\t */\r\n\tlowDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for vertical axis.\r\n\t */\r\n\tlowDateY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for horizontal axis.\r\n\t */\r\n\thighDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for vertical axis.\r\n\t */\r\n\thighDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueYShow?: CalculatedValue;\r\n\r\n}\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface ICandlestickSeriesGroupFields extends IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueX` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueY` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueX` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueY` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueY?: GroupField;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CandlestickSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICandlestickSeriesAdapters extends IColumnSeriesAdapters, ICandlestickSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class CandlestickSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: ICandlestickSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: CandlestickSeriesDataItem;\r\n\r\n\t/**\r\n\t * Sets type of the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ICandlestickSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICandlestickSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICandlestickSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICandlestickSeriesEvents;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t */\r\n\tprotected _xLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t */\r\n\tprotected _yLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t */\r\n\tprotected _xHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t */\r\n\tprotected _yHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CandlestickSeries\";\r\n\r\n\t\tthis.groupFields.lowValueX = \"low\";\r\n\t\tthis.groupFields.lowValueY = \"low\";\r\n\r\n\t\tthis.groupFields.highValueX = \"high\";\r\n\t\tthis.groupFields.highValueY = \"high\";\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tlet positiveColor = interfaceColors.getFor(\"positive\");\r\n\t\tlet negativeColor = interfaceColors.getFor(\"negative\");\r\n\r\n\t\tthis.dropFromOpenState.properties.fill = negativeColor;\r\n\t\tthis.dropFromOpenState.properties.stroke = negativeColor;\r\n\r\n\t\tthis.riseFromOpenState.properties.fill = positiveColor;\r\n\t\tthis.riseFromOpenState.properties.stroke = positiveColor;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Candlestick Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new CandlestickSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tthis.validateCandlestick(dataItem);\r\n\t}\r\n\r\n\tprotected validateCandlestick(dataItem: this[\"dataItem\"]) {\r\n\t\tlet column: Candlestick = dataItem.column;\r\n\t\tif (column) {\r\n\t\t\tlet lowLine = column.lowLine;\r\n\t\t\tlet highLine = column.highLine;\r\n\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tlet x: number = column.pixelWidth / 2;\r\n\r\n\t\t\t\tlowLine.x = x;\r\n\t\t\t\thighLine.x = x;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.yOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.yField);\r\n\r\n\t\t\t\tlet yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n\t\t\t\tlet yClose = this.yAxis.getY(dataItem, this.yField);\r\n\t\t\t\tlet yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n\t\t\t\tlet yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n\r\n\t\t\t\tlet pixelY = column.pixelY;\r\n\r\n\t\t\t\tlowLine.y1 = yLow - pixelY;\r\n\t\t\t\thighLine.y1 = yHigh - pixelY;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.y2 = yOpen - pixelY;\r\n\t\t\t\t\thighLine.y2 = yClose - pixelY;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.y2 = yClose - pixelY;\r\n\t\t\t\t\thighLine.y2 = yOpen - pixelY;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tlet y: number = column.pixelHeight / 2;\r\n\r\n\t\t\t\tlowLine.y = y;\r\n\t\t\t\thighLine.y = y;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.xOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.xField);\r\n\r\n\t\t\t\tlet xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n\t\t\t\tlet xClose = this.xAxis.getX(dataItem, this.xField);\r\n\t\t\t\tlet xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n\t\t\t\tlet xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n\r\n\t\t\t\tlet pixelX = column.pixelX;\r\n\r\n\t\t\t\tlowLine.x1 = xLow - pixelX;\r\n\t\t\t\thighLine.x1 = xHigh - pixelX;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.x2 = xOpen - pixelX;\r\n\t\t\t\t\thighLine.x2 = xClose - pixelX;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.x2 = xClose - pixelX;\r\n\t\t\t\t\thighLine.x2 = xOpen - pixelX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\t// LOW LINE\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\tlet rangeLowLine = rangeColumn.lowLine;\r\n\t\t\t\t\trangeLowLine.x = lowLine.x;\r\n\t\t\t\t\trangeLowLine.y = lowLine.y;\r\n\t\t\t\t\trangeLowLine.x1 = lowLine.x1;\r\n\t\t\t\t\trangeLowLine.x2 = lowLine.x2;\r\n\t\t\t\t\trangeLowLine.y1 = lowLine.y1;\r\n\t\t\t\t\trangeLowLine.y2 = lowLine.y2;\r\n\r\n\t\t\t\t\t// HIGH LINE\r\n\t\t\t\t\tlet rangehighLine = rangeColumn.highLine;\r\n\t\t\t\t\trangehighLine.x = highLine.x;\r\n\t\t\t\t\trangehighLine.y = highLine.y;\r\n\t\t\t\t\trangehighLine.x1 = highLine.x1;\r\n\t\t\t\t\trangehighLine.x2 = highLine.x2;\r\n\t\t\t\t\trangehighLine.y1 = highLine.y1;\r\n\t\t\t\t\trangehighLine.y2 = highLine.y2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xLowField(): string {\r\n\t\treturn this._xLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yLowField(): string {\r\n\t\treturn this._yLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xHighField(): string {\r\n\t\treturn this._xHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yHighField(): string {\r\n\t\treturn this._yHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tsuper.defineFields();\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tlet yAxisFieldName: string = $utils.capitalize(yAxis.axisFieldName);\r\n\t\t\t\tthis._yLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + yAxisFieldName + \"Y\");\r\n\t\t\t\tthis._yHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + yAxisFieldName + \"Y\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tlet xAxisFieldName: string = $utils.capitalize(xAxis.axisFieldName);\r\n\t\t\t\tthis._xLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + xAxisFieldName + \"X\");\r\n\t\t\t\tthis._xHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + xAxisFieldName + \"X\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xLowField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xHighField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yLowField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yHighField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: Candlestick = marker.createChild(Candlestick);\r\n\t\tcolumn.shouldClone = false;\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\r\n\t\tlet cw: number;\r\n\t\tlet ch: number;\r\n\r\n\t\tlet highLine: Line = column.lowLine;\r\n\t\tlet lowLine: Line = column.highLine;\r\n\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tcw = w / 3;\r\n\t\t\tch = h;\r\n\r\n\t\t\thighLine.y = h / 2;\r\n\t\t\tlowLine.y = h / 2;\r\n\r\n\t\t\thighLine.x2 = w / 3;\r\n\t\t\tlowLine.x2 = w / 3;\r\n\t\t\tlowLine.x = w / 3 * 2;\r\n\t\t\tcolumn.column.x = w / 3;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcw = w;\r\n\t\t\tch = h / 3;\r\n\t\t\thighLine.x = w / 2;\r\n\t\t\tlowLine.x = w / 2;\r\n\r\n\t\t\thighLine.y2 = h / 3;\r\n\t\t\tlowLine.y2 = h / 3;\r\n\t\t\tlowLine.y = h / 3 * 2;\r\n\t\t\tcolumn.column.y = h / 3;\r\n\t\t}\r\n\t\tcolumn.width = cw;\r\n\t\tcolumn.height = ch;\r\n\r\n\t\t$object.copyProperties(this, marker, visualProperties);\r\n\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\r\n\t\tcolumn.stroke = this.riseFromOpenState.properties.stroke;\r\n\t\tcolumn.fill = column.stroke;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Candlestick();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\r\nregistry.registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building OHLCs.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Candlestick, ICandlestickProperties, ICandlestickAdapters, ICandlestickEvents } from \"./Candlestick\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[OHLC]].\r\n */\r\nexport interface IOHLCProperties extends ICandlestickProperties { }\r\n\r\n/**\r\n * Defines events for [[OHLC]].\r\n */\r\nexport interface IOHLCEvents extends ICandlestickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[OHLC]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IOHLCAdapters extends ICandlestickAdapters, IOHLCProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates OHLCs.\r\n *\r\n * @see {@link IOHLCEvents} for a list of available events\r\n * @see {@link IOHLCAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class OHLC extends Candlestick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IOHLCProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IOHLCAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IOHLCEvents;\r\n\r\n\r\n\t/**\r\n\t * Open line element\r\n\t */\r\n\tpublic openLine: Line;\r\n\r\n\t/**\r\n\t * Close line element\r\n\t */\r\n\tpublic closeLine: Line;\r\n\r\n\t/**\r\n\t * High-low line element\r\n\t */\r\n\tpublic highLowLine: Line;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"OHLC\";\r\n\t\tthis.layout = \"none\";\r\n\t}\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\t//super.createAssets();\r\n\r\n\t\tthis.openLine = this.createChild(Line);\r\n\t\tthis.openLine.shouldClone = false;\r\n\r\n\t\tthis.highLowLine = this.createChild(Line);\r\n\t\tthis.highLowLine.shouldClone = false;\r\n\r\n\t\tthis.closeLine = this.createChild(Line);\r\n\t\tthis.closeLine.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[OHLC]].\r\n\t *\r\n\t * @param source Source OHLC\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.openLine) {\r\n\t\t\tthis.openLine.copyFrom(source.openLine);\r\n\t\t}\r\n\t\tif (this.highLowLine) {\r\n\t\t\tthis.highLowLine.copyFrom(source.highLowLine);\r\n\t\t}\r\n\t\tif (this.closeLine) {\r\n\t\t\tthis.closeLine.copyFrom(source.closeLine);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"OHLC\"] = OHLC;\r\n","/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { CandlestickSeries, CandlestickSeriesDataItem, ICandlestickSeriesDataFields, ICandlestickSeriesProperties, ICandlestickSeriesAdapters, ICandlestickSeriesEvents } from \"./CandlestickSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { OHLC } from \"../elements/OHLC\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[OHLCSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class OHLCSeriesDataItem extends CandlestickSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the OHLC elements.\r\n\t */\r\n\tpublic _column: OHLC;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n\t */\r\n\t//public _component!: OHLCSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"OHLCSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[OHLCSeries]].\r\n */\r\nexport interface IOHLCSeriesDataFields extends ICandlestickSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[OHLCSeries]].\r\n */\r\nexport interface IOHLCSeriesProperties extends ICandlestickSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[OHLCSeries]].\r\n */\r\nexport interface IOHLCSeriesEvents extends ICandlestickSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[OHLCSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IOHLCSeriesAdapters extends ICandlestickSeriesAdapters, IOHLCSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link IOHLCSeriesEvents} for a list of available Events\r\n * @see {@link IOHLCSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class OHLCSeries extends CandlestickSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: OHLCSeriesDataItem;\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: OHLC;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IOHLCSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IOHLCSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IOHLCSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IOHLCSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"OHLCSeries\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"OHLC Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new OHLCSeriesDataItem();\r\n\t}\r\n\r\n\r\n\tprotected validateCandlestick(dataItem: this[\"_dataItem\"]) {\r\n\t\tlet column: OHLC = dataItem.column;\r\n\t\tif (column) {\r\n\t\t\tlet openLine = column.openLine;\r\n\t\t\tlet highLowLine = column.highLowLine;\r\n\t\t\tlet closeLine = column.closeLine;\r\n\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tlet x: number = column.pixelWidth / 2;\r\n\t\t\t\thighLowLine.x = x;\r\n\r\n\t\t\t\t// TODO can these be removed ?\r\n\t\t\t\tdataItem.getWorkingValue(this.yOpenField);\r\n\t\t\t\tdataItem.getWorkingValue(this.yField);\r\n\r\n\t\t\t\tlet yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n\t\t\t\tlet yClose = this.yAxis.getY(dataItem, this.yField);\r\n\t\t\t\tlet yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n\t\t\t\tlet yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n\r\n\t\t\t\tlet pixelY = column.pixelY;\r\n\r\n\t\t\t\topenLine.y1 = yOpen - pixelY;\r\n\t\t\t\topenLine.y2 = yOpen - pixelY;\r\n\t\t\t\topenLine.x1 = 0;\r\n\t\t\t\topenLine.x2 = x;\r\n\r\n\t\t\t\tcloseLine.y1 = yClose - pixelY;\r\n\t\t\t\tcloseLine.y2 = yClose - pixelY;\r\n\t\t\t\tcloseLine.x1 = x;\r\n\t\t\t\tcloseLine.x2 = 2 * x;\r\n\r\n\t\t\t\thighLowLine.y1 = yHigh - pixelY;\r\n\t\t\t\thighLowLine.y2 = yLow - pixelY;\r\n\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tlet y: number = column.pixelHeight / 2;\r\n\r\n\t\t\t\thighLowLine.y = y;\r\n\r\n\t\t\t\t// TODO can these be removed ?\r\n\t\t\t\tdataItem.getWorkingValue(this.xOpenField);\r\n\t\t\t\tdataItem.getWorkingValue(this.xField);\r\n\r\n\t\t\t\tlet xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n\t\t\t\tlet xClose = this.xAxis.getX(dataItem, this.xField);\r\n\t\t\t\tlet xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n\t\t\t\tlet xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n\r\n\t\t\t\tlet pixelX = column.pixelX;\r\n\r\n\t\t\t\topenLine.x1 = xOpen - pixelX;\r\n\t\t\t\topenLine.x2 = xOpen - pixelX;\r\n\t\t\t\topenLine.y1 = y;\r\n\t\t\t\topenLine.y2 = 2 * y;\r\n\r\n\t\t\t\tcloseLine.x1 = xClose - pixelX;\r\n\t\t\t\tcloseLine.x2 = xClose - pixelX;\r\n\t\t\t\tcloseLine.y1 = 0;\r\n\t\t\t\tcloseLine.y2 = y;\r\n\r\n\t\t\t\thighLowLine.x1 = xHigh - pixelX;\r\n\t\t\t\thighLowLine.x2 = xLow - pixelX;\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\tlet rangeOpenLine = rangeColumn.openLine;\r\n\t\t\t\t\trangeOpenLine.x = openLine.x;\r\n\t\t\t\t\trangeOpenLine.y = openLine.y;\r\n\t\t\t\t\trangeOpenLine.x1 = openLine.x1;\r\n\t\t\t\t\trangeOpenLine.x2 = openLine.x2;\r\n\t\t\t\t\trangeOpenLine.y1 = openLine.y1;\r\n\t\t\t\t\trangeOpenLine.y2 = openLine.y2;\r\n\r\n\t\t\t\t\tlet rangeCloseLine = rangeColumn.closeLine;\r\n\t\t\t\t\trangeCloseLine.x = closeLine.x;\r\n\t\t\t\t\trangeCloseLine.y = closeLine.y;\r\n\t\t\t\t\trangeCloseLine.x1 = closeLine.x1;\r\n\t\t\t\t\trangeCloseLine.x2 = closeLine.x2;\r\n\t\t\t\t\trangeCloseLine.y1 = closeLine.y1;\r\n\t\t\t\t\trangeCloseLine.y2 = closeLine.y2;\r\n\r\n\t\t\t\t\tlet rangeHighLowLine = rangeColumn.highLowLine;\r\n\t\t\t\t\trangeHighLowLine.x = highLowLine.x;\r\n\t\t\t\t\trangeHighLowLine.y = highLowLine.y;\r\n\t\t\t\t\trangeHighLowLine.x1 = highLowLine.x1;\r\n\t\t\t\t\trangeHighLowLine.x2 = highLowLine.x2;\r\n\t\t\t\t\trangeHighLowLine.y1 = highLowLine.y1;\r\n\t\t\t\t\trangeHighLowLine.y2 = highLowLine.y2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: OHLC = marker.createChild(OHLC);\r\n\t\tcolumn.shouldClone = false;\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\r\n\t\tlet cw: number;\r\n\t\tlet ch: number;\r\n\r\n\t\tlet openLine: Line = column.openLine;\r\n\t\tlet closeLine: Line = column.closeLine;\r\n\t\tlet highLowLine: Line = column.highLowLine;\r\n\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tcw = w / 3;\r\n\t\t\tch = h;\r\n\r\n\t\t\thighLowLine.y = h / 2;\r\n\t\t\thighLowLine.x2 = w;\r\n\r\n\t\t\topenLine.x = w / 3 * 2;\r\n\t\t\topenLine.y2 = h / 2;\r\n\r\n\t\t\tcloseLine.x = w / 3;\r\n\t\t\tcloseLine.y2 = h;\r\n\t\t\tcloseLine.y1 = h / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcw = w;\r\n\t\t\tch = h / 3;\r\n\r\n\t\t\thighLowLine.x = w / 2;\r\n\t\t\thighLowLine.y2 = h;\r\n\r\n\t\t\topenLine.y = h / 3 * 2;\r\n\t\t\topenLine.x2 = w / 2;\r\n\r\n\t\t\tcloseLine.y = h / 3;\r\n\t\t\tcloseLine.x2 = w;\r\n\t\t\tcloseLine.x1 = w / 2;\r\n\t\t}\r\n\t\tcolumn.width = cw;\r\n\t\tcolumn.height = ch;\r\n\r\n\t\t$object.copyProperties(this, marker, visualProperties);\r\n\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\r\n\t\tcolumn.stroke = this.riseFromOpenState.properties.stroke;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.stroke;\r\n\t\tlegendDataItem.colorOrig = column.stroke;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new OHLC();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"OHLCSeries\"] = OHLCSeries;\r\nregistry.registeredClasses[\"OHLCSeriesDataItem\"] = OHLCSeriesDataItem;\r\n","/**\r\n * Line series segment module.\r\n * @todo Add description about what this is\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ILineSeriesSegmentAdapters, ILineSeriesSegmentEvents, ILineSeriesSegmentProperties, LineSeriesSegment } from \"./LineSeriesSegment\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[StepLineSeriesSegment]].\r\n */\r\nexport interface IStepLineSeriesSegmentProperties extends ILineSeriesSegmentProperties { }\r\n\r\n/**\r\n * Defines events for [[StepLineSeriesSegment]].\r\n */\r\nexport interface IStepLineSeriesSegmentEvents extends ILineSeriesSegmentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[StepLineSeriesSegment]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IStepLineSeriesSegmentAdapters extends ILineSeriesSegmentAdapters, IStepLineSeriesSegmentProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a line series segment.\r\n *\r\n * A line segment can be used to apply different properties to a part of the\r\n * line series, between two data points.\r\n *\r\n * @see {@link IStepLineSeriesSegmentEvents} for a list of available events\r\n * @see {@link IStepLineSeriesSegmentAdapters} for a list of available Adapters\r\n * @todo Example\r\n */\r\nexport class StepLineSeriesSegment extends LineSeriesSegment {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IStepLineSeriesSegmentProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IStepLineSeriesSegmentAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IStepLineSeriesSegmentEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"StepLineSeriesSegment\";\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the series segment.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param points       Points to connect\r\n\t * @param closePoints  ?\r\n\t * @param smoothnessX  Horizontal bezier setting (?)\r\n\t * @param smoothnessY  Vertical bezier setting (?)\r\n\t */\r\n\tpublic drawSegment(points: IPoint[], closePoints: IPoint[], smoothnessX: number, smoothnessY: number, noRisers?: boolean, vertical?: boolean): void {\r\n\t\tif (points.length > 0 && closePoints.length > 0) {\r\n\r\n\t\t\tif (noRisers) {\r\n\t\t\t\tlet path: string = $path.moveTo(points[0]);\r\n\t\t\t\tif (points.length > 0) {\r\n\t\t\t\t\tfor (let i = 1; i < points.length; i++) {\r\n\t\t\t\t\t\tlet point = points[i];\r\n\t\t\t\t\t\tif (i / 2 == Math.round(i / 2)) {\r\n\t\t\t\t\t\t\tpath += $path.moveTo(point);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.strokeSprite.path = path;\r\n\r\n\t\t\t\tif (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n\t\t\t\t\tpath = $path.moveTo(points[0]) + $path.polyline(points);\r\n\t\t\t\t\tpath += $path.lineTo(closePoints[0]) + $path.polyline(closePoints);\r\n\t\t\t\t\tpath += $path.lineTo(points[0]);\r\n\t\t\t\t\tpath += $path.closePath();\r\n\r\n\t\t\t\t\tthis.fillSprite.path = path;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet path: string = $path.moveTo(points[0]) + $path.polyline(points);\r\n\r\n\t\t\t\tthis.strokeSprite.path = path;\r\n\r\n\t\t\t\tif (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible\r\n\t\t\t\t\tpath += $path.lineTo(closePoints[0]) + $path.polyline(closePoints);\r\n\t\t\t\t\tpath += $path.lineTo(points[0]);\r\n\t\t\t\t\tpath += $path.closePath();\r\n\r\n\t\t\t\t\tthis.fillSprite.path = path;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.strokeSprite.path = \"\";\r\n\t\t\tthis.fillSprite.path = \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StepLineSeriesSegment\"] = StepLineSeriesSegment;\r\n","/**\r\n * Step line series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LineSeries, LineSeriesDataItem, ILineSeriesDataFields, ILineSeriesProperties, ILineSeriesAdapters, ILineSeriesEvents } from \"./LineSeries\";\r\nimport { StepLineSeriesSegment } from \"./StepLineSeriesSegment\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[StepLineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class StepLineSeriesDataItem extends LineSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: StepLineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"StepLineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[StepLineSeries]].\r\n */\r\nexport interface IStepLineSeriesDataFields extends ILineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[StepLineSeries]].\r\n */\r\nexport interface IStepLineSeriesProperties extends ILineSeriesProperties {\r\n\tnoRisers?: boolean;\r\n\r\n\tstartLocation?: number;\r\n\r\n\tendLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[StepLineSeries]].\r\n */\r\nexport interface IStepLineSeriesEvents extends ILineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[StepLineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IStepLineSeriesAdapters extends ILineSeriesAdapters, IStepLineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a step line graph.\r\n *\r\n * @see {@link IStepLineSeriesEvents} for a list of available Events\r\n * @see {@link IStepLineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class StepLineSeries extends LineSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IStepLineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IStepLineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IStepLineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IStepLineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: StepLineSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines type for segement.\r\n\t */\r\n\tpublic _segment: StepLineSeriesSegment;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"StepLineSeries\";\r\n\t\tthis.applyTheme();\r\n\t\tthis.startLocation = 0;\r\n\t\tthis.endLocation = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new StepLineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param points     [description]\r\n\t * @param dataItem   [description]\r\n\t * @param xField     [description]\r\n\t * @param yField     [description]\r\n\t * @param backwards  [description]\r\n\t */\r\n\tprotected addPoints(points: IPoint[], dataItem: this[\"_dataItem\"], xField: string, yField: string, backwards?: boolean): void {\r\n\r\n\t\tlet startLocationX:number;\r\n\t\tlet endLocationX:number;\r\n\r\n\t\tlet startLocationY:number;\r\n\t\tlet endLocationY:number;\t\t\r\n\r\n\t\tif(this.baseAxis == this.xAxis){\r\n\t\t\tstartLocationX = this.startLocation;\r\n\t\t\tendLocationX = this.endLocation;\r\n\r\n\t\t\tstartLocationY = this.getAdjustedXLocation(dataItem, this.yOpenField);\r\n\t\t\tendLocationY = this.getAdjustedXLocation(dataItem, this.yField);\r\n\t\t}\r\n\r\n\t\tif(this.baseAxis == this.yAxis){\r\n\t\t\tstartLocationY = this.startLocation;\r\n\t\t\tendLocationY = this.endLocation;\r\n\r\n\t\t\tstartLocationX = this.getAdjustedXLocation(dataItem, this.xOpenField);\r\n\t\t\tendLocationX = this.getAdjustedXLocation(dataItem, this.xField);\t\t\t\r\n\t\t}\r\n\r\n\r\n\t\tlet x0: number = this.xAxis.getX(dataItem, xField, startLocationX);\r\n\t\tlet y0: number = this.yAxis.getY(dataItem, yField, startLocationY);\r\n\r\n\t\tlet x1: number = this.xAxis.getX(dataItem, xField, endLocationX);\r\n\t\tlet y1: number = this.yAxis.getY(dataItem, yField, endLocationY);\r\n\r\n\t\tx0 = $math.fitToRange(x0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\ty0 = $math.fitToRange(y0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\tx1 = $math.fitToRange(x1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\t\ty1 = $math.fitToRange(y1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n\r\n\t\t// this might make an impression that points are duplicated, and they indeed are, but this is needed to handle gaps in data\r\n\t\tif (!this.noRisers) {\r\n\t\t\tif (points.length > 1) {\r\n\t\t\t\tlet prevPoint: IPoint = points[points.length - 1];\r\n\t\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tpoints.push({ x: prevPoint.x, y: y1 });\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpoints.push({ x: x0, y: prevPoint.y });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tpoints.push({ x: x1, y: prevPoint.y });\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpoints.push({ x: prevPoint.x, y: y0 });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet point0: IPoint = { x: x0, y: y0 };\r\n\t\tlet point1: IPoint = { x: x1, y: y1 };\r\n\r\n\t\tif (backwards) {\r\n\t\t\tpoints.push(point1, point0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpoints.push(point0, point1);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Draws the line segment.\r\n\t *\r\n\t * @param segment     Segment\r\n\t * @param points      Segment points\r\n\t * @param closePoints Segment close points\r\n\t */\r\n\tprotected drawSegment(segment: StepLineSeriesSegment, points: IPoint[], closePoints: IPoint[]): void {\r\n\t\tlet vertical = false;\r\n\t\tif (this.yAxis == this.baseAxis) {\r\n\t\t\tvertical = true;\r\n\t\t}\r\n\t\tsegment.drawSegment(points, closePoints, this.tensionX, this.tensionY, this.noRisers, vertical);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createSegment(): this[\"_segment\"] {\r\n\t\treturn new StepLineSeriesSegment();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if step line series should draw only horizontal (or only\r\n\t * vertical, depending on base axis) lines, instead of connecting them with\r\n\t * vertical (or horizontal) lines.\r\n\t *\r\n\t * @default false\r\n\t * @param value  No risers\r\n\t */\r\n\tpublic set noRisers(value: boolean) {\r\n\t\tthis.setPropertyValue(\"noRisers\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return No risers\r\n\t */\r\n\tpublic get noRisers(): boolean {\r\n\t\treturn this.getPropertyValue(\"noRisers\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * start location of the step\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t * @default 0\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Step end location.\r\n\t *\r\n\t * @param value Location (0-1)\r\n\t * #default 1\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StepLineSeries\"] = StepLineSeries;\r\nregistry.registeredClasses[\"StepLineSeriesDataItem\"] = StepLineSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[RadarColumn]].\r\n */\r\nexport interface IRadarColumnProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[RadarColumn]].\r\n */\r\nexport interface IRadarColumnEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarColumn]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarColumnAdapters extends IColumnAdapters, IRadarColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class RadarColumn extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarColumnEvents;\r\n\r\n\r\n\t/**\r\n\t * Radar column element\r\n\t */\r\n\tpublic radarColumn: Slice;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarColumn\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.radarColumn = this.createChild(Slice);\r\n\t\tthis.radarColumn.shouldClone = false;\r\n\t\tthis.radarColumn.strokeOpacity = undefined;\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.radarColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[RadarColumn]].\r\n\t *\r\n\t * @param source Source RadarColumn\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.radarColumn) {\r\n\t\t\tthis.radarColumn.copyFrom(source.radarColumn);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @return X\r\n\t * @ignore\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\treturn this.radarColumn.getTooltipX();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @return Y\r\n\t * @ignore\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\treturn this.radarColumn.getTooltipY();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumn\"] = RadarColumn;\r\n","/**\r\n * Radar column series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesProperties, IColumnSeriesDataFields, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { AxisRendererRadial } from \"../axes/AxisRendererRadial\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { AxisRendererCircular } from \"../axes/AxisRendererCircular\";\r\nimport { RadarColumn } from \"../elements/RadarColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { Percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[RadarColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class RadarColumnSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: RadarColumn;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: RadarColumnSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColumnSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[RadarColumnSeries]].\r\n */\r\nexport interface IRadarColumnSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[RadarColumnSeries]].\r\n */\r\nexport interface IRadarColumnSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[RadarColumnSeries]].\r\n */\r\nexport interface IRadarColumnSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarColumnSeriesAdapters extends IColumnSeriesAdapters, IRadarColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IRadarColumnSeriesEvents} for a list of available Events\r\n * @see {@link IRadarColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class RadarColumnSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Type of data item.\r\n\t */\r\n\tpublic _dataItem: RadarColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: RadarColumn;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IRadarColumnSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: RadarChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarColumnSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a RadarColumn element to use as column in radar chart.\r\n\t *\r\n\t * @return RadarColumn.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new RadarColumn();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\t// so that radius would be updated\r\n\t\tif (this.chart.invalid) {\r\n\t\t\tthis.chart.validate();\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected disableUnusedColumns(dataItem: ColumnSeriesDataItem) {\r\n\t\tif (dataItem) {\r\n\t\t\tif (dataItem.column) {\r\n\t\t\t\tdataItem.column.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn: Sprite = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\trangeColumn.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet startAngle = this.chart.startAngle;\r\n\t\tlet endAngle = this.chart.endAngle;\r\n\r\n\t\tlet yField: string = this.yField;\r\n\t\tlet yOpenField: string = this.yOpenField;\r\n\t\tlet xField: string = this.xField;\r\n\t\tlet xOpenField: string = this.xOpenField;\r\n\r\n\t\tlet lAngle: number;\r\n\t\tlet rAngle: number;\r\n\r\n\t\tlet tRadius: number;\r\n\t\tlet bRadius: number;\r\n\r\n\t\tlet startLocation = this.getStartLocation(dataItem);\r\n\t\tlet endLocation = this.getEndLocation(dataItem);\r\n\r\n\t\tlet cellAngle = (endAngle - startAngle) / (this.dataItems.length * (this.end - this.start));\r\n\r\n\t\tlet radarColumn = dataItem.column;\r\n\t\tif (!radarColumn) {\r\n\t\t\tradarColumn = this.columns.create();\r\n\t\t\tdataItem.column = radarColumn;\r\n\t\t\t$object.copyProperties(this, radarColumn, visualProperties); // need this \r\n\t\t\t$object.copyProperties(this.columns.template, radarColumn, visualProperties); // second time, no force, so that columns.template would override series properties\t\t\t\r\n\t\t\tdataItem.addSprite(radarColumn);\r\n\t\t\tradarColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n\t\t\tthis.setColumnStates(radarColumn);\r\n\t\t}\r\n\r\n\t\tlet width = radarColumn.width;\r\n\t\tlet percentWidth = 100;\r\n\r\n\t\tif (width instanceof Percent) {\r\n\t\t\tpercentWidth = width.percent;\r\n\t\t}\r\n\r\n\t\tlet offset: number = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n\t\tstartLocation += offset;\r\n\t\tendLocation -= offset;\r\n\t\t// two category axes\r\n\t\tif ((this.xAxis instanceof CategoryAxis) && (this.yAxis instanceof CategoryAxis)) {\r\n\t\t\ttRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, 0, \"valueY\"), y: this.yAxis.getY(dataItem, yField, 0, \"valueY\") });\r\n\t\t\tbRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, 1, \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, 1, \"valueY\") });\r\n\r\n\t\t\tlAngle = this.xAxis.getAngle(dataItem, xOpenField, 0, \"valueX\");\r\n\t\t\trAngle = this.xAxis.getAngle(dataItem, xField, 1, \"valueX\");\r\n\r\n\t\t\tstartAngle = startAngle + startLocation * cellAngle;\r\n\t\t\tendAngle = endAngle - (1 - endLocation) * cellAngle;\r\n\t\t}\r\n\t\telse if (this.baseAxis == this.xAxis) {\r\n\t\t\ttRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, dataItem.locations[yField], \"valueY\"), y: this.yAxis.getY(dataItem, yField, dataItem.locations[yField], \"valueY\") });\r\n\t\t\tbRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, dataItem.locations[yOpenField], \"valueY\") });\r\n\r\n\t\t\tlAngle = this.xAxis.getAngle(dataItem, xOpenField, startLocation, \"valueX\");\r\n\t\t\trAngle = this.xAxis.getAngle(dataItem, xField, endLocation, \"valueX\");\r\n\r\n\t\t\tstartAngle = startAngle + startLocation * cellAngle;\r\n\t\t\tendAngle = endAngle - (1 - endLocation) * cellAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yField, startLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yField, startLocation, \"valueY\") });\r\n\t\t\tbRadius = $math.getDistance({ x: this.yAxis.getX(dataItem, yOpenField, endLocation, \"valueY\"), y: this.yAxis.getY(dataItem, yOpenField, endLocation, \"valueY\") });\r\n\r\n\t\t\tif ($type.isNumber(width)) {\t\t\t\t\r\n\t\t\t\tlet abs = Math.abs(tRadius - bRadius);\r\n\t\t\t\tif (abs > width) {\r\n\t\t\t\t\tlet d = (abs - width) / 2;\r\n\t\t\t\t\ttRadius += d;\r\n\t\t\t\t\tbRadius -= d;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlAngle = this.xAxis.getAngle(dataItem, xField, dataItem.locations[xField], \"valueX\");\r\n\r\n\t\t\trAngle = this.xAxis.getAngle(dataItem, xOpenField, dataItem.locations[xOpenField], \"valueX\");\r\n\t\t}\r\n\r\n\t\tif (rAngle < lAngle) {\r\n\t\t\tlet temp = rAngle;\r\n\t\t\trAngle = lAngle;\r\n\t\t\tlAngle = temp;\r\n\t\t}\r\n\r\n\t\tlAngle = $math.fitToRange(lAngle, startAngle, endAngle);\r\n\t\trAngle = $math.fitToRange(rAngle, startAngle, endAngle);\r\n\r\n\t\tlet slice = radarColumn.radarColumn;\r\n\r\n\t\tslice.startAngle = lAngle;\r\n\r\n\t\tlet arc = rAngle - lAngle;\r\n\r\n\t\tif (arc > 0) {\r\n\t\t\tslice.arc = arc;\r\n\t\t\tslice.radius = tRadius;\r\n\t\t\tslice.innerRadius = bRadius;\r\n\t\t\tradarColumn.__disabled = false;\r\n\r\n\t\t\tradarColumn.parent = this.columnsContainer;\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (!rangeColumn) {\r\n\t\t\t\t\trangeColumn = this.columns.create();\r\n\r\n\t\t\t\t\t$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n\t\t\t\t\t$object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n\r\n\t\t\t\t\tif (rangeColumn.dataItem) {\r\n\t\t\t\t\t\t$array.remove(rangeColumn.dataItem.sprites, rangeColumn);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.addSprite(rangeColumn);\r\n\t\t\t\t\trangeColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\t\t\t\t\t\r\n\t\t\t\t\tthis.setColumnStates(rangeColumn);\r\n\t\t\t\t\tdataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet slice = rangeColumn.radarColumn;\r\n\t\t\t\tslice.startAngle = lAngle;\r\n\t\t\t\tslice.arc = arc;\r\n\t\t\t\tslice.radius = tRadius;\r\n\t\t\t\tslice.innerRadius = bRadius;\r\n\r\n\t\t\t\tif (slice.invalid) {\r\n\t\t\t\t\tslice.paper = this.paper;\r\n\t\t\t\t\tslice.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeColumn.__disabled = false;\r\n\t\t\t\trangeColumn.parent = axisRange.contents;\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.disableUnusedColumns(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n\t *\r\n\t * @param    dataItem   Data item\r\n\t * @param    xKey       Name of X data field\r\n\t * @param    yKey       Name of Y data field\r\n\t * @param    locationX  X location\r\n\t * @param    locationY  Y location\r\n\t * @param    stackKeyX  ?\r\n\t * @param    stackKeyY  ?\r\n\t * @returns             Coordinates\r\n\t */\r\n\tpublic getPoint(dataItem: RadarColumnSeriesDataItem, xKey: string, yKey: string, locationX?: number, locationY?: number, stackKeyX?: string, stackKeyY?: string) {\r\n\r\n\t\tif (!stackKeyX) {\r\n\t\t\tstackKeyX = \"valueX\";\r\n\t\t}\r\n\t\tif (!stackKeyY) {\r\n\t\t\tstackKeyY = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet x: number = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);\r\n\t\tlet y: number = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);\r\n\r\n\t\tlet radius: number = $math.getDistance({ x: x, y: y });\r\n\t\t// hack to be able to determine angle later\r\n\t\tif (radius == 0) {\r\n\t\t\tradius = 0.00001;\r\n\t\t}\r\n\r\n\t\tlet angle: number = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);\r\n\r\n\t\treturn { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns an SVG path to be used as a mask for the series.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\r\n\t\tlet renderer: AxisRendererRadial = <AxisRendererRadial>this.yAxis.renderer;\r\n\t\treturn $path.arc(renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);\r\n\t}\r\n\r\n\tprotected positionBulletReal(bullet: Sprite, positionX: number, positionY: number) {\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tif (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {\r\n\t\t\tbullet.visible = false;\r\n\t\t}\r\n\r\n\t\tbullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));\r\n\t}\r\n\r\n\tprotected setXAxis(axis: Axis) {\r\n\t\tsuper.setXAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected setYAxis(axis: Axis) {\r\n\t\tsuper.setYAxis(axis);\r\n\t\tthis.updateRendererRefs();\r\n\t}\r\n\r\n\tprotected updateRendererRefs() {\r\n\t\tlet rendererX = <AxisRendererCircular>this.xAxis.renderer;\r\n\t\tlet rendererY = <AxisRendererRadial>this.yAxis.renderer;\r\n\r\n\t\trendererX.axisRendererY = rendererY;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumnSeries\"] = RadarColumnSeries;\r\nregistry.registeredClasses[\"RadarColumnSeriesDataItem\"] = RadarColumnSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building Funnel slices.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FunnelSlice]].\r\n */\r\nexport interface IFunnelSliceProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Width of the top edge of the slice.\r\n\t */\r\n\ttopWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * Width of the bottom edge of the slice.\r\n\t */\r\n\tbottomWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * A relative distance slice's sides should be bent to.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\texpandDistance?: number;\r\n\r\n\t/**\r\n\t * Orientation of the slice.\r\n\t */\r\n\torientation?: Orientation;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSlice]].\r\n */\r\nexport interface IFunnelSliceEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSlice]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSliceAdapters extends IContainerAdapters, IFunnelSliceProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to create [[FunnelSlice]] elements.\r\n *\r\n * @see {@link IFunnelSliceEvents} for a list of available events\r\n * @see {@link IFunnelSliceAdapters} for a list of available adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSlice extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelSliceProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelSliceAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelSliceEvents;\r\n\r\n\t/**\r\n\t * Main slice element.\r\n\t */\r\n\tpublic slice: Sprite;\r\n\r\n\t/**\r\n\t * Am anchor point the slice tick line is pointing to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @readonly\r\n\t */\r\n\tpublic tickPoint: IPoint;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.slice = this.createChild(Sprite);\r\n\t\tthis.slice.shouldClone = false;\r\n\t\tthis.slice.setElement(this.paper.add(\"path\"));\r\n\t\tthis.slice.isMeasured = false;\r\n\r\n\t\tthis.orientation = \"vertical\";\r\n\t\tthis.bottomWidth = percent(100);\r\n\t\tthis.topWidth = percent(100);\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\r\n\t\tthis.expandDistance = 0;\r\n\r\n\t\tthis.className = \"FunnelSlice\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet pt = this.pixelPaddingTop;\r\n\t\tlet pb = this.pixelPaddingBottom;\r\n\t\tlet pr = this.pixelPaddingRight;\r\n\t\tlet pl = this.pixelPaddingLeft;\r\n\r\n\t\tlet w = this.pixelWidth - pr - pl;\r\n\t\tlet h = this.pixelHeight - pt - pb;\r\n\r\n\t\tlet ed = this.expandDistance;\r\n\r\n\t\tlet path = \"\";\r\n\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, w);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, w);\r\n\r\n\t\t\tlet tl = { x: (w - tw) / 2 + pl, y: pt };\r\n\t\t\tlet tr = { x: (w + tw) / 2 + pl, y: pt };\r\n\r\n\t\t\tlet br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n\t\t\tlet bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n\r\n\t\t\tlet cpr = { x: tr.x + (br.x - tr.x) / 2 + ed * h, y: tr.y + 0.5 * h };\r\n\t\t\tlet cpl = { x: tl.x + (bl.x - tl.x) / 2 - ed * h, y: tl.y + 0.5 * h };\r\n\r\n\t\t\tlet qp1 = $path.lineTo(br);\r\n\t\t\tlet qp2 = $path.lineTo(tl);\r\n\r\n\t\t\tif(ed != 0){\r\n\t\t\t\tqp1 = $path.quadraticCurveTo(br, cpr);\r\n\t\t\t\tqp2 = $path.quadraticCurveTo(tl, cpl);\r\n\t\t\t}\r\n\r\n\t\t\tpath = $path.moveTo(tl) + $path.lineTo(tr) + qp1 + $path.lineTo(bl) + qp2;\r\n\r\n\t\t\tthis.tickPoint = { x: tr.x + (br.x - tr.x) / 2, y: tr.y + (br.y - tr.y) / 2 };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, h);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, h);\r\n\r\n\t\t\tlet tt = { x: pl, y: (h - tw) / 2 + pt };\r\n\t\t\tlet tb = { x: pl, y: (h + tw) / 2 + pt };\r\n\r\n\t\t\tlet bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n\t\t\tlet bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n\r\n\t\t\tlet cpr = { y: tt.y + (bt.y - tt.y) / 2 - ed * w, x: tt.x + 0.5 * w };\r\n\t\t\tlet cpl = { y: tb.y + (bb.y - tb.y) / 2 + ed * w, x: tb.x + 0.5 * w };\r\n\r\n\t\t\tlet qp1 = $path.lineTo(bt);\r\n\t\t\tlet qp2 = $path.lineTo(tb);\r\n\t\t\tif(ed != 0){\r\n\t\t\t\tqp1 = $path.quadraticCurveTo(bt, cpr);\r\n\t\t\t\tqp2 = $path.quadraticCurveTo(tb, cpl);\r\n\t\t\t}\r\n\r\n\t\t\tpath = $path.moveTo(tb) + $path.lineTo(tt) + qp1 + $path.lineTo(bb) + qp2;\r\n\r\n\t\t\tthis.tickPoint = { y: tb.y + (bb.y - tb.y) / 2, x: tb.x + (bb.x - tb.x) / 2 };\r\n\t\t}\r\n\r\n\t\tthis.slice.path = path;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\r\n\tgetPoint(locationX:number, locationY:number):IPoint{\r\n\r\n\t\tlet pt = this.pixelPaddingTop;\r\n\t\tlet pb = this.pixelPaddingBottom;\r\n\t\tlet pr = this.pixelPaddingRight;\r\n\t\tlet pl = this.pixelPaddingLeft;\r\n\r\n\t\tlet w = this.pixelWidth - pr - pl;\r\n\t\tlet h = this.pixelHeight - pt - pb;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, w);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, w);\r\n\r\n\t\t\tlet tl = { x: (w - tw) / 2 + pl, y: pt };\r\n\t\t\tlet tr = { x: (w + tw) / 2 + pl, y: pt };\r\n\r\n\t\t\tlet br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n\t\t\tlet bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n\r\n\t\t\tlet mlx = tl.x + (bl.x - tl.x) * locationY;\r\n\t\t\tlet mrx = tr.x + (br.x - tr.x) * locationY;\r\n\r\n\t\t\treturn { x: mlx + (mrx - mlx) * locationX, y: tr.y + (br.y - tr.y) * locationY };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, h);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, h);\r\n\r\n\t\t\tlet tt = { x: pl, y: (h - tw) / 2 + pt };\r\n\t\t\tlet tb = { x: pl, y: (h + tw) / 2 + pt };\r\n\r\n\t\t\tlet bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n\t\t\tlet bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n\r\n\t\t\tlet mty = tt.y + (bt.y - tt.y) * locationX;\r\n\t\t\tlet mby = tb.y + (bb.y - tb.y) * locationX;\r\n\r\n\t\t\treturn { y: mty + (mby - mty) * locationY, x: tt.x + (bt.x - tt.x) * locationX };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Bottom width in pixels or percent.\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param value  Bottom width\r\n\t */\r\n\tpublic set bottomWidth(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"bottomWidth\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return bottom width\r\n\t */\r\n\tpublic get bottomWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"bottomWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Top width in pixels or percent.\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param value  Top width\r\n\t */\r\n\tpublic set topWidth(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"topWidth\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Top width\r\n\t */\r\n\tpublic get topWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"topWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slice: \"horizontal\" or \"vertical\".\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set orintation if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative distance slice's sides should be bent to. It's relative to the\r\n\t * height of the slice.\r\n\t *\r\n\t * Zero (default) will mean the sides will be perfectly straight.\r\n\t *\r\n\t * Positive value will make them bend outwards, resulting in \"puffed\" slices.\r\n\t *\r\n\t * Negative values will make them bend inwards.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set expandDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"expandDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return expandDistance\r\n\t */\r\n\tpublic get expandDistance(): number {\r\n\t\treturn this.getPropertyValue(\"expandDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param source Source Sprite\r\n\t */\r\n\tpublic copyFrom(source :this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.slice) {\r\n\t\t\tthis.slice.copyFrom(source.slice);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSlice\"] = FunnelSlice;\r\n","/**\r\n * Funnel tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelSlice } from \"./FunnelSlice\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { FunnelSeries } from \"../series/FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickProperties extends ITickProperties {\r\n\tlocationX?: number;\r\n\r\n\tlocationY?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickEvents extends ITickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelTickAdapters extends ITickAdapters, IFunnelTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an tick line for a funnel slice connecting it to a related label.\r\n *\r\n * @see {@link IFunnelTickEvents} for a list of available events\r\n * @see {@link IFunnelTickAdapters} for a list of available Adapters\r\n */\r\nexport class FunnelTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelTickEvents;\r\n\r\n\t/**\r\n\t * A label element this tick is attached to.\r\n\t */\r\n\tprotected _label = new MutableValueDisposer<Label>();\r\n\r\n\t/**\r\n\t * A slice element this tick is attached to.\r\n\t */\r\n\tprotected _slice = new MutableValueDisposer<FunnelSlice>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelTick\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis._disposers.push(this._label);\r\n\t\tthis._disposers.push(this._slice);\r\n\r\n\t\tthis.setPropertyValue(\"locationX\", 0);\r\n\t\tthis.setPropertyValue(\"locationY\", 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet slice: FunnelSlice = this.slice;\r\n\t\tlet point = slice.getPoint(this.locationX, this.locationY);\r\n\r\n\t\tif (point) {\r\n\t\t\tlet label = this.label;\r\n\r\n\t\t\tlet series = <FunnelSeries>slice.dataItem.component;\r\n\t\t\tlet p0:IPoint;\r\n\t\t\tlet p1:IPoint;\r\n\t\t\tlet p2:IPoint;\r\n\r\n\t\t\tif (series.orientation == \"vertical\") {\r\n\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY;\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\tx1 += label.maxRight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp0 = $utils.spritePointToSprite(point, slice, this.parent);\t\t\t\t\r\n\t\t\t\tp2 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\t\t\t\tp1 = { x: label.parent.pixelX - this.length, y: p2.y };\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\tp1.x = label.parent.measuredWidth + this.length; \r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY;\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\ty1 += label.maxBottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n\t\t\t\tp2 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\t\t\t\tp1 = { x: p2.x, y: label.parent.pixelY - this.length };\r\n\r\n\t\t\t\tif(!series.labelsOpposite){\r\n\t\t\t\t\tp1.y = label.parent.measuredHeight + this.length; \r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.path = $path.moveTo(p0) + $path.lineTo(p1) + $path.lineTo(p2);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [[FunnelSlice]] element tick is attached to.\r\n\t *\r\n\t * @param slice  Slice\r\n\t */\r\n\tpublic set slice(slice: FunnelSlice) {\r\n\t\tthis._slice.set(slice, new MultiDisposer([\r\n\t\t\tslice.events.on(\"transformed\", this.invalidate, this, false),\r\n\t\t\tslice.events.on(\"validated\", this.invalidate, this, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return FunnelSlice\r\n\t */\r\n\tpublic get slice(): FunnelSlice {\r\n\t\treturn this._slice.get();\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element tick is attached to.\r\n\t *\r\n\t * @param label  Label\r\n\t */\r\n\tpublic set label(label: Label) {\r\n\t\tthis._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\treturn this._label.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A relative horizontal position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tthis.setPropertyValue(\"locationX\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative vertical position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tthis.setPropertyValue(\"locationY\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelTick\"] = FunnelTick;\r\n","/**\r\n * Defines Funnel Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPercentSeriesAdapters, IPercentSeriesDataFields, IPercentSeriesEvents, IPercentSeriesProperties, PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SlicedChart } from \"../types/SlicedChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { Align } from \"../../core/defs/Align\";\r\nimport { VerticalAlign } from \"../../core/defs/VerticalAlign\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FunnelSeriesDataItem extends PercentSeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * A reference to a label element.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a tick element.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: FunnelSeries;\r\n\r\n\t/**\r\n\t * Defines a type of elements linking slices.\r\n\t */\r\n\tpublic _sliceLink: FunnelSlice;\r\n\r\n\t/**\r\n\t * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n\t *\r\n\t * @readonly\r\n\t * @return Slice element\r\n\t */\r\n\tpublic get sliceLink(): this[\"_sliceLink\"] {\r\n\t\tif (!this._sliceLink) {\r\n\t\t\tlet sliceLink = this.component.sliceLinks.create();\r\n\t\t\tthis._sliceLink = sliceLink;\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\t\t\tsliceLink.parent = this.component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.sliceLinks.removeValue(sliceLink);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(sliceLink);\r\n\t\t\tsliceLink.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._sliceLink;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelSeriesDataItem\";\r\n\t\t// this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n\t\tthis.events.on(\"visibilitychanged\", () => {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesDataFields extends IPercentSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesProperties extends IPercentSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative width of the slice bottom. See description of `bottomRatio`\r\n\t * property for full description.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tbottomRatio?: number;\r\n\r\n\t/**\r\n\t * Orientation of series\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * @since 4.1.13\r\n\t */\r\n\tlabelsOpposite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesEvents extends IPercentSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSeriesAdapters extends IPercentSeriesAdapters, IFunnelSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSeries extends PercentSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: SlicedChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IFunnelSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: FunnelSeriesDataItem;\r\n\r\n\r\n\tprotected _nextY: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t */\r\n\tprotected _sliceLinks: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * Holds sum of values for all slices\r\n\t */\r\n\tprotected _total: number;\r\n\r\n\t/**\r\n\t * Holds number of slices.\r\n\t */\r\n\tprotected _count: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FunnelSeries\";\r\n\t\tthis.orientation = \"vertical\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.slicesContainer.width = percent(100);\r\n\t\tthis.slicesContainer.height = percent(100);\r\n\r\n\t\tthis._disposers.push(this.slicesContainer.events.on(\"maxsizechanged\", this.invalidateDataItems, this, false));\r\n\r\n\t\tthis.labelsOpposite = true;\r\n\r\n\t\tthis.labelsContainer.layout = \"absolute\";\r\n\r\n\t\tthis.bottomRatio = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelSlice]] element.\r\n\t *\r\n\t * @return Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new FunnelSlice();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelTick]] element.\r\n\t *\r\n\t * @return Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new FunnelTick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Funnel Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FunnelSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits FunnelSlice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tslice.isMeasured = false;\r\n\t\tslice.defaultState.properties.scale = 1;\r\n\t\tslice.observe(\"scale\", this.handleSliceScale, this);\r\n\t\tslice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n\t\tslice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n\r\n\t\tlet hoverState = slice.states.create(\"hover\");\r\n\t\thoverState.properties.expandDistance = 0.2;\r\n\t}\r\n\r\n\t/**\r\n\t * [initLabel description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param label [description]\r\n\t */\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tsuper.initLabel(label);\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.isMeasured = true;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis._nextY = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements() {\r\n\r\n\t\tlet slicesContainer = this.slicesContainer;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlabelTemplate.interactionsEnabled = true;\r\n\t\t\tslicesContainer.isMeasured = true;\r\n\t\t\tlabelsContainer.isMeasured = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelTemplate.interactionsEnabled = false;\r\n\t\t\tslicesContainer.isMeasured = false;\r\n\t\t\tlabelsContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet total = 0;\r\n\t\tlet count = 0;\r\n\t\tthis.dataItems.each((dItem) => {\r\n\t\t\tif ($type.hasValue(dItem.value)) {\r\n\t\t\t\tcount++;\r\n\t\t\t\tif (dItem.value > 0) {\r\n\t\t\t\t\ttotal += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.ignoreZeroValues) {\r\n\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n\t\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis._total = 1 / count * total;\r\n\t\tthis._count = count;\r\n\r\n\t\tsuper.validateDataElements();\r\n\r\n\t\tthis.arrangeLabels();\r\n\t}\r\n\r\n\t/**\r\n\t * [getNextValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getNextValue(dataItem: FunnelSeriesDataItem): number {\r\n\t\tlet index = dataItem.index;\r\n\t\tlet nextValue: number = dataItem.getWorkingValue(\"value\");\r\n\t\tif (index < this.dataItems.length - 1) {\r\n\t\t\tlet nextItem = this.dataItems.getIndex(index + 1);\r\n\t\t\tnextValue = nextItem.getWorkingValue(\"value\");\r\n\r\n\t\t\tif (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n\t\t\t\treturn this.getNextValue(nextItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}\r\n\r\n\t/**\r\n\t * [formDataElement description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected formDataElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\t//if ($type.hasValue(dataItem.value)) {\r\n\t\t// FunnelSlice\r\n\t\tlet slice = dataItem.slice;\r\n\t\tslice.orientation = this.orientation;\r\n\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tsliceLink.orientation = this.orientation;\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tlet label = dataItem.label;\r\n\r\n\t\ttick.slice = slice;\r\n\t\ttick.label = label;\r\n\r\n\t\tif ($type.hasValue(dataItem.value)) {\r\n\t\t\tthis.decorateSlice(dataItem);\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tif (dataItem.value == 0 && this.ignoreZeroValues) {\r\n\t\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (dataItem.index == this.dataItems.length - 1) {\r\n\t\t\tsliceLink.disabled = true;\r\n\t\t}\r\n\r\n\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tsliceLink.fill = slice.fill;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * [decorateSlice description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected decorateSlice(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet slice = dataItem.slice;\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet tick = dataItem.tick;\r\n\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tlet nextValue = this.getNextValue(dataItem);\r\n\t\tlet workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n\t\tlet bottomRatio = this.bottomRatio;\r\n\r\n\t\tlet d = 1;\r\n\t\tif (dataItem.value != 0) {\r\n\t\t\td = workingValue / Math.abs(dataItem.value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n\t\t\t\td = 0.000001;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.ignoreZeroValues && dataItem.value == 0) {\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (this._nextY == Infinity) {\r\n\t\t\tthis._nextY = 0;\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\r\n\t\t\tlet linkHeight = sliceLink.pixelHeight * d;\r\n\r\n\t\t\tmaxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tslice.y = this._nextY;\r\n\t\t\tslice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n\r\n\t\t\tslice.x = maxWidth / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.x = slice.x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.x = undefined;\r\n\t\t\t}\r\n\t\t\tlabel.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n\r\n\t\t\tthis._nextY += slice.pixelHeight + linkHeight;\r\n\t\t\tsliceLink.y = this._nextY - linkHeight;\r\n\t\t\tsliceLink.x = slice.x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linkWidth = sliceLink.pixelWidth * d;\r\n\r\n\t\t\tmaxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tslice.x = this._nextY;\r\n\t\t\tslice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n\t\t\tslice.y = maxHeight / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.y = slice.y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.y = this.labelsContainer.measuredHeight;\r\n\t\t\t}\r\n\t\t\tlabel.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n\r\n\t\t\tthis._nextY += slice.pixelWidth + linkWidth;\r\n\t\t\tsliceLink.x = this._nextY - linkWidth;\r\n\r\n\t\t\tsliceLink.y = slice.y;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getLastLabel(index: number): Label {\r\n\t\tif (index > 0) {\r\n\t\t\tlet lastLabel = this.labels.getIndex(index);\r\n\t\t\tif (lastLabel.__disabled || !lastLabel.visible) {\r\n\t\t\t\treturn this.getLastLabel(index - 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn lastLabel;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [arrangeLabels description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected arrangeLabels(): void {\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlet count = this.labels.length;\r\n\t\t\tif (count > 1) {\r\n\r\n\t\t\t\tlet lastLabel = this.getLastLabel(count - 1);\r\n\t\t\t\tif (lastLabel) {\r\n\r\n\t\t\t\t\tlet lastY = lastLabel.pixelY;\r\n\t\t\t\t\tlet lastX = lastLabel.pixelX;\r\n\r\n\t\t\t\t\tif (count > 1) {\r\n\t\t\t\t\t\tfor (let i = count - 2; i >= 0; i--) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY + label.measuredHeight > lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY - label.measuredHeight);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX + label.measuredWidth > lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX - label.measuredWidth);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlastY = label.pixelY;\r\n\t\t\t\t\t\t\t\tlastX = label.pixelX;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlastY = 0;\r\n\t\t\t\t\t\tlastX = 0;\r\n\t\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY < lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX < lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlastY += label.measuredHeight;\r\n\t\t\t\t\t\t\t\tlastX += label.measuredWidth;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice: FunnelSlice = dataItem.slice;\r\n\r\n\t\tlet locationX = bullet.locationX;\r\n\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\tlocationX = 0.5;\r\n\t\t}\r\n\t\tlet locationY = bullet.locationY;\r\n\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\tlocationY = 1;\r\n\t\t}\r\n\r\n\t\tbullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n\t\tbullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tif (this.setPropertyValue(\"orientation\", value)) {\r\n\t\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t\t\tthis.invalidate();\r\n\t\t\tif (value == \"vertical\") {\r\n\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\tthis.ticks.template.locationY = 0.5;\r\n\t\t\t\tthis.labels.template.rotation = 0;\r\n\t\t\t\tthis.layout = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.ticks.template.locationX = 0.5;\r\n\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\tthis.labels.template.rotation = -90;\r\n\t\t\t\tthis.layout = \"vertical\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how slice's bottom will change in relation to slices top AND\r\n\t * next slices top.\r\n\t *\r\n\t * Basically it's a relative value (0-1) that indicates bottom width\r\n\t * position between current slice's top width and the top withd of the next\r\n\t * one.\r\n\t *\r\n\t * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n\t * slice with).\r\n\t *\r\n\t * `0` (default) will mean that bottom will be the same as top, resulting in\r\n\t * a prefectly square slice.\r\n\t *\r\n\t * From the data-viz standpoint `0` is a correct setting, since area of the\r\n\t * slices will depict their value correctly.\r\n\t *\r\n\t * `1` will mean that slice will become trapezoid with its bottom matching\r\n\t * width of the next slice.\r\n\t *\r\n\t * `0.5` will make bottom width be in the middle of width of current slice\r\n\t * and the next slice.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set bottomRatio(value: number) {\r\n\t\tif (this.setPropertyValue(\"bottomRatio\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get bottomRatio(): number {\r\n\t\treturn this.getPropertyValue(\"bottomRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of elements linking each actual slice.\r\n\t *\r\n\t * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n\t * so they have all the same configuration options.\r\n\t *\r\n\t * You can use `template` of this link, to specify how links will look.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"FunnelSeries\",\r\n\t *      // ...\r\n\t *      \"sliceLinks\": {\r\n\t *        \"fillOpacity\": 0.5\r\n\t *      }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Funnel links\r\n\t */\r\n\tpublic get sliceLinks(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._sliceLinks) {\r\n\t\t\tlet sliceLink = new FunnelSlice();\r\n\t\t\tsliceLink.applyOnClones = true;\r\n\t\t\tsliceLink.fillOpacity = 0.5;\r\n\t\t\tsliceLink.expandDistance = - 0.3;\r\n\t\t\tsliceLink.hiddenState.properties.opacity = 0;\r\n\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\r\n\t\t\tthis._sliceLinks = new ListTemplate(sliceLink);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._sliceLinks));\r\n\t\t}\r\n\t\treturn this._sliceLinks;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\r\n\r\n\t\tlet delay: number = 0;\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.show(interpolationDuration, delay, [\"value\"]);\r\n\t\t});\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[] = [\"value\"];\r\n\t\tlet value: number = 0;\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\t\t\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.hide(interpolationDuration, delay, value, fields);\r\n\t\t});\r\n\r\n\t\tlet animation: Animation = super.hide(duration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setAlignLabels(value: boolean) {\r\n\t\tsuper.setAlignLabels(value);\r\n\t\tthis.ticks.template.disabled = !value;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tif (labelsContainer) {\r\n\t\t\t// do not align\r\n\t\t\tif (!value) {\r\n\t\t\t\tlabelsContainer.width = percent(100);\r\n\t\t\t\tlabelsContainer.height = percent(100);\r\n\t\t\t}\r\n\t\t\t//align\r\n\t\t\telse {\r\n\t\t\t\tlabelsContainer.height = undefined;\r\n\t\t\t\tlabelsContainer.width = undefined;\r\n\t\t\t\tlabelsContainer.margin(10, 10, 10, 10);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t}\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * This setting is only used if `alignLabels = true`.\r\n\t *\r\n\t * If set to `true` (default) labels will be drawn to the right (on vertical\r\n\t * series), or to the bottom (on horizontal series).\r\n\t *\r\n\t * If set to `false`, labels will be positioned to the left or top\r\n\t * respectively.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.1.13\r\n\t * @param  value  Labels on opposite side?\r\n\t */\r\n\tpublic set labelsOpposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"labelsOpposite\", value)\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tlet labelAlign: Align = \"none\";\r\n\t\tlet labelValign: VerticalAlign = \"none\";\r\n\r\n\t\tif (!this.alignLabels) {\r\n\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\tlabelAlign = \"center\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabelValign = \"middle\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// opposite (left/bottom)\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.labelsContainer.toFront();\r\n\t\t\t\t// left\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"left\";\r\n\t\t\t\t\tlabelAlign = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\t// bottom\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"right\";\r\n\t\t\t\t\tlabelValign = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// non oposite (right/top)\r\n\t\t\telse {\r\n\t\t\t\tthis.labelsContainer.toBack();\r\n\t\t\t\t// right\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 0;\r\n\t\t\t\t\tlabelAlign = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\t// top\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabelValign = \"top\";\r\n\t\t\t\t\tthis.ticks.template.locationY = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlabelTemplate.align = labelAlign;\r\n\t\tlabelTemplate.valign = labelValign;\r\n\r\n\t\tthis.validateLayout();\r\n\t\tthis.ticks.each((tick) => {\r\n\t\t\ttick.invalidate();\r\n\t\t})\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels on opposite side?\r\n\t */\r\n\tpublic get labelsOpposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"labelsOpposite\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n","/**\r\n * Defines Pyramid Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IFunnelSeriesAdapters, IFunnelSeriesDataFields, IFunnelSeriesEvents, IFunnelSeriesProperties, FunnelSeries, FunnelSeriesDataItem } from \"./FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PyramidSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PyramidSeriesDataItem extends FunnelSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PyramidSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PyramidSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PyramidSeries]].\r\n */\r\nexport interface IPyramidSeriesDataFields extends IFunnelSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PyramidSeries]].\r\n */\r\nexport interface IPyramidSeriesProperties extends IFunnelSeriesProperties {\r\n\r\n\t/**\r\n\t * Bottom width in pixels or percent\r\n\t */\r\n\tbottomWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * Top width in pixels or percent\r\n\t */\r\n\ttopWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * Height of pyramid\r\n\t */\r\n\tpyramidHeight?: number | Percent;\r\n\r\n\t/**\r\n\t * Indicates whether slice value should sould influence its height or area\r\n\t * size.\r\n\t *\r\n\t * @default \"area\"\r\n\t */\r\n\tvalueIs?: \"height\" | \"area\";\r\n}\r\n\r\n/**\r\n * Defines events for [[PyramidSeries]].\r\n */\r\nexport interface IPyramidSeriesEvents extends IFunnelSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PyramidSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPyramidSeriesAdapters extends IFunnelSeriesAdapters, IPyramidSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPyramidSeriesEvents} for a list of available Events\r\n * @see {@link IPyramidSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class PyramidSeries extends FunnelSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPyramidSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPyramidSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPyramidSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPyramidSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PyramidSeriesDataItem;\r\n\r\n\t/**\r\n\t * [_nextWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _nextWidth: number;\r\n\r\n\tprotected _pyramidHeight: number;\r\n\r\n\tprotected _pyramidWidth: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PyramidSeries\";\r\n\t\tthis.topWidth = percent(0);\r\n\t\tthis.bottomWidth = percent(100);\r\n\t\tthis.pyramidHeight = percent(100);\r\n\t\tthis.valueIs = \"area\";\r\n\r\n\t\tthis.sliceLinks.template.width = 0;\r\n\t\tthis.sliceLinks.template.height = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pyramid Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PyramidSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis._nextWidth = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * [getNextValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getNextValue(dataItem: FunnelSeriesDataItem): number {\r\n\t\tlet index = dataItem.index;\r\n\t\tlet nextValue: number = dataItem.getWorkingValue(\"value\");\r\n\t\tif (index < this.dataItems.length - 1) {\r\n\t\t\tlet nextItem = this.dataItems.getIndex(index + 1);\r\n\t\t\tnextValue = nextItem.getWorkingValue(\"value\");\r\n\t\t}\r\n\t\tif (nextValue == 0) {\r\n\t\t\tnextValue = 0.000001;\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements() {\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.value > 0) {\r\n\t\t\t\tlet relValue = dataItem.getWorkingValue(\"value\") / dataItem.value;\r\n\t\t\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tmaxHeight -= (sliceLink.pixelHeight * relValue);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmaxWidth -= (sliceLink.pixelWidth * relValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis._pyramidHeight = $utils.relativeToValue(this.pyramidHeight, maxHeight);\r\n\t\tthis._pyramidWidth = $utils.relativeToValue(this.pyramidHeight, maxWidth);\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet y = (maxHeight - this._pyramidHeight) / 2;\r\n\t\t\tthis.slicesContainer.y = y\r\n\t\t\tthis.labelsContainer.y = y;\r\n\t\t\tthis.ticksContainer.y = y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet x = (maxWidth - this._pyramidWidth) / 2;\r\n\t\t\tthis.slicesContainer.x = x;\r\n\t\t\tthis.labelsContainer.x = x;\r\n\t\t\tthis.ticksContainer.x = x;\r\n\t\t}\r\n\r\n\t\tsuper.validateDataElements();\r\n\t}\r\n\r\n\t/**\r\n\t * [decorateSlice description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected decorateSlice(dataItem: this[\"_dataItem\"]) {\r\n\r\n\t\tlet sum = this.dataItem.values.value.absoluteSum;\r\n\r\n\t\tif (sum == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet slice = dataItem.slice;\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet tick = dataItem.tick;\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\tthis.getNextValue(dataItem);\r\n\r\n\t\tlet workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n\r\n\t\tlet pyramidWidth = this._pyramidWidth;\r\n\t\tlet pyramidHeight = this._pyramidHeight;\r\n\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tlet linkWidth = sliceLink.pixelWidth;\r\n\t\tlet linkHeight = sliceLink.pixelHeight;\r\n\r\n\t\tif ((dataItem.value == 0 || dataItem.value == null) && this.ignoreZeroValues) {\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet topWidth = $utils.relativeToValue(this.topWidth, maxWidth);\r\n\r\n\t\t\tif (!$type.isNumber(this._nextWidth)) {\r\n\t\t\t\tthis._nextWidth = topWidth;\r\n\t\t\t}\r\n\r\n\t\t\tlet bottomWidth = $utils.relativeToValue(this.bottomWidth, maxWidth);\r\n\t\t\tlet sliceTopWidth = this._nextWidth;\r\n\r\n\t\t\tlet angle = Math.atan2(pyramidHeight, topWidth - bottomWidth);\r\n\t\t\tlet c = Math.tan(Math.PI / 2 - angle);\r\n\t\t\tif (c == 0) {\r\n\t\t\t\tc = 0.00000001;\r\n\t\t\t}\r\n\r\n\t\t\tlet sliceHeight: number;\r\n\t\t\tlet sliceBottomWidth: number;\r\n\r\n\t\t\tif (this.valueIs == \"area\") {\r\n\t\t\t\tlet totalSquare = (topWidth + bottomWidth) / 2 * pyramidHeight;\r\n\t\t\t\tlet square = totalSquare * workingValue / sum;\r\n\r\n\t\t\t\tlet s = Math.abs(sliceTopWidth * sliceTopWidth - 2 * square * c);\r\n\r\n\t\t\t\tsliceHeight = (sliceTopWidth - Math.sqrt(s)) / c;\r\n\t\t\t\tif (sliceHeight > 0) {\r\n\t\t\t\t\tsliceBottomWidth = (2 * square - sliceHeight * sliceTopWidth) / sliceHeight;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsliceBottomWidth = sliceTopWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsliceHeight = pyramidHeight * workingValue / sum;\r\n\t\t\t\tsliceBottomWidth = sliceTopWidth - sliceHeight * c;\r\n\t\t\t}\r\n\r\n\t\t\tslice.height = sliceHeight;\r\n\t\t\tslice.width = maxWidth;\r\n\t\t\tslice.bottomWidth = sliceBottomWidth;\r\n\t\t\tslice.topWidth = sliceTopWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = slice.bottomWidth;\r\n\r\n\t\t\tslice.y = this._nextY;\r\n\t\t\t//slice.x = maxWidth / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.x = maxWidth / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.x = 0;\r\n\t\t\t}\r\n\r\n\t\t\tlabel.y = slice.pixelY + slice.pixelHeight * tick.locationY + slice.dy;\r\n\r\n\t\t\tthis._nextY += slice.pixelHeight + linkHeight * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n\t\t\tsliceLink.y = this._nextY - linkHeight;\r\n\t\t\tsliceLink.x = maxWidth / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet topWidth = $utils.relativeToValue(this.topWidth, maxHeight);\r\n\r\n\t\t\tif (!$type.isNumber(this._nextWidth)) {\r\n\t\t\t\tthis._nextWidth = topWidth;\r\n\t\t\t}\r\n\r\n\t\t\tlet bottomWidth = $utils.relativeToValue(this.bottomWidth, maxHeight);\r\n\t\t\tlet sliceTopWidth = this._nextWidth;\r\n\r\n\t\t\tlet angle = Math.atan2(pyramidWidth, topWidth - bottomWidth);\r\n\t\t\tlet c = Math.tan(Math.PI / 2 - angle);\r\n\t\t\tif (c == 0) {\r\n\t\t\t\tc = 0.00000001;\r\n\t\t\t}\r\n\r\n\t\t\tlet sliceWidth: number;\r\n\t\t\tlet sliceBottomWidth: number;\r\n\r\n\t\t\tif (this.valueIs == \"area\") {\r\n\t\t\t\tlet totalSquare = (topWidth + bottomWidth) / 2 * pyramidWidth;\r\n\t\t\t\tlet square = totalSquare * workingValue / sum;\r\n\t\t\t\tsliceWidth = (sliceTopWidth - Math.sqrt(sliceTopWidth * sliceTopWidth - 2 * square * c)) / c;\r\n\t\t\t\tsliceBottomWidth = (2 * square - sliceWidth * sliceTopWidth) / sliceWidth;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsliceWidth = pyramidWidth * workingValue / sum;\r\n\t\t\t\tsliceBottomWidth = sliceTopWidth - sliceWidth * c;\r\n\t\t\t}\r\n\r\n\t\t\tslice.width = sliceWidth;\r\n\t\t\tslice.height = maxHeight;\r\n\t\t\tslice.bottomWidth = sliceBottomWidth;\r\n\t\t\tslice.topWidth = sliceTopWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = slice.bottomWidth;\r\n\r\n\t\t\tslice.x = this._nextY;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.y = maxHeight / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.y = this.labelsContainer.measuredHeight;\r\n\t\t\t}\r\n\r\n\t\t\tlabel.x = slice.pixelX + slice.pixelWidth * tick.locationX + slice.dx;\r\n\r\n\t\t\tthis._nextY += slice.pixelWidth + linkWidth * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);\r\n\t\t\tsliceLink.x = this._nextY - linkWidth;\r\n\t\t\tsliceLink.y = maxHeight / 2;\r\n\t\t}\r\n\r\n\t\tthis._nextWidth = slice.bottomWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Width of the pyramid's tip in pixels or relative (`Percent`).\r\n\t *\r\n\t * `0%` (default) means the pyramid will be perfectly pointy.\r\n\t * `50%` will have a cut off / blunt top that is half the width of the chart.\r\n\t * `100%` will take the whole width of the chart.\r\n\t *\r\n\t * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n\t * `100%` and `bottomWidth` to `0%`.\r\n\t *\r\n\t * @default 0%\r\n\t * @param {number | Percent}\r\n\t */\r\n\tpublic set topWidth(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"topWidth\", value, false, false, 10, false)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent}\r\n\t */\r\n\tpublic get topWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"topWidth\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Height of pyramid\r\n\t *\r\n\t *\r\n\t * @default 100%\r\n\t * @param {number | Percent}\r\n\t */\r\n\tpublic set pyramidHeight(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"pyramidHeight\", value, false, false, 10, false)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent}\r\n\t */\r\n\tpublic get pyramidHeight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"pyramidHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Width of the pyramid's bottom (bsae) in pixels or relative (`Percent`).\r\n\t *\r\n\t * `0%` means the pyramid's botto will be pointy.\r\n\t * `50%` will have a cut off / blunt bottom that is half the width of the chart.\r\n\t * `100%` (default) will take the whole width of the chart.\r\n\t *\r\n\t * If you need the downward-pointing pyramid, you might want to `topWidth` to\r\n\t * `100%` and `bottomWidth` to `0%`.\r\n\t *\r\n\t * @param {number | Percent}\r\n\t */\r\n\tpublic set bottomWidth(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"bottomWidth\", value, false, false, 10, false)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent}\r\n\t */\r\n\tpublic get bottomWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"bottomWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how slice's value will influence its size.\r\n\t *\r\n\t * `\"area\"` (default) means that the whole area of the pyramid (counting in\r\n\t * modifications by `topWidth` and `bottomWidth`) will be divvied up between\r\n\t * slices based on their value.\r\n\t *\r\n\t * With this setting at `\"area\"` the area of the trapezoids of each slice\r\n\t * will represent their value relatively to values of the other slices.\r\n\t *\r\n\t * This is a correct way to depict \"weight\" of each slice based on their\r\n\t * values.\r\n\t *\r\n\t * `\"height\"` means whole height (as opposed to area) of the pyramid will be\r\n\t * divvied up between slices. Actual slice width or area is not counted in.\r\n\t *\r\n\t * From the data-viz standpoint this does not make a lot of sense, since\r\n\t * slices with lesser values might appear more prominent if they are placed\r\n\t * towards thick end of the pyramid since their areas will be bigger.\r\n\t *\r\n\t * @default \"area\"\r\n\t * @param {\"area\" | \"height\"}\r\n\t */\r\n\tpublic set valueIs(value: \"area\" | \"height\") {\r\n\t\tif (this.setPropertyValue(\"valueIs\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {\"area\" | \"height\"}\r\n\t */\r\n\tpublic get valueIs(): \"area\" | \"height\" {\r\n\t\treturn this.getPropertyValue(\"valueIs\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PyramidSeries\"] = PyramidSeries;\r\nregistry.registeredClasses[\"PyramidSeriesDataItem\"] = PyramidSeriesDataItem;\r\n","/**\r\n * Defines Pictorial Stacked Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPyramidSeriesAdapters, IPyramidSeriesDataFields, IPyramidSeriesEvents, IPyramidSeriesProperties, PyramidSeries, PyramidSeriesDataItem } from \"./PyramidSeries\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PictorialStackedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PictorialStackedSeriesDataItem extends PyramidSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: PictorialStackedSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PictorialStackedSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PictorialStackedSeries]].\r\n */\r\nexport interface IPictorialStackedSeriesDataFields extends IPyramidSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[PictorialStackedSeries]].\r\n */\r\nexport interface IPictorialStackedSeriesProperties extends IPyramidSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative location to start series from.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\t/**\r\n\t * Relative location to end series at.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tendLocation?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PictorialStackedSeries]].\r\n */\r\nexport interface IPictorialStackedSeriesEvents extends IPyramidSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PictorialStackedSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPictorialStackedSeriesAdapters extends IPyramidSeriesAdapters, IPictorialStackedSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a PictorialStacked series on a [[SlicedChart]].\r\n *\r\n * @see {@link IPictorialStackedSeriesEvents} for a list of available Events\r\n * @see {@link IPictorialStackedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class PictorialStackedSeries extends PyramidSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IPictorialStackedSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPictorialStackedSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPictorialStackedSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPictorialStackedSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: PictorialStackedSeriesDataItem;\r\n\r\n\t/**\r\n\t * Holds a Sprite that acts as an intelligent mask for the serries.\r\n\t */\r\n\tprotected _maskSprite: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PictorialStackedSeries\";\r\n\t\tthis.topWidth = percent(100);\r\n\t\tthis.bottomWidth = percent(100);\r\n\t\tthis.valueIs = \"height\";\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.startLocation = 0;\r\n\t\tthis.endLocation = 1;\r\n\t\tthis.align = \"center\";\r\n\t\tthis.valign = \"middle\";\r\n\r\n\t\tthis._maskSprite = this.slicesContainer.createChild(Sprite);\r\n\t\tthis._maskSprite.visible = false;\r\n\t\tthis._maskSprite.zIndex = 100;\r\n\t\tthis._maskSprite.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Sizes the mask to fit the series.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataElements(): void {\r\n\r\n\t\tlet maxWidth = this.slicesContainer.maxWidth;\r\n\t\tlet maxHeight = this.slicesContainer.maxHeight;\r\n\r\n\t\tlet maskSprite = this._maskSprite;\r\n\t\t//maskSprite.validatePosition(); // for some reason size of the maskSprite is 0x0 after we removed validatePosition in afterdraw\r\n\r\n\t\tlet pictureWidth = maskSprite.measuredWidth / maskSprite.scale;\r\n\t\tlet pictureHeight = maskSprite.measuredHeight / maskSprite.scale;\r\n\r\n\t\tlet scale = $math.min(maxHeight / pictureHeight, maxWidth / pictureWidth);\r\n\r\n\t\tif (scale == Infinity) {\r\n\t\t\tscale = 1; // can't return here, won't draw legend properly\r\n\t\t}\r\n\r\n\t\tscale = $math.max(0.001, scale);\r\n\r\n\t\tlet startLocation = this.startLocation;\r\n\t\tlet endLocation = this.endLocation;\r\n\r\n\t\tlet newWidth = $math.min(maxWidth, pictureWidth * scale);\r\n\t\tlet newHeight = $math.min(maxHeight, pictureHeight * scale);\r\n\r\n\t\tmaskSprite.scale = scale;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tthis.topWidth = newWidth + 4;\r\n\t\t\tthis.bottomWidth = newWidth + 4;\r\n\t\t\tthis.pyramidHeight = newHeight * (endLocation - startLocation);\r\n\t\t\tmaskSprite.x = maxWidth / 2;\r\n\t\t\tmaskSprite.y = newHeight / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.topWidth = newHeight + 4;\r\n\t\t\tthis.bottomWidth = newHeight + 4;\r\n\t\t\tthis.pyramidHeight = newWidth * (endLocation - startLocation);\r\n\t\t\tmaskSprite.valign = \"middle\";\r\n\t\t\tmaskSprite.x = newWidth / 2;\r\n\t\t\tmaskSprite.y = maxHeight / 2;\r\n\t\t}\r\n\r\n\t\tmaskSprite.verticalCenter = \"middle\";\r\n\t\tmaskSprite.horizontalCenter = \"middle\";\r\n\r\n\t\tsuper.validateDataElements();\r\n\r\n\t\tlet y: number;\r\n\t\tlet x: number;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tif (this.valign == \"bottom\") {\r\n\t\t\t\ty = (maxHeight - newHeight);\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"middle\") {\r\n\t\t\t\ty = (maxHeight - newHeight) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"top\") {\r\n\t\t\t\ty = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.align == \"left\") {\r\n\t\t\t\tx = -(maxWidth - newWidth) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"center\") {\r\n\t\t\t\tx = 0;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"right\") {\r\n\t\t\t\tx = (maxWidth - newWidth) / 2;\r\n\t\t\t}\r\n\r\n\t\t\tthis.slices.template.dy = startLocation * newHeight;\r\n\t\t\tif (this.alignLabels) {\r\n\t\t\t\tthis.slicesContainer.dx = x;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.valign == \"bottom\") {\r\n\t\t\t\ty = (maxHeight - newHeight) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"middle\") {\r\n\t\t\t\ty = 0;\r\n\t\t\t}\r\n\t\t\tif (this.valign == \"top\") {\r\n\t\t\t\ty = -(maxHeight - newHeight) / 2;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.align == \"left\") {\r\n\t\t\t\tx = 0;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"center\") {\r\n\t\t\t\tx = (maxWidth - newWidth) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.align == \"right\") {\r\n\t\t\t\tx = (maxWidth - newWidth);\r\n\t\t\t}\r\n\r\n\t\t\tthis.slices.template.dx = startLocation * newWidth;\r\n\t\t\tif (this.alignLabels) {\r\n\t\t\t\tthis.slicesContainer.dy = y;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.slicesContainer.x = x;\r\n\t\tthis.labelsContainer.x = x;\r\n\t\tthis.ticksContainer.x = x;\r\n\r\n\t\tthis.slicesContainer.y = y;\r\n\t\tthis.labelsContainer.y = y;\r\n\t\tthis.ticksContainer.y = y;\r\n\r\n\t\tif (newWidth > 0 && newHeight > 0) {\r\n\t\t\tthis.slicesContainer.mask = maskSprite;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Pyramid Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PictorialStackedSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] element that is used as a series mask.\r\n\t *\r\n\t * If set, this element's shape will be used to apply shape to the whole\r\n\t * stacked pictorial series.\r\n\t *\r\n\t * You can use this element's `path` property to set an SVG path for the\r\n\t * shape:\r\n\t *\r\n\t * ```TypeScript\r\n\t * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n\t * // ...\r\n\t * series.maskSprite.path = iconPath;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n\t * // ...\r\n\t * series.maskSprite.path = iconPath;\r\n\t * ```\r\n\t * ```JSON\r\n\t * let iconPath = \"M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z\";\r\n\t * // ...\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"PictorialStackedSeries\",\r\n\t *     // ...\r\n\t *     \"maskSprite\": {\r\n\t *       \"path\": iconPath\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Mask sprite\r\n\t */\r\n\tpublic get maskSprite(): Sprite {\r\n\t\treturn this._maskSprite;\r\n\t}\r\n\r\n\t/**\r\n\t * Inits FunnelSlice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tsuper.initSlice(slice);\r\n\r\n\t\tlet hs = slice.states.getKey(\"hover\");\r\n\t\tif (hs) {\r\n\t\t\ths.properties.expandDistance = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location to start series from.\r\n\t *\r\n\t * Range of values: 0 to 1.\r\n\t *\r\n\t * This setting indicates where actual slices will start relatively to the\r\n\t * whole height/width of the series.\r\n\t *\r\n\t * For example, if we want slices to start at 30% from the top/left of the\r\n\t * series, we can set `startLocation = 0.3`.\r\n\t *\r\n\t * To fill shape outside of the location range, use background of the\r\n\t * property `slicesContainer`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"startLocation\": 0.2,\r\n\t *     \"endLocation\": 0.8,\r\n\t *     \"slicesContainer\": {\r\n\t *       \"background\": {\r\n\t *         \"fill\": \"#eee\"\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.1.13\r\n\t * @param  value  Start location\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"startLocation\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Start location\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location to end series at.\r\n\t *\r\n\t * Range of values: 0 to 1.\r\n\t *\r\n\t * This setting indicates where actual slices will end relatively to the\r\n\t * whole height/width of the series.\r\n\t *\r\n\t * For example, if we want slices to end at 70% from the top/left of the\r\n\t * series, we can set `endLocation = 0.7`.\r\n\t *\r\n\t * To fill shape outside of the location range, use background of the\r\n\t * property `slicesContainer`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.startLocation = 0.2;\r\n\t * series.endLocation = 0.8;\r\n\t * series.slicesContainer.background.fill = am4core.color(\"#eee\");\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"startLocation\": 0.2,\r\n\t *     \"endLocation\": 0.8,\r\n\t *     \"slicesContainer\": {\r\n\t *       \"background\": {\r\n\t *         \"fill\": \"#eee\"\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default 1\r\n\t * @since 4.1.13\r\n\t * @param  value  End location\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"endLocation\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End location\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PictorialStackedSeries\"] = PictorialStackedSeries;\r\nregistry.registeredClasses[\"PictorialStackedSeriesDataItem\"] = PictorialStackedSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building Cone Columns.\r\n * It is a container which has coneColumn element which is a Cone.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Cone } from \"../../core/elements/3d/Cone\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ConeColumn]].\r\n */\r\nexport interface IConeColumnProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[ConeColumn]].\r\n */\r\nexport interface IConeColumnEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ConeColumn]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IConeColumnAdapters extends IColumnAdapters, IConeColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates ConeColumns.\r\n *\r\n * @see {@link IConeColumnEvents} for a list of available events\r\n * @see {@link IConeColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class ConeColumn extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IConeColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IConeColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IConeColumnEvents;\r\n\r\n\r\n\t/**\r\n\t * Cone column element\r\n\t */\r\n\tpublic coneColumn: Cone;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ConeColumn\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tcreateAssets() {\r\n\t\tthis.coneColumn = this.createChild(Cone);\r\n\t\tthis.coneColumn.shouldClone = false;\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.coneColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[ConeColumn]].\r\n\t *\r\n\t * @param source Source ConeColumn\r\n\t */\r\n\tcopyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.coneColumn) {\r\n\t\t\tthis.coneColumn.copyFrom(source.coneColumn);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeColumn\"] = ConeColumn;\r\n","/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { ConeColumn } from \"../elements/ConeColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ConeSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: ConeColumn;\r\n\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ConeSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ConeSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ConeSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IConeSeriesAdapters extends IColumnSeriesAdapters, IConeSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class ConeSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Type of column.\r\n\t */\r\n\tpublic _column: ConeColumn;\r\n\r\n\t/**\r\n\t */\r\n\tpublic _dataItem: ConeSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IConeSeriesDataFields\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IConeSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IConeSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IConeSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ConeSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new ConeColumn();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG path to use as series mask.\r\n\t *\r\n\t * @return SVG path\r\n\t */\r\n\tprotected getMaskPath(): string {\t\t\r\n\t\tlet dx = 0;\r\n\t\tlet dy = 0;\r\n\t\tlet column = this.columns.getIndex(0);\r\n\r\n\t\tif(column){\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tdy = column.coneColumn.innerWidth / 2 + 1\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdx = column.coneColumn.innerHeight / 2 + 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn $path.rectToPath({\r\n\t\t\t\tx: -dx,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.xAxis.axisLength + dx,\r\n\t\t\t\theight: this.yAxis.axisLength + dy\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tlet column = dataItem.column;\r\n\t\tif(column){\r\n\t\t\tlet coneColumn = dataItem.column.coneColumn;\r\n\r\n\t\t\tconeColumn.fill = dataItem.column.fill;\r\n\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tconeColumn.orientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconeColumn.orientation = \"vertical\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeSeries\"] = ConeSeries;\r\nregistry.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;\r\n","/**\r\n * Module that defines everything related to building Curved Columns.\r\n * It is a container which has CurvedColumn element which is a Sprite.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CurvedColumn]].\r\n */\r\nexport interface ICurvedColumnProperties extends IColumnProperties {\r\n\r\n\t/**\r\n\t * Horizontal tension setting of the line (0-1).\r\n\t *\r\n\t * Used for smoothed lines.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\ttensionX?: number;\r\n\r\n\t/**\r\n\t * Tension\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * Orientation of the column\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[CurvedColumn]].\r\n */\r\nexport interface ICurvedColumnEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CurvedColumn]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICurvedColumnAdapters extends IColumnAdapters, ICurvedColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates CurvedColumns.\r\n *\r\n * @see {@link ICurvedColumnEvents} for a list of available events\r\n * @see {@link ICurvedColumnAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CurvedColumn extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICurvedColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICurvedColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICurvedColumnEvents;\r\n\r\n\t/**\r\n\t * The element that holds curved column shape.\r\n\t */\r\n\tpublic curvedColumn: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurvedColumn\";\r\n\t}\r\n\r\n\t/**\r\n\t * [createAssets description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected createAssets(): void {\r\n\t\tthis.curvedColumn = this.createChild(Sprite);\r\n\t\tthis.curvedColumn.shouldClone = false;\r\n\r\n\t\tthis.setPropertyValue(\"tension\", 0.7);\r\n\r\n\t\tthis.width = percent(120);\r\n\t\tthis.height = percent(120);\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.curvedColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet w = this.realWidth;\r\n\t\tlet h = this.realHeight;\r\n\t\tlet x = this.realX - this.pixelX;\r\n\t\tlet y = this.realY - this.pixelY;\r\n\r\n\t\tlet points: IPoint[];\r\n\r\n\t\t// TODO can this be removed ?\r\n\t\t$utils.used(this.width);\r\n\r\n\t\tlet tensionX = 1;\r\n\t\tlet tensionY = 1;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\ttensionX = this.tension;\r\n\t\t\tpoints = [{ x: 0, y: h + y }, { x: w / 2, y: y }, { x: w, y: h + y }];\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttensionY = this.tension;\r\n\t\t\th = Math.abs(h);\r\n\t\t\tpoints = [{ x: x, y: h }, { x: x + w, y: h / 2 }, { x: x, y: 0 }];\r\n\t\t}\r\n\r\n\t\tlet path = $path.moveTo(points[0]) + new $smoothing.Tension(tensionX, tensionY).smooth(points);\r\n\t\tthis.column.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[CurvedColumn]].\r\n\t *\r\n\t * @param source  Source CurvedColumn\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.curvedColumn) {\r\n\t\t\tthis.curvedColumn.copyFrom(source.curvedColumn);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal tension of the curve.\r\n\t *\r\n\t * Tension defines how \"lose\" the line will be.\r\n\t *\r\n\t * 1 is the maximum tension which would result in pointy columns with\r\n\t * straight edges.\r\n\t *\r\n\t * The smaller the tension th wider the column will be.\r\n\t *\r\n\t * @default 0.7\r\n\t * @param value tension (0-1)\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tension (0-1)\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the column.\r\n\t *\r\n\t * Available options: \"vertical\" (default) and \"horizontal\".\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumn\"] = CurvedColumn;\r\n","/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CurvedColumnSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: CurvedColumnSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurvedColumnSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICurvedColumnSeriesAdapters extends IColumnSeriesAdapters, ICurvedColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CurvedColumnSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines type of the data item.\r\n\t */\r\n\tpublic _dataItem: CurvedColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ICurvedColumnSeriesDataFields\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICurvedColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICurvedColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICurvedColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CurvedColumnSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for the curved column.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new CurvedColumn();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\r\n\t\tlet column = dataItem.column;\r\n\t\tcolumn = dataItem.column;\r\n\r\n\t\tif (column) {\r\n\t\t\tlet curvedColumn = dataItem.column.curvedColumn;\r\n\r\n\t\t\tcurvedColumn.fill = dataItem.column.fill;\r\n\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tcolumn.orientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumn.orientation = \"vertical\";\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\r\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;\r\n","/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface ICircleBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface ICircleBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICircleBulletAdapters extends IBulletAdapters, ICircleBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class CircleBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICircleBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICircleBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICircleBulletEvents;\r\n\r\n\t/**\r\n\t * A label (textual) element for the bullet.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CircleBullet\";\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.radius = 5;\r\n\t\tcircle.isMeasured = false;\r\n\t\tthis.circle = circle;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[CircleBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.circle.copyFrom(source.circle);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n","/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface IErrorBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface IErrorBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IErrorBulletAdapters extends IBulletAdapters, IErrorBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class ErrorBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IErrorBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IErrorBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IErrorBulletEvents;\r\n\r\n\tpublic errorLine:Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ErrorBullet\";\r\n\t\tthis.errorLine = this.createChild(Sprite);\r\n\t\tthis.errorLine.shouldClone = false;\r\n\t\tthis.width = 20;\r\n\t\tthis.height = 20;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.isDynamic = true;\r\n\t}\r\n\r\n\r\n\tvalidatePosition(){\r\n\t\tsuper.validatePosition();\r\n\t\tlet w = this.pixelWidth / 2;\r\n\t\tlet h = this.pixelHeight / 2;\r\n\r\n\t\tthis.errorLine.path = $path.moveTo({x:-w, y:-h}) + $path.lineTo({x:w, y:-h}) + $path.moveTo({x:0, y:-h}) + $path.lineTo({x:0, y:h}) + $path.moveTo({x:-w, y:h}) + $path.lineTo({x:w, y:h});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[ErrorBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.errorLine.copyFrom(source.errorLine);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;\r\n","/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentAdapters, IComponentEvents, IComponentDataFields } from \"../../core/Component\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { TextLink } from \"../../core/elements/TextLink\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class NavigationBarDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: NavigationBar;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"NavigationBarDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Name of the navigation bar item.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setProperty(\"name\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.properties[\"name\"];\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[NavigationBar]].\r\n */\r\nexport interface INavigationBarDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * Name of nav var item.\r\n\t */\r\n\tname?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[NavigationBar]].\r\n */\r\nexport interface INavigationBarProperties extends IComponentProperties {\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[NavigationBar]].\r\n */\r\nexport interface INavigationBarEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[NavigationBar]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface INavigationBarAdapters extends IComponentAdapters, INavigationBarProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\r\nexport class NavigationBar extends Component {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: INavigationBarDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: INavigationBarProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: INavigationBarAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: INavigationBarEvents;\r\n\r\n\t/**\r\n\t * A list of breadcrumbs (links) in the nav bar.\r\n\t */\r\n\tpublic links: ListTemplate<TextLink>;\r\n\r\n\t/**\r\n\t * [_linksIterator description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _linksIterator: $iter.ListIterator<TextLink>;\r\n\r\n\t/**\r\n\t * [_separatorsIterator description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _separatorsIterator: $iter.ListIterator<Sprite>;\r\n\r\n\t/**\r\n\t * A reference to the link which is currently active.\r\n\t */\r\n\tpublic activeLink: TextLink;\r\n\r\n\t/**\r\n\t * A list of elements used as nav bar item separators.\r\n\t */\r\n\tpublic separators: ListTemplate<Triangle>;\r\n\r\n\t/**\r\n\t * Identifies the type of the [[DataItem]] used in this element.\r\n\t */\r\n\tpublic _dataItem!: NavigationBarDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"NavigationBar\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet textLink = new TextLink();\r\n\t\ttextLink.valign = \"middle\";\r\n\t\ttextLink.paddingTop = 8;\r\n\t\ttextLink.paddingBottom = 8;\r\n\r\n\t\tthis.paddingBottom = 2;\r\n\r\n\t\tthis.links = new ListTemplate<TextLink>(textLink);\r\n\t\tthis._disposers.push(new ListDisposer(this.links));\r\n\t\tthis._disposers.push(textLink);\r\n\r\n\t\tthis._linksIterator = new $iter.ListIterator<TextLink>(this.links, () => this.links.create());\r\n\t\tthis._linksIterator.createNewItems = true;\r\n\r\n\t\tlet triangle = new Triangle();\r\n\t\ttriangle.direction = \"right\";\r\n\t\ttriangle.width = 8;\r\n\t\ttriangle.height = 12;\r\n\t\ttriangle.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\ttriangle.fillOpacity = 0.5;\r\n\t\ttriangle.valign = \"middle\";\r\n\t\ttriangle.marginLeft = 10;\r\n\t\ttriangle.marginRight = 10;\r\n\r\n\t\tthis.separators = new ListTemplate<Triangle>(triangle);\r\n\t\tthis._disposers.push(new ListDisposer(this.separators));\r\n\t\tthis._disposers.push(triangle);\r\n\r\n\t\tlet activeLink = new TextLink();\r\n\t\tthis.activeLink = activeLink;\r\n\t\tactiveLink.copyFrom(textLink);\r\n\t\tactiveLink.valign = \"middle\";\r\n\t\tactiveLink.fontWeight = \"bold\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.dataFields.name = \"name\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Completely redraws the navigation bar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements(): void {\r\n\t\tthis.removeChildren();\r\n\t\tthis._linksIterator.reset();\r\n\t\tsuper.validateDataElements();\r\n\t\t//@todo: dispose\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a visual element for a data item (nav item).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tlet textLink: TextLink;\r\n\t\tif (dataItem.index < this.dataItems.length - 1) {\r\n\t\t\ttextLink = this._linksIterator.getLast();\r\n\t\t\ttextLink.parent = this;\r\n\t\t\tlet separator = this.separators.create();\r\n\t\t\tseparator.parent = this;\r\n\t\t\tseparator.valign = \"middle\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttextLink = this.activeLink;\r\n\t\t\ttextLink.events.copyFrom(this.links.template.events);\r\n\t\t\ttextLink.hide(0);\r\n\t\t\ttextLink.show();\r\n\t\t\ttextLink.parent = this;\r\n\t\t}\r\n\t\ttextLink.dataItem = dataItem;\r\n\t\ttextLink.text = dataItem.name;\r\n\t\ttextLink.validate();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NavigationBar\"] = NavigationBar;\r\nregistry.registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;\r\n","/**\r\n * Cursor module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { getInteraction, IInteractionEvents } from \"../../core/interaction/Interaction\";\r\nimport { IInteractionObjectEvents } from \"../../core/interaction/InteractionObjectEvents\";\r\nimport { IPoint, } from \"../../core/defs/IPoint\";\r\nimport { Chart } from \"../Chart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $dom from \"../../core/utils/DOM\";\r\nimport { system } from \"../../core/System\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Cursor]].\r\n */\r\nexport interface ICursorProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[Cursor]].\r\n */\r\nexport interface ICursorEvents extends IContainerEvents {\r\n\r\n\t/**\r\n\t * Invoked when position of cursor changes.\r\n\t */\r\n\tcursorpositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when user starts selecting a range with a cursor, e.g. presses\r\n\t * down mouse button and drags the cursor.\r\n\t */\r\n\tselectstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when selection has ended, e.g. user releases mouse button.\r\n\t */\r\n\tselectended: {};\r\n\r\n\t/**\r\n\t * Invoked when user starts zooming using cursor.\r\n\t */\r\n\tzoomstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when user clicked to start zooming/panning/selecting but haven't\r\n\t * finished the operation.\r\n\t */\r\n\tbehaviorcanceled: {};\r\n\r\n\t/**\r\n\t * Invoked when user is done zooming using cursor.\r\n\t */\r\n\tzoomended: {};\r\n\r\n\t/**\r\n\t * Invoked when user starts panning using cursor.\r\n\t */\r\n\tpanstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when user is done panning using cursor.\r\n\t */\r\n\tpanended: {};\r\n\r\n\t/**\r\n\t * Invoked when user is panning using cursor.\r\n\t */\r\n\tpanning: {};\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Cursor]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICursorAdapters extends IContainerAdapters, ICursorProperties {\r\n\r\n\t/**\r\n\t * Can be used to modify cursor position point dynamically using custom code.\r\n\t *\r\n\t * @since 4.9.35\r\n\t */\r\n\tcursorPoint: IPoint;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Main Cursor class with common cursor functionality.\r\n *\r\n * Chart-specific cursors must extend this class.\r\n *\r\n * @see {@link ICursorEvents} for a list of available events\r\n * @see {@link ICursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n * @todo Should we allow changing `_generalBehavior`?\r\n */\r\nexport class Cursor extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICursorProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICursorAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICursorEvents;\r\n\r\n\t/**\r\n\t * Point coordinates of where selection started.\r\n\t */\r\n\tpublic downPoint: IPoint;\r\n\r\n\t/**\r\n\t * Point coordinates of where selection ended.\r\n\t */\r\n\tpublic upPoint: IPoint;\r\n\r\n\t/**\r\n\t * Current cursor position during selection.\r\n\t *\r\n\t * @todo Better description\r\n\t */\r\n\tpublic point: IPoint = { x: 0, y: 0 };\r\n\r\n\t/**\r\n\t * Relative horizontal position.\r\n\t *\r\n\t * @todo: maybe we should make getter only? it is used from outside by axes or series to show tooltips at some position\r\n\t */\r\n\tpublic xPosition: number;\r\n\r\n\t/**\r\n\t * Relative vertical position.\r\n\t *\r\n\t * @todo: maybe we should make getter only? it is used from outside by axes or series to show tooltips at some position\r\n\t */\r\n\tpublic yPosition: number;\r\n\r\n\t/**\r\n\t * [_usesSelection description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _usesSelection: boolean;\r\n\r\n\t/**\r\n\t * What to do when user pressed down and drags cursor: zoom or select.\r\n\t */\r\n\tprotected _generalBehavior: \"zoom\" | \"select\" | \"pan\"; // todo: draw\r\n\r\n\t/**\r\n\t * A reference to chart cursor belongs to.\r\n\t */\r\n\tpublic _chart: Chart;\r\n\r\n\t/**\r\n\t * Specifies the rules when cursor needs to be moved or hidden.\r\n\t */\r\n\tprotected _stick: \"hard\" | \"soft\" | \"none\" = \"none\";\r\n\r\n\t/**\r\n\t * A screen point that cursor is \"stuck\" to.\r\n\t */\r\n\tprotected _stickPoint: IPoint;\r\n\r\n\t/**\r\n\t * non-modified down point\r\n\t * @ignore\r\n\t */\r\n\tprotected _downPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * non-modified up point\r\n\t * @ignore\r\n\t */\r\n\tprotected _upPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Cursor\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.shouldClone = false;\r\n\r\n\t\tthis.hide(0);\r\n\r\n\t\tthis.trackable = true;\r\n\t\tthis.clickable = true;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\t// Add events on body to trigger down and up events (to start zooming or\r\n\t\t// selection)\r\n\t\tconst interaction = getInteraction();\r\n\t\tthis._disposers.push(interaction.body.events.on(\"down\", this.handleCursorDown, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"up\", this.handleCursorUp, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"track\", this.handleCursorMove, this));\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle pointer movement in document and update cursor position as needed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event\r\n\t */\r\n\tpublic handleCursorMove(event: IInteractionObjectEvents[\"track\"]): IPoint {\r\n\r\n\r\n\t\tif (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (((this._generalBehavior != \"zoom\" && this._generalBehavior != \"pan\") || !this.downPoint) && !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n\t\t\t// We want to let zoom/pan continue even if cursor is outside chart area\r\n\t\t\tif (!this.isHidden || !this.isHiding) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet local: IPoint = $utils.documentPointToSprite(event.pointer.point, this);\r\n\r\n\t\tif (this._stick == \"hard\" && this._stickPoint) {\r\n\t\t\tlocal = this._stickPoint;\r\n\t\t}\r\n\r\n\t\tif (this._stick == \"soft\" && this._stickPoint) {\r\n\t\t\tif (!this.fitsToBounds(local)) {\r\n\t\t\t\tlocal = this._stickPoint;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tthis._adapterO.apply(\"cursorPoint\", local);\r\n\t\t}\r\n\r\n\t\tthis.triggerMove(local);\r\n\t\treturn local;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Hides actual SVG elements and handles hiding animations.\r\n\t *\r\n\t * @param duration  Fade out duration (ms)\r\n\t * @return Fade out duration (ms)\r\n\t * @ignore\r\n\t */\r\n\tprotected hideReal(duration?: number): $type.Optional<Animation> {\r\n\t\tif ((this._stick == \"hard\" || this._stick == \"soft\") && this._stickPoint) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn super.hideReal(duration);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Places the cursor at specific point.\r\n\t *\r\n\t * The second parameter has following options:\r\n\t *\r\n\t * `\"none\"` - placed cursor will only be there until mouse/touch moves, then\r\n\t * it either moves to a new place (if pointer over plot area) or is hidden.\r\n\t *\r\n\t * `\"soft\"` - cursor will stay in the place if mouse/touch is happening\r\n\t * outside chart, but will move to a new place whe plot area is hovered or\r\n\t * touched.\r\n\t *\r\n\t * `\"hard\"` - cursor will stay in place no matter what, until it is moved by\r\n\t * another `triggerMove()` call.\r\n\t *\r\n\t * The third parameter - `force` (since `4.9.5`) - if set to `true` will\r\n\t * make cursor execute all of the actions associated with cursor move,\r\n\t * including line redraws, tooltip updates, etc. Useful when underlying\r\n\t * chart data is dynamically being updated.\r\n\t *\r\n\t * @param point  Point to place cursor at\r\n\t * @param stick  Level of cursor stickiness to the place\r\n\t * @param force  Force cursor move\r\n\t */\r\n\tpublic triggerMove(point: IPoint, stick?: \"hard\" | \"soft\" | \"none\", force?: boolean): void {\r\n\r\n\t\tpoint.x = $math.round(point.x, 1);\r\n\t\tpoint.y = $math.round(point.y, 1);\r\n\r\n\t\tif (stick) {\r\n\t\t\tthis._stick = stick;\r\n\t\t}\r\n\r\n\t\tif (stick == \"hard\" || stick == \"soft\") {\r\n\t\t\tthis._stickPoint = point;\r\n\t\t}\r\n\r\n\t\tthis.triggerMoveReal(point, force);\r\n\t}\r\n\r\n\t/**\r\n\t * Places the cursor at specific point.\r\n\t *\r\n\t * @param point Point to place cursor at\r\n\t */\r\n\tprotected triggerMoveReal(point: IPoint, force?: boolean): void {\r\n\t\tif (this.point.x != point.x || this.point.y != point.y || force) {\r\n\t\t\tthis.point = point;\r\n\t\t\tthis.invalidatePosition();\r\n\t\t\t// hide cursor if it's out of bounds\r\n\t\t\tif (this.fitsToBounds(point)) {\r\n\t\t\t\tthis.show(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// unless we are selecting (mouse is down)\r\n\t\t\t\tif (!this.downPoint) {\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.visible) {\r\n\t\t\t\tthis.getPositions();\r\n\t\t\t\tthis.dispatch(\"cursorpositionchanged\"); // not good to dispatch later (check step count example)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates pressing down (click/touch) action by a cursor.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tpublic triggerDown(point: IPoint) {\r\n\t\tthis.triggerDownReal(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates pressing down (click/touch) action by a cursor.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tprotected triggerDownReal(point: IPoint) {\r\n\t\tswitch (this._generalBehavior) {\r\n\t\t\tcase \"zoom\":\r\n\t\t\t\tthis.dispatchImmediately(\"zoomstarted\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"select\":\r\n\t\t\t\tthis.dispatchImmediately(\"selectstarted\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tthis.dispatchImmediately(\"panstarted\");\r\n\t\t\t\tgetInteraction().setGlobalStyle(MouseCursorStyle.grabbing);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates the action of release of the mouse down / touch.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tpublic triggerUp(point: IPoint) {\r\n\t\tthis.triggerUpReal(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates the action of release of the mouse down / touch.\r\n\t *\r\n\t * @param point               Point of action\r\n\t */\r\n\tprotected triggerUpReal(point: IPoint) {\r\n\t\tsystem.requestFrame();\r\n\t\tthis.updatePoint(this.upPoint);\r\n\t\tlet interaction = getInteraction();\r\n\r\n\t\tif ($math.getDistance(this._upPointOrig, this._downPointOrig) > interaction.getHitOption(this.interactions, \"hitTolerance\")) {\r\n\t\t\tswitch (this._generalBehavior) {\r\n\t\t\t\tcase \"zoom\":\r\n\t\t\t\t\tthis.dispatch(\"zoomended\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"select\":\r\n\t\t\t\t\tthis.dispatch(\"selectended\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"pan\":\r\n\t\t\t\t\tthis.dispatch(\"panended\");\r\n\t\t\t\t\tinteraction.setGlobalStyle(MouseCursorStyle.default);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.downPoint = undefined;\r\n\t\t\tthis.updateSelection();\r\n\t\t}\r\n\t\t/*\r\n\t\telse {\r\n\t\t\t\r\n\t\t\tif(this._generalBehavior == \"select\"){\r\n\t\t\t\tthis.dispatchImmediately(\"selectended\");\r\n\t\t\t}\r\n\t\t\tthis.dispatchImmediately(\"behaviorcanceled\");\r\n\t\t\tinteraction.setGlobalStyle(MouseCursorStyle.default);\r\n\t\t\tthis.downPoint = undefined;\r\n\t\t}*/\r\n\t}\r\n\r\n\t/**\r\n\t * Updates selection dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSelection(): void {\r\n\t}\r\n\r\n\t/**\r\n\t * Updates cursors current positions.\r\n\t */\r\n\tprotected getPositions(): void {\r\n\t\t// positions are used by axes or series\r\n\t\tthis.xPosition = this.point.x / this.innerWidth;\r\n\t\tthis.yPosition = 1 - this.point.y / this.innerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer down event so we can start zoom or selection.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original event\r\n\t */\r\n\tpublic handleCursorDown(event: IInteractionEvents[\"down\"]): void {\r\n\r\n\t\tif (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch) || !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Initiate blur so that whatever focused element on the page is unselected\r\n\t\t$dom.blur();\r\n\r\n\t\t// Get local point\r\n\t\tlet local: IPoint = $utils.documentPointToSprite(event.pointer.point, this);\r\n\r\n\t\tif (this._stick == \"hard\" && this._stickPoint) {\r\n\t\t\tlocal = this._stickPoint;\r\n\t\t}\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tthis._adapterO.apply(\"cursorPoint\", local);\r\n\t\t}\r\n\r\n\t\tif (!this.fitsToBounds(local)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tthis._downPointOrig = { x: local.x, y: local.y };\r\n\r\n\t\t// We need to cancel the event to prevent gestures on touch devices\r\n\t\tif (event.event.cancelable && this.shouldPreventGestures(event.touch) && this.fitsToBounds(local)) {\r\n\t\t\tevent.event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// Make this happen\r\n\t\tthis.triggerMove(local);\r\n\t\tthis.triggerDown(local);\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether Cursor should prevent default action on move.\r\n\t *\r\n\t * Child classes should override this as necessary.\r\n\t * \r\n\t * @return Prevent default?\r\n\t */\r\n\tprotected shouldPreventGestures(touch: boolean): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the coordinates of where pointer down event occurred\r\n\t * (was pressed).\r\n\t */\r\n\tprotected updatePoint(point: IPoint) {\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer up event - finishes zoom or selection action.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original event\r\n\t */\r\n\tpublic handleCursorUp(event: IInteractionEvents[\"up\"]): void {\r\n\t\tif (!this.interactionsEnabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.downPoint && !getInteraction().isLocalElement(event.pointer, this.paper.svg, this.uid)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet local: IPoint = $utils.documentPointToSprite(event.pointer.point, this);\r\n\r\n\t\tif (this._adapterO) {\r\n\t\t\tthis._adapterO.apply(\"cursorPoint\", local);\r\n\t\t}\r\n\r\n\t\tif (!this.downPoint || !this.fitsToBounds(this.downPoint)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._stick == \"hard\" && this._stickPoint) {\r\n\t\t\tlocal = this._stickPoint;\r\n\t\t}\r\n\r\n\t\tthis._upPointOrig = { x: local.x, y: local.y };\r\n\r\n\t\tthis.triggerMove(local);\r\n\t\tthis.triggerUp(local);\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Chart]] the cursor belongs to.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t\tif ($type.hasValue((<any>this._chart).plotContainer)) {\r\n\t\t\tgetInteraction().lockElement((<any>this._chart).plotContainer.interactions);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Cursor\"] = Cursor;\r\n","/**\r\n * Cursor for XY chart\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Cursor, ICursorProperties, ICursorAdapters, ICursorEvents } from \"./Cursor\";\r\nimport { Sprite, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { MutableValueDisposer, MultiDisposer, IDisposer } from \"../../core/utils/Disposer\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IRange } from \"../../core/defs/IRange\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { XYSeries } from \"../series/XYSeries\";\r\nimport { AxisRenderer } from \"../axes/AxisRenderer\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[XYCursor]].\r\n */\r\nexport interface IXYCursorProperties extends ICursorProperties {\r\n\r\n\t/**\r\n\t * Cursor's behavior when moved with pointer down:\r\n\t *\r\n\t * * \"zoomX\" - zooms horizontally; (default)\r\n\t * * \"zoomY\" - zooms vertically;\r\n\t * * \"zoomXY\" - zooms both horizontally and vertically;\r\n\t * * \"selectX\" - selects a range horizontally;\r\n\t * * \"selectY\" - selects a range vertically;\r\n\t * * \"selectXY\" - selects a range both horizontally and vertically;\r\n\t * * \"panX\" - moves (pans) current selection horizontally;\r\n\t * * \"panY\" - moves (pans) current selection vertically;\r\n\t * * \"panXY\" - moves (pans) current selection both horizontally and vertically;\r\n\t * * \"none\" - does nothing with pointer down.\r\n\t *\r\n\t * @default \"zoomX\"\r\n\t */\r\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\r\n\r\n\t/**\r\n\t * Cursor's horizontal line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t */\r\n\tfullWidthLineX?: boolean;\r\n\r\n\t/**\r\n\t * Cursor's vertical line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t */\r\n\tfullWidthLineY?: boolean;\r\n\r\n\t/**\r\n\t * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n\t * This setting specifies relative value by how much we can pan out the plot\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n\t/**\r\n\t * Specifies to which series cursor lines should be snapped.\r\n\t * \r\n\t * Can be a single series instance or an array of series.\r\n\t */\r\n\tsnapToSeries?: XYSeries | XYSeries[];\r\n\r\n\t/**\r\n\t * If set to `true` this will hide series tooltips when selecting with cursor.\r\n\t *\r\n\t * @since 4.5.15\r\n\t */\r\n\thideSeriesTooltipsOnSelection?: boolean;\r\n\r\n\t/**\r\n\t * If set to a numeric value, cursor will display closest series' tooltips\r\n\t * plus tooltips from series that are closer to than `maxTooltipDistance` to\r\n\t * it.\r\n\t *\r\n\t * Set it to `-1` to always force one tooltip, even if there are multiple\r\n\t * data items in exactly same place.\r\n\t *\r\n\t * @since 4.7.18\r\n\t */\r\n\tmaxTooltipDistance?: number;\r\n\r\n\t/**\r\n\t * Should zoom selection \"snap\" into equal categories/intervals after panning\r\n\t * the chart? (when `behavior == \"panX\"`)\r\n\t *\r\n\t * @default true\r\n\t * @since 4.10.17\r\n\t */\r\n\tsnapOnPan?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[XYCursor]].\r\n */\r\nexport interface IXYCursorEvents extends ICursorEvents { }\r\n\r\n/**\r\n * Defines adapters for [[XYCursor]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IXYCursorAdapters extends ICursorAdapters, IXYCursorProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A cursor used on [[XYChart]].\r\n *\r\n * @see {@link IXYCursorEvents} for a list of available events\r\n * @see {@link IXYCursorAdapters} for a list of available Adapters\r\n * @todo Add description, examples\r\n */\r\nexport class XYCursor extends Cursor {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IXYCursorProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IXYCursorAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IXYCursorEvents;\r\n\r\n\t/**\r\n\t * Vertical cursor line element.\r\n\t */\r\n\tprotected _lineX = new MutableValueDisposer<Sprite>();\r\n\r\n\t/**\r\n\t * Horizontal cursor line element.\r\n\t */\r\n\tprotected _lineY = new MutableValueDisposer<Sprite>();\r\n\r\n\t/**\r\n\t * Element which highlights selected area.\r\n\t */\r\n\tprotected _selection: Sprite;\r\n\r\n\t/**\r\n\t * A range of current horizontal selection.\r\n\t */\r\n\tpublic xRange: IRange;\r\n\r\n\t/**\r\n\t * A range of current vertical selection.\r\n\t */\r\n\tpublic yRange: IRange;\r\n\r\n\t/**\r\n\t * Horizontal [[Axis]].\r\n\t */\r\n\tprotected _xAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * Vertical [[Axis]].\r\n\t */\r\n\tprotected _yAxis = new MutableValueDisposer<Axis<AxisRenderer>>();\r\n\r\n\t/**\r\n\t * A reference to chart cursor belongs to.\r\n\t */\r\n\tpublic _chart: XYChart;\r\n\r\n\tprotected _snapToDisposers: IDisposer[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"XYCursor\";\r\n\r\n\t\t// Defaults\r\n\t\tthis.behavior = \"zoomX\";\r\n\r\n\t\tthis.maxPanOut = 0.1;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.snapOnPan = true;\r\n\r\n\t\t// Create selection element\r\n\t\tlet selection: Sprite = this.createChild(Sprite);\r\n\t\tselection.shouldClone = false;\r\n\t\tselection.fillOpacity = 0.2;\r\n\t\tselection.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tselection.isMeasured = false;\r\n\t\tselection.visible = false;\r\n\t\tselection.interactionsEnabled = false;\r\n\t\tthis.selection = selection;\r\n\t\tthis._disposers.push(this.selection);\r\n\r\n\t\t// Create cursor's vertical line\r\n\t\tlet lineX: Sprite = this.createChild(Sprite);\r\n\t\tlineX.shouldClone = false;\r\n\t\tlineX.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tlineX.fill = color();\r\n\t\tlineX.strokeDasharray = \"3,3\";\r\n\t\tlineX.isMeasured = false;\r\n\t\tlineX.strokeOpacity = 0.4;\r\n\t\tlineX.interactionsEnabled = false;\r\n\t\tlineX.y = 0;// important\r\n\t\tthis.lineX = lineX;\r\n\t\tthis._disposers.push(this.lineX);\r\n\r\n\t\t// Create cursor's horizontal line\r\n\t\tlet lineY: Sprite = this.createChild(Sprite);\r\n\t\tlineY.shouldClone = false;\r\n\t\tlineY.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tlineY.fill = color();\r\n\t\tlineY.strokeDasharray = \"3,3\";\r\n\t\tlineY.isMeasured = false;\r\n\t\tlineY.strokeOpacity = 0.4;\r\n\t\tlineY.interactionsEnabled = false;\r\n\t\tlineY.x = 0; // important\r\n\t\tthis.lineY = lineY;\r\n\t\tthis._disposers.push(this.lineY);\r\n\r\n\t\t// Add handler for size changes\r\n\t\tthis.events.on(\"sizechanged\", this.updateSize, this, false);\r\n\r\n\t\tthis._disposers.push(this._lineX);\r\n\t\tthis._disposers.push(this._lineY);\r\n\t\tthis._disposers.push(this._xAxis);\r\n\t\tthis._disposers.push(this._yAxis);\r\n\r\n\t\tthis.mask = this;\r\n\r\n\t\tthis.hideSeriesTooltipsOnSelection = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates cursor element dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSize(): void {\r\n\t\tif (this.lineX) {\r\n\t\t\tthis.lineX.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.innerHeight });\r\n\t\t}\r\n\t\tif (this.lineY) {\r\n\t\t\tthis.lineY.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.innerWidth, y: 0 });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates selection dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSelection(): void {\r\n\t\tif (this._usesSelection) {\r\n\t\t\tlet downPoint: IPoint = this.downPoint;\r\n\t\t\tlet behavior = this.behavior;\r\n\r\n\t\t\tif (downPoint) {\r\n\r\n\t\t\t\tlet point: IPoint = this.point;\r\n\r\n\t\t\t\tif (this.lineX) {\r\n\t\t\t\t\tpoint.x = this.lineX.pixelX;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.lineY) {\r\n\t\t\t\t\tpoint.y = this.lineY.pixelY;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet selection: Sprite = this.selection;\r\n\r\n\t\t\t\tlet x: number = Math.min(point.x, downPoint.x);\r\n\t\t\t\tlet y: number = Math.min(point.y, downPoint.y);\r\n\r\n\t\t\t\tlet w: number = $math.round(Math.abs(downPoint.x - point.x), this._positionPrecision);\r\n\t\t\t\tlet h: number = $math.round(Math.abs(downPoint.y - point.y), this._positionPrecision);\r\n\r\n\t\t\t\tswitch (behavior) {\r\n\t\t\t\t\tcase \"zoomX\":\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\th = this.pixelHeight;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"zoomY\":\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\tw = this.pixelWidth;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"selectX\":\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\th = this.pixelHeight;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"selectY\":\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\tw = this.pixelWidth;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselection.x = x;\r\n\t\t\t\tselection.y = y;\r\n\r\n\t\t\t\tselection.path = $path.rectangle(w, h);\r\n\r\n\t\t\t\tselection.validatePosition(); // otherwise Edge shoes some incorrect size rectangle\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._generalBehavior != \"select\") {\r\n\t\t\t\t\tthis.selection.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\r\n\tprotected fixPoint(point: IPoint): IPoint {\r\n\t\tpoint.x = Math.max(0, point.x);\r\n\t\tpoint.y = Math.max(0, point.y);\r\n\t\tpoint.x = Math.min(this.pixelWidth, point.x);\r\n\t\tpoint.y = Math.min(this.pixelHeight, point.y);\r\n\r\n\t\treturn point;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Places the cursor at specific point.\r\n\t *\r\n\t * @param point Point to place cursor at\r\n\t */\r\n\tprotected triggerMoveReal(point: IPoint, force?: boolean): void {\r\n\r\n\t\tsuper.triggerMoveReal(point, force);\r\n\t\tlet snapToSeries = this.snapToSeries;\r\n\t\tif ((snapToSeries && !this.downPoint)) {\r\n\t\t\tif (snapToSeries instanceof XYSeries) {\r\n\t\t\t\tif (snapToSeries.isHidden) {\r\n\t\t\t\t\tthis.updateLinePositions(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet allHidden = true;\r\n\t\t\t\t$array.each(snapToSeries, (s) => {\r\n\t\t\t\t\tif (!s.isHidden) {\r\n\t\t\t\t\t\tallHidden = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (allHidden) {\r\n\t\t\t\t\tthis.updateLinePositions(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.updateLinePositions(point);\r\n\t\t}\r\n\r\n\t\tif (this.downPoint && $math.getDistance(this.downPoint, point) > 3) {\r\n\t\t\tif (this._generalBehavior == \"pan\") {\r\n\t\t\t\tthis.getPanningRanges();\r\n\t\t\t\tthis.dispatch(\"panning\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateLinePositions(point: IPoint) {\r\n\t\tpoint = this.fixPoint(this.point);\r\n\r\n\t\tif (this.lineX && this.lineX.visible && !this.xAxis) {\r\n\t\t\tthis.lineX.x = point.x;\r\n\t\t}\r\n\t\tif (this.lineY && this.lineY.visible && !this.yAxis) {\r\n\t\t\tthis.lineY.y = point.y;\r\n\t\t}\r\n\t\tthis.updateSelection();\r\n\t}\r\n\r\n\r\n\tprotected triggerDownReal(point: IPoint) {\r\n\r\n\t\tif (this.visible && !this.isHiding) {\r\n\r\n\t\t\tif (this._generalBehavior == \"select\") {\r\n\t\t\t\tthis.selection.parent = this.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.fitsToBounds(point)) {\r\n\t\t\t\tthis.downPoint = { x: point.x, y: point.y };\r\n\r\n\t\t\t\tthis.updatePoint(point);\r\n\r\n\t\t\t\t//this.updateLinePositions(point); // otherwise lines won't be in correct position and touch won't work fine\r\n\r\n\t\t\t\tthis.point.x = this.downPoint.x;\r\n\t\t\t\tthis.point.y = this.downPoint.y;\r\n\r\n\t\t\t\tlet selection: Sprite = this.selection;\r\n\t\t\t\tlet selectionX: number = this.downPoint.x;\r\n\t\t\t\tlet selectionY: number = this.downPoint.y;\r\n\r\n\t\t\t\tif (this._usesSelection) {\r\n\t\t\t\t\tselection.x = selectionX;\r\n\t\t\t\t\tselection.y = selectionY;\r\n\t\t\t\t\tselection.path = \"\";\r\n\t\t\t\t\tselection.show();\r\n\t\t\t\t}\r\n\t\t\t\tsuper.triggerDownReal(point);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.downPoint = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.downPoint = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the coordinates of where pointer down event occurred\r\n\t * (was pressed).\r\n\t */\r\n\tprotected updatePoint(point: IPoint) {\r\n\t\tif (this.lineX) {\r\n\t\t\tpoint.x = this.lineX.pixelX;\r\n\t\t}\r\n\t\tif (this.lineY) {\r\n\t\t\tpoint.y = this.lineY.pixelY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handle action when cursor is released, which should perform an operation\r\n\t * based on its `behavior`, like zoom.\r\n\t * \r\n\t * @param  point  Release point\r\n\t */\r\n\tprotected triggerUpReal(point: IPoint): void {\r\n\t\tif (this.hasMoved()) {\r\n\t\t\tif (this.downPoint) {\r\n\t\t\t\tthis.upPoint = point;\r\n\r\n\t\t\t\tthis.updatePoint(this.upPoint);\r\n\r\n\t\t\t\tif (this._generalBehavior != \"pan\") {\r\n\t\t\t\t\tthis.getRanges();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._generalBehavior != \"select\") {\r\n\t\t\t\t\tthis.selection.hide();\r\n\t\t\t\t}\r\n\t\t\t\tsuper.triggerUpReal(point);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._generalBehavior != \"select\") {\r\n\t\t\t\tthis.selection.hide(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.xRange = undefined;\r\n\t\t\t\tthis.yRange = undefined;\r\n\t\t\t\tthis.dispatchImmediately(\"selectended\");\r\n\t\t\t}\r\n\r\n\t\t\t// reset cursor style, just in case\r\n\t\t\tif (this._generalBehavior == \"pan\") {\r\n\t\t\t\tlet interaction = getInteraction();\r\n\t\t\t\tinteraction.setGlobalStyle(MouseCursorStyle.default);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchImmediately(\"behaviorcanceled\");\r\n\t\t}\r\n\t\tthis.downPoint = undefined;\r\n\t\tthis.dispatch(\"cursorpositionchanged\");\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates if the cursor has moved enough based on its `behavior`.\r\n\t * \r\n\t * @return Moved?\r\n\t */\r\n\tprivate hasMoved(): boolean {\r\n\t\tlet distance: number;\r\n\t\tif (this.behavior == \"zoomX\" || this.behavior == \"panX\") {\r\n\t\t\tdistance = $math.getHorizontalDistance(this._upPointOrig, this._downPointOrig);\r\n\t\t}\r\n\t\telse if (this.behavior == \"zoomY\" || this.behavior == \"panY\") {\r\n\t\t\tdistance = $math.getVerticalDistance(this._upPointOrig, this._downPointOrig);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdistance = $math.getDistance(this._upPointOrig, this._downPointOrig);\r\n\t\t}\r\n\t\treturn distance > getInteraction().getHitOption(this.interactions, \"hitTolerance\");\r\n\t}\r\n\r\n\t/**\r\n\t * [getRanges description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected getPanningRanges() {\r\n\r\n\t\tlet startX = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n\t\tlet startY = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n\r\n\t\tlet currentX = $math.round(this.point.x / this.innerWidth, 5);\r\n\t\tlet currentY = 1 - $math.round(this.point.y / this.innerHeight, 5);\r\n\r\n\t\tlet deltaX = startX - currentX;\r\n\t\tlet deltaY = startY - currentY;\r\n\r\n\t\tthis.xRange = { start: deltaX, end: 1 + deltaX };\r\n\t\tthis.yRange = { start: deltaY, end: 1 + deltaY };\r\n\r\n\t\tif (this.behavior == \"panX\") {\r\n\t\t\tthis.yRange.start = 0;\r\n\t\t\tthis.yRange.end = 1;\r\n\t\t}\r\n\t\tif (this.behavior == \"panY\") {\r\n\t\t\tthis.xRange.start = 0;\r\n\t\t\tthis.xRange.end = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getRanges description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected getRanges() {\r\n\t\tif (this.lineX) {\r\n\t\t\tthis.upPoint.x = this.lineX.pixelX;\r\n\t\t}\r\n\t\tif (this.lineY) {\r\n\t\t\tthis.upPoint.y = this.lineY.pixelY;\r\n\t\t}\r\n\r\n\t\t// @todo Is this needed?\r\n\t\t$utils.used(this.selection);\r\n\r\n\t\tlet startX: number = $math.round(this.downPoint.x / this.innerWidth, 5);\r\n\t\tlet endX: number = $math.round((this.upPoint.x) / this.innerWidth, 5);\r\n\r\n\t\tlet startY: number = 1 - $math.round(this.downPoint.y / this.innerHeight, 5);\r\n\t\tlet endY: number = 1 - $math.round((this.upPoint.y) / this.innerHeight, 5);\r\n\r\n\t\tthis.xRange = { start: $math.min(startX, endX), end: $math.max(startX, endX) };\r\n\t\tthis.yRange = { start: $math.min(startY, endY), end: $math.max(startY, endY) };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cursor's behavior when it's moved with pointer down:\r\n\t *\r\n\t * * `\"zoomX\"` - zooms horizontally.\r\n\t * * `\"zoomY\"` - zooms vertically.\r\n\t * * `\"zoomXY\"` - zooms both horizontally and vertically.\r\n\t * * `\"selectX\"` - selects a range horizontally.\r\n\t * * `\"selectY\"` - selects a range vertically.\r\n\t * * `\"selectXY\"` - selects a range both horizontally and vertically.\r\n\t * * `\"panX\"` - moves (pans) current selection horizontally.\r\n\t * * `\"panY\"` - moves (pans) current selection vertically.\r\n\t * * `\"panXY\"` - moves (pans) current selection both horizontally and vertically.\r\n\t * * `\"none\"` - does nothing with pointer down.\r\n\t *\r\n\t * E.g. \"zoomXY\" will mean that pressing a mouse (or touching) over plot area\r\n\t * and dragging it will start zooming the chart.\r\n\t *\r\n\t * NOTE: `\"zoomXY\"` acts differently when used on a `DateAxis`.\r\n\t * See [this note](https://www.amcharts.com/docs/v4/concepts/chart-cursor/#zoomXY_behavior_and_DateAxis).\r\n\t *\r\n\t * @param value Bheavior\r\n\t */\r\n\tpublic set behavior(value: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\") {\r\n\t\tthis.setPropertyValue(\"behavior\", value, true);\r\n\r\n\t\tthis._usesSelection = false;\r\n\r\n\t\tif (value.indexOf(\"zoom\") != -1) {\r\n\t\t\tthis._generalBehavior = \"zoom\";\r\n\t\t\tthis._usesSelection = true;\r\n\t\t}\r\n\t\tif (value.indexOf(\"select\") != -1) {\r\n\t\t\tthis._generalBehavior = \"select\";\r\n\t\t\tthis._usesSelection = true;\r\n\t\t}\r\n\t\tif (value.indexOf(\"pan\") != -1) {\r\n\t\t\tthis._generalBehavior = \"pan\";\r\n\t\t\tthis._usesSelection = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Behavior\r\n\t */\r\n\tpublic get behavior(): \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"behavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether Cursor should prevent default action on move.\r\n\t *\r\n\t * If cursor's behavior is \"none\", it should not obstruct the page scrolling.\r\n\t *\r\n\t * @return Prevent default?\r\n\t */\r\n\tprotected shouldPreventGestures(touch: boolean): boolean {\r\n\t\treturn (!this.interactions.isTouchProtected || !touch) && this.behavior != \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Cursor's horizontal line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t *\r\n\t * NOTE: this setting will work properly if `xAxis` is set and only in case\r\n\t * `xAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * @param value Full width?\r\n\t */\r\n\tpublic set fullWidthLineX(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthLineX\", value);\r\n\t\tif (!value) {\r\n\t\t\tthis.updateSize();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width?\r\n\t */\r\n\tpublic get fullWidthLineX(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthLineX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Cursor's vertical line is expanded to take full width of the related\r\n\t * Axis' cell/category.\r\n\t *\r\n\t * NOTE: this setting will work properly if `yAxis` is set and only in case\r\n\t * `yAxis` is [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * @param value Full width?\r\n\t */\r\n\tpublic set fullWidthLineY(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthLineY\", value);\r\n\t\tif (!value) {\r\n\t\t\tthis.updateSize();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width?\r\n\t */\r\n\tpublic get fullWidthLineY(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthLineY\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` this will hide series tooltips when selecting with cursor.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param  value  hide tooltips?\r\n\t */\r\n\tpublic set hideSeriesTooltipsOnSelection(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideSeriesTooltipsOnSelection\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return hide tooltip?\r\n\t */\r\n\tpublic get hideSeriesTooltipsOnSelection(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideSeriesTooltipsOnSelection\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to a numeric value, cursor will display closest series' tooltips\r\n\t * plus tooltips from series that are closer to than `maxTooltipDistance` to\r\n\t * it.\r\n\t *\r\n\t * Set it to `-1` to always force one tooltip, even if there are multiple\r\n\t * data items in exactly same place.\r\n\t *\r\n\t * @since 4.7.18\r\n\t * @param  value  Distance\r\n\t */\r\n\tpublic set maxTooltipDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"maxTooltipDistance\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance\r\n\t */\r\n\tpublic get maxTooltipDistance(): number {\r\n\t\treturn this.getPropertyValue(\"maxTooltipDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.\r\n\t * This setting specifies relative value by how much we can pan out the plot\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set maxPanOut(value: number) {\r\n\t\tthis.setPropertyValue(\"maxPanOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Full width?\r\n\t */\r\n\tpublic get maxPanOut(): number {\r\n\t\treturn this.getPropertyValue(\"maxPanOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to X [[Axis]].\r\n\t *\r\n\t * An XY cursor can live without `xAxis` set. You set xAxis for cursor when\r\n\t * you have axis tooltip enabled and you want cursor line to be at the same\r\n\t * position as tooltip.\r\n\t *\r\n\t * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n\t * [[ValueAxis]].\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param axis X axis\r\n\t */\r\n\tpublic set xAxis(axis: Axis) {\r\n\t\tif (this._xAxis.get() != axis) {\r\n\t\t\tthis._xAxis.set(axis, new MultiDisposer([\r\n\t\t\t\taxis.tooltip.events.on(\"positionchanged\", this.handleXTooltipPosition, this, false),\r\n\r\n\t\t\t\taxis.events.on(\"rangechangestarted\", (event) => {\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.preventShow = true;\r\n\t\t\t\t}, undefined, false),\r\n\t\t\t\taxis.events.on(\"rangechangeended\", (event) => {\r\n\t\t\t\t\tthis.preventShow = false;\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.dispatch(\"cursorpositionchanged\");\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return X axis\r\n\t */\r\n\tpublic get xAxis(): Axis {\r\n\t\treturn this._xAxis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to Y [[Axis]].\r\n\t *\r\n\t * An XY cursor can live without `yAxis` set. You set xAxis for cursor when\r\n\t * you have axis tooltip enabled and you want cursor line to be at the same\r\n\t * position as tooltip.\r\n\t *\r\n\t * This works with [[CategoryAxis]] and [[DateAxis]] but not with\r\n\t * [[ValueAxis]].\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param axis Y axis\r\n\t */\r\n\tpublic set yAxis(axis: Axis) {\r\n\t\tif (this._yAxis.get() != axis) {\r\n\t\t\tthis._yAxis.set(axis, new MultiDisposer([\r\n\t\t\t\taxis.tooltip.events.on(\"positionchanged\", this.handleYTooltipPosition, this, false),\r\n\r\n\t\t\t\taxis.events.on(\"rangechangestarted\", (event) => {\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}, undefined, false),\r\n\t\t\t\taxis.events.on(\"rangechangeended\", (event) => {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t\tthis.hide(0);\r\n\t\t\t\t\tthis.dispatch(\"cursorpositionchanged\");\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y Axis\r\n\t */\r\n\tpublic get yAxis(): Axis {\r\n\t\treturn this._yAxis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when axis tooltip changes position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original Axis event\r\n\t */\r\n\tprotected handleXTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tlet tooltip: Tooltip = this.xAxis.tooltip;\r\n\t\tlet point: IPoint = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n\t\tlet x: number = point.x;\r\n\t\tpoint.y = 1;\r\n\r\n\t\tif (this.lineX) {\r\n\t\t\tthis.lineX.x = x;\r\n\t\t\tif (!this.fitsToBounds(point)) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.xAxis && this.fullWidthLineX) {\r\n\t\t\tlet startPoint: IPoint = this.xAxis.currentItemStartPoint;\r\n\t\t\tlet endPoint: IPoint = this.xAxis.currentItemEndPoint;\r\n\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\tthis.lineX.x = x;\r\n\t\t\t\tlet width: number = endPoint.x - startPoint.x;\r\n\t\t\t\tthis.lineX.path = $path.rectangle(width, this.innerHeight, -width / 2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when Y axis changes position or scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Original Axis event\r\n\t */\r\n\tprotected handleYTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tlet tooltip: Tooltip = this.yAxis.tooltip;\r\n\t\tlet point: IPoint = $utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this);\r\n\t\tlet y: number = point.y;\r\n\t\tpoint.x = 1;\r\n\r\n\t\tif (this.lineY) {\r\n\t\t\tthis.lineY.y = y;\r\n\r\n\t\t\tif (!this.fitsToBounds(point)) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.yAxis && this.fullWidthLineY) {\r\n\t\t\tlet startPoint: IPoint = this.yAxis.currentItemStartPoint;\r\n\t\t\tlet endPoint: IPoint = this.yAxis.currentItemEndPoint;\r\n\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\tthis.lineY.y = y;\r\n\t\t\t\tlet height: number = endPoint.y - startPoint.y;\r\n\t\t\t\tthis.lineY.path = $path.rectangle(this.innerWidth, height, 0, -height / 2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A Line element to use for X axis.\r\n\t *\r\n\t * @param lineX Line\r\n\t */\r\n\tpublic set lineX(lineX: Sprite) {\r\n\t\tif (lineX) {\r\n\t\t\tlineX.setElement(this.paper.add(\"path\"));\r\n\t\t\tthis._lineX.set(lineX, lineX.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n\t\t\tlineX.interactionsEnabled = false;\r\n\t\t\tlineX.parent = this;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._lineX.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Line element\r\n\t */\r\n\tpublic get lineX(): Sprite {\r\n\t\treturn this._lineX.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A Line element to use Y axis.\r\n\t *\r\n\t * @param lineY Line\r\n\t */\r\n\tpublic set lineY(lineY: Sprite) {\r\n\t\tif (lineY) {\r\n\t\t\tlineY.setElement(this.paper.add(\"path\"));\r\n\t\t\tthis._lineY.set(lineY, lineY.events.on(\"positionchanged\", this.updateSelection, this, false));\r\n\t\t\tlineY.parent = this;\r\n\t\t\tlineY.interactionsEnabled = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._lineY.reset();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Line element\r\n\t */\r\n\tpublic get lineY(): Sprite {\r\n\t\treturn this._lineY.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A selection element ([[Sprite]]).\r\n\t *\r\n\t * @param selection Selection rectangle\r\n\t */\r\n\tpublic set selection(selection: Sprite) {\r\n\t\tthis._selection = selection;\r\n\t\tif (selection) {\r\n\t\t\tselection.element = this.paper.add(\"path\");\r\n\t\t\tselection.parent = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Selection rectangle\r\n\t */\r\n\tpublic get selection(): Sprite {\r\n\t\treturn this._selection;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * Looks if `xAxis` and `yAxis` is set via ID in JSON config, and replaces\r\n\t * with real references.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axes\r\n\t\t\tif ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.xAxis)) {\r\n\t\t\t\t\tconfig.xAxis = this.map.getKey(config.xAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`\");\r\n\t\t\t\t\tdelete config.xAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n\t\t\t\tif (this.map.hasKey(config.yAxis)) {\r\n\t\t\t\t\tconfig.yAxis = this.map.getKey(config.yAxis);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.processingErrors.push(\"[XYCursor] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`\");\r\n\t\t\t\t\tdelete config.yAxis;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(config.snapToSeries)) {\r\n\t\t\t\tlet snapTo = $type.isArray(config.snapToSeries) ? config.snapToSeries : [config.snapToSeries];\r\n\t\t\t\tlet snapError = false;\r\n\t\t\t\t$array.each(snapTo, (snap, index) => {\r\n\t\t\t\t\tif ($type.isString(snap)) {\r\n\t\t\t\t\t\tif (this.map.hasKey(snap)) {\r\n\t\t\t\t\t\t\tsnapTo[index] = this.map.getKey(snap);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.processingErrors.push(\"[XYCursor] No series with id \\\"\" + snap + \"\\\" found for `series`\");\r\n\t\t\t\t\t\t\tsnapError = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (snapError) {\r\n\t\t\t\t\tdelete config.snapToSeries;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconfig.snapToSeries = snapTo;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies to which series cursor lines should be snapped.\r\n\t * \r\n\t * Can be a single series instance or an array of series.\r\n\t *\r\n\t * @param {XYSeries | XYSeries[]}\r\n\t */\r\n\tpublic set snapToSeries(series: XYSeries | XYSeries[]) {\r\n\t\tif (this.setPropertyValue(\"snapToSeries\", series)) {\r\n\r\n\t\t\tif (series instanceof XYSeries) {\r\n\t\t\t\tseries = [series];\r\n\t\t\t}\r\n\t\t\tif (this._snapToDisposers) {\r\n\t\t\t\t$array.each(this._snapToDisposers, (disposer) => {\r\n\t\t\t\t\tdisposer.dispose();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tthis._snapToDisposers = [];\r\n\r\n\t\t\tif (series) {\r\n\t\t\t\t$array.each(series, (s) => {\r\n\t\t\t\t\tthis._snapToDisposers.push(s.events.on(\"tooltipshownat\", () => { this.handleSnap(s) }, undefined, false));\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {XYSeries | XYSeries[]}\r\n\t */\r\n\tpublic get snapToSeries(): XYSeries | XYSeries[] {\r\n\t\treturn this.getPropertyValue(\"snapToSeries\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should zoom selection \"snap\" into equal categories/intervals after panning\r\n\t * the chart? (when `behavior == \"panX\"`)\r\n\t *\r\n\t * @default true\r\n\t * @since 4.10.17\r\n\t * @return Snap on pan?\r\n\t */\r\n\tpublic get snapOnPan(): boolean {\r\n\t\treturn this.getPropertyValue(\"snapOnPan\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param value Snap on pan?\r\n\t */\r\n\tpublic set snapOnPan(value: boolean) {\r\n\t\tthis.setPropertyValue(\"snapOnPan\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * Snaps the zoom selection after chart is panned.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic handleSnap(series: XYSeries) {\r\n\t\tif (!this.downPoint) {\r\n\t\t\tlet x = series.getTooltipX() + series.xAxis.pixelX;\r\n\t\t\tlet y = series.getTooltipY() + series.yAxis.pixelY;\r\n\r\n\t\t\tlet xAxis = series.xAxis;\r\n\t\t\tlet yAxis = series.yAxis;\r\n\r\n\t\t\tif (xAxis) {\r\n\t\t\t\tif (xAxis.renderer.opposite) {\r\n\t\t\t\t\ty -= this.pixelHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.point = { x: x, y: y };\r\n\t\t\tthis.getPositions();\r\n\r\n\t\t\tlet xx = x;\r\n\t\t\tlet yy = y;\r\n\r\n\t\t\tx -= this.pixelWidth;\r\n\r\n\t\t\tif (yAxis) {\r\n\t\t\t\tif (yAxis.renderer.opposite) {\r\n\t\t\t\t\tx += this.pixelWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet tooltip = series.tooltip;\r\n\t\t\tlet duration = tooltip.animationDuration;\r\n\t\t\tlet easing = tooltip.animationEasing;\r\n\r\n\t\t\tif (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis) && yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n\t\t\t\tseries.yAxis.showTooltipAtPosition(this.yPosition);\r\n\t\t\t\tseries.xAxis.showTooltipAtPosition(this.xPosition);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (series.baseAxis == series.xAxis) {\r\n\t\t\t\t\tseries.yAxis.showTooltipAtPosition(this.yPosition);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.baseAxis == series.yAxis) {\r\n\t\t\t\t\tseries.xAxis.showTooltipAtPosition(this.xPosition);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t//\tthis.lineX.animate([{ property: \"y\", to: y }], duration, easing);\r\n\t\t//\tthis.lineY.animate([{ property: \"x\", to: x }], duration, easing);\r\n\r\n\t\t\tthis.lineY.x = x;\r\n\t\t\tthis.lineX.y = y;\r\n\r\n\t\t\tif (!this.xAxis) {\r\n\t\t\t\tthis.lineX.animate([{ property: \"x\", to: xx }], duration, easing);\r\n\t\t\t}\r\n\t\t\tif (!this.yAxis) {\r\n\t\t\t\tthis.lineY.animate([{ property: \"y\", to: yy }], duration, easing);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.hide(0);\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYCursor\"] = XYCursor;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadarChart } from \"../types/RadarChart\";\r\nimport { XYCursor, IXYCursorAdapters, IXYCursorEvents, IXYCursorProperties } from \"./XYCursor\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { ISpriteEvents } from \"../../core/Sprite\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[RadarCursor]].\r\n */\r\nexport interface IRadarCursorProperties extends IXYCursorProperties {\r\n\r\n\t/**\r\n\t * Inner radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t */\r\n\tinnerRadius: number | Percent;\r\n\r\n\t/**\r\n\t * Outer radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t */\r\n\tradius: number | Percent;\r\n\r\n\t/**\r\n\t * Starting angle of the cursor's radial line.\r\n\t */\r\n\tstartAngle: number;\r\n\r\n\t/**\r\n\t * Ending angle of the cursor's radial line.\r\n\t */\r\n\tendAngle: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RadarCursor]].\r\n */\r\nexport interface IRadarCursorEvents extends IXYCursorEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarCursor]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarCursorAdapters extends IXYCursorAdapters, IRadarCursorProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Cursor for [[RadarChart]].\r\n *\r\n * @see {@link IRadarCursorEvents} for a list of available events\r\n * @see {@link IRadarCursorAdapters} for a list of available Adapters\r\n */\r\nexport class RadarCursor extends XYCursor {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t */\r\n\tpublic _properties!: IRadarCursorProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t */\r\n\tpublic _adapter!: IRadarCursorAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarCursorEvents;\r\n\r\n\t/**\r\n\t * A reference to chart cursor belongs to.\r\n\t */\r\n\tpublic _chart: RadarChart;\r\n\r\n\r\n\tprotected _prevAngle: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarCursor\";\r\n\t\tthis.radius = percent(100);\r\n\t\tthis.innerRadius = percent(0);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.mask = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param point  Point to check\r\n\t * @return Fits within container?\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\tlet radius = $math.getDistance(point);\r\n\r\n\t\t//if(!$math.isAngleInRange(angle, this.startAngle, this.endAngle)){\r\n\t\t\t//return false;\r\n\t\t//}\r\n\t\tif (radius < this.truePixelRadius + 1 && radius > this.pixelInnerRadius - 1) { // ok to add/remove some\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Starting angle of the cursor's radial line.\r\n\t *\r\n\t * @param value Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * End angle of the cursor's radial line.\r\n\t *\r\n\t * @param value End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\r\n\tprotected triggerMoveReal(point:IPoint, force?:boolean) {\r\n\r\n\t\tif (!this.xAxis || (this.xAxis && (!this.xAxis.cursorTooltipEnabled || this.xAxis.tooltip.disabled))) {\r\n\t\t\tthis.updateLineX(this.point);\r\n\t\t}\r\n\t\tif (!this.yAxis || (this.yAxis && (!this.yAxis.cursorTooltipEnabled || this.yAxis.tooltip.disabled))) {\r\n\t\t\tthis.updateLineY(this.point);\r\n\t\t}\r\n\r\n\t\tthis.updateSelection();\r\n\t\tsuper.triggerMoveReal(point, force);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)draws the horizontal (circular) cursor's line.\r\n\t *\r\n\t * @param point New target point\r\n\t */\r\n\tprotected updateLineX(point: IPoint) {\r\n\r\n\t\tlet radius: number = this.pixelRadius;\r\n\t\tlet startAngle: number = this.startAngle;\r\n\t\tlet endAngle: number = this.endAngle;\r\n\t\tlet innerRadius: number = this.pixelInnerRadius;\r\n\r\n\t\tif (radius > 0 && $type.isNumber(startAngle) && $type.isNumber(endAngle) && $type.isNumber(innerRadius)) {\r\n\t\t\tlet angle: number = $math.fitAngleToRange($math.getAngle(point), startAngle, endAngle);\r\n\t\t\tlet path: string;\r\n\r\n\t\t\tif (this.lineX && this.lineX.visible) {\r\n\r\n\t\t\t\tthis.lineX.moveTo({ x: 0, y: 0 });\r\n\r\n\t\t\t\t// fill\r\n\t\t\t\tif (this.xAxis && this.fullWidthLineX) {\r\n\r\n\t\t\t\t\tlet startPoint: IPoint = this.xAxis.currentItemStartPoint;\r\n\t\t\t\t\tlet endPoint: IPoint = this.xAxis.currentItemEndPoint;\r\n\r\n\t\t\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\t\t\tlet fillStartAngle: number = $math.fitAngleToRange($math.getAngle(startPoint), startAngle, endAngle);\r\n\t\t\t\t\t\tlet fillEndAngle: number = $math.fitAngleToRange($math.getAngle(endPoint), startAngle, endAngle);\r\n\r\n\t\t\t\t\t\tlet arc: number = fillEndAngle - fillStartAngle;\r\n\r\n\t\t\t\t\t\t// clockwise\r\n\t\t\t\t\t\t// this is needed, normalizeAngle doesn't solve it\r\n\t\t\t\t\t\tif (startAngle < endAngle) {\r\n\t\t\t\t\t\t\tif (arc < 0) {\r\n\t\t\t\t\t\t\t\tarc += 360;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ccw\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (arc > 0) {\r\n\t\t\t\t\t\t\t\tarc -= 360;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tangle -= arc / 2;\r\n\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) })\r\n\t\t\t\t\t\t\t+ $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) })\r\n\t\t\t\t\t\t\t+ $path.arcTo(angle, arc, radius)\r\n\t\t\t\t\t\t\t+ $path.lineTo({ x: innerRadius * $math.cos(angle + arc), y: innerRadius * $math.sin(angle + arc) })\r\n\t\t\t\t\t\t\t+ $path.arcTo(angle + arc, -arc, innerRadius);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// line\r\n\t\t\t\tif (!path) {\r\n\t\t\t\t\tpath = $path.moveTo({ x: innerRadius * $math.cos(angle), y: innerRadius * $math.sin(angle) }) + $path.lineTo({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.lineX.path = path;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)draws the vertical (radial) cursor's line.\r\n\t *\r\n\t * @param point New target point\r\n\t */\r\n\tprotected updateLineY(point: IPoint) {\r\n\t\tif (this.lineY && this.lineY.visible) {\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet endAngle = this.endAngle;\r\n\t\t\tlet truePixelRadius = this.truePixelRadius;\r\n\t\t\tlet radius = $math.fitToRange($math.getDistance(point), 0, this.truePixelRadius);\r\n\t\t\tif ($type.isNumber(radius) && $type.isNumber(startAngle)) {\r\n\t\t\t\tthis.lineY.moveTo({ x: 0, y: 0 });\r\n\r\n\t\t\t\tlet path: string;\r\n\t\t\t\tlet arc: number = endAngle - startAngle;\r\n\r\n\t\t\t\tif (this.yAxis && this.fullWidthLineY) {\r\n\t\t\t\t\t// fill\r\n\t\t\t\t\tlet startPoint: IPoint = this.yAxis.currentItemStartPoint;\r\n\t\t\t\t\tlet endPoint: IPoint = this.yAxis.currentItemEndPoint;\r\n\r\n\t\t\t\t\tif (startPoint && endPoint) {\r\n\t\t\t\t\t\tlet innerRadius: number = $math.fitToRange($math.getDistance(startPoint), 0, truePixelRadius);\r\n\t\t\t\t\t\tradius = $math.fitToRange($math.getDistance(endPoint), 0, truePixelRadius);\r\n\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, arc, radius);\r\n\t\t\t\t\t\tpath += $path.moveTo({ x: innerRadius * $math.cos(endAngle), y: innerRadius * $math.sin(endAngle) }) + $path.arcTo(endAngle, -arc, innerRadius);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!path) {\r\n\t\t\t\t\tpath = $path.moveTo({ x: radius * $math.cos(startAngle), y: radius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, radius);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.lineY.path = path;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates selection dimensions on size change.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSelection(): void {\r\n\t\tif (this._usesSelection) {\r\n\t\t\tlet downPoint: IPoint = this.downPoint;\r\n\r\n\t\t\tif (downPoint) {\r\n\r\n\t\t\t\tlet point: IPoint = this.point;\r\n\r\n\t\t\t\tlet radius: number = this.pixelRadius;\r\n\t\t\t\tlet truePixelRadius: number = this.truePixelRadius;\r\n\t\t\t\tlet innerRadius: number = this.pixelInnerRadius;\r\n\r\n\t\t\t\tlet startAngle: number = Math.min(this.startAngle, this.endAngle);\r\n\t\t\t\tlet endAngle: number = Math.max(this.startAngle, this.endAngle);\r\n\r\n\t\t\t\tlet downAngle: number = $math.fitAngleToRange($math.getAngle(downPoint), startAngle, endAngle);\r\n\t\t\t\tlet angle: number = $math.fitAngleToRange($math.getAngle(point), startAngle, endAngle);\r\n\r\n\t\t\t\tlet downRadius: number = $math.getDistance(downPoint);\r\n\t\t\t\tif (downRadius < truePixelRadius) {\r\n\r\n\t\t\t\t\tlet currentRadius = $math.fitToRange($math.getDistance(point), 0, truePixelRadius);\r\n\r\n\t\t\t\t\tthis._prevAngle = angle;\r\n\r\n\t\t\t\t\tlet path: string = $path.moveTo({ x: 0, y: 0 });\r\n\r\n\t\t\t\t\tlet downSin: number = $math.sin(downAngle);\r\n\t\t\t\t\tlet downCos: number = $math.cos(downAngle);\r\n\r\n\t\t\t\t\tlet sin: number = $math.sin(angle);\r\n\t\t\t\t\tlet cos: number = $math.cos(angle);\r\n\r\n\t\t\t\t\tlet behavior = this.behavior;\r\n\t\t\t\t\tif (behavior == \"zoomX\" || behavior == \"selectX\") {\r\n\t\t\t\t\t\tpath += $path.lineTo({ x: radius * downCos, y: radius * downSin }) + $path.arcTo(downAngle, angle - downAngle, radius) + $path.lineTo({ x: innerRadius * cos, y: innerRadius * sin }) + $path.arcTo(angle, downAngle - angle, innerRadius);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (behavior == \"zoomY\" || behavior == \"selectY\") {\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: currentRadius * $math.cos(startAngle), y: currentRadius * $math.sin(startAngle) }) + $path.arcTo(startAngle, endAngle - startAngle, currentRadius) + $path.lineTo({ x: downRadius * $math.cos(endAngle), y: downRadius * $math.sin(endAngle) }) + $path.arcTo(endAngle, startAngle - endAngle, downRadius) + $path.closePath();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (behavior == \"zoomXY\") {\r\n\t\t\t\t\t\tpath = $path.moveTo({ x: currentRadius * $math.cos(downAngle), y: currentRadius * $math.sin(downAngle) }) + $path.arcTo(downAngle, angle - downAngle, currentRadius) + $path.lineTo({ x: downRadius * $math.cos(angle), y: downRadius * $math.sin(angle) }) + $path.arcTo(angle, downAngle - angle, downRadius) + $path.closePath();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.selection.path = path;\r\n\t\t\t\t}\r\n\t\t\t\tthis.selection.moveTo({ x: 0, y: 0 });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates cursors current positions.\r\n\t */\r\n\tprotected getPositions() {\r\n\t\t// positions are used by axes or series\r\n\t\tlet chart: RadarChart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tlet innerRadius = this.pixelInnerRadius;\r\n\t\t\tlet radius: number = this.truePixelRadius - innerRadius;\r\n\r\n\t\t\tlet startAngle: number = this.startAngle;\r\n\t\t\tlet endAngle: number = this.endAngle;\r\n\r\n\t\t\tlet angle: number = $math.fitAngleToRange($math.getAngle(this.point), startAngle, endAngle);\r\n\t\t\tlet xPosition = ((angle - startAngle) / (endAngle - startAngle));\r\n\t\t\tthis.xPosition = xPosition;\r\n\r\n\t\t\tthis.yPosition = $math.fitToRange(($math.getDistance(this.point) - innerRadius) / radius, 0, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Overriding inherited method, so that nothing happens when it's triggered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updatePoint(point: IPoint) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when axis tooltip changes horizontal position.\r\n\t *\r\n\t * @param event Axis event\r\n\t */\r\n\tprotected handleXTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tif (this.xAxis.cursorTooltipEnabled) {\r\n\t\t\tlet tooltip: Tooltip = this.xAxis.tooltip;\r\n\t\t\tthis.updateLineX($utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Cursor's position when axis tooltip changes vertical position.\r\n\t *\r\n\t * @todo Description\r\n\t * @param event Axis event\r\n\t */\r\n\tprotected handleYTooltipPosition(event: ISpriteEvents[\"positionchanged\"]): void {\r\n\t\tif (this.yAxis.cursorTooltipEnabled) {\r\n\t\t\tlet tooltip: Tooltip = this.yAxis.tooltip;\r\n\t\t\tthis.updateLineY($utils.svgPointToSprite({ x: tooltip.pixelX, y: tooltip.pixelY }, this));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * needs to be overriden\r\n\t * @ignore\r\n\t */\r\n\tprotected updateLinePositions(point: IPoint) {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [getRanges description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected getRanges(): void {\r\n\t\tlet downPoint = this.downPoint;\r\n\t\tif (downPoint) {\r\n\t\t\tlet upPoint: IPoint = this.upPoint;\r\n\r\n\t\t\tlet chart: RadarChart = this.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tlet radius: number = this.pixelRadius;\r\n\t\t\t\tlet startAngle: number = this.startAngle;\r\n\t\t\t\tlet endAngle: number = this.endAngle;\r\n\r\n\t\t\t\tlet downAngle: number = $math.fitAngleToRange($math.getAngle(downPoint), this.startAngle, this.endAngle);\r\n\t\t\t\tlet upAngle: number = $math.fitAngleToRange($math.getAngle(upPoint), this.startAngle, this.endAngle);\r\n\r\n\t\t\t\tlet downRadius = $math.fitToRange($math.getDistance(downPoint), 0, radius);\r\n\t\t\t\tlet upRadius = $math.fitToRange($math.getDistance(upPoint), 0, radius);\r\n\r\n\t\t\t\tlet startX: number = 0;\r\n\t\t\t\tlet endX: number = 1;\r\n\r\n\t\t\t\tlet startY: number = 0;\r\n\t\t\t\tlet endY: number = 1;\r\n\r\n\t\t\t\tlet behavior = this.behavior;\r\n\t\t\t\tif (behavior == \"zoomX\" || behavior == \"selectX\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n\t\t\t\t\tlet arc: number = endAngle - startAngle;\r\n\t\t\t\t\tstartX = $math.round((downAngle - startAngle) / arc, 5);\r\n\t\t\t\t\tendX = $math.round((upAngle - startAngle) / arc, 5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (behavior == \"zoomY\" || behavior == \"selectY\" || behavior == \"zoomXY\" || behavior == \"selectXY\") {\r\n\t\t\t\t\tstartY = $math.round(downRadius / radius, 5);\r\n\t\t\t\t\tendY = $math.round(upRadius / radius, 5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.xRange = { start: Math.min(startX, endX), end: Math.max(startX, endX) };\r\n\t\t\t\tthis.yRange = { start: Math.min(startY, endY), end: Math.max(startY, endY) };\r\n\r\n\t\t\t\tif (this.behavior == \"selectX\" || this.behavior == \"selectY\" || this.behavior == \"selectXY\") {\r\n\t\t\t\t\t// void\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.selection.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Overriding inherited method, so that nothing happens when `updateSize`\r\n\t * is triggered.\r\n\t *\r\n\t * RadarCursor is quite complicated and needs own sizing logic.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateSize(): void { }\r\n\r\n\t/**\r\n\t * Outer radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Outer radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, false, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outer radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Outer radius of the circular line in pixels.\r\n\t *\r\n\t * @return Outer radius (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeRadiusToValue(this.radius, this.truePixelRadius);\r\n\t}\r\n\r\n\t/**\r\n\t * [truePixelRadius description]\r\n\t *\r\n\t * @todo Description\r\n\t * @return Outer radius (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get truePixelRadius(): number {\r\n\t\treturn $utils.relativeToValue(percent(100), $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the cursor's circular line.\r\n\t * Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, false, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the circular line in pixels.\r\n\t *\r\n\t * @return Inner radius (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\r\n\t\tlet innerRadius = this.innerRadius;\r\n\r\n\t\tif (innerRadius instanceof Percent) {\r\n\t\t\tinnerRadius = percent(100 * innerRadius.value * this.chart.innerRadiusModifyer);\r\n\t\t}\r\n\r\n\t\treturn $utils.relativeRadiusToValue(innerRadius, this.truePixelRadius) || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\r\n\tprotected fixPoint(point: IPoint): IPoint {\r\n\t\t// overriding xy method\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarCursor\"] = RadarCursor;\r\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar countup_js = require('countup.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nvar DEFAULTS = {\n  decimal: '.',\n  delay: null,\n  prefix: '',\n  suffix: '',\n  start: 0\n};\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      numerals = props.numerals,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new countup_js.CountUp(el, end, {\n    startVal: start,\n    duration: duration,\n    decimal: decimal,\n    decimalPlaces: decimals,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    numerals: numerals,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp = /*#__PURE__*/function (_Component) {\n  _inherits(CountUp, _Component);\n\n  var _super = _createSuper(CountUp);\n\n  function CountUp() {\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"instance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"checkProps\", function (updatedProps) {\n      var _this$props = _this.props,\n          start = _this$props.start,\n          suffix = _this$props.suffix,\n          prefix = _this$props.prefix,\n          redraw = _this$props.redraw,\n          duration = _this$props.duration,\n          separator = _this$props.separator,\n          decimals = _this$props.decimals,\n          decimal = _this$props.decimal,\n          className = _this$props.className,\n          formattingFn = _this$props.formattingFn;\n      var hasPropsChanged = duration !== updatedProps.duration || start !== updatedProps.start || suffix !== updatedProps.suffix || prefix !== updatedProps.prefix || separator !== updatedProps.separator || decimals !== updatedProps.decimals || decimal !== updatedProps.decimal || className !== updatedProps.className || formattingFn !== updatedProps.formattingFn;\n      return hasPropsChanged || redraw;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        if (!(_this.containerRef.current instanceof Element)) {\n          console.error(\"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an Element, eg. <span ref={containerRef} />.\");\n          return;\n        }\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _this$instance;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n      (_this$instance = _this.instance) === null || _this$instance === void 0 ? void 0 : _this$instance.pauseResume();\n      onPauseResume === null || onPauseResume === void 0 ? void 0 : onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _this$instance2;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n      (_this$instance2 = _this.instance) === null || _this$instance2 === void 0 ? void 0 : _this$instance2.reset();\n      onReset === null || onReset === void 0 ? void 0 : onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props2 = _this.props,\n          delay = _this$props2.delay,\n          onEnd = _this$props2.onEnd,\n          onStart = _this$props2.onStart;\n\n      var run = function run() {\n        var _this$instance3;\n\n        return (_this$instance3 = _this.instance) === null || _this$instance3 === void 0 ? void 0 : _this$instance3.start(function () {\n          return onEnd === null || onEnd === void 0 ? void 0 : onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay && delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart === null || onStart === void 0 ? void 0 : onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _this$instance4;\n\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n      (_this$instance4 = _this.instance) === null || _this$instance4 === void 0 ? void 0 : _this$instance4.update(newEnd);\n      onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React__default['default'].createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          delay = _this$props3.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var end = this.props.end;\n      return this.checkProps(nextProps) || end !== nextProps.end;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          preserveValue = _this$props4.preserveValue;\n\n      if (this.checkProps(prevProps)) {\n        var _this$instance5;\n\n        (_this$instance5 = this.instance) === null || _this$instance5 === void 0 ? void 0 : _this$instance5.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        var _this$instance7;\n\n        if (!preserveValue) {\n          var _this$instance6;\n\n          (_this$instance6 = this.instance) === null || _this$instance6 === void 0 ? void 0 : _this$instance6.reset();\n        }\n\n        (_this$instance7 = this.instance) === null || _this$instance7 === void 0 ? void 0 : _this$instance7.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$instance8;\n\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      (_this$instance8 = this.instance) === null || _this$instance8 === void 0 ? void 0 : _this$instance8.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return /*#__PURE__*/React__default['default'].createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"defaultProps\", _objectSpread2(_objectSpread2({}, DEFAULTS), {}, {\n  redraw: false,\n  style: undefined,\n  preserveValue: false\n}));\n\nvar defaults = _objectSpread2(_objectSpread2({}, DEFAULTS), {}, {\n  startOnMount: true\n});\n\nvar useCountUp = function useCountUp(props) {\n  var parsedProps = _objectSpread2(_objectSpread2({}, defaults), props);\n\n  var ref = parsedProps.ref;\n  var countUpRef = React.useRef();\n  var timerRef = React.useRef();\n\n  var createInstance = function createInstance() {\n    return createCountUpInstance(typeof ref === 'string' ? ref : ref.current, parsedProps);\n  };\n\n  var getCountUp = function getCountUp(recreate) {\n    var countUp = countUpRef.current;\n\n    if (countUp && !recreate) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = parsedProps.onReset;\n    getCountUp().reset();\n    onReset === null || onReset === void 0 ? void 0 : onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = parsedProps.onStart,\n        onEnd = parsedProps.onEnd;\n    getCountUp().reset();\n    onStart === null || onStart === void 0 ? void 0 : onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n    getCountUp().start(function () {\n      onEnd === null || onEnd === void 0 ? void 0 : onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = parsedProps.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume === null || onPauseResume === void 0 ? void 0 : onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = parsedProps.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = parsedProps.delay,\n        onStart = parsedProps.onStart,\n        onEnd = parsedProps.onEnd,\n        startOnMount = parsedProps.startOnMount;\n\n    if (startOnMount) {\n      timerRef.current = setTimeout(function () {\n        onStart === null || onStart === void 0 ? void 0 : onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp(true).start(function () {\n          timerRef.current && clearTimeout(timerRef.current);\n          onEnd === null || onEnd === void 0 ? void 0 : onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay ? delay * 1000 : 0);\n    }\n\n    return function () {\n      timerRef.current && clearTimeout(timerRef.current);\n      reset();\n    };\n  }, [parsedProps]);\n  return {\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports['default'] = CountUp;\nexports.useCountUp = useCountUp;\n","var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var i,a=1,s=arguments.length;a<s;a++)for(var n in i=arguments[a])Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n]);return t}).apply(this,arguments)},CountUp=function(){function t(t,i,a){var s=this;this.target=t,this.endVal=i,this.options=a,this.version=\"2.0.8\",this.defaults={startVal:0,decimalPlaces:0,duration:2,useEasing:!0,useGrouping:!0,smartEasingThreshold:999,smartEasingAmount:333,separator:\",\",decimal:\".\",prefix:\"\",suffix:\"\"},this.finalEndVal=null,this.useEasing=!0,this.countDown=!1,this.error=\"\",this.startVal=0,this.paused=!0,this.count=function(t){s.startTime||(s.startTime=t);var i=t-s.startTime;s.remaining=s.duration-i,s.useEasing?s.countDown?s.frameVal=s.startVal-s.easingFn(i,0,s.startVal-s.endVal,s.duration):s.frameVal=s.easingFn(i,s.startVal,s.endVal-s.startVal,s.duration):s.countDown?s.frameVal=s.startVal-(s.startVal-s.endVal)*(i/s.duration):s.frameVal=s.startVal+(s.endVal-s.startVal)*(i/s.duration),s.countDown?s.frameVal=s.frameVal<s.endVal?s.endVal:s.frameVal:s.frameVal=s.frameVal>s.endVal?s.endVal:s.frameVal,s.frameVal=Number(s.frameVal.toFixed(s.options.decimalPlaces)),s.printValue(s.frameVal),i<s.duration?s.rAF=requestAnimationFrame(s.count):null!==s.finalEndVal?s.update(s.finalEndVal):s.callback&&s.callback()},this.formatNumber=function(t){var i,a,n,e,r=t<0?\"-\":\"\";i=Math.abs(t).toFixed(s.options.decimalPlaces);var o=(i+=\"\").split(\".\");if(a=o[0],n=o.length>1?s.options.decimal+o[1]:\"\",s.options.useGrouping){e=\"\";for(var l=0,h=a.length;l<h;++l)0!==l&&l%3==0&&(e=s.options.separator+e),e=a[h-l-1]+e;a=e}return s.options.numerals&&s.options.numerals.length&&(a=a.replace(/[0-9]/g,function(t){return s.options.numerals[+t]}),n=n.replace(/[0-9]/g,function(t){return s.options.numerals[+t]})),r+s.options.prefix+a+n+s.options.suffix},this.easeOutExpo=function(t,i,a,s){return a*(1-Math.pow(2,-10*t/s))*1024/1023+i},this.options=__assign(__assign({},this.defaults),a),this.formattingFn=this.options.formattingFn?this.options.formattingFn:this.formatNumber,this.easingFn=this.options.easingFn?this.options.easingFn:this.easeOutExpo,this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.endVal=this.validateValue(i),this.options.decimalPlaces=Math.max(this.options.decimalPlaces),this.resetDuration(),this.options.separator=String(this.options.separator),this.useEasing=this.options.useEasing,\"\"===this.options.separator&&(this.options.useGrouping=!1),this.el=\"string\"==typeof t?document.getElementById(t):t,this.el?this.printValue(this.startVal):this.error=\"[CountUp] target is null or undefined\"}return t.prototype.determineDirectionAndSmartEasing=function(){var t=this.finalEndVal?this.finalEndVal:this.endVal;this.countDown=this.startVal>t;var i=t-this.startVal;if(Math.abs(i)>this.options.smartEasingThreshold){this.finalEndVal=t;var a=this.countDown?1:-1;this.endVal=t+a*this.options.smartEasingAmount,this.duration=this.duration/2}else this.endVal=t,this.finalEndVal=null;this.finalEndVal?this.useEasing=!1:this.useEasing=this.options.useEasing},t.prototype.start=function(t){this.error||(this.callback=t,this.duration>0?(this.determineDirectionAndSmartEasing(),this.paused=!1,this.rAF=requestAnimationFrame(this.count)):this.printValue(this.endVal))},t.prototype.pauseResume=function(){this.paused?(this.startTime=null,this.duration=this.remaining,this.startVal=this.frameVal,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count)):cancelAnimationFrame(this.rAF),this.paused=!this.paused},t.prototype.reset=function(){cancelAnimationFrame(this.rAF),this.paused=!0,this.resetDuration(),this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.printValue(this.startVal)},t.prototype.update=function(t){cancelAnimationFrame(this.rAF),this.startTime=null,this.endVal=this.validateValue(t),this.endVal!==this.frameVal&&(this.startVal=this.frameVal,this.finalEndVal||this.resetDuration(),this.finalEndVal=null,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count))},t.prototype.printValue=function(t){var i=this.formattingFn(t);\"INPUT\"===this.el.tagName?this.el.value=i:\"text\"===this.el.tagName||\"tspan\"===this.el.tagName?this.el.textContent=i:this.el.innerHTML=i},t.prototype.ensureNumber=function(t){return\"number\"==typeof t&&!isNaN(t)},t.prototype.validateValue=function(t){var i=Number(t);return this.ensureNumber(i)?i:(this.error=\"[CountUp] invalid start or end value: \"+t,null)},t.prototype.resetDuration=function(){this.startTime=null,this.duration=1e3*Number(this.options.duration),this.remaining=this.duration},t}();export{CountUp};","// @flow\nimport type { Interpolation } from '../types';\n\nexport default (\n  strings: Array<string>,\n  interpolations: Array<Interpolation>\n): Array<Interpolation> => {\n  const result = [strings[0]];\n\n  for (let i = 0, len = interpolations.length; i < len; i += 1) {\n    result.push(interpolations[i], strings[i + 1]);\n  }\n\n  return result;\n};\n","// @flow\nimport { typeOf } from 'react-is';\n\nexport default (x: any): boolean =>\n  x !== null &&\n  typeof x === 'object' &&\n  (x.toString ? x.toString() : Object.prototype.toString.call(x)) === '[object Object]' &&\n  !typeOf(x);\n","// @flow\nexport const EMPTY_ARRAY = Object.freeze([]);\nexport const EMPTY_OBJECT = Object.freeze({});\n","// @flow\nexport default function isFunction(test: any): boolean %checks {\n  return typeof test === 'function';\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function getComponentName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return (\n    (process.env.NODE_ENV !== 'production' ? typeof target === 'string' && target : false) ||\n    // $FlowFixMe\n    target.displayName ||\n    // $FlowFixMe\n    target.name ||\n    'Component'\n  );\n}\n","// @flow\nexport default function isStyledComponent(target: any): boolean %checks {\n  return target && typeof target.styledComponentId === 'string';\n}\n","// @flow\n\ndeclare var SC_DISABLE_SPEEDY: ?boolean;\ndeclare var __VERSION__: string;\n\nexport const SC_ATTR: string =\n  (typeof process !== 'undefined' && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||\n  'data-styled';\n\nexport const SC_ATTR_ACTIVE = 'active';\nexport const SC_ATTR_VERSION = 'data-styled-version';\nexport const SC_VERSION = __VERSION__;\nexport const SPLITTER = '/*!sc*/\\n';\n\nexport const IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nexport const DISABLE_SPEEDY =\n  Boolean(typeof SC_DISABLE_SPEEDY === 'boolean'\n    ? SC_DISABLE_SPEEDY\n    : (typeof process !== 'undefined' && typeof process.env.REACT_APP_SC_DISABLE_SPEEDY !== 'undefined' && process.env.REACT_APP_SC_DISABLE_SPEEDY !== ''\n      ? process.env.REACT_APP_SC_DISABLE_SPEEDY === 'false' ? false : process.env.REACT_APP_SC_DISABLE_SPEEDY\n      : (typeof process !== 'undefined' && typeof process.env.SC_DISABLE_SPEEDY !== 'undefined' && process.env.SC_DISABLE_SPEEDY !== ''\n        ? process.env.SC_DISABLE_SPEEDY === 'false' ? false : process.env.SC_DISABLE_SPEEDY\n        : process.env.NODE_ENV !== 'production'\n      )\n    ));\n\n// Shared empty execution context when generating static styles\nexport const STATIC_EXECUTION_CONTEXT = {};\n","// @flow\nimport errorMap from './errors';\n\nconst ERRORS = process.env.NODE_ENV !== 'production' ? errorMap : {};\n\n/**\n * super basic version of sprintf\n */\nfunction format(...args) {\n  let a = args[0];\n  const b = [];\n\n  for (let c = 1, len = args.length; c < len; c += 1) {\n    b.push(args[c]);\n  }\n\n  b.forEach(d => {\n    a = a.replace(/%[a-z]/, d);\n  });\n\n  return a;\n}\n\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n */\nexport default function throwStyledComponentsError(\n  code: string | number,\n  ...interpolations: Array<any>\n) {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      `An error occurred. See https://git.io/JUIaE#${code} for more information.${\n        interpolations.length > 0 ? ` Args: ${interpolations.join(', ')}` : ''\n      }`\n    );\n  } else {\n    throw new Error(format(ERRORS[code], ...interpolations).trim());\n  }\n}\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport type { GroupedTag, Tag } from './types';\nimport { SPLITTER } from '../constants';\nimport throwStyledError from '../utils/error';\n\n/** Create a GroupedTag with an underlying Tag implementation */\nexport const makeGroupedTag = (tag: Tag): GroupedTag => {\n  return new DefaultGroupedTag(tag);\n};\n\nconst BASE_SIZE = 1 << 9;\n\nclass DefaultGroupedTag implements GroupedTag {\n  groupSizes: Uint32Array;\n\n  length: number;\n\n  tag: Tag;\n\n  constructor(tag: Tag) {\n    this.groupSizes = new Uint32Array(BASE_SIZE);\n    this.length = BASE_SIZE;\n    this.tag = tag;\n  }\n\n  indexOfGroup(group: number): number {\n    let index = 0;\n    for (let i = 0; i < group; i++) {\n      index += this.groupSizes[i];\n    }\n\n    return index;\n  }\n\n  insertRules(group: number, rules: string[]): void {\n    if (group >= this.groupSizes.length) {\n      const oldBuffer = this.groupSizes;\n      const oldSize = oldBuffer.length;\n\n      let newSize = oldSize;\n      while (group >= newSize) {\n        newSize <<= 1;\n        if (newSize < 0) {\n          throwStyledError(16, `${group}`);\n        }\n      }\n\n      this.groupSizes = new Uint32Array(newSize);\n      this.groupSizes.set(oldBuffer);\n      this.length = newSize;\n\n      for (let i = oldSize; i < newSize; i++) {\n        this.groupSizes[i] = 0;\n      }\n    }\n\n    let ruleIndex = this.indexOfGroup(group + 1);\n    for (let i = 0, l = rules.length; i < l; i++) {\n      if (this.tag.insertRule(ruleIndex, rules[i])) {\n        this.groupSizes[group]++;\n        ruleIndex++;\n      }\n    }\n  }\n\n  clearGroup(group: number): void {\n    if (group < this.length) {\n      const length = this.groupSizes[group];\n      const startIndex = this.indexOfGroup(group);\n      const endIndex = startIndex + length;\n\n      this.groupSizes[group] = 0;\n\n      for (let i = startIndex; i < endIndex; i++) {\n        this.tag.deleteRule(startIndex);\n      }\n    }\n  }\n\n  getGroup(group: number): string {\n    let css = '';\n    if (group >= this.length || this.groupSizes[group] === 0) {\n      return css;\n    }\n\n    const length = this.groupSizes[group];\n    const startIndex = this.indexOfGroup(group);\n    const endIndex = startIndex + length;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      css += `${this.tag.getRule(i)}${SPLITTER}`;\n    }\n\n    return css;\n  }\n}\n","// @flow\n\nimport throwStyledError from '../utils/error';\n\nconst MAX_SMI = 1 << 31 - 1;\n\nlet groupIDRegister: Map<string, number> = new Map();\nlet reverseRegister: Map<number, string> = new Map();\nlet nextFreeGroup = 1;\n\nexport const resetGroupIds = () => {\n  groupIDRegister = new Map();\n  reverseRegister = new Map();\n  nextFreeGroup = 1;\n};\n\nexport const getGroupForId = (id: string): number => {\n  if (groupIDRegister.has(id)) {\n    return (groupIDRegister.get(id): any);\n  }\n\n  while (reverseRegister.has(nextFreeGroup)) {\n    nextFreeGroup++;\n  }\n\n  const group = nextFreeGroup++;\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    ((group | 0) < 0 || group > MAX_SMI)\n  ) {\n    throwStyledError(16, `${group}`);\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n  return group;\n};\n\nexport const getIdForGroup = (group: number): void | string => {\n  return reverseRegister.get(group);\n};\n\nexport const setGroupForId = (id: string, group: number) => {\n  if (group >= nextFreeGroup) {\n    nextFreeGroup = group + 1;\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n};\n","// @flow\n\nimport { SPLITTER, SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport { getIdForGroup, setGroupForId } from './GroupIDAllocator';\nimport type { Sheet } from './types';\n\nconst SELECTOR = `style[${SC_ATTR}][${SC_ATTR_VERSION}=\"${SC_VERSION}\"]`;\nconst MARKER_RE = new RegExp(`^${SC_ATTR}\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)`);\n\nexport const outputSheet = (sheet: Sheet) => {\n  const tag = sheet.getTag();\n  const { length } = tag;\n\n  let css = '';\n  for (let group = 0; group < length; group++) {\n    const id = getIdForGroup(group);\n    if (id === undefined) continue;\n\n    const names = sheet.names.get(id);\n    const rules = tag.getGroup(group);\n    if (!names || !rules || !names.size) continue;\n\n    const selector = `${SC_ATTR}.g${group}[id=\"${id}\"]`;\n\n    let content = '';\n    if (names !== undefined) {\n      names.forEach(name => {\n        if (name.length > 0) {\n          content += `${name},`;\n        }\n      });\n    }\n\n    // NOTE: It's easier to collect rules and have the marker\n    // after the actual rules to simplify the rehydration\n    css += `${rules}${selector}{content:\"${content}\"}${SPLITTER}`;\n  }\n\n  return css;\n};\n\nconst rehydrateNamesFromContent = (sheet: Sheet, id: string, content: string) => {\n  const names = content.split(',');\n  let name;\n\n  for (let i = 0, l = names.length; i < l; i++) {\n    // eslint-disable-next-line\n    if ((name = names[i])) {\n      sheet.registerName(id, name);\n    }\n  }\n};\n\nconst rehydrateSheetFromTag = (sheet: Sheet, style: HTMLStyleElement) => {\n  const parts = (style.textContent || '').split(SPLITTER);\n  const rules: string[] = [];\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    const part = parts[i].trim();\n    if (!part) continue;\n\n    const marker = part.match(MARKER_RE);\n\n    if (marker) {\n      const group = parseInt(marker[1], 10) | 0;\n      const id = marker[2];\n\n      if (group !== 0) {\n        // Rehydrate componentId to group index mapping\n        setGroupForId(id, group);\n        // Rehydrate names and rules\n        // looks like: data-styled.g11[id=\"idA\"]{content:\"nameA,\"}\n        rehydrateNamesFromContent(sheet, id, marker[3]);\n        sheet.getTag().insertRules(group, rules);\n      }\n\n      rules.length = 0;\n    } else {\n      rules.push(part);\n    }\n  }\n};\n\nexport const rehydrateSheet = (sheet: Sheet) => {\n  const nodes = document.querySelectorAll(SELECTOR);\n\n  for (let i = 0, l = nodes.length; i < l; i++) {\n    const node = ((nodes[i]: any): HTMLStyleElement);\n    if (node && node.getAttribute(SC_ATTR) !== SC_ATTR_ACTIVE) {\n      rehydrateSheetFromTag(sheet, node);\n\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }\n};\n","// @flow\n/* eslint-disable camelcase, no-undef */\n\ndeclare var window: { __webpack_nonce__: string };\n\nconst getNonce = () => {\n\n  return typeof window !== 'undefined'\n    ? typeof window.__webpack_nonce__ !== 'undefined'\n      ? window.__webpack_nonce__\n      : null\n    : null;\n};\n\nexport default getNonce;\n","// @flow\n\nimport { SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport getNonce from '../utils/nonce';\nimport throwStyledError from '../utils/error';\n\nconst ELEMENT_TYPE = 1; /* Node.ELEMENT_TYPE */\n\n/** Find last style element if any inside target */\nconst findLastStyleTag = (target: HTMLElement): void | HTMLStyleElement => {\n  const { childNodes } = target;\n\n  for (let i = childNodes.length; i >= 0; i--) {\n    const child = ((childNodes[i]: any): ?HTMLElement);\n    if (child && child.nodeType === ELEMENT_TYPE && child.hasAttribute(SC_ATTR)) {\n      return ((child: any): HTMLStyleElement);\n    }\n  }\n\n  return undefined;\n};\n\n/** Create a style element inside `target` or <head> after the last */\nexport const makeStyleTag = (target?: HTMLElement): HTMLStyleElement => {\n  const head = ((document.head: any): HTMLElement);\n  const parent = target || head;\n  const style = document.createElement('style');\n  const prevStyle = findLastStyleTag(parent);\n  const nextSibling = prevStyle !== undefined ? prevStyle.nextSibling : null;\n\n  style.setAttribute(SC_ATTR, SC_ATTR_ACTIVE);\n  style.setAttribute(SC_ATTR_VERSION, SC_VERSION);\n\n  const nonce = getNonce();\n\n  if (nonce) style.setAttribute('nonce', nonce);\n\n  parent.insertBefore(style, nextSibling);\n\n  return style;\n};\n\n/** Get the CSSStyleSheet instance for a given style element */\nexport const getSheet = (tag: HTMLStyleElement): CSSStyleSheet => {\n  if (tag.sheet) {\n    return ((tag.sheet: any): CSSStyleSheet);\n  }\n\n  // Avoid Firefox quirk where the style element might not have a sheet property\n  const { styleSheets } = document;\n  for (let i = 0, l = styleSheets.length; i < l; i++) {\n    const sheet = styleSheets[i];\n    if (sheet.ownerNode === tag) {\n      return ((sheet: any): CSSStyleSheet);\n    }\n  }\n\n  throwStyledError(17);\n  return (undefined: any);\n};\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport { makeStyleTag, getSheet } from './dom';\nimport type { SheetOptions, Tag } from './types';\n\n/** Create a CSSStyleSheet-like tag depending on the environment */\nexport const makeTag = ({ isServer, useCSSOMInjection, target }: SheetOptions): Tag => {\n  if (isServer) {\n    return new VirtualTag(target);\n  } else if (useCSSOMInjection) {\n    return new CSSOMTag(target);\n  } else {\n    return new TextTag(target);\n  }\n};\n\nexport class CSSOMTag implements Tag {\n  element: HTMLStyleElement;\n\n  sheet: CSSStyleSheet;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n\n    // Avoid Edge bug where empty style elements don't create sheets\n    element.appendChild(document.createTextNode(''));\n\n    this.sheet = getSheet(element);\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    try {\n      this.sheet.insertRule(rule, index);\n      this.length++;\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.sheet.deleteRule(index);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    const rule = this.sheet.cssRules[index];\n    // Avoid IE11 quirk where cssText is inaccessible on some invalid rules\n    if (rule !== undefined && typeof rule.cssText === 'string') {\n      return rule.cssText;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A Tag that emulates the CSSStyleSheet API but uses text nodes */\nexport class TextTag implements Tag {\n  element: HTMLStyleElement;\n\n  nodes: NodeList<Node>;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n    this.nodes = element.childNodes;\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length && index >= 0) {\n      const node = document.createTextNode(rule);\n      const refNode = this.nodes[index];\n      this.element.insertBefore(node, refNode || null);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.element.removeChild(this.nodes[index]);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.nodes[index].textContent;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */\nexport class VirtualTag implements Tag {\n  rules: string[];\n\n  length: number;\n\n  constructor(_target?: HTMLElement) {\n    this.rules = [];\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length) {\n      this.rules.splice(index, 0, rule);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.rules.splice(index, 1);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.rules[index];\n    } else {\n      return '';\n    }\n  }\n}\n","// @flow\nimport { DISABLE_SPEEDY, IS_BROWSER } from '../constants';\nimport { EMPTY_OBJECT } from '../utils/empties';\nimport { makeGroupedTag } from './GroupedTag';\nimport { getGroupForId } from './GroupIDAllocator';\nimport { outputSheet, rehydrateSheet } from './Rehydration';\nimport { makeTag } from './Tag';\nimport type { GroupedTag, Sheet, SheetOptions } from './types';\n\nlet SHOULD_REHYDRATE = IS_BROWSER;\n\ntype SheetConstructorArgs = {\n  isServer?: boolean,\n  useCSSOMInjection?: boolean,\n  target?: HTMLElement,\n};\n\ntype GlobalStylesAllocationMap = { [key: string]: number };\ntype NamesAllocationMap = Map<string, Set<string>>;\n\nconst defaultOptions: SheetOptions = {\n  isServer: !IS_BROWSER,\n  useCSSOMInjection: !DISABLE_SPEEDY,\n};\n\n/** Contains the main stylesheet logic for stringification and caching */\nexport default class StyleSheet implements Sheet {\n  gs: GlobalStylesAllocationMap;\n\n  names: NamesAllocationMap;\n\n  options: SheetOptions;\n\n  server: boolean;\n\n  tag: void | GroupedTag;\n\n  /** Register a group ID to give it an index */\n  static registerId(id: string): number {\n    return getGroupForId(id);\n  }\n\n  constructor(\n    options: SheetConstructorArgs = EMPTY_OBJECT,\n    globalStyles?: GlobalStylesAllocationMap = {},\n    names?: NamesAllocationMap\n  ) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.gs = globalStyles;\n    this.names = new Map(names);\n    this.server = !!options.isServer;\n\n    // We rehydrate only once and use the sheet that is created first\n    if (!this.server && IS_BROWSER && SHOULD_REHYDRATE) {\n      SHOULD_REHYDRATE = false;\n      rehydrateSheet(this);\n    }\n  }\n\n  reconstructWithOptions(options: SheetConstructorArgs, withNames?: boolean = true) {\n    return new StyleSheet(\n      { ...this.options, ...options },\n      this.gs,\n      (withNames && this.names) || undefined\n    );\n  }\n\n  allocateGSInstance(id: string) {\n    return (this.gs[id] = (this.gs[id] || 0) + 1);\n  }\n\n  /** Lazily initialises a GroupedTag for when it's actually needed */\n  getTag(): GroupedTag {\n    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));\n  }\n\n  /** Check whether a name is known for caching */\n  hasNameForId(id: string, name: string): boolean {\n    return this.names.has(id) && (this.names.get(id): any).has(name);\n  }\n\n  /** Mark a group's name as known for caching */\n  registerName(id: string, name: string) {\n    getGroupForId(id);\n\n    if (!this.names.has(id)) {\n      const groupNames = new Set();\n      groupNames.add(name);\n      this.names.set(id, groupNames);\n    } else {\n      (this.names.get(id): any).add(name);\n    }\n  }\n\n  /** Insert new rules which also marks the name as known */\n  insertRules(id: string, name: string, rules: string[]) {\n    this.registerName(id, name);\n    this.getTag().insertRules(getGroupForId(id), rules);\n  }\n\n  /** Clears all cached names for a given group ID */\n  clearNames(id: string) {\n    if (this.names.has(id)) {\n      (this.names.get(id): any).clear();\n    }\n  }\n\n  /** Clears all rules for a given group ID */\n  clearRules(id: string) {\n    this.getTag().clearGroup(getGroupForId(id));\n    this.clearNames(id);\n  }\n\n  /** Clears the entire tag which deletes all rules but not its names */\n  clearTag() {\n    // NOTE: This does not clear the names, since it's only used during SSR\n    // so that we can continuously output only new rules\n    this.tag = undefined;\n  }\n\n  /** Outputs the current sheet as a CSS string with markers for SSR */\n  toString(): string {\n    return outputSheet(this);\n  }\n}\n","// @flow\n/* eslint-disable no-bitwise */\n\nconst AD_REPLACER_R = /(a)(d)/gi;\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nconst charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nconst getAlphabeticChar = (code: number): string =>\n  String.fromCharCode(code + (code > 25 ? 39 : 97));\n\n/* input a number, usually a hash and convert it to base-52 */\nexport default function generateAlphabeticName(code: number): string {\n  let name = '';\n  let x;\n\n  /* get a char and divide by alphabet-length */\n  for (x = Math.abs(code); x > charsLength; x = (x / charsLength) | 0) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');\n}\n","// @flow\n/* eslint-disable */\n\nexport const SEED = 5381;\n\n// When we have separate strings it's useful to run a progressive\n// version of djb2 where we pretend that we're still looping over\n// the same string\nexport const phash = (h: number, x: string): number => {\n  let i = x.length;\n\n  while (i) {\n    h = (h * 33) ^ x.charCodeAt(--i);\n  }\n\n  return h;\n};\n\n// This is a djb2 hashing function\nexport const hash = (x: string): number => {\n  return phash(SEED, x);\n};\n","// @flow\nimport isFunction from './isFunction';\nimport isStyledComponent from './isStyledComponent';\nimport type { RuleSet } from '../types';\n\nexport default function isStaticRules(rules: RuleSet): boolean {\n  for (let i = 0; i < rules.length; i += 1) {\n    const rule = rules[i];\n\n    if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  return true;\n}\n","// @flow\nimport { SC_VERSION } from '../constants';\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport generateName from '../utils/generateAlphabeticName';\nimport { hash, phash } from '../utils/hash';\nimport isStaticRules from '../utils/isStaticRules';\n\nconst SEED = hash(SC_VERSION);\n\n/**\n * ComponentStyle is all the CSS-specific stuff, not the React-specific stuff.\n */\nexport default class ComponentStyle {\n  baseHash: number;\n\n  baseStyle: ?ComponentStyle;\n\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  staticRulesId: string;\n\n  constructor(rules: RuleSet, componentId: string, baseStyle?: ComponentStyle) {\n    this.rules = rules;\n    this.staticRulesId = '';\n    this.isStatic = process.env.NODE_ENV === 'production' &&\n      (baseStyle === undefined || baseStyle.isStatic) &&\n      isStaticRules(rules);\n    this.componentId = componentId;\n\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    this.baseHash = phash(SEED, componentId);\n\n    this.baseStyle = baseStyle;\n\n    // NOTE: This registers the componentId, which ensures a consistent order\n    // for this component's styles compared to others\n    StyleSheet.registerId(componentId);\n  }\n\n  /*\n   * Flattens a rule set into valid CSS\n   * Hashes it, wraps the whole chunk in a .hash1234 {}\n   * Returns the hash to be injected on render()\n   * */\n  generateAndInjectStyles(executionContext: Object, styleSheet: StyleSheet, stylis: Stringifier) {\n    const { componentId } = this;\n\n    const names = [];\n\n    if (this.baseStyle) {\n      names.push(this.baseStyle.generateAndInjectStyles(executionContext, styleSheet, stylis));\n    }\n\n    // force dynamic classnames if user-supplied stylis plugins are in use\n    if (this.isStatic && !stylis.hash) {\n      if (this.staticRulesId && styleSheet.hasNameForId(componentId, this.staticRulesId)) {\n        names.push(this.staticRulesId);\n      } else {\n        const cssStatic = flatten(this.rules, executionContext, styleSheet, stylis).join('');\n        const name = generateName(phash(this.baseHash, cssStatic) >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssStaticFormatted = stylis(cssStatic, `.${name}`, undefined, componentId);\n\n          styleSheet.insertRules(componentId, name, cssStaticFormatted);\n        }\n\n        names.push(name);\n        this.staticRulesId = name;\n      }\n    } else {\n      const { length } = this.rules;\n      let dynamicHash = phash(this.baseHash, stylis.hash);\n      let css = '';\n\n      for (let i = 0; i < length; i++) {\n        const partRule = this.rules[i];\n\n        if (typeof partRule === 'string') {\n          css += partRule;\n\n          if (process.env.NODE_ENV !== 'production') dynamicHash = phash(dynamicHash, partRule + i);\n        } else if (partRule) {\n          const partChunk = flatten(partRule, executionContext, styleSheet, stylis);\n          const partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;\n          dynamicHash = phash(dynamicHash, partString + i);\n          css += partString;\n        }\n      }\n\n      if (css) {\n        const name = generateName(dynamicHash >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssFormatted = stylis(css, `.${name}`, undefined, componentId);\n          styleSheet.insertRules(componentId, name, cssFormatted);\n        }\n\n        names.push(name);\n      }\n    }\n\n    return names.join(' ');\n  }\n}\n","import Stylis from '@emotion/stylis';\nimport { type Stringifier } from '../types';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from './empties';\nimport throwStyledError from './error';\nimport { phash, SEED } from './hash';\nimport insertRulePlugin from './stylisPluginInsertRule';\n\nconst COMMENT_REGEX = /^\\s*\\/\\/.*$/gm;\nconst COMPLEX_SELECTOR_PREFIX = [':', '[', '.', '#'];\n\ntype StylisInstanceConstructorArgs = {\n  options?: Object,\n  plugins?: Array<Function>,\n};\n\nexport default function createStylisInstance({\n  options = EMPTY_OBJECT,\n  plugins = EMPTY_ARRAY,\n}: StylisInstanceConstructorArgs = EMPTY_OBJECT) {\n  const stylis = new Stylis(options);\n\n  // Wrap `insertRulePlugin to build a list of rules,\n  // and then make our own plugin to return the rules. This\n  // makes it easier to hook into the existing SSR architecture\n\n  let parsingRules = [];\n\n  // eslint-disable-next-line consistent-return\n  const returnRulesPlugin = context => {\n    if (context === -2) {\n      const parsedRules = parsingRules;\n      parsingRules = [];\n      return parsedRules;\n    }\n  };\n\n  const parseRulesPlugin = insertRulePlugin(rule => {\n    parsingRules.push(rule);\n  });\n\n  let _componentId: string;\n  let _selector: string;\n  let _selectorRegexp: RegExp;\n  let _consecutiveSelfRefRegExp: RegExp;\n\n  const selfReferenceReplacer = (match, offset, string) => {\n    if (\n      // do not replace the first occurrence if it is complex (has a modifier)\n      (offset === 0 ? COMPLEX_SELECTOR_PREFIX.indexOf(string[_selector.length]) === -1 : true) &&\n      // no consecutive self refs (.b.b); that is a precedence boost and treated differently\n      !string.match(_consecutiveSelfRefRegExp)\n    ) {\n      return `.${_componentId}`;\n    }\n\n    return match;\n  };\n\n  /**\n   * When writing a style like\n   *\n   * & + & {\n   *   color: red;\n   * }\n   *\n   * The second ampersand should be a reference to the static component class. stylis\n   * has no knowledge of static class so we have to intelligently replace the base selector.\n   *\n   * https://github.com/thysultan/stylis.js/tree/v3.5.4#plugins <- more info about the context phase values\n   * \"2\" means this plugin is taking effect at the very end after all other processing is complete\n   */\n  const selfReferenceReplacementPlugin = (context, _, selectors) => {\n    if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {\n      // eslint-disable-next-line no-param-reassign\n      selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);\n    }\n  };\n\n  stylis.use([...plugins, selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);\n\n  function stringifyRules(css, selector, prefix, componentId = '&'): Stringifier {\n    const flatCSS = css.replace(COMMENT_REGEX, '');\n    const cssStr = selector && prefix ? `${prefix} ${selector} { ${flatCSS} }` : flatCSS;\n\n    // stylis has no concept of state to be passed to plugins\n    // but since JS is single-threaded, we can rely on that to ensure\n    // these properties stay in sync with the current stylis run\n    _componentId = componentId;\n    _selector = selector;\n    _selectorRegexp = new RegExp(`\\\\${_selector}\\\\b`, 'g');\n    _consecutiveSelfRefRegExp = new RegExp(`(\\\\${_selector}\\\\b){2,}`);\n\n    return stylis(prefix || !selector ? '' : selector, cssStr);\n  }\n\n  stringifyRules.hash = plugins.length\n    ? plugins\n        .reduce((acc, plugin) => {\n          if (!plugin.name) {\n            throwStyledError(15);\n          }\n\n          return phash(acc, plugin.name);\n        }, SEED)\n        .toString()\n    : '';\n\n  return stringifyRules;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2016 Sultan Tarimo\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* eslint-disable */\n\nexport default function(insertRule) {\n  const delimiter = '/*|*/';\n  const needle = `${delimiter}}`;\n\n  function toSheet(block) {\n    if (block) {\n      try {\n        insertRule(`${block}}`);\n      } catch (e) {}\n    }\n  }\n\n  return function ruleSheet(\n    context,\n    content,\n    selectors,\n    parents,\n    line,\n    column,\n    length,\n    ns,\n    depth,\n    at\n  ) {\n    switch (context) {\n      // property\n      case 1:\n        // @import\n        if (depth === 0 && content.charCodeAt(0) === 64) return insertRule(`${content};`), '';\n        break;\n      // selector\n      case 2:\n        if (ns === 0) return content + delimiter;\n        break;\n      // at-rule\n      case 3:\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            return insertRule(selectors[0] + content), '';\n          default:\n            return content + (at === 0 ? delimiter : '');\n        }\n      case -2:\n        content.split(needle).forEach(toSheet);\n    }\n  };\n}\n","// @flow\nimport React, { type Context, type Node, useContext, useEffect, useMemo, useState } from 'react';\nimport shallowequal from 'shallowequal';\nimport StyleSheet from '../sheet';\nimport type { Stringifier } from '../types';\nimport createStylisInstance from '../utils/stylis';\n\ntype Props = {\n  children?: Node,\n  disableCSSOMInjection?: boolean,\n  disableVendorPrefixes?: boolean,\n  sheet?: StyleSheet,\n  stylisPlugins?: Array<Function>,\n  target?: HTMLElement,\n};\n\nexport const StyleSheetContext: Context<StyleSheet | void> = React.createContext();\nexport const StyleSheetConsumer = StyleSheetContext.Consumer;\nexport const StylisContext: Context<Stringifier | void> = React.createContext();\nexport const StylisConsumer = StylisContext.Consumer;\n\nexport const masterSheet: StyleSheet = new StyleSheet();\nexport const masterStylis: Stringifier = createStylisInstance();\n\nexport function useStyleSheet(): StyleSheet {\n  return useContext(StyleSheetContext) || masterSheet;\n}\n\nexport function useStylis(): Stringifier {\n  return useContext(StylisContext) || masterStylis;\n}\n\nexport default function StyleSheetManager(props: Props) {\n  const [plugins, setPlugins] = useState(props.stylisPlugins);\n  const contextStyleSheet = useStyleSheet();\n\n  const styleSheet = useMemo(() => {\n    let sheet = contextStyleSheet;\n\n    if (props.sheet) {\n      // eslint-disable-next-line prefer-destructuring\n      sheet = props.sheet;\n    } else if (props.target) {\n      sheet = sheet.reconstructWithOptions({ target: props.target }, false);\n    }\n\n    if (props.disableCSSOMInjection) {\n      sheet = sheet.reconstructWithOptions({ useCSSOMInjection: false });\n    }\n\n    return sheet;\n  }, [props.disableCSSOMInjection, props.sheet, props.target]);\n\n  const stylis = useMemo(\n    () =>\n      createStylisInstance({\n        options: { prefix: !props.disableVendorPrefixes },\n        plugins,\n      }),\n    [props.disableVendorPrefixes, plugins]\n  );\n\n  useEffect(() => {\n    if (!shallowequal(plugins, props.stylisPlugins)) setPlugins(props.stylisPlugins);\n  }, [props.stylisPlugins]);\n\n  return (\n    <StyleSheetContext.Provider value={styleSheet}>\n      <StylisContext.Provider value={stylis}>\n        {process.env.NODE_ENV !== 'production'\n          ? React.Children.only(props.children)\n          : props.children}\n      </StylisContext.Provider>\n    </StyleSheetContext.Provider>\n  );\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport { type Stringifier } from '../types';\nimport throwStyledError from '../utils/error';\nimport { masterStylis } from './StyleSheetManager';\n\nexport default class Keyframes {\n  id: string;\n\n  name: string;\n\n  rules: string;\n\n  constructor(name: string, rules: string) {\n    this.name = name;\n    this.id = `sc-keyframes-${name}`;\n    this.rules = rules;\n  }\n\n  inject = (styleSheet: StyleSheet, stylisInstance: Stringifier = masterStylis) => {\n    const resolvedName = this.name + stylisInstance.hash;\n\n    if (!styleSheet.hasNameForId(this.id, resolvedName)) {\n      styleSheet.insertRules(\n        this.id,\n        resolvedName,\n        stylisInstance(this.rules, resolvedName, '@keyframes')\n      );\n    }\n  };\n\n  toString = () => {\n    return throwStyledError(12, String(this.name));\n  };\n\n  getName(stylisInstance: Stringifier = masterStylis) {\n    return this.name + stylisInstance.hash;\n  }\n}\n","// @flow\n\n/**\n * inlined version of\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js\n */\n\nconst uppercaseCheck = /([A-Z])/;\nconst uppercasePattern = /([A-Z])/g;\nconst msPattern = /^ms-/;\nconst prefixAndLowerCase = (char: string): string => `-${char.toLowerCase()}`;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nexport default function hyphenateStyleName(string: string): string {\n  return uppercaseCheck.test(string)\n  ? string\n    .replace(uppercasePattern, prefixAndLowerCase)\n    .replace(msPattern, '-ms-')\n  : string;\n}\n","// @flow\nimport { isElement } from 'react-is';\nimport getComponentName from './getComponentName';\nimport isFunction from './isFunction';\nimport isStatelessFunction from './isStatelessFunction';\nimport isPlainObject from './isPlainObject';\nimport isStyledComponent from './isStyledComponent';\nimport Keyframes from '../models/Keyframes';\nimport hyphenate from './hyphenateStyleName';\nimport addUnitIfNeeded from './addUnitIfNeeded';\nimport { type Stringifier } from '../types';\n\n/**\n * It's falsish not falsy because 0 is allowed.\n */\nconst isFalsish = chunk => chunk === undefined || chunk === null || chunk === false || chunk === '';\n\nexport const objToCssArray = (obj: Object, prevKey?: string): Array<string | Function> => {\n  const rules = [];\n\n  for (const key in obj) {\n    if (!obj.hasOwnProperty(key) || isFalsish(obj[key])) continue;\n\n    if ((Array.isArray(obj[key]) && obj[key].isCss) || isFunction(obj[key])) {\n      rules.push(`${hyphenate(key)}:`, obj[key], ';');\n    } else if (isPlainObject(obj[key])) {\n      rules.push(...objToCssArray(obj[key], key));\n    } else {\n      rules.push(`${hyphenate(key)}: ${addUnitIfNeeded(key, obj[key])};`);\n    }\n  }\n\n  return prevKey ? [`${prevKey} {`, ...rules, '}'] : rules;\n};\n\nexport default function flatten(\n  chunk: any,\n  executionContext: ?Object,\n  styleSheet: ?Object,\n  stylisInstance: ?Stringifier\n): any {\n  if (Array.isArray(chunk)) {\n    const ruleSet = [];\n\n    for (let i = 0, len = chunk.length, result; i < len; i += 1) {\n      result = flatten(chunk[i], executionContext, styleSheet, stylisInstance);\n\n      if (result === '') continue;\n      else if (Array.isArray(result)) ruleSet.push(...result);\n      else ruleSet.push(result);\n    }\n\n    return ruleSet;\n  }\n\n  if (isFalsish(chunk)) {\n    return '';\n  }\n\n  /* Handle other components */\n  if (isStyledComponent(chunk)) {\n    return `.${chunk.styledComponentId}`;\n  }\n\n  /* Either execute or defer the function */\n  if (isFunction(chunk)) {\n    if (isStatelessFunction(chunk) && executionContext) {\n      const result = chunk(executionContext);\n\n      if (process.env.NODE_ENV !== 'production' && isElement(result)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `${getComponentName(\n            chunk\n          )} is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.`\n        );\n      }\n\n      return flatten(result, executionContext, styleSheet, stylisInstance);\n    } else return chunk;\n  }\n\n  if (chunk instanceof Keyframes) {\n    if (styleSheet) {\n      chunk.inject(styleSheet, stylisInstance);\n      return chunk.getName(stylisInstance);\n    } else return chunk;\n  }\n\n  /* Handle objects */\n  return isPlainObject(chunk) ? objToCssArray(chunk) : chunk.toString();\n}\n","// @flow\nexport default function isStatelessFunction(test: any): boolean {\n  return (\n    typeof test === 'function'\n    && !(\n      test.prototype\n      && test.prototype.isReactComponent\n    )\n  );\n}\n","// @flow\nimport unitless from '@emotion/unitless';\n\n// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js\nexport default function addUnitIfNeeded(name: string, value: any): any {\n  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133\n  // $FlowFixMe\n  if (value == null || typeof value === 'boolean' || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'number' && value !== 0 && !(name in unitless)) {\n    return `${value}px`; // Presumes implicit 'px' suffix for unitless numbers\n  }\n\n  return String(value).trim();\n}\n","// @flow\nimport interleave from '../utils/interleave';\nimport isPlainObject from '../utils/isPlainObject';\nimport { EMPTY_ARRAY } from '../utils/empties';\nimport isFunction from '../utils/isFunction';\nimport flatten from '../utils/flatten';\nimport type { Interpolation, RuleSet, Styles } from '../types';\n\n/**\n * Used when flattening object styles to determine if we should\n * expand an array of styles.\n */\nconst addTag = arg => {\n  if (Array.isArray(arg)) {\n    // eslint-disable-next-line no-param-reassign\n    arg.isCss = true;\n  }\n  return arg;\n};\n\nexport default function css(styles: Styles, ...interpolations: Array<Interpolation>): RuleSet {\n  if (isFunction(styles) || isPlainObject(styles)) {\n    // $FlowFixMe\n    return addTag(flatten(interleave(EMPTY_ARRAY, [styles, ...interpolations])));\n  }\n\n  if (interpolations.length === 0 && styles.length === 1 && typeof styles[0] === 'string') {\n    // $FlowFixMe\n    return styles;\n  }\n\n  // $FlowFixMe\n  return addTag(flatten(interleave(styles, interpolations)));\n}\n","// @flow\n\nimport { useRef } from 'react';\n\nconst invalidHookCallRe = /invalid hook call/i;\nconst seen = new Set();\n\nexport const checkDynamicCreation = (displayName: string, componentId?: string) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const parsedIdString = componentId ? ` with the id of \"${componentId}\"` : '';\n    const message =\n      `The component ${displayName}${parsedIdString} has been created dynamically.\\n` +\n      \"You may see this warning because you've called styled inside another component.\\n\" +\n      'To resolve this only create new StyledComponents outside of any render method and function component.';\n\n    // If a hook is called outside of a component:\n    // React 17 and earlier throw an error\n    // React 18 and above use console.error\n\n    const originalConsoleError = console.error // eslint-disable-line no-console\n    try {\n      let didNotCallInvalidHook = true\n      /* $FlowIgnore[cannot-write] */\n      console.error = (consoleErrorMessage, ...consoleErrorArgs) => { // eslint-disable-line no-console\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n        if (invalidHookCallRe.test(consoleErrorMessage)) {\n          didNotCallInvalidHook = false\n          // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n          seen.delete(message);\n        } else {\n          originalConsoleError(consoleErrorMessage, ...consoleErrorArgs);\n        }\n      }\n      // We purposefully call `useRef` outside of a component and expect it to throw\n      // If it doesn't, then we're inside another component.\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRef();\n\n      if (didNotCallInvalidHook && !seen.has(message)) {\n        // eslint-disable-next-line no-console\n        console.warn(message);\n        seen.add(message);\n      }\n    } catch (error) {\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n      if (invalidHookCallRe.test(error.message)) {\n        // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n        seen.delete(message);\n      }\n    } finally {\n      /* $FlowIgnore[cannot-write] */\n      console.error = originalConsoleError; // eslint-disable-line no-console\n    }\n  }\n};\n","// @flow\nimport { EMPTY_OBJECT } from './empties';\n\ntype Props = {\n  theme?: any,\n};\n\nexport default (props: Props, providedTheme: any, defaultProps: any = EMPTY_OBJECT) => {\n  return (props.theme !== defaultProps.theme && props.theme) || providedTheme || defaultProps.theme;\n};\n","// @flow\n\n// Source: https://www.w3.org/TR/cssom-1/#serialize-an-identifier\n// Control characters and non-letter first symbols are not supported\nconst escapeRegex = /[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g;\n\nconst dashesAtEnds = /(^-|-$)/g;\n\n/**\n * TODO: Explore using CSS.escape when it becomes more available\n * in evergreen browsers.\n */\nexport default function escape(str: string): string {\n  return (\n    str\n      // Replace all possible CSS selectors\n      .replace(escapeRegex, '-')\n\n      // Remove extraneous hyphens at the start and end\n      .replace(dashesAtEnds, '')\n  );\n}\n","// @flow\n/* eslint-disable */\nimport generateAlphabeticName from './generateAlphabeticName';\nimport { hash } from './hash';\n\nexport default (str: string): string => {\n  return generateAlphabeticName(hash(str) >>> 0);\n};\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function isTag(target: $PropertyType<IStyledComponent, 'target'>): boolean %checks {\n  return (\n    typeof target === 'string' &&\n    (process.env.NODE_ENV !== 'production'\n      ? target.charAt(0) === target.charAt(0).toLowerCase()\n      : true)\n  );\n}\n","/* eslint-disable */\n/**\n  mixin-deep; https://github.com/jonschlinkert/mixin-deep\n  Inlined such that it will be consistently transpiled to an IE-compatible syntax.\n\n  The MIT License (MIT)\n\n  Copyright (c) 2014-present, Jon Schlinkert.\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nconst isObject = val => {\n  return (\n    typeof val === 'function' || (typeof val === 'object' && val !== null && !Array.isArray(val))\n  );\n};\n\nconst isValidKey = key => {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\nfunction mixin(target, val, key) {\n  const obj = target[key];\n  if (isObject(val) && isObject(obj)) {\n    mixinDeep(obj, val);\n  } else {\n    target[key] = val;\n  }\n}\n\nexport default function mixinDeep(target, ...rest) {\n  for (const obj of rest) {\n    if (isObject(obj)) {\n      for (const key in obj) {\n        if (isValidKey(key)) {\n          mixin(target, obj[key], key);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","// @flow\nimport React, { useContext, useMemo, type Element, type Context } from 'react';\nimport throwStyledError from '../utils/error';\nimport isFunction from '../utils/isFunction';\n\nexport type Theme = { [key: string]: mixed };\n\ntype ThemeArgument = Theme | ((outerTheme?: Theme) => Theme);\n\ntype Props = {\n  children?: Element<any>,\n  theme: ThemeArgument,\n};\n\nexport const ThemeContext: Context<Theme | void> = React.createContext();\n\nexport const ThemeConsumer = ThemeContext.Consumer;\n\nfunction mergeTheme(theme: ThemeArgument, outerTheme?: Theme): Theme {\n  if (!theme) {\n    return throwStyledError(14);\n  }\n\n  if (isFunction(theme)) {\n    const mergedTheme = theme(outerTheme);\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      (mergedTheme === null || Array.isArray(mergedTheme) || typeof mergedTheme !== 'object')\n    ) {\n      return throwStyledError(7);\n    }\n\n    return mergedTheme;\n  }\n\n  if (Array.isArray(theme) || typeof theme !== 'object') {\n    return throwStyledError(8);\n  }\n\n  return outerTheme ? { ...outerTheme, ...theme } : theme;\n}\n\n/**\n * Provide a theme to an entire react component tree via context\n */\nexport default function ThemeProvider(props: Props) {\n  const outerTheme = useContext(ThemeContext);\n  const themeContext = useMemo(() => mergeTheme(props.theme, outerTheme), [\n    props.theme,\n    outerTheme,\n  ]);\n\n  if (!props.children) {\n    return null;\n  }\n\n  return <ThemeContext.Provider value={themeContext}>{props.children}</ThemeContext.Provider>;\n}\n","// @flow\nimport validAttr from '@emotion/is-prop-valid';\nimport hoist from 'hoist-non-react-statics';\nimport React, { createElement, type Ref, useContext, useDebugValue } from 'react';\nimport { SC_VERSION } from '../constants';\nimport type {\n  Attrs,\n  IStyledComponent,\n  IStyledStatics,\n  RuleSet,\n  ShouldForwardProp,\n  Target,\n} from '../types';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport createWarnTooManyClasses from '../utils/createWarnTooManyClasses';\nimport determineTheme from '../utils/determineTheme';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../utils/empties';\nimport escape from '../utils/escape';\nimport generateComponentId from '../utils/generateComponentId';\nimport generateDisplayName from '../utils/generateDisplayName';\nimport getComponentName from '../utils/getComponentName';\nimport isFunction from '../utils/isFunction';\nimport isStyledComponent from '../utils/isStyledComponent';\nimport isTag from '../utils/isTag';\nimport joinStrings from '../utils/joinStrings';\nimport merge from '../utils/mixinDeep';\nimport ComponentStyle from './ComponentStyle';\nimport { useStyleSheet, useStylis } from './StyleSheetManager';\nimport { ThemeContext } from './ThemeProvider';\n\nconst identifiers = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(displayName?: string, parentComponentId?: string) {\n  const name = typeof displayName !== 'string' ? 'sc' : escape(displayName);\n  // Ensure that no displayName can lead to duplicate componentIds\n  identifiers[name] = (identifiers[name] || 0) + 1;\n\n  const componentId = `${name}-${generateComponentId(\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    SC_VERSION + name + identifiers[name]\n  )}`;\n\n  return parentComponentId ? `${parentComponentId}-${componentId}` : componentId;\n}\n\nfunction useResolvedAttrs<Config>(theme: any = EMPTY_OBJECT, props: Config, attrs: Attrs) {\n  // NOTE: can't memoize this\n  // returns [context, resolvedAttrs]\n  // where resolvedAttrs is only the things injected by the attrs themselves\n  const context = { ...props, theme };\n  const resolvedAttrs = {};\n\n  attrs.forEach(attrDef => {\n    let resolvedAttrDef = attrDef;\n    let key;\n\n    if (isFunction(resolvedAttrDef)) {\n      resolvedAttrDef = resolvedAttrDef(context);\n    }\n\n    /* eslint-disable guard-for-in */\n    for (key in resolvedAttrDef) {\n      context[key] = resolvedAttrs[key] =\n        key === 'className'\n          ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key])\n          : resolvedAttrDef[key];\n    }\n    /* eslint-enable guard-for-in */\n  });\n\n  return [context, resolvedAttrs];\n}\n\nfunction useInjectedStyle<T>(\n  componentStyle: ComponentStyle,\n  isStatic: boolean,\n  resolvedAttrs: T,\n  warnTooManyClasses?: $Call<typeof createWarnTooManyClasses, string, string>\n) {\n  const styleSheet = useStyleSheet();\n  const stylis = useStylis();\n\n  const className = isStatic\n    ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis)\n    : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  if (process.env.NODE_ENV !== 'production') useDebugValue(className);\n\n  if (process.env.NODE_ENV !== 'production' && !isStatic && warnTooManyClasses) {\n    warnTooManyClasses(className);\n  }\n\n  return className;\n}\n\nfunction useStyledComponentImpl(\n  forwardedComponent: IStyledComponent,\n  props: Object,\n  forwardedRef: Ref<any>,\n  isStatic: boolean\n) {\n  const {\n    attrs: componentAttrs,\n    componentStyle,\n    defaultProps,\n    foldedComponentIds,\n    shouldForwardProp,\n    styledComponentId,\n    target,\n  } = forwardedComponent;\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  if (process.env.NODE_ENV !== 'production') useDebugValue(styledComponentId);\n\n  // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,\n  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it\n  // should be an immutable value, but behave for now.\n  const theme = determineTheme(props, useContext(ThemeContext), defaultProps);\n\n  const [context, attrs] = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs);\n\n  const generatedClassName = useInjectedStyle(\n    componentStyle,\n    isStatic,\n    context,\n    process.env.NODE_ENV !== 'production' ? forwardedComponent.warnTooManyClasses : undefined\n  );\n\n  const refToForward = forwardedRef;\n\n  const elementToBeCreated: Target = attrs.$as || props.$as || attrs.as || props.as || target;\n\n  const isTargetTag = isTag(elementToBeCreated);\n  const computedProps = attrs !== props ? { ...props, ...attrs } : props;\n  const propsForElement = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in computedProps) {\n    if (key[0] === '$' || key === 'as') continue;\n    else if (key === 'forwardedAs') {\n      propsForElement.as = computedProps[key];\n    } else if (\n      shouldForwardProp\n        ? shouldForwardProp(key, validAttr, elementToBeCreated)\n        : isTargetTag\n        ? validAttr(key)\n        : true\n    ) {\n      // Don't pass through non HTML tags through to HTML elements\n      propsForElement[key] = computedProps[key];\n    }\n  }\n\n  if (props.style && attrs.style !== props.style) {\n    propsForElement.style = { ...props.style, ...attrs.style };\n  }\n\n  propsForElement.className = Array.prototype\n    .concat(\n      foldedComponentIds,\n      styledComponentId,\n      generatedClassName !== styledComponentId ? generatedClassName : null,\n      props.className,\n      attrs.className\n    )\n    .filter(Boolean)\n    .join(' ');\n\n  propsForElement.ref = refToForward;\n\n  return createElement(elementToBeCreated, propsForElement);\n}\n\nexport default function createStyledComponent(\n  target: $PropertyType<IStyledComponent, 'target'>,\n  options: {\n    attrs?: Attrs,\n    componentId: string,\n    displayName?: string,\n    parentComponentId?: string,\n    shouldForwardProp?: ShouldForwardProp,\n  },\n  rules: RuleSet\n) {\n  const isTargetStyledComp = isStyledComponent(target);\n  const isCompositeComponent = !isTag(target);\n\n  const {\n    attrs = EMPTY_ARRAY,\n    componentId = generateId(options.displayName, options.parentComponentId),\n    displayName = generateDisplayName(target),\n  } = options;\n\n  const styledComponentId =\n    options.displayName && options.componentId\n      ? `${escape(options.displayName)}-${options.componentId}`\n      : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  const finalAttrs =\n    isTargetStyledComp && ((target: any): IStyledComponent).attrs\n      ? Array.prototype.concat(((target: any): IStyledComponent).attrs, attrs).filter(Boolean)\n      : attrs;\n\n  // eslint-disable-next-line prefer-destructuring\n  let shouldForwardProp = options.shouldForwardProp;\n\n  if (isTargetStyledComp && target.shouldForwardProp) {\n    if (options.shouldForwardProp) {\n      // compose nested shouldForwardProp calls\n      shouldForwardProp = (prop, filterFn, elementToBeCreated) =>\n        ((((target: any): IStyledComponent).shouldForwardProp: any): ShouldForwardProp)(\n          prop,\n          filterFn,\n          elementToBeCreated\n        ) &&\n        ((options.shouldForwardProp: any): ShouldForwardProp)(prop, filterFn, elementToBeCreated);\n    } else {\n      // eslint-disable-next-line prefer-destructuring\n      shouldForwardProp = ((target: any): IStyledComponent).shouldForwardProp;\n    }\n  }\n\n  const componentStyle = new ComponentStyle(\n    rules,\n    styledComponentId,\n    isTargetStyledComp ? ((target: Object).componentStyle: ComponentStyle) : undefined\n  );\n\n  // statically styled-components don't need to build an execution context object,\n  // and shouldn't be increasing the number of class names\n  const isStatic = componentStyle.isStatic && attrs.length === 0;\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  let WrappedStyledComponent: IStyledComponent;\n\n  const forwardRef = (props, ref) =>\n    // eslint-disable-next-line\n    useStyledComponentImpl(WrappedStyledComponent, props, ref, isStatic);\n\n  forwardRef.displayName = displayName;\n\n  WrappedStyledComponent = ((React.forwardRef(forwardRef): any): IStyledComponent);\n  WrappedStyledComponent.attrs = finalAttrs;\n  WrappedStyledComponent.componentStyle = componentStyle;\n  WrappedStyledComponent.displayName = displayName;\n  WrappedStyledComponent.shouldForwardProp = shouldForwardProp;\n\n  // this static is used to preserve the cascade of static classes for component selector\n  // purposes; this is especially important with usage of the css prop\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp\n    ? Array.prototype.concat(\n        ((target: any): IStyledComponent).foldedComponentIds,\n        ((target: any): IStyledComponent).styledComponentId\n      )\n    : EMPTY_ARRAY;\n\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  WrappedStyledComponent.target = isTargetStyledComp\n    ? ((target: any): IStyledComponent).target\n    : target;\n\n  WrappedStyledComponent.withComponent = function withComponent(tag: Target) {\n    const { componentId: previousComponentId, ...optionsToCopy } = options;\n\n    const newComponentId =\n      previousComponentId &&\n      `${previousComponentId}-${isTag(tag) ? tag : escape(getComponentName(tag))}`;\n\n    const newOptions = {\n      ...optionsToCopy,\n      attrs: finalAttrs,\n      componentId: newComponentId,\n    };\n\n    return createStyledComponent(tag, newOptions, rules);\n  };\n\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get() {\n      return this._foldedDefaultProps;\n    },\n\n    set(obj) {\n      this._foldedDefaultProps = isTargetStyledComp\n        ? merge({}, ((target: any): IStyledComponent).defaultProps, obj)\n        : obj;\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(displayName, styledComponentId);\n\n    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(\n      displayName,\n      styledComponentId\n    );\n  }\n\n  WrappedStyledComponent.toString = () => `.${WrappedStyledComponent.styledComponentId}`;\n\n  if (isCompositeComponent) {\n    hoist<\n      IStyledStatics,\n      $PropertyType<IStyledComponent, 'target'>,\n      { [key: $Keys<IStyledStatics>]: true }\n    >(WrappedStyledComponent, ((target: any): $PropertyType<IStyledComponent, 'target'>), {\n      // all SC-specific things should not be hoisted\n      attrs: true,\n      componentStyle: true,\n      displayName: true,\n      foldedComponentIds: true,\n      shouldForwardProp: true,\n      styledComponentId: true,\n      target: true,\n      withComponent: true,\n    });\n  }\n\n  return WrappedStyledComponent;\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\nimport getComponentName from './getComponentName';\nimport isTag from './isTag';\n\nexport default function generateDisplayName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return isTag(target) ? `styled.${target}` : `Styled(${getComponentName(target)})`;\n}\n","/**\n * Convenience function for joining strings to form className chains\n */\nexport default function joinStrings(a: ?String, b: ?String): ?String {\n  return a && b ? `${a} ${b}` : a || b;\n}\n","// @flow\n// Thanks to ReactDOMFactories for this handy list!\n\nexport default [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'textPath',\n  'tspan',\n];\n","// @flow\nimport constructWithOptions from './constructWithOptions';\nimport StyledComponent from '../models/StyledComponent';\nimport domElements from '../utils/domElements';\n\nimport type { Target } from '../types';\n\nconst styled = (tag: Target) => constructWithOptions(StyledComponent, tag);\n\n// Shorthands for all valid HTML Elements\ndomElements.forEach(domElement => {\n  styled[domElement] = styled(domElement);\n});\n\nexport default styled;\n","// @flow\nimport { isValidElementType } from 'react-is';\nimport css from './css';\nimport throwStyledError from '../utils/error';\nimport { EMPTY_OBJECT } from '../utils/empties';\n\nimport type { Target } from '../types';\n\nexport default function constructWithOptions(\n  componentConstructor: Function,\n  tag: Target,\n  options: Object = EMPTY_OBJECT\n) {\n  if (!isValidElementType(tag)) {\n    return throwStyledError(1, String(tag));\n  }\n\n  /* This is callable directly as a template function */\n  // $FlowFixMe: Not typed to avoid destructuring arguments\n  const templateFunction = (...args) => componentConstructor(tag, options, css(...args));\n\n  /* If config methods are called, wrap up a new template function and merge options */\n  templateFunction.withConfig = config =>\n    constructWithOptions(componentConstructor, tag, { ...options, ...config });\n\n  /* Modify/inject new props at runtime */\n  templateFunction.attrs = attrs =>\n    constructWithOptions(componentConstructor, tag, {\n      ...options,\n      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean),\n    });\n\n  return templateFunction;\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport isStaticRules from '../utils/isStaticRules';\n\nexport default class GlobalStyle {\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  constructor(rules: RuleSet, componentId: string) {\n    this.rules = rules;\n    this.componentId = componentId;\n    this.isStatic = isStaticRules(rules);\n\n    // pre-register the first instance to ensure global styles\n    // load before component ones\n    StyleSheet.registerId(this.componentId + 1);\n  }\n\n  createStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    const flatCSS = flatten(this.rules, executionContext, styleSheet, stylis);\n    const css = stylis(flatCSS.join(''), '');\n    const id = this.componentId + instance;\n\n    // NOTE: We use the id as a name as well, since these rules never change\n    styleSheet.insertRules(id, id, css);\n  }\n\n  removeStyles(instance: number, styleSheet: StyleSheet) {\n    styleSheet.clearRules(this.componentId + instance);\n  }\n\n  renderStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    if (instance > 2) StyleSheet.registerId(this.componentId + instance);\n\n    // NOTE: Remove old styles, then inject the new ones\n    this.removeStyles(instance, styleSheet);\n    this.createStyles(instance, executionContext, styleSheet, stylis);\n  }\n}\n","// @flow\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { IS_BROWSER, SC_ATTR, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport throwStyledError from '../utils/error';\nimport getNonce from '../utils/nonce';\nimport StyleSheet from '../sheet';\nimport StyleSheetManager from './StyleSheetManager';\n\ndeclare var __SERVER__: boolean;\n\nconst CLOSING_TAG_R = /^\\s*<\\/[a-z]/i;\n\nexport default class ServerStyleSheet {\n  isStreaming: boolean;\n\n  instance: StyleSheet;\n\n  sealed: boolean;\n\n  constructor() {\n    this.instance = new StyleSheet({ isServer: true });\n    this.sealed = false;\n  }\n\n  _emitSheetCSS = (): string => {\n    const css = this.instance.toString();\n    if (!css) return '';\n\n    const nonce = getNonce();\n    const attrs = [nonce && `nonce=\"${nonce}\"`, `${SC_ATTR}=\"true\"`, `${SC_ATTR_VERSION}=\"${SC_VERSION}\"`];\n    const htmlAttr = attrs.filter(Boolean).join(' ');\n\n    return `<style ${htmlAttr}>${css}</style>`;\n  };\n\n  collectStyles(children: any) {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return <StyleSheetManager sheet={this.instance}>{children}</StyleSheetManager>;\n  }\n\n  getStyleTags = (): string => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return this._emitSheetCSS();\n  };\n\n  getStyleElement = () => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    const props = {\n      [SC_ATTR]: '',\n      [SC_ATTR_VERSION]: SC_VERSION,\n      dangerouslySetInnerHTML: {\n        __html: this.instance.toString(),\n      },\n    };\n\n    const nonce = getNonce();\n    if (nonce) {\n      (props: any).nonce = nonce;\n    }\n\n    // v4 returned an array for this fn, so we'll do the same for v5 for backward compat\n    return [<style {...props} key=\"sc-0-0\" />];\n  };\n\n  // eslint-disable-next-line consistent-return\n  interleaveWithNodeStream(input: any) {\n    if (!__SERVER__ || IS_BROWSER) {\n      return throwStyledError(3);\n    } else if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    if (__SERVER__) {\n      this.seal();\n\n      // eslint-disable-next-line global-require\n      const { Readable, Transform } = require('stream');\n\n      const readableStream: Readable = input;\n      const { instance: sheet, _emitSheetCSS } = this;\n\n      const transformer = new Transform({\n        transform: function appendStyleChunks(chunk, /* encoding */ _, callback) {\n          // Get the chunk and retrieve the sheet's CSS as an HTML chunk,\n          // then reset its rules so we get only new ones for the next chunk\n          const renderedHtml = chunk.toString();\n          const html = _emitSheetCSS();\n\n          sheet.clearTag();\n\n          // prepend style html to chunk, unless the start of the chunk is a\n          // closing tag in which case append right after that\n          if (CLOSING_TAG_R.test(renderedHtml)) {\n            const endOfClosingTag = renderedHtml.indexOf('>') + 1;\n            const before = renderedHtml.slice(0, endOfClosingTag);\n            const after = renderedHtml.slice(endOfClosingTag);\n\n            this.push(before + html + after);\n          } else {\n            this.push(html + renderedHtml);\n          }\n\n          callback();\n        },\n      });\n\n      readableStream.on('error', err => {\n        // forward the error to the transform stream\n        transformer.emit('error', err);\n      });\n\n      return readableStream.pipe(transformer);\n    }\n  }\n\n  seal = () => {\n    this.sealed = true;\n  };\n}\n","// @flow\n/* Import singletons */\nimport isStyledComponent from './utils/isStyledComponent';\nimport css from './constructors/css';\nimport createGlobalStyle from './constructors/createGlobalStyle';\nimport keyframes from './constructors/keyframes';\nimport ServerStyleSheet from './models/ServerStyleSheet';\nimport { SC_VERSION } from './constants';\n\nimport StyleSheetManager, {\n  StyleSheetContext,\n  StyleSheetConsumer,\n} from './models/StyleSheetManager';\n\n/* Import components */\nimport ThemeProvider, { ThemeContext, ThemeConsumer } from './models/ThemeProvider';\n\n/* Import Higher Order Components */\nimport withTheme from './hoc/withTheme';\n\n/* Import hooks */\nimport useTheme from './hooks/useTheme';\n\ndeclare var __SERVER__: boolean;\n\n/* Warning if you've imported this file on React Native */\nif (\n  process.env.NODE_ENV !== 'production' &&\n  typeof navigator !== 'undefined' &&\n  navigator.product === 'ReactNative'\n) {\n  // eslint-disable-next-line no-console\n  console.warn(\n    \"It looks like you've imported 'styled-components' on React Native.\\n\" +\n      \"Perhaps you're looking to import 'styled-components/native'?\\n\" +\n      'Read more about this at https://www.styled-components.com/docs/basics#react-native'\n  );\n}\n\n/* Warning if there are several instances of styled-components */\nif (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test' && typeof window !== 'undefined') {\n  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;\n\n  if (window['__styled-components-init__'] === 1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      \"It looks like there are several instances of 'styled-components' initialized in this application. \" +\n        'This may cause dynamic styles to not render properly, errors during the rehydration process, ' +\n        'a missing theme prop, and makes your application bigger without good reason.\\n\\n' +\n        'See https://s-c.sh/2BAXzed for more info.'\n    );\n  }\n\n  window['__styled-components-init__'] += 1;\n}\n\n/* Export everything */\nexport * from './secretInternals';\nexport {\n  createGlobalStyle,\n  css,\n  isStyledComponent,\n  keyframes,\n  ServerStyleSheet,\n  StyleSheetConsumer,\n  StyleSheetContext,\n  StyleSheetManager,\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n  useTheme,\n  SC_VERSION as version,\n  withTheme,\n};\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n",null,"import { PropsWithChildren } from \"react\";\nimport Sortable, { Options } from \"sortablejs\";\nimport { MultiDragEvent } from \"./react-sortable\";\nimport { AllMethodNames, ItemInterface, ReactSortableProps } from \"./types\";\n\n/**\n * Removes the `node` from the DOM\n * @param node\n */\nexport function removeNode(node: HTMLElement): void {\n  if (node.parentElement !== null) node.parentElement.removeChild(node);\n}\n\n/**\n * Inserts the `newChild` node at the given index in a parent\n * @param parent The parent HTML Element.\n * @param newChild A HTML eement to add as a child of the parent.\n * @param index index of the parent to place the new child in.\n */\nexport function insertNodeAt(\n  parent: HTMLElement,\n  newChild: HTMLElement,\n  index: number\n): void {\n  const refChild = parent.children[index] || null;\n  parent.insertBefore(newChild, refChild);\n}\n\n// @todo - create a dom handler function for arrays or not at all\n\n/** removes stuff from the dom in a nice order */\n// @todo - do I need parenElement?\nexport function handleDOMChanges<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  removeNodes(customs);\n  insertNodes(customs);\n}\n\nexport function removeNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => removeNode(curr.element));\n}\n\nexport function insertNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => {\n    insertNodeAt(curr.parentElement, curr.element, curr.oldIndex);\n  });\n}\n\nexport function createCustoms<T extends ItemInterface>(\n  evt: MultiDragEvent,\n  list: T[]\n): Normalized<T>[] {\n  const mode = getMode(evt);\n  const parentElement = { parentElement: evt.from };\n  let custom = [];\n  switch (mode) {\n    case \"normal\":\n      /* eslint-disable */\n      const item = {\n        element: evt.item,\n        newIndex: evt.newIndex!,\n        oldIndex: evt.oldIndex!,\n        parentElement: evt.from,\n      };\n      custom = [item];\n      break;\n    case \"swap\":\n      const drag: Input = {\n        element: evt.item,\n        oldIndex: evt.oldIndex!,\n        newIndex: evt.newIndex!,\n        ...parentElement,\n      };\n      const swap: Input = {\n        element: evt.swapItem!,\n        oldIndex: evt.newIndex!,\n        newIndex: evt.oldIndex!,\n        ...parentElement,\n      };\n      custom = [drag, swap];\n      break;\n    case \"multidrag\":\n      custom = evt.oldIndicies.map<Input>((curr, index) => ({\n        element: curr.multiDragElement,\n        oldIndex: curr.index,\n        newIndex: evt.newIndicies[index].index,\n        ...parentElement,\n      }));\n      break;\n  }\n  /* eslint-enable */\n\n  const customs = createNormalized(custom, list);\n  return customs;\n}\n\n/** moves items form old index to new index without breaking anything ideally. */\nexport function handleStateChanges<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const a = handleStateRemove(normalized, list);\n  const b = handleStateAdd(normalized, a);\n  return b;\n}\n\nexport function handleStateRemove<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const newList = [...list];\n  normalized\n    .concat()\n    .reverse()\n    .forEach((curr) => newList.splice(curr.oldIndex, 1));\n  return newList;\n}\n\nexport function handleStateAdd<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[],\n  evt?: Sortable.SortableEvent,\n  clone?: ((currentItem: T, evt: Sortable.SortableEvent) => T) | undefined\n): T[] {\n  const newList = [...list];\n  normalized.forEach((curr) => {\n    const newItem = clone && evt && clone(curr.item, evt);\n    newList.splice(curr.newIndex, 0, newItem || curr.item);\n  });\n  return newList;\n}\n\nexport function getMode(evt: MultiDragEvent): \"multidrag\" | \"swap\" | \"normal\" {\n  if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\n  if (evt.swapItem) return \"swap\";\n  return \"normal\";\n}\n\nexport function createNormalized<T extends ItemInterface>(\n  inputs: Input[],\n  list: T[]\n): Normalized<T>[] {\n  const normalized = inputs\n    .map<Normalized<T>>((curr) => ({ ...curr, item: list[curr.oldIndex] }))\n    .sort((a, b) => a.oldIndex - b.oldIndex);\n  return normalized;\n}\n\nexport interface Input {\n  parentElement: HTMLElement;\n  element: HTMLElement;\n  oldIndex: number;\n  newIndex: number;\n}\n\nexport interface Normalized<T> extends Input {\n  item: T;\n}\n\n/**\n * Removes the following group of properties from `props`,\n * leaving only `Sortable.Options` without any `on` methods.\n * @param props `ReactSortable.Props`\n */\nexport function destructurePropsForOptions<T>(\n  props: PropsWithChildren<ReactSortableProps<T>>\n): Exclude<Options, AllMethodNames> {\n  /* eslint-disable */\n  const {\n    // react sortable props\n    list,\n    setList,\n    children,\n    tag,\n    style,\n    className,\n    clone,\n    // sortable options that have methods we want to overwrite\n    onAdd,\n    onChange,\n    onChoose,\n    onClone,\n    onEnd,\n    onFilter,\n    onRemove,\n    onSort,\n    onStart,\n    onUnchoose,\n    onUpdate,\n    onMove,\n    onSpill,\n    onSelect,\n    onDeselect,\n    ...options\n  } = props;\n  /* eslint-enable */\n  return options;\n}\n\n/**\n * Construct a type with the properties of T except for those in type K.\n * Including this allows for backwards compatibility with earlier versions of TS.\n */\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n","import classNames from \"classnames\";\nimport {\n  Children,\n  cloneElement,\n  Component,\n  createElement,\n  createRef,\n  ReactElement,\n  RefObject,\n} from \"react\";\nimport Sortable, { MoveEvent, Options, SortableEvent } from \"sortablejs\";\nimport invariant from \"tiny-invariant\";\nimport {\n  AllMethodsExceptMove,\n  HandledMethodNames,\n  ItemInterface,\n  ReactSortableProps,\n  Store,\n  UnHandledMethodNames,\n} from \"./types\";\nimport {\n  createCustoms,\n  destructurePropsForOptions,\n  getMode,\n  handleStateAdd,\n  handleStateChanges,\n  handleStateRemove,\n  insertNodes,\n  removeNode,\n  removeNodes,\n} from \"./util\";\n\n/** Holds a global reference for which react element is being dragged */\n// @todo - use context to manage this. How does one use 2 different providers?\nconst store: Store = { dragging: null };\n\nexport class ReactSortable<T extends ItemInterface> extends Component<\n  ReactSortableProps<T>\n> {\n  /* eslint-disable-next-line */\n  static defaultProps: Partial<ReactSortableProps<any>> = {\n    clone: (item) => item,\n  };\n\n  private ref: RefObject<HTMLElement>;\n  constructor(props: ReactSortableProps<T>) {\n    super(props);\n    // @todo forward ref this component\n    this.ref = createRef<HTMLElement>();\n\n    // make all state false because we can't change sortable unless a mouse gesture is made.\n    const newList = props.list.map((item) => ({\n      ...item,\n      chosen: false,\n      selected: false,\n    }));\n\n    props.setList(newList, this.sortable, store);\n    invariant(\n      //@ts-expect-error: Doesn't exist. Will deprecate soon.\n      !props.plugins,\n      `\nPlugins prop is no longer supported.\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\n      `\n    );\n  }\n  componentDidMount(): void {\n    if (this.ref.current === null) return;\n    const newOptions = this.makeOptions();\n    Sortable.create(this.ref.current, newOptions);\n  }\n\n  render(): JSX.Element {\n    const { tag, style, className, id } = this.props;\n    const classicProps = { style, className, id };\n\n    // if no tag, default to a `div` element.\n    const newTag = !tag || tag === null ? \"div\" : tag;\n    return createElement(\n      newTag,\n      {\n        // @todo - find a way (perhaps with the callback) to allow AntD components to work\n        ref: this.ref,\n        ...classicProps,\n      },\n      this.getChildren()\n    );\n  }\n\n  private getChildren() {\n    const {\n      children,\n      dataIdAttr,\n      selectedClass = \"sortable-selected\",\n      chosenClass = \"sortable-chosen\",\n      /* eslint-disable */\n      dragClass = \"sortable-drag\",\n      fallbackClass = \"sortable-falback\",\n      ghostClass = \"sortable-ghost\",\n      swapClass = \"sortable-swap-highlight\",\n      /* eslint-enable */\n      filter = \"sortable-filter\",\n      list,\n    } = this.props;\n\n    // if no children, don't do anything.\n    if (!children || children == null) return null;\n    const dataid = dataIdAttr || \"data-id\";\n    /* eslint-disable-next-line */\n    return Children.map(children as ReactElement<any>[], (child, index) => {\n      const item = list[index];\n      const { className: prevClassName } = child.props;\n\n      // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\n      const filtered = typeof filter === \"string\" && {\n        [filter.replace(\".\", \"\")]: !!item.filtered,\n      };\n\n      const className = classNames(prevClassName, {\n        [selectedClass]: item.selected,\n        [chosenClass]: item.chosen,\n        ...filtered,\n        // [dragClass]: true,\n        // [fallbackClass]: true,\n        // [ghostClass]: true,\n        // [swapClass]: true\n      });\n\n      return cloneElement(child, {\n        [dataid]: child.key,\n        className,\n      });\n    });\n  }\n\n  /** Appends the `sortable` property to this component */\n  private get sortable(): Sortable | null {\n    const el = this.ref.current;\n    if (el === null) return null;\n    const key = Object.keys(el).find((k) => k.includes(\"Sortable\"));\n    if (!key) return null;\n    //@ts-expect-error: fix me.\n    return el[key] as Sortable;\n  }\n\n  /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */\n  makeOptions(): Options {\n    const DOMHandlers: HandledMethodNames[] = [\n      \"onAdd\",\n      \"onChoose\",\n      \"onDeselect\",\n      \"onEnd\",\n      \"onRemove\",\n      \"onSelect\",\n      \"onSpill\",\n      \"onStart\",\n      \"onUnchoose\",\n      \"onUpdate\",\n    ];\n    const NonDOMHandlers: UnHandledMethodNames[] = [\n      \"onChange\",\n      \"onClone\",\n      \"onFilter\",\n      \"onSort\",\n    ];\n    const newOptions: Options = destructurePropsForOptions(this.props);\n    DOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerPropAndDOM(name))\n    );\n    NonDOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerProp(name))\n    );\n\n    /** onMove has 2 arguments and needs to be handled seperately. */\n    const onMove = (evt: MoveEvent, originalEvt: Event) => {\n      const { onMove } = this.props;\n      const defaultValue = evt.willInsertAfter || -1;\n      if (!onMove) return defaultValue;\n      const result = onMove(evt, originalEvt, this.sortable, store);\n      if (typeof result === \"undefined\") return false;\n      return result;\n    };\n\n    return {\n      ...newOptions,\n      onMove,\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */\n  prepareOnHandlerPropAndDOM(\n    evtName: HandledMethodNames\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n      // calls state change\n      //@ts-expect-error: until @types multidrag item is in\n      this[evtName](evt);\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */\n  prepareOnHandlerProp(\n    evtName: Exclude<AllMethodsExceptMove, HandledMethodNames>\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n    };\n  }\n\n  /** Calls the `props.on[Handler]` function */\n  callOnHandlerProp(evt: SortableEvent, evtName: AllMethodsExceptMove): void {\n    const propEvent = this.props[evtName];\n    if (propEvent) propEvent(evt, this.sortable, store);\n  }\n\n  // SORTABLE DOM HANDLING\n\n  onAdd(evt: MultiDragEvent): void {\n    const { list, setList, clone } = this.props;\n    /* eslint-disable-next-line */\n    const otherList = [...store.dragging!.props.list];\n    const customs = createCustoms(evt, otherList);\n    removeNodes(customs);\n    const newList = handleStateAdd(customs, list, evt, clone).map((item) => ({\n      ...item,\n      selected: false,\n    }));\n    setList(newList, this.sortable, store);\n  }\n\n  onRemove(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const mode = getMode(evt);\n    const customs = createCustoms(evt, list);\n    insertNodes(customs);\n\n    let newList = [...list];\n    // remove state if not in clone mode. otherwise, keep.\n    if (evt.pullMode !== \"clone\") newList = handleStateRemove(customs, newList);\n    // if clone, it doesn't really remove. instead it clones in place.\n    // @todo -\n    else {\n      // switch used to get the clone\n      let customClones = customs;\n      switch (mode) {\n        case \"multidrag\":\n          customClones = customs.map((item, index) => ({\n            ...item,\n            element: evt.clones[index],\n          }));\n          break;\n        case \"normal\":\n          customClones = customs.map((item) => ({\n            ...item,\n            element: evt.clone,\n          }));\n          break;\n        case \"swap\":\n        default: {\n          invariant(\n            true,\n            `mode \"${mode}\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"${mode}\" plugin`\n          );\n        }\n      }\n      removeNodes(customClones);\n\n      // replace selected items with cloned items\n      customs.forEach((curr) => {\n        const index = curr.oldIndex;\n        /* eslint-disable-next-line */\n        const newItem = this.props.clone!(curr.item, evt);\n        newList.splice(index, 1, newItem);\n      });\n    }\n\n    // remove item.selected from list\n    newList = newList.map((item) => ({ ...item, selected: false }));\n    setList(newList, this.sortable, store);\n  }\n\n  onUpdate(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const customs = createCustoms(evt, list);\n    removeNodes(customs);\n    insertNodes(customs);\n    const newList = handleStateChanges(customs, list);\n    return setList(newList, this.sortable, store);\n  }\n\n  onStart(): void {\n    store.dragging = this;\n  }\n\n  onEnd(): void {\n    store.dragging = null;\n  }\n\n  onChoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: true,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onUnchoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      if (index === evt.oldIndex) {\n        return {\n          ...item,\n          chosen: false,\n        };\n      }\n      return item;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onSpill(evt: SortableEvent): void {\n    const { removeOnSpill, revertOnSpill } = this.props;\n    if (removeOnSpill && !revertOnSpill) removeNode(evt.item);\n  }\n\n  onSelect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) {\n        console.log(\n          `\"${evt.type}\" had indice of \"${curr.index}\", which is probably -1 and doesn't usually happen here.`\n        );\n        console.log(evt);\n        return;\n      }\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onDeselect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) => ({ ...item, selected: false }));\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) return;\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n}\n\n// everything below this point can be removed\n// once @types has been merged. PR submited\ninterface MultiIndices {\n  multiDragElement: HTMLElement;\n  index: number;\n}\n\nexport interface MultiDragEvent extends SortableEvent {\n  // @todo - add this to @types\n  clones: HTMLElement[];\n  oldIndicies: MultiIndices[];\n  newIndicies: MultiIndices[];\n  swapItem: HTMLElement | null;\n}\n","/**!\n * Sortable 1.14.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.14.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n"],"sourceRoot":""}