{"version":3,"sources":["pages/app/user-management/Role.jsx"],"names":["api","APICore","columns","Header","accessor","sort","Cell","row","to","className","original","name","withSwal","swal","dispatch","useDispatch","user_role","useSelector","state","Role","includes","pathname","style","pointerEvents","onClick","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","delete","res","getRoles","catch","err","dismiss","console","log","roles","previous","next","current_page","total_page","active","loading","error","useState","pageSize","setPageSize","useEffect","breadCrumbItems","label","path","Body","variant","sm","display","flexDirection","alignItems","Select","width","onChange","e","target","length","data","isSortable","pagination","isSearchable","tableClass","searchBoxClass","visitPage","page","previous_number","next_number"],"mappings":"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","file":"static/js/20.0f5f76a5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { APICore } from '../../../helpers/api/apiCore';\nimport { Row, Col, Card, Button, Alert, Form } from 'react-bootstrap';\nimport { withSwal } from 'react-sweetalert2';\n// components\n\nimport Table from '../../../components/Table';\nimport PageTitle from '../../../components/PageTitle';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRoles } from '../../../redux/actions';\nimport Pagination from '../../../components/CustomPagination';\n\nconst api = new APICore();\n\n\n\n\n// basic info column render\nconst BasicInfoColumn = ({ row }) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"text-body fw-semibold\">\n                {row.original.name}\n            </Link>\n        </>\n    );\n};\n\n\n\n\n// action column render\nconst ActionColumn = withSwal(({ row, swal }) => {\n    const dispatch = useDispatch();\n    const user_role = useSelector((state)=> state.Role.user_role);\n    const onDelete = () => {\n        swal.fire({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#28bb4b',\n                cancelButtonColor: '#f34e4e',\n                confirmButtonText: 'Yes, delete it!',\n            })\n            .then(function(result){\n                if(result.value){\n                    api.delete(`/api/groups/${row.original.id}/`)\n                .then(res=>{\n                    dispatch(getRoles(10,1));\n                    swal.fire(\n                        'Deleted!',\n                        'Item has been deleted.',\n                        'success'\n                    );            \n                })\n                .catch(err => {\n                    swal.fire({\n                        title: err,\n                    }\n                    );\n                })\n                }else if(result.dismiss === 'cancel'){\n                    console.log('cancel')\n                }\n            })        \n    }\n\n    return (\n        <>\n            { user_role.includes('change_group') ?\n                <Link to={{pathname: '/app/add_role', state: row.original }} className=\"action-icon\" >\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\" style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-square-edit-outline\"></i>\n                </Link>\n            }\n            \n            { user_role.includes('delete_group') ?\n                <Link to=\"#\" className=\"action-icon\" onClick={()=>onDelete(row.original.id)}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>:\n                <Link to=\"#\" className=\"action-icon\" style={{pointerEvents: 'none'}}>\n                    <i className=\"mdi mdi-delete\"></i>\n                </Link>\n            }\n            \n            \n            \n        </>\n    );\n});\n\nconst columns = [\n    {\n        Header: 'Name',\n        accessor: 'basic_info',\n        sort: true,\n        Cell: BasicInfoColumn,\n        className: 'table-user',\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        Cell: ActionColumn,\n    },\n];\n\nconst Role = () => {\n    const dispatch = useDispatch();\n    const roles = useSelector(state => state.Role.roles);\n    const previous = useSelector(state => state.Role.previous);\n    const next = useSelector(state => state.Role.next);\n    const current_page = useSelector(state => state.Role.current_page);\n    const total_page = useSelector(state => state.Role.total_page);\n    const active = useSelector(state => state.Role.active);\n    const loading = useSelector(state => state.Role.loading);\n    const error = useSelector(state => state.Role.error);\n    const user_role = useSelector((state)=> state.Role.user_role);\n\n    const [pageSize, setPageSize] = useState(6);\n\n    const visitPage = (page) => {\n        dispatch(getRoles(pageSize,page));\n    };\n\n    const previous_number = () => {\n        dispatch(getRoles(pageSize,previous));\n    };\n\n    const next_number = () => {\n        dispatch(getRoles(pageSize,next));\n    };\n\n    useEffect(()=>{\n        dispatch(getRoles(pageSize,1));       \n        \n    }, [pageSize])\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Roles', path: '/app/roles', active: true },\n                ]}\n                title={'Roles'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                        {!loading && error && (\n                            <Alert variant=\"danger\" className=\"my-2\">\n                                {error}\n                            </Alert>\n                        )}\n                            <Row className=\"mb-2\">\n                                <Col sm={4}>\n                                    <div style={{display: 'flex',flexDirection: 'row',alignItems: 'center'}}>\n                                        <span className='me-2'>Short By:</span>\n                                        <Form.Select style={{width: '40%'}} onChange={(e)=>setPageSize(e.target.value)}>\n                                            <option value='6'>6</option>\n                                            <option value='10'>10</option>\n                                            <option value='15'>15</option>\n                                            <option value='20'>20</option>\n                                        </Form.Select>\n                                    </div>\n                                </Col>\n\n                                <Col sm={8}>\n                                    <div className=\"text-sm-end mt-2 mt-sm-0\">\n                                        { user_role.includes('add_group') ?\n                                            <Link to='/app/add_role'>\n                                            <Button className=\"btn btn-success mb-2 me-1\" >\n                                            <i className=\"mdi mdi-plus-circle me-1\"></i> Add New\n                                            </Button>\n                                            </Link>:\n                                            \"\"\n                                        }\n            \n                                    </div>\n                                </Col>\n                            </Row>\n                            \n                            {loading ? <p>Loading...</p>:\n                            <>\n                            {roles.length > 0 ?\n                            <Table\n                                columns={columns}\n                                data={roles}\n                                pageSize={pageSize}\n                                isSortable={true}\n                                pagination={false}\n                                isSearchable={true}\n                                tableClass=\"table-nowrap table-hover\"\n                                searchBoxClass=\"\"\n                            />\n                            :\n                            'No role available!'}</>}\n                            <Pagination visitPage={visitPage} previous_number={previous_number} next_number={next_number} total_page={total_page} current_page={current_page} active={active}/>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            \n            \n            \n        </>\n    );\n};\n\nexport default Role;\n"],"sourceRoot":""}