{"version":3,"sources":["pages/auth/Register.tsx"],"names":["BottomLink","t","useTranslation","className","to","SocialLinks","variant","icon","map","item","index","classNames","Register","dispatch","useDispatch","useSelector","state","loading","Auth","error","userSignUp","useEffect","resetAuth","schemaResolver","yupResolver","yup","shape","fullname","required","email","password","bottomLinks","onSubmit","formData","signupUser","resolver","defaultValues","label","type","name","placeholder","containerClass","disabled"],"mappings":"oHAAA,yIA6BMA,EAAa,WACf,IAAQC,EAAMC,cAAND,EAER,OACI,wBAAQE,UAAU,oBAAlB,SACI,oBAAGA,UAAU,aAAb,UACKF,EAAE,yBAA0B,IAC7B,cAAC,IAAD,CAAMG,GAAI,cAAeD,UAAU,kBAAnC,SACI,4BAAIF,EAAE,oBAQpBI,EAAc,WAmBhB,OACI,mCACI,oBAAIF,UAAU,oCAAd,UApBY,CAChB,CACIG,QAAS,UACTC,KAAM,YAEV,CACID,QAAS,SACTC,KAAM,UAEV,CACID,QAAS,OACTC,KAAM,WAEV,CACID,QAAS,YACTC,KAAM,YAMe,IAAIC,KAAI,SAACC,EAAMC,GAC5B,OACI,oBAAgBP,UAAU,mBAA1B,SACI,cAAC,IAAD,CACIC,GAAG,IACHD,UAAWQ,IACP,mBACA,UAAYF,EAAKH,QACjB,QAAUG,EAAKH,SALvB,SAQI,mBAAGH,UAAWQ,IAAW,MAAO,OAASF,EAAKF,WAT7CG,WAiHlBE,UA9FE,WACb,IAAQX,EAAMC,cAAND,EACFY,EAAWC,cAEjB,EAAuCC,aAAY,SAACC,GAAD,MAAuB,CACtEC,QAASD,EAAME,KAAKD,QACpBE,MAAOH,EAAME,KAAKC,MAClBC,WAAYJ,EAAME,KAAKE,eAHnBH,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,WAAYD,EAA7B,EAA6BA,MAM7BE,qBAAU,WACNR,EAASS,iBACV,CAACT,IAKJ,IAAMU,EAAiBC,YACnBC,MAAaC,MAAM,CACfC,SAAUF,MAAaG,SAAS3B,EAAE,0BAClC4B,MAAOJ,MAAaG,SAAS3B,EAAE,+BAC/B6B,SAAUL,MAAaG,SAAS3B,EAAE,6BAW1C,OACI,qCACKmB,EAAa,cAAC,IAAD,CAAUhB,GAAI,mBAAgC,KAE5D,eAAC,IAAD,CAAY2B,YAAa,cAAC/B,EAAD,IAAzB,UACI,oBAAIG,UAAU,OAAd,SAAsBF,EAAE,aACxB,mBAAGE,UAAU,kBAAb,SACKF,EAAE,8EAGNkB,GACG,cAAC,IAAD,CAAOb,QAAQ,SAASH,UAAU,OAAlC,SACKgB,IAIT,eAAC,IAAD,CAAca,SApBT,SAACC,GACdpB,EAASqB,YAAWD,EAAQ,WAAeA,EAAQ,UAAeA,EAAQ,MAAUA,EAAQ,MAAWA,EAAQ,YAmBrEE,SAAUZ,EAAgBa,cAAe,GAA3E,UACI,cAAC,IAAD,CACIC,MAAOpC,EAAE,aACTqC,KAAK,OACLC,KAAK,WACLC,YAAavC,EAAE,mBACfwC,eAAgB,SAEpB,cAAC,IAAD,CACIJ,MAAOpC,EAAE,iBACTqC,KAAK,QACLC,KAAK,QACLC,YAAavC,EAAE,oBACfwC,eAAgB,SAEpB,cAAC,IAAD,CACIJ,MAAOpC,EAAE,YACTqC,KAAK,WACLC,KAAK,WACLC,YAAavC,EAAE,uBACfwC,eAAgB,SAEpB,cAAC,IAAD,CACIJ,MAAOpC,EAAE,iCACTqC,KAAK,WACLC,KAAK,iBACLE,eAAgB,oBAGpB,qBAAKtC,UAAU,0BAAf,SACI,cAAC,IAAD,CAAQG,QAAQ,UAAUgC,KAAK,SAASI,SAAUzB,EAAlD,SACKhB,EAAE,eAKX,sBAAKE,UAAU,mBAAf,UACI,mBAAGA,UAAU,qBAAb,SAAmCF,EAAE,mBACrC,cAACI,EAAD","file":"static/js/25.9b9f8c0f.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Button, Alert } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\n\n// actions\nimport { resetAuth, signupUser } from '../../redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '../../redux/store';\n\n// components\nimport { VerticalForm, FormInput } from '../../components';\n\nimport AuthLayout from './AuthLayout';\n\ninterface UserData {\n    first_name: string;\n    last_name: string;\n    email: string;\n    phone: string;\n    password: string;\n}\n\n/* bottom link */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <footer className=\"footer footer-alt\">\n            <p className=\"text-muted\">\n                {t('Already have account?')}{' '}\n                <Link to={'/auth/login'} className=\"text-muted ms-1\">\n                    <b>{t('Log In')}</b>\n                </Link>\n            </p>\n        </footer>\n    );\n};\n\n/* social links */\nconst SocialLinks = () => {\n    const socialLinks = [\n        {\n            variant: 'primary',\n            icon: 'facebook',\n        },\n        {\n            variant: 'danger',\n            icon: 'google',\n        },\n        {\n            variant: 'info',\n            icon: 'twitter',\n        },\n        {\n            variant: 'secondary',\n            icon: 'github',\n        },\n    ];\n    return (\n        <>\n            <ul className=\"social-list list-inline mt-3 mb-0\">\n                {(socialLinks || []).map((item, index) => {\n                    return (\n                        <li key={index} className=\"list-inline-item\">\n                            <Link\n                                to=\"#\"\n                                className={classNames(\n                                    'social-list-item',\n                                    'border-' + item.variant,\n                                    'text-' + item.variant\n                                )}\n                            >\n                                <i className={classNames('mdi', 'mdi-' + item.icon)}></i>\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\n\nconst Register = () => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch<AppDispatch>();\n\n    const { loading, userSignUp, error } = useSelector((state: RootState) => ({\n        loading: state.Auth.loading,\n        error: state.Auth.error,\n        userSignUp: state.Auth.userSignUp,\n    }));\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            fullname: yup.string().required(t('Please enter Fullname')),\n            email: yup.string().required(t('Please enter Email address')),\n            password: yup.string().required(t('Please enter Password')),\n        })\n    );\n\n    /*\n     * handle form submission\n     */\n    const onSubmit = (formData: UserData) => {\n        dispatch(signupUser(formData['first_name'],formData['last_name'], formData['email'],formData['phone'], formData['password']));\n    };\n\n    return (\n        <>\n            {userSignUp ? <Redirect to={'/auth/confirm2'}></Redirect> : null}\n\n            <AuthLayout bottomLinks={<BottomLink />}>\n                <h4 className=\"mt-0\">{t('Sign Up')}</h4>\n                <p className=\"text-muted mb-4\">\n                    {t(\"Don't have an account? Create your account, it takes less than a minute.\")}\n                </p>\n\n                {error && (\n                    <Alert variant=\"danger\" className=\"my-2\">\n                        {error}\n                    </Alert>\n                )}\n\n                <VerticalForm onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\n                    <FormInput\n                        label={t('Full Name')}\n                        type=\"text\"\n                        name=\"fullname\"\n                        placeholder={t('Enter your name')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('Email address')}\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder={t('Enter your email')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('Password')}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder={t('Enter your password')}\n                        containerClass={'mb-3'}\n                    />\n                    <FormInput\n                        label={t('I accept Terms and Conditions')}\n                        type=\"checkbox\"\n                        name=\"checkboxsignup\"\n                        containerClass={'mb-3 text-muted'}\n                    />\n\n                    <div className=\"mb-0 d-grid text-center\">\n                        <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n                            {t('Sign Up')}\n                        </Button>\n                    </div>\n\n                    {/* social links */}\n                    <div className=\"text-center mt-4\">\n                        <p className=\"text-muted font-16\">{t('Sign up using')}</p>\n                        <SocialLinks />\n                    </div>\n                </VerticalForm>\n            </AuthLayout>\n        </>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}